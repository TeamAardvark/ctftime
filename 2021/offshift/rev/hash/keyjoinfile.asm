
keyjoinfile:     file format elf32-i386


Disassembly of section .init:

08048748 <_init>:
 8048748:	53                   	push   %ebx
 8048749:	83 ec 08             	sub    $0x8,%esp
 804874c:	e8 2f 02 00 00       	call   8048980 <__x86.get_pc_thunk.bx>
 8048751:	81 c3 af a8 02 00    	add    $0x2a8af,%ebx
 8048757:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804875d:	85 c0                	test   %eax,%eax
 804875f:	74 05                	je     8048766 <_init+0x1e>
 8048761:	e8 da 01 00 00       	call   8048940 <calloc@plt+0x10>
 8048766:	83 c4 08             	add    $0x8,%esp
 8048769:	5b                   	pop    %ebx
 804876a:	c3                   	ret    

Disassembly of section .plt:

08048770 <printf@plt-0x10>:
 8048770:	ff 35 04 30 07 08    	pushl  0x8073004
 8048776:	ff 25 08 30 07 08    	jmp    *0x8073008
 804877c:	00 00                	add    %al,(%eax)
	...

08048780 <printf@plt>:
 8048780:	ff 25 0c 30 07 08    	jmp    *0x807300c
 8048786:	68 00 00 00 00       	push   $0x0
 804878b:	e9 e0 ff ff ff       	jmp    8048770 <_init+0x28>

08048790 <fflush@plt>:
 8048790:	ff 25 10 30 07 08    	jmp    *0x8073010
 8048796:	68 08 00 00 00       	push   $0x8
 804879b:	e9 d0 ff ff ff       	jmp    8048770 <_init+0x28>

080487a0 <memmove@plt>:
 80487a0:	ff 25 14 30 07 08    	jmp    *0x8073014
 80487a6:	68 10 00 00 00       	push   $0x10
 80487ab:	e9 c0 ff ff ff       	jmp    8048770 <_init+0x28>

080487b0 <free@plt>:
 80487b0:	ff 25 18 30 07 08    	jmp    *0x8073018
 80487b6:	68 18 00 00 00       	push   $0x18
 80487bb:	e9 b0 ff ff ff       	jmp    8048770 <_init+0x28>

080487c0 <memcpy@plt>:
 80487c0:	ff 25 1c 30 07 08    	jmp    *0x807301c
 80487c6:	68 20 00 00 00       	push   $0x20
 80487cb:	e9 a0 ff ff ff       	jmp    8048770 <_init+0x28>

080487d0 <getchar@plt>:
 80487d0:	ff 25 20 30 07 08    	jmp    *0x8073020
 80487d6:	68 28 00 00 00       	push   $0x28
 80487db:	e9 90 ff ff ff       	jmp    8048770 <_init+0x28>

080487e0 <fgets@plt>:
 80487e0:	ff 25 24 30 07 08    	jmp    *0x8073024
 80487e6:	68 30 00 00 00       	push   $0x30
 80487eb:	e9 80 ff ff ff       	jmp    8048770 <_init+0x28>

080487f0 <tolower@plt>:
 80487f0:	ff 25 28 30 07 08    	jmp    *0x8073028
 80487f6:	68 38 00 00 00       	push   $0x38
 80487fb:	e9 70 ff ff ff       	jmp    8048770 <_init+0x28>

08048800 <memcmp@plt>:
 8048800:	ff 25 2c 30 07 08    	jmp    *0x807302c
 8048806:	68 40 00 00 00       	push   $0x40
 804880b:	e9 60 ff ff ff       	jmp    8048770 <_init+0x28>

08048810 <popen@plt>:
 8048810:	ff 25 30 30 07 08    	jmp    *0x8073030
 8048816:	68 48 00 00 00       	push   $0x48
 804881b:	e9 50 ff ff ff       	jmp    8048770 <_init+0x28>

08048820 <__stack_chk_fail@plt>:
 8048820:	ff 25 34 30 07 08    	jmp    *0x8073034
 8048826:	68 50 00 00 00       	push   $0x50
 804882b:	e9 40 ff ff ff       	jmp    8048770 <_init+0x28>

08048830 <realloc@plt>:
 8048830:	ff 25 38 30 07 08    	jmp    *0x8073038
 8048836:	68 58 00 00 00       	push   $0x58
 804883b:	e9 30 ff ff ff       	jmp    8048770 <_init+0x28>

08048840 <malloc@plt>:
 8048840:	ff 25 3c 30 07 08    	jmp    *0x807303c
 8048846:	68 60 00 00 00       	push   $0x60
 804884b:	e9 20 ff ff ff       	jmp    8048770 <_init+0x28>

08048850 <puts@plt>:
 8048850:	ff 25 40 30 07 08    	jmp    *0x8073040
 8048856:	68 68 00 00 00       	push   $0x68
 804885b:	e9 10 ff ff ff       	jmp    8048770 <_init+0x28>

08048860 <exit@plt>:
 8048860:	ff 25 44 30 07 08    	jmp    *0x8073044
 8048866:	68 70 00 00 00       	push   $0x70
 804886b:	e9 00 ff ff ff       	jmp    8048770 <_init+0x28>

08048870 <pclose@plt>:
 8048870:	ff 25 48 30 07 08    	jmp    *0x8073048
 8048876:	68 78 00 00 00       	push   $0x78
 804887b:	e9 f0 fe ff ff       	jmp    8048770 <_init+0x28>

08048880 <strlen@plt>:
 8048880:	ff 25 4c 30 07 08    	jmp    *0x807304c
 8048886:	68 80 00 00 00       	push   $0x80
 804888b:	e9 e0 fe ff ff       	jmp    8048770 <_init+0x28>

08048890 <__libc_start_main@plt>:
 8048890:	ff 25 50 30 07 08    	jmp    *0x8073050
 8048896:	68 88 00 00 00       	push   $0x88
 804889b:	e9 d0 fe ff ff       	jmp    8048770 <_init+0x28>

080488a0 <write@plt>:
 80488a0:	ff 25 54 30 07 08    	jmp    *0x8073054
 80488a6:	68 90 00 00 00       	push   $0x90
 80488ab:	e9 c0 fe ff ff       	jmp    8048770 <_init+0x28>

080488b0 <backtrace_symbols@plt>:
 80488b0:	ff 25 58 30 07 08    	jmp    *0x8073058
 80488b6:	68 98 00 00 00       	push   $0x98
 80488bb:	e9 b0 fe ff ff       	jmp    8048770 <_init+0x28>

080488c0 <memset@plt>:
 80488c0:	ff 25 5c 30 07 08    	jmp    *0x807305c
 80488c6:	68 a0 00 00 00       	push   $0xa0
 80488cb:	e9 a0 fe ff ff       	jmp    8048770 <_init+0x28>

080488d0 <vsprintf@plt>:
 80488d0:	ff 25 60 30 07 08    	jmp    *0x8073060
 80488d6:	68 a8 00 00 00       	push   $0xa8
 80488db:	e9 90 fe ff ff       	jmp    8048770 <_init+0x28>

080488e0 <toupper@plt>:
 80488e0:	ff 25 64 30 07 08    	jmp    *0x8073064
 80488e6:	68 b0 00 00 00       	push   $0xb0
 80488eb:	e9 80 fe ff ff       	jmp    8048770 <_init+0x28>

080488f0 <vsnprintf@plt>:
 80488f0:	ff 25 68 30 07 08    	jmp    *0x8073068
 80488f6:	68 b8 00 00 00       	push   $0xb8
 80488fb:	e9 70 fe ff ff       	jmp    8048770 <_init+0x28>

08048900 <qsort@plt>:
 8048900:	ff 25 6c 30 07 08    	jmp    *0x807306c
 8048906:	68 c0 00 00 00       	push   $0xc0
 804890b:	e9 60 fe ff ff       	jmp    8048770 <_init+0x28>

08048910 <isatty@plt>:
 8048910:	ff 25 70 30 07 08    	jmp    *0x8073070
 8048916:	68 c8 00 00 00       	push   $0xc8
 804891b:	e9 50 fe ff ff       	jmp    8048770 <_init+0x28>

08048920 <backtrace@plt>:
 8048920:	ff 25 74 30 07 08    	jmp    *0x8073074
 8048926:	68 d0 00 00 00       	push   $0xd0
 804892b:	e9 40 fe ff ff       	jmp    8048770 <_init+0x28>

08048930 <calloc@plt>:
 8048930:	ff 25 78 30 07 08    	jmp    *0x8073078
 8048936:	68 d8 00 00 00       	push   $0xd8
 804893b:	e9 30 fe ff ff       	jmp    8048770 <_init+0x28>

Disassembly of section .plt.got:

08048940 <.plt.got>:
 8048940:	ff 25 fc 2f 07 08    	jmp    *0x8072ffc
 8048946:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048950 <_start>:
 8048950:	31 ed                	xor    %ebp,%ebp
 8048952:	5e                   	pop    %esi
 8048953:	89 e1                	mov    %esp,%ecx
 8048955:	83 e4 f0             	and    $0xfffffff0,%esp
 8048958:	50                   	push   %eax
 8048959:	54                   	push   %esp
 804895a:	52                   	push   %edx
 804895b:	68 e0 95 06 08       	push   $0x80695e0
 8048960:	68 80 95 06 08       	push   $0x8069580
 8048965:	51                   	push   %ecx
 8048966:	56                   	push   %esi
 8048967:	68 89 8f 06 08       	push   $0x8068f89
 804896c:	e8 1f ff ff ff       	call   8048890 <__libc_start_main@plt>
 8048971:	f4                   	hlt    
 8048972:	66 90                	xchg   %ax,%ax
 8048974:	66 90                	xchg   %ax,%ax
 8048976:	66 90                	xchg   %ax,%ax
 8048978:	66 90                	xchg   %ax,%ax
 804897a:	66 90                	xchg   %ax,%ax
 804897c:	66 90                	xchg   %ax,%ax
 804897e:	66 90                	xchg   %ax,%ax

08048980 <__x86.get_pc_thunk.bx>:
 8048980:	8b 1c 24             	mov    (%esp),%ebx
 8048983:	c3                   	ret    
 8048984:	66 90                	xchg   %ax,%ax
 8048986:	66 90                	xchg   %ax,%ax
 8048988:	66 90                	xchg   %ax,%ax
 804898a:	66 90                	xchg   %ax,%ax
 804898c:	66 90                	xchg   %ax,%ax
 804898e:	66 90                	xchg   %ax,%ax

08048990 <deregister_tm_clones>:
 8048990:	b8 87 30 07 08       	mov    $0x8073087,%eax
 8048995:	2d 84 30 07 08       	sub    $0x8073084,%eax
 804899a:	83 f8 06             	cmp    $0x6,%eax
 804899d:	76 1a                	jbe    80489b9 <deregister_tm_clones+0x29>
 804899f:	b8 00 00 00 00       	mov    $0x0,%eax
 80489a4:	85 c0                	test   %eax,%eax
 80489a6:	74 11                	je     80489b9 <deregister_tm_clones+0x29>
 80489a8:	55                   	push   %ebp
 80489a9:	89 e5                	mov    %esp,%ebp
 80489ab:	83 ec 14             	sub    $0x14,%esp
 80489ae:	68 84 30 07 08       	push   $0x8073084
 80489b3:	ff d0                	call   *%eax
 80489b5:	83 c4 10             	add    $0x10,%esp
 80489b8:	c9                   	leave  
 80489b9:	f3 c3                	repz ret 
 80489bb:	90                   	nop
 80489bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489c0 <register_tm_clones>:
 80489c0:	b8 84 30 07 08       	mov    $0x8073084,%eax
 80489c5:	2d 84 30 07 08       	sub    $0x8073084,%eax
 80489ca:	c1 f8 02             	sar    $0x2,%eax
 80489cd:	89 c2                	mov    %eax,%edx
 80489cf:	c1 ea 1f             	shr    $0x1f,%edx
 80489d2:	01 d0                	add    %edx,%eax
 80489d4:	d1 f8                	sar    %eax
 80489d6:	74 1b                	je     80489f3 <register_tm_clones+0x33>
 80489d8:	ba 00 00 00 00       	mov    $0x0,%edx
 80489dd:	85 d2                	test   %edx,%edx
 80489df:	74 12                	je     80489f3 <register_tm_clones+0x33>
 80489e1:	55                   	push   %ebp
 80489e2:	89 e5                	mov    %esp,%ebp
 80489e4:	83 ec 10             	sub    $0x10,%esp
 80489e7:	50                   	push   %eax
 80489e8:	68 84 30 07 08       	push   $0x8073084
 80489ed:	ff d2                	call   *%edx
 80489ef:	83 c4 10             	add    $0x10,%esp
 80489f2:	c9                   	leave  
 80489f3:	f3 c3                	repz ret 
 80489f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80489f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a00 <__do_global_dtors_aux>:
 8048a00:	80 3d 90 30 07 08 00 	cmpb   $0x0,0x8073090
 8048a07:	75 13                	jne    8048a1c <__do_global_dtors_aux+0x1c>
 8048a09:	55                   	push   %ebp
 8048a0a:	89 e5                	mov    %esp,%ebp
 8048a0c:	83 ec 08             	sub    $0x8,%esp
 8048a0f:	e8 7c ff ff ff       	call   8048990 <deregister_tm_clones>
 8048a14:	c6 05 90 30 07 08 01 	movb   $0x1,0x8073090
 8048a1b:	c9                   	leave  
 8048a1c:	f3 c3                	repz ret 
 8048a1e:	66 90                	xchg   %ax,%ax

08048a20 <frame_dummy>:
 8048a20:	b8 08 2f 07 08       	mov    $0x8072f08,%eax
 8048a25:	8b 10                	mov    (%eax),%edx
 8048a27:	85 d2                	test   %edx,%edx
 8048a29:	75 05                	jne    8048a30 <frame_dummy+0x10>
 8048a2b:	eb 93                	jmp    80489c0 <register_tm_clones>
 8048a2d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a30:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a35:	85 d2                	test   %edx,%edx
 8048a37:	74 f2                	je     8048a2b <frame_dummy+0xb>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 14             	sub    $0x14,%esp
 8048a3f:	50                   	push   %eax
 8048a40:	ff d2                	call   *%edx
 8048a42:	83 c4 10             	add    $0x10,%esp
 8048a45:	c9                   	leave  
 8048a46:	e9 75 ff ff ff       	jmp    80489c0 <register_tm_clones>

08048a4b <_us32_ge>:
 8048a4b:	55                   	push   %ebp
 8048a4c:	89 e5                	mov    %esp,%ebp
 8048a4e:	81 7d 08 fe ff ff 7f 	cmpl   $0x7ffffffe,0x8(%ebp)
 8048a55:	77 08                	ja     8048a5f <_us32_ge+0x14>
 8048a57:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a5a:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8048a5d:	7c 07                	jl     8048a66 <_us32_ge+0x1b>
 8048a5f:	b8 01 00 00 00       	mov    $0x1,%eax
 8048a64:	eb 05                	jmp    8048a6b <_us32_ge+0x20>
 8048a66:	b8 00 00 00 00       	mov    $0x0,%eax
 8048a6b:	5d                   	pop    %ebp
 8048a6c:	c3                   	ret    

08048a6d <_us32_lt>:
 8048a6d:	55                   	push   %ebp
 8048a6e:	89 e5                	mov    %esp,%ebp
 8048a70:	81 7d 08 fe ff ff 7f 	cmpl   $0x7ffffffe,0x8(%ebp)
 8048a77:	77 0f                	ja     8048a88 <_us32_lt+0x1b>
 8048a79:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a7c:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8048a7f:	7d 07                	jge    8048a88 <_us32_lt+0x1b>
 8048a81:	b8 01 00 00 00       	mov    $0x1,%eax
 8048a86:	eb 05                	jmp    8048a8d <_us32_lt+0x20>
 8048a88:	b8 00 00 00 00       	mov    $0x0,%eax
 8048a8d:	5d                   	pop    %ebp
 8048a8e:	c3                   	ret    

08048a8f <_wyr8>:
 8048a8f:	55                   	push   %ebp
 8048a90:	89 e5                	mov    %esp,%ebp
 8048a92:	83 ec 28             	sub    $0x28,%esp
 8048a95:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a98:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048a9b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048aa1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048aa4:	31 c0                	xor    %eax,%eax
 8048aa6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048aa9:	8b 50 04             	mov    0x4(%eax),%edx
 8048aac:	8b 00                	mov    (%eax),%eax
 8048aae:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048ab1:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8048ab4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048ab7:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048aba:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048abd:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8048ac4:	74 05                	je     8048acb <_wyr8+0x3c>
 8048ac6:	e8 55 fd ff ff       	call   8048820 <__stack_chk_fail@plt>
 8048acb:	c9                   	leave  
 8048acc:	c3                   	ret    

08048acd <_wyr4>:
 8048acd:	55                   	push   %ebp
 8048ace:	89 e5                	mov    %esp,%ebp
 8048ad0:	83 ec 28             	sub    $0x28,%esp
 8048ad3:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ad6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8048ad9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048adf:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048ae2:	31 c0                	xor    %eax,%eax
 8048ae4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8048ae7:	8b 00                	mov    (%eax),%eax
 8048ae9:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048aec:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048aef:	ba 00 00 00 00       	mov    $0x0,%edx
 8048af4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048af7:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8048afe:	74 05                	je     8048b05 <_wyr4+0x38>
 8048b00:	e8 1b fd ff ff       	call   8048820 <__stack_chk_fail@plt>
 8048b05:	c9                   	leave  
 8048b06:	c3                   	ret    

08048b07 <_wyr3>:
 8048b07:	55                   	push   %ebp
 8048b08:	89 e5                	mov    %esp,%ebp
 8048b0a:	56                   	push   %esi
 8048b0b:	53                   	push   %ebx
 8048b0c:	83 ec 10             	sub    $0x10,%esp
 8048b0f:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b12:	0f b6 08             	movzbl (%eax),%ecx
 8048b15:	0f b6 c1             	movzbl %cl,%eax
 8048b18:	ba 00 00 00 00       	mov    $0x0,%edx
 8048b1d:	0f a4 c2 10          	shld   $0x10,%eax,%edx
 8048b21:	c1 e0 10             	shl    $0x10,%eax
 8048b24:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048b27:	89 55 f4             	mov    %edx,-0xc(%ebp)
 8048b2a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b2d:	89 c2                	mov    %eax,%edx
 8048b2f:	d1 ea                	shr    %edx
 8048b31:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b34:	01 d0                	add    %edx,%eax
 8048b36:	0f b6 08             	movzbl (%eax),%ecx
 8048b39:	0f b6 c1             	movzbl %cl,%eax
 8048b3c:	ba 00 00 00 00       	mov    $0x0,%edx
 8048b41:	0f a4 c2 08          	shld   $0x8,%eax,%edx
 8048b45:	c1 e0 08             	shl    $0x8,%eax
 8048b48:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8048b4b:	09 c1                	or     %eax,%ecx
 8048b4d:	89 cb                	mov    %ecx,%ebx
 8048b4f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048b52:	09 d1                	or     %edx,%ecx
 8048b54:	89 ce                	mov    %ecx,%esi
 8048b56:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b59:	8d 50 ff             	lea    -0x1(%eax),%edx
 8048b5c:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b5f:	01 d0                	add    %edx,%eax
 8048b61:	0f b6 08             	movzbl (%eax),%ecx
 8048b64:	0f b6 c1             	movzbl %cl,%eax
 8048b67:	ba 00 00 00 00       	mov    $0x0,%edx
 8048b6c:	89 d9                	mov    %ebx,%ecx
 8048b6e:	09 c1                	or     %eax,%ecx
 8048b70:	89 4d e8             	mov    %ecx,-0x18(%ebp)
 8048b73:	09 d6                	or     %edx,%esi
 8048b75:	89 75 ec             	mov    %esi,-0x14(%ebp)
 8048b78:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048b7b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048b7e:	83 c4 10             	add    $0x10,%esp
 8048b81:	5b                   	pop    %ebx
 8048b82:	5e                   	pop    %esi
 8048b83:	5d                   	pop    %ebp
 8048b84:	c3                   	ret    

08048b85 <_wymix128>:
 8048b85:	55                   	push   %ebp
 8048b86:	89 e5                	mov    %esp,%ebp
 8048b88:	53                   	push   %ebx
 8048b89:	83 ec 74             	sub    $0x74,%esp
 8048b8c:	8b 45 08             	mov    0x8(%ebp),%eax
 8048b8f:	89 45 90             	mov    %eax,-0x70(%ebp)
 8048b92:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048b95:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8048b98:	8b 45 10             	mov    0x10(%ebp),%eax
 8048b9b:	89 45 88             	mov    %eax,-0x78(%ebp)
 8048b9e:	8b 45 14             	mov    0x14(%ebp),%eax
 8048ba1:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8048ba4:	8b 45 18             	mov    0x18(%ebp),%eax
 8048ba7:	8b 50 04             	mov    0x4(%eax),%edx
 8048baa:	8b 00                	mov    (%eax),%eax
 8048bac:	31 45 90             	xor    %eax,-0x70(%ebp)
 8048baf:	31 55 94             	xor    %edx,-0x6c(%ebp)
 8048bb2:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8048bb5:	8b 50 04             	mov    0x4(%eax),%edx
 8048bb8:	8b 00                	mov    (%eax),%eax
 8048bba:	31 45 88             	xor    %eax,-0x78(%ebp)
 8048bbd:	31 55 8c             	xor    %edx,-0x74(%ebp)
 8048bc0:	8b 45 90             	mov    -0x70(%ebp),%eax
 8048bc3:	8b 55 94             	mov    -0x6c(%ebp),%edx
 8048bc6:	89 d0                	mov    %edx,%eax
 8048bc8:	31 d2                	xor    %edx,%edx
 8048bca:	89 45 98             	mov    %eax,-0x68(%ebp)
 8048bcd:	89 55 9c             	mov    %edx,-0x64(%ebp)
 8048bd0:	8b 45 88             	mov    -0x78(%ebp),%eax
 8048bd3:	8b 55 8c             	mov    -0x74(%ebp),%edx
 8048bd6:	89 d0                	mov    %edx,%eax
 8048bd8:	31 d2                	xor    %edx,%edx
 8048bda:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8048bdd:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 8048be0:	8b 45 90             	mov    -0x70(%ebp),%eax
 8048be3:	80 e4 ff             	and    $0xff,%ah
 8048be6:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8048be9:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8048bec:	83 e0 00             	and    $0x0,%eax
 8048bef:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8048bf2:	8b 45 88             	mov    -0x78(%ebp),%eax
 8048bf5:	80 e4 ff             	and    $0xff,%ah
 8048bf8:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8048bfb:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8048bfe:	83 e0 00             	and    $0x0,%eax
 8048c01:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8048c04:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8048c07:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 8048c0b:	89 c2                	mov    %eax,%edx
 8048c0d:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8048c10:	0f af 45 98          	imul   -0x68(%ebp),%eax
 8048c14:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048c17:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8048c1a:	f7 65 98             	mull   -0x68(%ebp)
 8048c1d:	01 d1                	add    %edx,%ecx
 8048c1f:	89 ca                	mov    %ecx,%edx
 8048c21:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8048c24:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8048c27:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8048c2a:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8048c2d:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8048c30:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 8048c34:	89 c2                	mov    %eax,%edx
 8048c36:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8048c39:	0f af 45 98          	imul   -0x68(%ebp),%eax
 8048c3d:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048c40:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8048c43:	f7 65 98             	mull   -0x68(%ebp)
 8048c46:	01 d1                	add    %edx,%ecx
 8048c48:	89 ca                	mov    %ecx,%edx
 8048c4a:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8048c4d:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 8048c50:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8048c53:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 8048c56:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8048c59:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 8048c5d:	89 c2                	mov    %eax,%edx
 8048c5f:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8048c62:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 8048c66:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048c69:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8048c6c:	f7 65 a0             	mull   -0x60(%ebp)
 8048c6f:	01 d1                	add    %edx,%ecx
 8048c71:	89 ca                	mov    %ecx,%edx
 8048c73:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048c76:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8048c79:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048c7c:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8048c7f:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8048c82:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 8048c86:	89 c2                	mov    %eax,%edx
 8048c88:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8048c8b:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 8048c8f:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048c92:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8048c95:	f7 65 a8             	mull   -0x58(%ebp)
 8048c98:	01 d1                	add    %edx,%ecx
 8048c9a:	89 ca                	mov    %ecx,%edx
 8048c9c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8048c9f:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8048ca2:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8048ca5:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8048ca8:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8048cab:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8048cae:	89 c2                	mov    %eax,%edx
 8048cb0:	b8 00 00 00 00       	mov    $0x0,%eax
 8048cb5:	89 c1                	mov    %eax,%ecx
 8048cb7:	89 d3                	mov    %edx,%ebx
 8048cb9:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8048cbc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8048cbf:	01 c8                	add    %ecx,%eax
 8048cc1:	11 da                	adc    %ebx,%edx
 8048cc3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048cc6:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8048cc9:	b9 01 00 00 00       	mov    $0x1,%ecx
 8048cce:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048cd1:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8048cd4:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
 8048cd7:	72 0f                	jb     8048ce8 <_wymix128+0x163>
 8048cd9:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
 8048cdc:	77 05                	ja     8048ce3 <_wymix128+0x15e>
 8048cde:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 8048ce1:	72 05                	jb     8048ce8 <_wymix128+0x163>
 8048ce3:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048ce8:	0f b6 c1             	movzbl %cl,%eax
 8048ceb:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048cee:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 8048cf5:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8048cf8:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8048cfb:	89 c2                	mov    %eax,%edx
 8048cfd:	b8 00 00 00 00       	mov    $0x0,%eax
 8048d02:	89 c1                	mov    %eax,%ecx
 8048d04:	89 d3                	mov    %edx,%ebx
 8048d06:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8048d09:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8048d0c:	01 c8                	add    %ecx,%eax
 8048d0e:	11 da                	adc    %ebx,%edx
 8048d10:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048d13:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8048d16:	b9 01 00 00 00       	mov    $0x1,%ecx
 8048d1b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048d1e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048d21:	3b 55 dc             	cmp    -0x24(%ebp),%edx
 8048d24:	72 0f                	jb     8048d35 <_wymix128+0x1b0>
 8048d26:	3b 55 dc             	cmp    -0x24(%ebp),%edx
 8048d29:	77 05                	ja     8048d30 <_wymix128+0x1ab>
 8048d2b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 8048d2e:	72 05                	jb     8048d35 <_wymix128+0x1b0>
 8048d30:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048d35:	0f b6 c1             	movzbl %cl,%eax
 8048d38:	ba 00 00 00 00       	mov    $0x0,%edx
 8048d3d:	01 45 e0             	add    %eax,-0x20(%ebp)
 8048d40:	11 55 e4             	adc    %edx,-0x1c(%ebp)
 8048d43:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8048d46:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8048d49:	89 d0                	mov    %edx,%eax
 8048d4b:	31 d2                	xor    %edx,%edx
 8048d4d:	89 c1                	mov    %eax,%ecx
 8048d4f:	89 d3                	mov    %edx,%ebx
 8048d51:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8048d54:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8048d57:	01 c1                	add    %eax,%ecx
 8048d59:	11 d3                	adc    %edx,%ebx
 8048d5b:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8048d5e:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8048d61:	89 d0                	mov    %edx,%eax
 8048d63:	31 d2                	xor    %edx,%edx
 8048d65:	01 c1                	add    %eax,%ecx
 8048d67:	11 d3                	adc    %edx,%ebx
 8048d69:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048d6c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8048d6f:	01 c8                	add    %ecx,%eax
 8048d71:	11 da                	adc    %ebx,%edx
 8048d73:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048d76:	89 55 f4             	mov    %edx,-0xc(%ebp)
 8048d79:	8b 4d 18             	mov    0x18(%ebp),%ecx
 8048d7c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048d7f:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8048d82:	89 01                	mov    %eax,(%ecx)
 8048d84:	89 51 04             	mov    %edx,0x4(%ecx)
 8048d87:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
 8048d8a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048d8d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048d90:	89 01                	mov    %eax,(%ecx)
 8048d92:	89 51 04             	mov    %edx,0x4(%ecx)
 8048d95:	90                   	nop
 8048d96:	83 c4 74             	add    $0x74,%esp
 8048d99:	5b                   	pop    %ebx
 8048d9a:	5d                   	pop    %ebp
 8048d9b:	c3                   	ret    

08048d9c <wyhash>:
 8048d9c:	55                   	push   %ebp
 8048d9d:	89 e5                	mov    %esp,%ebp
 8048d9f:	56                   	push   %esi
 8048da0:	53                   	push   %ebx
 8048da1:	83 ec 70             	sub    $0x70,%esp
 8048da4:	8b 45 08             	mov    0x8(%ebp),%eax
 8048da7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8048daa:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048dad:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048db0:	8b 45 10             	mov    0x10(%ebp),%eax
 8048db3:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8048db6:	8b 45 14             	mov    0x14(%ebp),%eax
 8048db9:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8048dbc:	8b 45 18             	mov    0x18(%ebp),%eax
 8048dbf:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8048dc2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048dc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048dcb:	31 c0                	xor    %eax,%eax
 8048dcd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8048dd0:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8048dd3:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8048dd6:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8048dd9:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8048ddc:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8048ddf:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8048de2:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8048de5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8048de8:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8048deb:	b8 01 00 00 00       	mov    $0x1,%eax
 8048df0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8048df4:	72 11                	jb     8048e07 <wyhash+0x6b>
 8048df6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8048dfa:	77 06                	ja     8048e02 <wyhash+0x66>
 8048dfc:	83 7d e8 10          	cmpl   $0x10,-0x18(%ebp)
 8048e00:	76 05                	jbe    8048e07 <wyhash+0x6b>
 8048e02:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e07:	0f b6 c0             	movzbl %al,%eax
 8048e0a:	85 c0                	test   %eax,%eax
 8048e0c:	0f 84 f9 01 00 00    	je     804900b <wyhash+0x26f>
 8048e12:	b8 01 00 00 00       	mov    $0x1,%eax
 8048e17:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8048e1b:	72 11                	jb     8048e2e <wyhash+0x92>
 8048e1d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8048e21:	77 06                	ja     8048e29 <wyhash+0x8d>
 8048e23:	83 7d e8 08          	cmpl   $0x8,-0x18(%ebp)
 8048e27:	76 05                	jbe    8048e2e <wyhash+0x92>
 8048e29:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e2e:	0f b6 c0             	movzbl %al,%eax
 8048e31:	85 c0                	test   %eax,%eax
 8048e33:	0f 84 15 01 00 00    	je     8048f4e <wyhash+0x1b2>
 8048e39:	b8 01 00 00 00       	mov    $0x1,%eax
 8048e3e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8048e42:	77 11                	ja     8048e55 <wyhash+0xb9>
 8048e44:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8048e48:	72 06                	jb     8048e50 <wyhash+0xb4>
 8048e4a:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)
 8048e4e:	77 05                	ja     8048e55 <wyhash+0xb9>
 8048e50:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e55:	0f b6 c0             	movzbl %al,%eax
 8048e58:	85 c0                	test   %eax,%eax
 8048e5a:	74 73                	je     8048ecf <wyhash+0x133>
 8048e5c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048e5f:	8d 50 fc             	lea    -0x4(%eax),%edx
 8048e62:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8048e65:	01 d0                	add    %edx,%eax
 8048e67:	83 ec 0c             	sub    $0xc,%esp
 8048e6a:	50                   	push   %eax
 8048e6b:	e8 5d fc ff ff       	call   8048acd <_wyr4>
 8048e70:	83 c4 10             	add    $0x10,%esp
 8048e73:	89 c6                	mov    %eax,%esi
 8048e75:	81 f6 db 28 b4 a0    	xor    $0xa0b428db,%esi
 8048e7b:	89 75 b0             	mov    %esi,-0x50(%ebp)
 8048e7e:	89 d0                	mov    %edx,%eax
 8048e80:	35 d1 7e 03 e7       	xor    $0xe7037ed1,%eax
 8048e85:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8048e88:	83 ec 0c             	sub    $0xc,%esp
 8048e8b:	ff 75 dc             	pushl  -0x24(%ebp)
 8048e8e:	e8 3a fc ff ff       	call   8048acd <_wyr4>
 8048e93:	83 c4 10             	add    $0x10,%esp
 8048e96:	89 c1                	mov    %eax,%ecx
 8048e98:	81 f1 2f 64 bd 78    	xor    $0x78bd642f,%ecx
 8048e9e:	89 4d a8             	mov    %ecx,-0x58(%ebp)
 8048ea1:	89 d0                	mov    %edx,%eax
 8048ea3:	35 64 1d 76 a0       	xor    $0xa0761d64,%eax
 8048ea8:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8048eab:	83 ec 08             	sub    $0x8,%esp
 8048eae:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048eb1:	50                   	push   %eax
 8048eb2:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8048eb5:	50                   	push   %eax
 8048eb6:	ff 75 b4             	pushl  -0x4c(%ebp)
 8048eb9:	ff 75 b0             	pushl  -0x50(%ebp)
 8048ebc:	ff 75 ac             	pushl  -0x54(%ebp)
 8048ebf:	ff 75 a8             	pushl  -0x58(%ebp)
 8048ec2:	e8 be fc ff ff       	call   8048b85 <_wymix128>
 8048ec7:	83 c4 20             	add    $0x20,%esp
 8048eca:	e9 ed 00 00 00       	jmp    8048fbc <wyhash+0x220>
 8048ecf:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048ed2:	85 c0                	test   %eax,%eax
 8048ed4:	74 4f                	je     8048f25 <wyhash+0x189>
 8048ed6:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048ed9:	83 ec 08             	sub    $0x8,%esp
 8048edc:	50                   	push   %eax
 8048edd:	ff 75 dc             	pushl  -0x24(%ebp)
 8048ee0:	e8 22 fc ff ff       	call   8048b07 <_wyr3>
 8048ee5:	83 c4 10             	add    $0x10,%esp
 8048ee8:	89 c3                	mov    %eax,%ebx
 8048eea:	81 f3 2f 64 bd 78    	xor    $0x78bd642f,%ebx
 8048ef0:	89 5d a0             	mov    %ebx,-0x60(%ebp)
 8048ef3:	89 d0                	mov    %edx,%eax
 8048ef5:	35 64 1d 76 a0       	xor    $0xa0761d64,%eax
 8048efa:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8048efd:	83 ec 08             	sub    $0x8,%esp
 8048f00:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048f03:	50                   	push   %eax
 8048f04:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8048f07:	50                   	push   %eax
 8048f08:	68 d1 7e 03 e7       	push   $0xe7037ed1
 8048f0d:	68 db 28 b4 a0       	push   $0xa0b428db
 8048f12:	ff 75 a4             	pushl  -0x5c(%ebp)
 8048f15:	ff 75 a0             	pushl  -0x60(%ebp)
 8048f18:	e8 68 fc ff ff       	call   8048b85 <_wymix128>
 8048f1d:	83 c4 20             	add    $0x20,%esp
 8048f20:	e9 97 00 00 00       	jmp    8048fbc <wyhash+0x220>
 8048f25:	83 ec 08             	sub    $0x8,%esp
 8048f28:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048f2b:	50                   	push   %eax
 8048f2c:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8048f2f:	50                   	push   %eax
 8048f30:	68 d1 7e 03 e7       	push   $0xe7037ed1
 8048f35:	68 db 28 b4 a0       	push   $0xa0b428db
 8048f3a:	68 64 1d 76 a0       	push   $0xa0761d64
 8048f3f:	68 2f 64 bd 78       	push   $0x78bd642f
 8048f44:	e8 3c fc ff ff       	call   8048b85 <_wymix128>
 8048f49:	83 c4 20             	add    $0x20,%esp
 8048f4c:	eb 6e                	jmp    8048fbc <wyhash+0x220>
 8048f4e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8048f51:	8d 50 f8             	lea    -0x8(%eax),%edx
 8048f54:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8048f57:	01 d0                	add    %edx,%eax
 8048f59:	83 ec 0c             	sub    $0xc,%esp
 8048f5c:	50                   	push   %eax
 8048f5d:	e8 2d fb ff ff       	call   8048a8f <_wyr8>
 8048f62:	83 c4 10             	add    $0x10,%esp
 8048f65:	89 c6                	mov    %eax,%esi
 8048f67:	81 f6 db 28 b4 a0    	xor    $0xa0b428db,%esi
 8048f6d:	89 75 98             	mov    %esi,-0x68(%ebp)
 8048f70:	89 d0                	mov    %edx,%eax
 8048f72:	35 d1 7e 03 e7       	xor    $0xe7037ed1,%eax
 8048f77:	89 45 9c             	mov    %eax,-0x64(%ebp)
 8048f7a:	83 ec 0c             	sub    $0xc,%esp
 8048f7d:	ff 75 dc             	pushl  -0x24(%ebp)
 8048f80:	e8 0a fb ff ff       	call   8048a8f <_wyr8>
 8048f85:	83 c4 10             	add    $0x10,%esp
 8048f88:	89 c1                	mov    %eax,%ecx
 8048f8a:	81 f1 2f 64 bd 78    	xor    $0x78bd642f,%ecx
 8048f90:	89 4d 90             	mov    %ecx,-0x70(%ebp)
 8048f93:	89 d0                	mov    %edx,%eax
 8048f95:	35 64 1d 76 a0       	xor    $0xa0761d64,%eax
 8048f9a:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8048f9d:	83 ec 08             	sub    $0x8,%esp
 8048fa0:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048fa3:	50                   	push   %eax
 8048fa4:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8048fa7:	50                   	push   %eax
 8048fa8:	ff 75 9c             	pushl  -0x64(%ebp)
 8048fab:	ff 75 98             	pushl  -0x68(%ebp)
 8048fae:	ff 75 94             	pushl  -0x6c(%ebp)
 8048fb1:	ff 75 90             	pushl  -0x70(%ebp)
 8048fb4:	e8 cc fb ff ff       	call   8048b85 <_wymix128>
 8048fb9:	83 c4 20             	add    $0x20,%esp
 8048fbc:	83 ec 08             	sub    $0x8,%esp
 8048fbf:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048fc2:	50                   	push   %eax
 8048fc3:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8048fc6:	50                   	push   %eax
 8048fc7:	68 64 1d 76 a0       	push   $0xa0761d64
 8048fcc:	68 2f 64 bd 78       	push   $0x78bd642f
 8048fd1:	ff 75 cc             	pushl  -0x34(%ebp)
 8048fd4:	ff 75 c8             	pushl  -0x38(%ebp)
 8048fd7:	e8 a9 fb ff ff       	call   8048b85 <_wymix128>
 8048fdc:	83 c4 20             	add    $0x20,%esp
 8048fdf:	8b 4d c0             	mov    -0x40(%ebp),%ecx
 8048fe2:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
 8048fe5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8048fe8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8048feb:	89 ce                	mov    %ecx,%esi
 8048fed:	31 c6                	xor    %eax,%esi
 8048fef:	89 75 88             	mov    %esi,-0x78(%ebp)
 8048ff2:	31 d3                	xor    %edx,%ebx
 8048ff4:	89 5d 8c             	mov    %ebx,-0x74(%ebp)
 8048ff7:	8b 45 88             	mov    -0x78(%ebp),%eax
 8048ffa:	8b 55 8c             	mov    -0x74(%ebp),%edx
 8048ffd:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8049000:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 8049007:	74 7b                	je     8049084 <wyhash+0x2e8>
 8049009:	eb 74                	jmp    804907f <wyhash+0x2e3>
 804900b:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804900e:	83 c0 08             	add    $0x8,%eax
 8049011:	83 ec 0c             	sub    $0xc,%esp
 8049014:	50                   	push   %eax
 8049015:	e8 75 fa ff ff       	call   8048a8f <_wyr8>
 804901a:	83 c4 10             	add    $0x10,%esp
 804901d:	89 c1                	mov    %eax,%ecx
 804901f:	81 f1 db 28 b4 a0    	xor    $0xa0b428db,%ecx
 8049025:	89 4d b8             	mov    %ecx,-0x48(%ebp)
 8049028:	89 d0                	mov    %edx,%eax
 804902a:	35 d1 7e 03 e7       	xor    $0xe7037ed1,%eax
 804902f:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8049032:	83 ec 0c             	sub    $0xc,%esp
 8049035:	ff 75 dc             	pushl  -0x24(%ebp)
 8049038:	e8 52 fa ff ff       	call   8048a8f <_wyr8>
 804903d:	83 c4 10             	add    $0x10,%esp
 8049040:	89 c1                	mov    %eax,%ecx
 8049042:	81 f1 2f 64 bd 78    	xor    $0x78bd642f,%ecx
 8049048:	89 cb                	mov    %ecx,%ebx
 804904a:	89 d0                	mov    %edx,%eax
 804904c:	35 64 1d 76 a0       	xor    $0xa0761d64,%eax
 8049051:	89 c6                	mov    %eax,%esi
 8049053:	83 ec 08             	sub    $0x8,%esp
 8049056:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8049059:	50                   	push   %eax
 804905a:	8d 45 c0             	lea    -0x40(%ebp),%eax
 804905d:	50                   	push   %eax
 804905e:	ff 75 bc             	pushl  -0x44(%ebp)
 8049061:	ff 75 b8             	pushl  -0x48(%ebp)
 8049064:	56                   	push   %esi
 8049065:	53                   	push   %ebx
 8049066:	e8 1a fb ff ff       	call   8048b85 <_wymix128>
 804906b:	83 c4 20             	add    $0x20,%esp
 804906e:	83 45 e8 f0          	addl   $0xfffffff0,-0x18(%ebp)
 8049072:	83 55 ec ff          	adcl   $0xffffffff,-0x14(%ebp)
 8049076:	83 45 dc 10          	addl   $0x10,-0x24(%ebp)
 804907a:	e9 6c fd ff ff       	jmp    8048deb <wyhash+0x4f>
 804907f:	e8 9c f7 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049084:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8049087:	5b                   	pop    %ebx
 8049088:	5e                   	pop    %esi
 8049089:	5d                   	pop    %ebp
 804908a:	c3                   	ret    

0804908b <wyhash64>:
 804908b:	55                   	push   %ebp
 804908c:	89 e5                	mov    %esp,%ebp
 804908e:	57                   	push   %edi
 804908f:	56                   	push   %esi
 8049090:	53                   	push   %ebx
 8049091:	83 ec 1c             	sub    $0x1c,%esp
 8049094:	8b 45 08             	mov    0x8(%ebp),%eax
 8049097:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804909a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804909d:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80490a0:	8b 45 10             	mov    0x10(%ebp),%eax
 80490a3:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80490a6:	8b 45 14             	mov    0x14(%ebp),%eax
 80490a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80490ac:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80490af:	50                   	push   %eax
 80490b0:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80490b3:	50                   	push   %eax
 80490b4:	68 d1 7e 03 e7       	push   $0xe7037ed1
 80490b9:	68 db 28 b4 a0       	push   $0xa0b428db
 80490be:	68 64 1d 76 a0       	push   $0xa0761d64
 80490c3:	68 2f 64 bd 78       	push   $0x78bd642f
 80490c8:	e8 b8 fa ff ff       	call   8048b85 <_wymix128>
 80490cd:	83 c4 18             	add    $0x18,%esp
 80490d0:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80490d3:	50                   	push   %eax
 80490d4:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80490d7:	50                   	push   %eax
 80490d8:	6a 00                	push   $0x0
 80490da:	6a 00                	push   $0x0
 80490dc:	6a 00                	push   $0x0
 80490de:	6a 00                	push   $0x0
 80490e0:	e8 a0 fa ff ff       	call   8048b85 <_wymix128>
 80490e5:	83 c4 18             	add    $0x18,%esp
 80490e8:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 80490eb:	8b 5d ec             	mov    -0x14(%ebp),%ebx
 80490ee:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80490f1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80490f4:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80490f7:	89 55 dc             	mov    %edx,-0x24(%ebp)
 80490fa:	89 c8                	mov    %ecx,%eax
 80490fc:	33 45 d8             	xor    -0x28(%ebp),%eax
 80490ff:	89 c6                	mov    %eax,%esi
 8049101:	89 d8                	mov    %ebx,%eax
 8049103:	33 45 dc             	xor    -0x24(%ebp),%eax
 8049106:	89 c7                	mov    %eax,%edi
 8049108:	89 f0                	mov    %esi,%eax
 804910a:	89 fa                	mov    %edi,%edx
 804910c:	8d 65 f4             	lea    -0xc(%ebp),%esp
 804910f:	5b                   	pop    %ebx
 8049110:	5e                   	pop    %esi
 8049111:	5f                   	pop    %edi
 8049112:	5d                   	pop    %ebp
 8049113:	c3                   	ret    

08049114 <memfreedup>:
 8049114:	55                   	push   %ebp
 8049115:	89 e5                	mov    %esp,%ebp
 8049117:	83 ec 08             	sub    $0x8,%esp
 804911a:	83 ec 0c             	sub    $0xc,%esp
 804911d:	ff 75 08             	pushl  0x8(%ebp)
 8049120:	e8 8b f6 ff ff       	call   80487b0 <free@plt>
 8049125:	83 c4 10             	add    $0x10,%esp
 8049128:	83 ec 08             	sub    $0x8,%esp
 804912b:	ff 75 10             	pushl  0x10(%ebp)
 804912e:	ff 75 0c             	pushl  0xc(%ebp)
 8049131:	e8 90 e9 00 00       	call   8057ac6 <memdup>
 8049136:	83 c4 10             	add    $0x10,%esp
 8049139:	c9                   	leave  
 804913a:	c3                   	ret    

0804913b <vinit_string_literals>:
 804913b:	55                   	push   %ebp
 804913c:	89 e5                	mov    %esp,%ebp
 804913e:	c7 05 94 31 07 08 20 	movl   $0x8069620,0x8073194
 8049145:	96 06 08 
 8049148:	c7 05 98 31 07 08 0e 	movl   $0xe,0x8073198
 804914f:	00 00 00 
 8049152:	c7 05 9c 31 07 08 01 	movl   $0x1,0x807319c
 8049159:	00 00 00 
 804915c:	c7 05 c0 31 07 08 2f 	movl   $0x806962f,0x80731c0
 8049163:	96 06 08 
 8049166:	c7 05 c4 31 07 08 0c 	movl   $0xc,0x80731c4
 804916d:	00 00 00 
 8049170:	c7 05 c8 31 07 08 01 	movl   $0x1,0x80731c8
 8049177:	00 00 00 
 804917a:	c7 05 3c 32 07 08 3c 	movl   $0x806963c,0x807323c
 8049181:	96 06 08 
 8049184:	c7 05 40 32 07 08 24 	movl   $0x24,0x8073240
 804918b:	00 00 00 
 804918e:	c7 05 44 32 07 08 01 	movl   $0x1,0x8073244
 8049195:	00 00 00 
 8049198:	c7 05 a0 31 07 08 64 	movl   $0x8069664,0x80731a0
 804919f:	96 06 08 
 80491a2:	c7 05 a4 31 07 08 c8 	movl   $0xc8,0x80731a4
 80491a9:	00 00 00 
 80491ac:	c7 05 a8 31 07 08 01 	movl   $0x1,0x80731a8
 80491b3:	00 00 00 
 80491b6:	90                   	nop
 80491b7:	5d                   	pop    %ebp
 80491b8:	c3                   	ret    

080491b9 <array_int_str>:
 80491b9:	55                   	push   %ebp
 80491ba:	89 e5                	mov    %esp,%ebp
 80491bc:	83 ec 28             	sub    $0x28,%esp
 80491bf:	8b 45 08             	mov    0x8(%ebp),%eax
 80491c2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80491c5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80491cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80491ce:	31 c0                	xor    %eax,%eax
 80491d0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80491d3:	83 ec 08             	sub    $0x8,%esp
 80491d6:	6a 00                	push   $0x0
 80491d8:	ff 75 18             	pushl  0x18(%ebp)
 80491db:	ff 75 14             	pushl  0x14(%ebp)
 80491de:	ff 75 10             	pushl  0x10(%ebp)
 80491e1:	ff 75 0c             	pushl  0xc(%ebp)
 80491e4:	50                   	push   %eax
 80491e5:	e8 1b 00 00 00       	call   8049205 <indent_array_int_str>
 80491ea:	83 c4 1c             	add    $0x1c,%esp
 80491ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80491f0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80491f3:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80491fa:	74 05                	je     8049201 <array_int_str+0x48>
 80491fc:	e8 1f f6 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049201:	c9                   	leave  
 8049202:	c2 04 00             	ret    $0x4

08049205 <indent_array_int_str>:
 8049205:	55                   	push   %ebp
 8049206:	89 e5                	mov    %esp,%ebp
 8049208:	83 ec 78             	sub    $0x78,%esp
 804920b:	8b 45 08             	mov    0x8(%ebp),%eax
 804920e:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8049211:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049217:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804921a:	31 c0                	xor    %eax,%eax
 804921c:	8b 55 14             	mov    0x14(%ebp),%edx
 804921f:	89 d0                	mov    %edx,%eax
 8049221:	c1 e0 02             	shl    $0x2,%eax
 8049224:	01 d0                	add    %edx,%eax
 8049226:	01 c0                	add    %eax,%eax
 8049228:	89 c2                	mov    %eax,%edx
 804922a:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804922d:	83 ec 08             	sub    $0x8,%esp
 8049230:	52                   	push   %edx
 8049231:	50                   	push   %eax
 8049232:	e8 fb 06 00 00       	call   8049932 <strings__new_builder>
 8049237:	83 c4 0c             	add    $0xc,%esp
 804923a:	c7 45 a8 2d 97 06 08 	movl   $0x806972d,-0x58(%ebp)
 8049241:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)
 8049248:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
 804924f:	ff 75 b0             	pushl  -0x50(%ebp)
 8049252:	ff 75 ac             	pushl  -0x54(%ebp)
 8049255:	ff 75 a8             	pushl  -0x58(%ebp)
 8049258:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804925b:	50                   	push   %eax
 804925c:	e8 d8 07 00 00       	call   8049a39 <strings__Builder_write>
 8049261:	83 c4 10             	add    $0x10,%esp
 8049264:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 804926b:	eb 7f                	jmp    80492ec <indent_array_int_str+0xe7>
 804926d:	83 ec 0c             	sub    $0xc,%esp
 8049270:	ff 75 a0             	pushl  -0x60(%ebp)
 8049273:	ff 75 18             	pushl  0x18(%ebp)
 8049276:	ff 75 14             	pushl  0x14(%ebp)
 8049279:	ff 75 10             	pushl  0x10(%ebp)
 804927c:	ff 75 0c             	pushl  0xc(%ebp)
 804927f:	e8 36 d0 00 00       	call   80562ba <array_get>
 8049284:	83 c4 20             	add    $0x20,%esp
 8049287:	8b 00                	mov    (%eax),%eax
 8049289:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804928c:	8d 45 cc             	lea    -0x34(%ebp),%eax
 804928f:	83 ec 08             	sub    $0x8,%esp
 8049292:	ff 75 a4             	pushl  -0x5c(%ebp)
 8049295:	50                   	push   %eax
 8049296:	e8 a8 fa 00 00       	call   8058d43 <int_str>
 804929b:	83 c4 0c             	add    $0xc,%esp
 804929e:	ff 75 d4             	pushl  -0x2c(%ebp)
 80492a1:	ff 75 d0             	pushl  -0x30(%ebp)
 80492a4:	ff 75 cc             	pushl  -0x34(%ebp)
 80492a7:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80492aa:	50                   	push   %eax
 80492ab:	e8 89 07 00 00       	call   8049a39 <strings__Builder_write>
 80492b0:	83 c4 10             	add    $0x10,%esp
 80492b3:	8b 45 14             	mov    0x14(%ebp),%eax
 80492b6:	83 e8 01             	sub    $0x1,%eax
 80492b9:	3b 45 a0             	cmp    -0x60(%ebp),%eax
 80492bc:	7e 2a                	jle    80492e8 <indent_array_int_str+0xe3>
 80492be:	c7 45 b4 2f 97 06 08 	movl   $0x806972f,-0x4c(%ebp)
 80492c5:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%ebp)
 80492cc:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
 80492d3:	ff 75 bc             	pushl  -0x44(%ebp)
 80492d6:	ff 75 b8             	pushl  -0x48(%ebp)
 80492d9:	ff 75 b4             	pushl  -0x4c(%ebp)
 80492dc:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80492df:	50                   	push   %eax
 80492e0:	e8 54 07 00 00       	call   8049a39 <strings__Builder_write>
 80492e5:	83 c4 10             	add    $0x10,%esp
 80492e8:	83 45 a0 01          	addl   $0x1,-0x60(%ebp)
 80492ec:	8b 45 14             	mov    0x14(%ebp),%eax
 80492ef:	3b 45 a0             	cmp    -0x60(%ebp),%eax
 80492f2:	0f 8f 75 ff ff ff    	jg     804926d <indent_array_int_str+0x68>
 80492f8:	c7 45 c0 32 97 06 08 	movl   $0x8069732,-0x40(%ebp)
 80492ff:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)
 8049306:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 804930d:	ff 75 c8             	pushl  -0x38(%ebp)
 8049310:	ff 75 c4             	pushl  -0x3c(%ebp)
 8049313:	ff 75 c0             	pushl  -0x40(%ebp)
 8049316:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8049319:	50                   	push   %eax
 804931a:	e8 1a 07 00 00       	call   8049a39 <strings__Builder_write>
 804931f:	83 c4 10             	add    $0x10,%esp
 8049322:	8d 45 cc             	lea    -0x34(%ebp),%eax
 8049325:	83 ec 08             	sub    $0x8,%esp
 8049328:	8d 55 d8             	lea    -0x28(%ebp),%edx
 804932b:	52                   	push   %edx
 804932c:	50                   	push   %eax
 804932d:	e8 95 0a 00 00       	call   8049dc7 <strings__Builder_str>
 8049332:	83 c4 0c             	add    $0xc,%esp
 8049335:	83 ec 0c             	sub    $0xc,%esp
 8049338:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804933b:	50                   	push   %eax
 804933c:	e8 8f 0b 00 00       	call   8049ed0 <strings__Builder_free>
 8049341:	83 c4 10             	add    $0x10,%esp
 8049344:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8049347:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804934a:	89 10                	mov    %edx,(%eax)
 804934c:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804934f:	89 50 04             	mov    %edx,0x4(%eax)
 8049352:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8049355:	89 50 08             	mov    %edx,0x8(%eax)
 8049358:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804935b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804935e:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8049365:	74 05                	je     804936c <indent_array_int_str+0x167>
 8049367:	e8 b4 f4 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804936c:	c9                   	leave  
 804936d:	c2 04 00             	ret    $0x4

08049370 <array_byte_contains>:
 8049370:	55                   	push   %ebp
 8049371:	89 e5                	mov    %esp,%ebp
 8049373:	83 ec 28             	sub    $0x28,%esp
 8049376:	8b 45 18             	mov    0x18(%ebp),%eax
 8049379:	88 45 e4             	mov    %al,-0x1c(%ebp)
 804937c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049383:	eb 2d                	jmp    80493b2 <array_byte_contains+0x42>
 8049385:	83 ec 0c             	sub    $0xc,%esp
 8049388:	ff 75 f4             	pushl  -0xc(%ebp)
 804938b:	ff 75 14             	pushl  0x14(%ebp)
 804938e:	ff 75 10             	pushl  0x10(%ebp)
 8049391:	ff 75 0c             	pushl  0xc(%ebp)
 8049394:	ff 75 08             	pushl  0x8(%ebp)
 8049397:	e8 1e cf 00 00       	call   80562ba <array_get>
 804939c:	83 c4 20             	add    $0x20,%esp
 804939f:	0f b6 00             	movzbl (%eax),%eax
 80493a2:	3a 45 e4             	cmp    -0x1c(%ebp),%al
 80493a5:	75 07                	jne    80493ae <array_byte_contains+0x3e>
 80493a7:	b8 01 00 00 00       	mov    $0x1,%eax
 80493ac:	eb 11                	jmp    80493bf <array_byte_contains+0x4f>
 80493ae:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 80493b2:	8b 45 10             	mov    0x10(%ebp),%eax
 80493b5:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 80493b8:	7f cb                	jg     8049385 <array_byte_contains+0x15>
 80493ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80493bf:	c9                   	leave  
 80493c0:	c3                   	ret    

080493c1 <_STR_PRINT_ARG>:
 80493c1:	55                   	push   %ebp
 80493c2:	89 e5                	mov    %esp,%ebp
 80493c4:	53                   	push   %ebx
 80493c5:	83 ec 24             	sub    $0x24,%esp
 80493c8:	8b 45 08             	mov    0x8(%ebp),%eax
 80493cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80493ce:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493d1:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80493d4:	8b 45 10             	mov    0x10(%ebp),%eax
 80493d7:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80493da:	8b 45 14             	mov    0x14(%ebp),%eax
 80493dd:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80493e0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80493e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80493e9:	31 c0                	xor    %eax,%eax
 80493eb:	8d 45 1c             	lea    0x1c(%ebp),%eax
 80493ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80493f1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80493f4:	8b 10                	mov    (%eax),%edx
 80493f6:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80493f9:	8b 00                	mov    (%eax),%eax
 80493fb:	29 c2                	sub    %eax,%edx
 80493fd:	89 d0                	mov    %edx,%eax
 80493ff:	3b 45 18             	cmp    0x18(%ebp),%eax
 8049402:	7e 62                	jle    8049466 <_STR_PRINT_ARG+0xa5>
 8049404:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049407:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804940a:	8b 0a                	mov    (%edx),%ecx
 804940c:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804940f:	8b 12                	mov    (%edx),%edx
 8049411:	29 d1                	sub    %edx,%ecx
 8049413:	89 ca                	mov    %ecx,%edx
 8049415:	89 d3                	mov    %edx,%ebx
 8049417:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804941a:	8b 0a                	mov    (%edx),%ecx
 804941c:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804941f:	8b 12                	mov    (%edx),%edx
 8049421:	01 ca                	add    %ecx,%edx
 8049423:	50                   	push   %eax
 8049424:	ff 75 e4             	pushl  -0x1c(%ebp)
 8049427:	53                   	push   %ebx
 8049428:	52                   	push   %edx
 8049429:	e8 c2 f4 ff ff       	call   80488f0 <vsnprintf@plt>
 804942e:	83 c4 10             	add    $0x10,%esp
 8049431:	89 45 18             	mov    %eax,0x18(%ebp)
 8049434:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8049437:	8b 10                	mov    (%eax),%edx
 8049439:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804943c:	8b 00                	mov    (%eax),%eax
 804943e:	29 c2                	sub    %eax,%edx
 8049440:	89 d0                	mov    %edx,%eax
 8049442:	3b 45 18             	cmp    0x18(%ebp),%eax
 8049445:	7e 1f                	jle    8049466 <_STR_PRINT_ARG+0xa5>
 8049447:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804944a:	8b 10                	mov    (%eax),%edx
 804944c:	8b 45 18             	mov    0x18(%ebp),%eax
 804944f:	01 c2                	add    %eax,%edx
 8049451:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8049454:	89 10                	mov    %edx,(%eax)
 8049456:	90                   	nop
 8049457:	90                   	nop
 8049458:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804945b:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049462:	74 5b                	je     80494bf <_STR_PRINT_ARG+0xfe>
 8049464:	eb 54                	jmp    80494ba <_STR_PRINT_ARG+0xf9>
 8049466:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8049469:	8b 18                	mov    (%eax),%ebx
 804946b:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804946e:	8b 10                	mov    (%eax),%edx
 8049470:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8049473:	8b 00                	mov    (%eax),%eax
 8049475:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8049478:	ba 56 55 55 55       	mov    $0x55555556,%edx
 804947d:	89 c8                	mov    %ecx,%eax
 804947f:	f7 ea                	imul   %edx
 8049481:	89 c8                	mov    %ecx,%eax
 8049483:	c1 f8 1f             	sar    $0x1f,%eax
 8049486:	29 c2                	sub    %eax,%edx
 8049488:	8b 45 18             	mov    0x18(%ebp),%eax
 804948b:	01 d0                	add    %edx,%eax
 804948d:	8d 14 03             	lea    (%ebx,%eax,1),%edx
 8049490:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8049493:	89 10                	mov    %edx,(%eax)
 8049495:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8049498:	8b 00                	mov    (%eax),%eax
 804949a:	89 c2                	mov    %eax,%edx
 804949c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804949f:	8b 00                	mov    (%eax),%eax
 80494a1:	83 ec 08             	sub    $0x8,%esp
 80494a4:	52                   	push   %edx
 80494a5:	50                   	push   %eax
 80494a6:	e8 85 f3 ff ff       	call   8048830 <realloc@plt>
 80494ab:	83 c4 10             	add    $0x10,%esp
 80494ae:	89 c2                	mov    %eax,%edx
 80494b0:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80494b3:	89 10                	mov    %edx,(%eax)
 80494b5:	e9 37 ff ff ff       	jmp    80493f1 <_STR_PRINT_ARG+0x30>
 80494ba:	e8 61 f3 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80494bf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80494c2:	c9                   	leave  
 80494c3:	c3                   	ret    

080494c4 <_STR>:
 80494c4:	55                   	push   %ebp
 80494c5:	89 e5                	mov    %esp,%ebp
 80494c7:	53                   	push   %ebx
 80494c8:	83 ec 54             	sub    $0x54,%esp
 80494cb:	8b 45 08             	mov    0x8(%ebp),%eax
 80494ce:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80494d1:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494d4:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80494d7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80494dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80494e0:	31 c0                	xor    %eax,%eax
 80494e2:	c7 45 c0 80 00 00 00 	movl   $0x80,-0x40(%ebp)
 80494e9:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 80494f0:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80494f3:	83 ec 0c             	sub    $0xc,%esp
 80494f6:	50                   	push   %eax
 80494f7:	e8 44 f3 ff ff       	call   8048840 <malloc@plt>
 80494fc:	83 c4 10             	add    $0x10,%esp
 80494ff:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8049502:	8d 45 14             	lea    0x14(%ebp),%eax
 8049505:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8049508:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804950f:	e9 17 03 00 00       	jmp    804982b <_STR+0x367>
 8049514:	83 ec 0c             	sub    $0xc,%esp
 8049517:	ff 75 b0             	pushl  -0x50(%ebp)
 804951a:	e8 61 f3 ff ff       	call   8048880 <strlen@plt>
 804951f:	83 c4 10             	add    $0x10,%esp
 8049522:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8049525:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804952c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 8049533:	eb 2f                	jmp    8049564 <_STR+0xa0>
 8049535:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8049538:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804953b:	01 d0                	add    %edx,%eax
 804953d:	0f b6 00             	movzbl (%eax),%eax
 8049540:	3c 25                	cmp    $0x25,%al
 8049542:	75 1c                	jne    8049560 <_STR+0x9c>
 8049544:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 8049548:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804954b:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804954e:	01 d0                	add    %edx,%eax
 8049550:	0f b6 00             	movzbl (%eax),%eax
 8049553:	3c 25                	cmp    $0x25,%al
 8049555:	74 09                	je     8049560 <_STR+0x9c>
 8049557:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
 804955e:	eb 0c                	jmp    804956c <_STR+0xa8>
 8049560:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 8049564:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049567:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 804956a:	7c c9                	jl     8049535 <_STR+0x71>
 804956c:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 8049570:	0f 84 8b 02 00 00    	je     8049801 <_STR+0x33d>
 8049576:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8049579:	8d 50 ff             	lea    -0x1(%eax),%edx
 804957c:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804957f:	01 d0                	add    %edx,%eax
 8049581:	0f b6 00             	movzbl (%eax),%eax
 8049584:	88 45 ba             	mov    %al,-0x46(%ebp)
 8049587:	0f b6 45 ba          	movzbl -0x46(%ebp),%eax
 804958b:	83 e0 df             	and    $0xffffffdf,%eax
 804958e:	88 45 bb             	mov    %al,-0x45(%ebp)
 8049591:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8049594:	8d 50 fe             	lea    -0x2(%eax),%edx
 8049597:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804959a:	01 d0                	add    %edx,%eax
 804959c:	0f b6 00             	movzbl (%eax),%eax
 804959f:	3c 6c                	cmp    $0x6c,%al
 80495a1:	0f 94 c0             	sete   %al
 80495a4:	0f b6 c0             	movzbl %al,%eax
 80495a7:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80495aa:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 80495ae:	74 19                	je     80495c9 <_STR+0x105>
 80495b0:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80495b3:	8d 50 fd             	lea    -0x3(%eax),%edx
 80495b6:	8b 45 b0             	mov    -0x50(%ebp),%eax
 80495b9:	01 d0                	add    %edx,%eax
 80495bb:	0f b6 00             	movzbl (%eax),%eax
 80495be:	3c 6c                	cmp    $0x6c,%al
 80495c0:	75 07                	jne    80495c9 <_STR+0x105>
 80495c2:	b8 01 00 00 00       	mov    $0x1,%eax
 80495c7:	eb 05                	jmp    80495ce <_STR+0x10a>
 80495c9:	b8 00 00 00 00       	mov    $0x0,%eax
 80495ce:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80495d1:	80 7d ba 75          	cmpb   $0x75,-0x46(%ebp)
 80495d5:	74 1c                	je     80495f3 <_STR+0x12f>
 80495d7:	80 7d bb 58          	cmpb   $0x58,-0x45(%ebp)
 80495db:	74 16                	je     80495f3 <_STR+0x12f>
 80495dd:	80 7d ba 6f          	cmpb   $0x6f,-0x46(%ebp)
 80495e1:	74 10                	je     80495f3 <_STR+0x12f>
 80495e3:	80 7d ba 64          	cmpb   $0x64,-0x46(%ebp)
 80495e7:	74 0a                	je     80495f3 <_STR+0x12f>
 80495e9:	80 7d ba 63          	cmpb   $0x63,-0x46(%ebp)
 80495ed:	0f 85 a6 00 00 00    	jne    8049699 <_STR+0x1d5>
 80495f3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 80495f7:	74 36                	je     804962f <_STR+0x16b>
 80495f9:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80495fc:	8d 50 08             	lea    0x8(%eax),%edx
 80495ff:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8049602:	8b 50 04             	mov    0x4(%eax),%edx
 8049605:	8b 00                	mov    (%eax),%eax
 8049607:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 804960a:	83 c1 10             	add    $0x10,%ecx
 804960d:	83 ec 04             	sub    $0x4,%esp
 8049610:	52                   	push   %edx
 8049611:	50                   	push   %eax
 8049612:	51                   	push   %ecx
 8049613:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8049616:	50                   	push   %eax
 8049617:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 804961a:	50                   	push   %eax
 804961b:	8d 45 c8             	lea    -0x38(%ebp),%eax
 804961e:	50                   	push   %eax
 804961f:	ff 75 b0             	pushl  -0x50(%ebp)
 8049622:	e8 9a fd ff ff       	call   80493c1 <_STR_PRINT_ARG>
 8049627:	83 c4 20             	add    $0x20,%esp
 804962a:	e9 ef 01 00 00       	jmp    804981e <_STR+0x35a>
 804962f:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 8049633:	74 32                	je     8049667 <_STR+0x1a3>
 8049635:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8049638:	8d 50 04             	lea    0x4(%eax),%edx
 804963b:	89 55 bc             	mov    %edx,-0x44(%ebp)
 804963e:	8b 00                	mov    (%eax),%eax
 8049640:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8049643:	83 c2 0a             	add    $0xa,%edx
 8049646:	83 ec 08             	sub    $0x8,%esp
 8049649:	50                   	push   %eax
 804964a:	52                   	push   %edx
 804964b:	8d 45 c0             	lea    -0x40(%ebp),%eax
 804964e:	50                   	push   %eax
 804964f:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 8049652:	50                   	push   %eax
 8049653:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8049656:	50                   	push   %eax
 8049657:	ff 75 b0             	pushl  -0x50(%ebp)
 804965a:	e8 62 fd ff ff       	call   80493c1 <_STR_PRINT_ARG>
 804965f:	83 c4 20             	add    $0x20,%esp
 8049662:	e9 b7 01 00 00       	jmp    804981e <_STR+0x35a>
 8049667:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804966a:	8d 50 04             	lea    0x4(%eax),%edx
 804966d:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8049670:	8b 00                	mov    (%eax),%eax
 8049672:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8049675:	83 c2 08             	add    $0x8,%edx
 8049678:	83 ec 08             	sub    $0x8,%esp
 804967b:	50                   	push   %eax
 804967c:	52                   	push   %edx
 804967d:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8049680:	50                   	push   %eax
 8049681:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 8049684:	50                   	push   %eax
 8049685:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8049688:	50                   	push   %eax
 8049689:	ff 75 b0             	pushl  -0x50(%ebp)
 804968c:	e8 30 fd ff ff       	call   80493c1 <_STR_PRINT_ARG>
 8049691:	83 c4 20             	add    $0x20,%esp
 8049694:	e9 85 01 00 00       	jmp    804981e <_STR+0x35a>
 8049699:	80 7d bb 44          	cmpb   $0x44,-0x45(%ebp)
 804969d:	7e 3e                	jle    80496dd <_STR+0x219>
 804969f:	80 7d bb 47          	cmpb   $0x47,-0x45(%ebp)
 80496a3:	7f 38                	jg     80496dd <_STR+0x219>
 80496a5:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80496a8:	8d 50 08             	lea    0x8(%eax),%edx
 80496ab:	89 55 bc             	mov    %edx,-0x44(%ebp)
 80496ae:	dd 00                	fldl   (%eax)
 80496b0:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80496b3:	83 c0 0a             	add    $0xa,%eax
 80496b6:	83 ec 04             	sub    $0x4,%esp
 80496b9:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 80496bd:	dd 1c 24             	fstpl  (%esp)
 80496c0:	50                   	push   %eax
 80496c1:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80496c4:	50                   	push   %eax
 80496c5:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 80496c8:	50                   	push   %eax
 80496c9:	8d 45 c8             	lea    -0x38(%ebp),%eax
 80496cc:	50                   	push   %eax
 80496cd:	ff 75 b0             	pushl  -0x50(%ebp)
 80496d0:	e8 ec fc ff ff       	call   80493c1 <_STR_PRINT_ARG>
 80496d5:	83 c4 20             	add    $0x20,%esp
 80496d8:	e9 41 01 00 00       	jmp    804981e <_STR+0x35a>
 80496dd:	80 7d ba 70          	cmpb   $0x70,-0x46(%ebp)
 80496e1:	75 32                	jne    8049715 <_STR+0x251>
 80496e3:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80496e6:	8d 50 04             	lea    0x4(%eax),%edx
 80496e9:	89 55 bc             	mov    %edx,-0x44(%ebp)
 80496ec:	8b 00                	mov    (%eax),%eax
 80496ee:	8b 55 dc             	mov    -0x24(%ebp),%edx
 80496f1:	83 c2 0e             	add    $0xe,%edx
 80496f4:	83 ec 08             	sub    $0x8,%esp
 80496f7:	50                   	push   %eax
 80496f8:	52                   	push   %edx
 80496f9:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80496fc:	50                   	push   %eax
 80496fd:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 8049700:	50                   	push   %eax
 8049701:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8049704:	50                   	push   %eax
 8049705:	ff 75 b0             	pushl  -0x50(%ebp)
 8049708:	e8 b4 fc ff ff       	call   80493c1 <_STR_PRINT_ARG>
 804970d:	83 c4 20             	add    $0x20,%esp
 8049710:	e9 09 01 00 00       	jmp    804981e <_STR+0x35a>
 8049715:	80 7d ba 73          	cmpb   $0x73,-0x46(%ebp)
 8049719:	0f 85 ff 00 00 00    	jne    804981e <_STR+0x35a>
 804971f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8049722:	8d 50 0c             	lea    0xc(%eax),%edx
 8049725:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8049728:	8b 10                	mov    (%eax),%edx
 804972a:	89 55 e8             	mov    %edx,-0x18(%ebp)
 804972d:	8b 50 04             	mov    0x4(%eax),%edx
 8049730:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8049733:	8b 40 08             	mov    0x8(%eax),%eax
 8049736:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8049739:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804973c:	8d 50 fc             	lea    -0x4(%eax),%edx
 804973f:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8049742:	01 d0                	add    %edx,%eax
 8049744:	0f b6 00             	movzbl (%eax),%eax
 8049747:	3c 2a                	cmp    $0x2a,%al
 8049749:	0f 85 82 00 00 00    	jne    80497d1 <_STR+0x30d>
 804974f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8049752:	8d 50 04             	lea    0x4(%eax),%edx
 8049755:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8049758:	8b 00                	mov    (%eax),%eax
 804975a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804975d:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8049761:	79 20                	jns    8049783 <_STR+0x2bf>
 8049763:	8b 5d ec             	mov    -0x14(%ebp),%ebx
 8049766:	83 ec 04             	sub    $0x4,%esp
 8049769:	ff 75 f0             	pushl  -0x10(%ebp)
 804976c:	ff 75 ec             	pushl  -0x14(%ebp)
 804976f:	ff 75 e8             	pushl  -0x18(%ebp)
 8049772:	e8 90 86 01 00       	call   8061e07 <utf8_str_visible_length>
 8049777:	83 c4 10             	add    $0x10,%esp
 804977a:	29 c3                	sub    %eax,%ebx
 804977c:	89 d8                	mov    %ebx,%eax
 804977e:	29 45 d8             	sub    %eax,-0x28(%ebp)
 8049781:	eb 1e                	jmp    80497a1 <_STR+0x2dd>
 8049783:	8b 5d ec             	mov    -0x14(%ebp),%ebx
 8049786:	83 ec 04             	sub    $0x4,%esp
 8049789:	ff 75 f0             	pushl  -0x10(%ebp)
 804978c:	ff 75 ec             	pushl  -0x14(%ebp)
 804978f:	ff 75 e8             	pushl  -0x18(%ebp)
 8049792:	e8 70 86 01 00       	call   8061e07 <utf8_str_visible_length>
 8049797:	83 c4 10             	add    $0x10,%esp
 804979a:	29 c3                	sub    %eax,%ebx
 804979c:	89 d8                	mov    %ebx,%eax
 804979e:	01 45 d8             	add    %eax,-0x28(%ebp)
 80497a1:	8b 55 e8             	mov    -0x18(%ebp),%edx
 80497a4:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80497a7:	8b 5d ec             	mov    -0x14(%ebp),%ebx
 80497aa:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 80497ad:	01 d9                	add    %ebx,%ecx
 80497af:	83 e9 04             	sub    $0x4,%ecx
 80497b2:	52                   	push   %edx
 80497b3:	50                   	push   %eax
 80497b4:	ff 75 d8             	pushl  -0x28(%ebp)
 80497b7:	51                   	push   %ecx
 80497b8:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80497bb:	50                   	push   %eax
 80497bc:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 80497bf:	50                   	push   %eax
 80497c0:	8d 45 c8             	lea    -0x38(%ebp),%eax
 80497c3:	50                   	push   %eax
 80497c4:	ff 75 b0             	pushl  -0x50(%ebp)
 80497c7:	e8 f5 fb ff ff       	call   80493c1 <_STR_PRINT_ARG>
 80497cc:	83 c4 20             	add    $0x20,%esp
 80497cf:	eb 4d                	jmp    804981e <_STR+0x35a>
 80497d1:	8b 55 e8             	mov    -0x18(%ebp),%edx
 80497d4:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80497d7:	8b 5d ec             	mov    -0x14(%ebp),%ebx
 80497da:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 80497dd:	01 d9                	add    %ebx,%ecx
 80497df:	83 e9 04             	sub    $0x4,%ecx
 80497e2:	83 ec 04             	sub    $0x4,%esp
 80497e5:	52                   	push   %edx
 80497e6:	50                   	push   %eax
 80497e7:	51                   	push   %ecx
 80497e8:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80497eb:	50                   	push   %eax
 80497ec:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 80497ef:	50                   	push   %eax
 80497f0:	8d 45 c8             	lea    -0x38(%ebp),%eax
 80497f3:	50                   	push   %eax
 80497f4:	ff 75 b0             	pushl  -0x50(%ebp)
 80497f7:	e8 c5 fb ff ff       	call   80493c1 <_STR_PRINT_ARG>
 80497fc:	83 c4 20             	add    $0x20,%esp
 80497ff:	eb 1d                	jmp    804981e <_STR+0x35a>
 8049801:	83 ec 0c             	sub    $0xc,%esp
 8049804:	ff 75 dc             	pushl  -0x24(%ebp)
 8049807:	8d 45 c0             	lea    -0x40(%ebp),%eax
 804980a:	50                   	push   %eax
 804980b:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 804980e:	50                   	push   %eax
 804980f:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8049812:	50                   	push   %eax
 8049813:	ff 75 b0             	pushl  -0x50(%ebp)
 8049816:	e8 a6 fb ff ff       	call   80493c1 <_STR_PRINT_ARG>
 804981b:	83 c4 20             	add    $0x20,%esp
 804981e:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8049821:	83 c0 01             	add    $0x1,%eax
 8049824:	01 45 b0             	add    %eax,-0x50(%ebp)
 8049827:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804982b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804982e:	3b 45 10             	cmp    0x10(%ebp),%eax
 8049831:	0f 8c dd fc ff ff    	jl     8049514 <_STR+0x50>
 8049837:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804983a:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804983d:	01 d0                	add    %edx,%eax
 804983f:	c6 00 00             	movb   $0x0,(%eax)
 8049842:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8049845:	83 c0 01             	add    $0x1,%eax
 8049848:	89 c2                	mov    %eax,%edx
 804984a:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804984d:	83 ec 08             	sub    $0x8,%esp
 8049850:	52                   	push   %edx
 8049851:	50                   	push   %eax
 8049852:	e8 d9 ef ff ff       	call   8048830 <realloc@plt>
 8049857:	83 c4 10             	add    $0x10,%esp
 804985a:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804985d:	8b 55 c8             	mov    -0x38(%ebp),%edx
 8049860:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8049863:	83 ec 08             	sub    $0x8,%esp
 8049866:	52                   	push   %edx
 8049867:	50                   	push   %eax
 8049868:	e8 4d 3b 01 00       	call   805d3ba <tos2>
 804986d:	83 c4 0c             	add    $0xc,%esp
 8049870:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8049873:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8049876:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 804987d:	74 05                	je     8049884 <_STR+0x3c0>
 804987f:	e8 9c ef ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049884:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8049887:	c9                   	leave  
 8049888:	c2 04 00             	ret    $0x4

0804988b <_STR_TMP>:
 804988b:	55                   	push   %ebp
 804988c:	89 e5                	mov    %esp,%ebp
 804988e:	83 ec 38             	sub    $0x38,%esp
 8049891:	8b 45 08             	mov    0x8(%ebp),%eax
 8049894:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8049897:	8b 45 0c             	mov    0xc(%ebp),%eax
 804989a:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804989d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80498a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80498a6:	31 c0                	xor    %eax,%eax
 80498a8:	8d 45 10             	lea    0x10(%ebp),%eax
 80498ab:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80498ae:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80498b1:	50                   	push   %eax
 80498b2:	ff 75 d0             	pushl  -0x30(%ebp)
 80498b5:	6a 00                	push   $0x0
 80498b7:	6a 00                	push   $0x0
 80498b9:	e8 32 f0 ff ff       	call   80488f0 <vsnprintf@plt>
 80498be:	83 c4 10             	add    $0x10,%esp
 80498c1:	83 c0 01             	add    $0x1,%eax
 80498c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80498c7:	8d 45 10             	lea    0x10(%ebp),%eax
 80498ca:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80498cd:	8b 55 e0             	mov    -0x20(%ebp),%edx
 80498d0:	a1 d4 30 07 08       	mov    0x80730d4,%eax
 80498d5:	83 ec 04             	sub    $0x4,%esp
 80498d8:	52                   	push   %edx
 80498d9:	ff 75 d0             	pushl  -0x30(%ebp)
 80498dc:	50                   	push   %eax
 80498dd:	e8 ee ef ff ff       	call   80488d0 <vsprintf@plt>
 80498e2:	83 c4 10             	add    $0x10,%esp
 80498e5:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 80498e8:	8b 15 d4 30 07 08    	mov    0x80730d4,%edx
 80498ee:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80498f1:	83 ec 04             	sub    $0x4,%esp
 80498f4:	51                   	push   %ecx
 80498f5:	52                   	push   %edx
 80498f6:	50                   	push   %eax
 80498f7:	e8 fe 39 01 00       	call   805d2fa <tos>
 80498fc:	83 c4 0c             	add    $0xc,%esp
 80498ff:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8049906:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049909:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804990c:	89 10                	mov    %edx,(%eax)
 804990e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8049911:	89 50 04             	mov    %edx,0x4(%eax)
 8049914:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8049917:	89 50 08             	mov    %edx,0x8(%eax)
 804991a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804991d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8049920:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8049927:	74 05                	je     804992e <_STR_TMP+0xa3>
 8049929:	e8 f2 ee ff ff       	call   8048820 <__stack_chk_fail@plt>
 804992e:	c9                   	leave  
 804992f:	c2 04 00             	ret    $0x4

08049932 <strings__new_builder>:
 8049932:	55                   	push   %ebp
 8049933:	89 e5                	mov    %esp,%ebp
 8049935:	83 ec 38             	sub    $0x38,%esp
 8049938:	8b 45 08             	mov    0x8(%ebp),%eax
 804993b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804993e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049944:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049947:	31 c0                	xor    %eax,%eax
 8049949:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 804994c:	83 ec 0c             	sub    $0xc,%esp
 804994f:	6a 00                	push   $0x0
 8049951:	6a 01                	push   $0x1
 8049953:	ff 75 0c             	pushl  0xc(%ebp)
 8049956:	6a 00                	push   $0x0
 8049958:	50                   	push   %eax
 8049959:	e8 0b c1 00 00       	call   8055a69 <__new_array_with_default>
 804995e:	83 c4 1c             	add    $0x1c,%esp
 8049961:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049964:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8049967:	89 10                	mov    %edx,(%eax)
 8049969:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804996c:	89 50 04             	mov    %edx,0x4(%eax)
 804996f:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8049972:	89 50 08             	mov    %edx,0x8(%eax)
 8049975:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8049978:	89 50 0c             	mov    %edx,0xc(%eax)
 804997b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804997e:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
 8049985:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049988:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
 804998f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049992:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049995:	89 50 18             	mov    %edx,0x18(%eax)
 8049998:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804999b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804999e:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80499a5:	74 05                	je     80499ac <strings__new_builder+0x7a>
 80499a7:	e8 74 ee ff ff       	call   8048820 <__stack_chk_fail@plt>
 80499ac:	c9                   	leave  
 80499ad:	c2 04 00             	ret    $0x4

080499b0 <strings__Builder_write_bytes>:
 80499b0:	55                   	push   %ebp
 80499b1:	89 e5                	mov    %esp,%ebp
 80499b3:	83 ec 08             	sub    $0x8,%esp
 80499b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80499b9:	83 ec 04             	sub    $0x4,%esp
 80499bc:	ff 75 10             	pushl  0x10(%ebp)
 80499bf:	ff 75 0c             	pushl  0xc(%ebp)
 80499c2:	50                   	push   %eax
 80499c3:	e8 53 d0 00 00       	call   8056a1b <array_push_many>
 80499c8:	83 c4 10             	add    $0x10,%esp
 80499cb:	8b 45 08             	mov    0x8(%ebp),%eax
 80499ce:	8b 50 14             	mov    0x14(%eax),%edx
 80499d1:	8b 45 10             	mov    0x10(%ebp),%eax
 80499d4:	01 c2                	add    %eax,%edx
 80499d6:	8b 45 08             	mov    0x8(%ebp),%eax
 80499d9:	89 50 14             	mov    %edx,0x14(%eax)
 80499dc:	90                   	nop
 80499dd:	c9                   	leave  
 80499de:	c3                   	ret    

080499df <strings__Builder_write_b>:
 80499df:	55                   	push   %ebp
 80499e0:	89 e5                	mov    %esp,%ebp
 80499e2:	83 ec 28             	sub    $0x28,%esp
 80499e5:	8b 45 0c             	mov    0xc(%ebp),%eax
 80499e8:	8b 55 08             	mov    0x8(%ebp),%edx
 80499eb:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 80499ee:	88 45 e0             	mov    %al,-0x20(%ebp)
 80499f1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80499f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80499fa:	31 c0                	xor    %eax,%eax
 80499fc:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8049a00:	88 45 f3             	mov    %al,-0xd(%ebp)
 8049a03:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049a06:	83 ec 08             	sub    $0x8,%esp
 8049a09:	8d 55 f3             	lea    -0xd(%ebp),%edx
 8049a0c:	52                   	push   %edx
 8049a0d:	50                   	push   %eax
 8049a0e:	e8 a7 cf 00 00       	call   80569ba <array_push>
 8049a13:	83 c4 10             	add    $0x10,%esp
 8049a16:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049a19:	8b 40 14             	mov    0x14(%eax),%eax
 8049a1c:	8d 50 01             	lea    0x1(%eax),%edx
 8049a1f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049a22:	89 50 14             	mov    %edx,0x14(%eax)
 8049a25:	90                   	nop
 8049a26:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049a29:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049a30:	74 05                	je     8049a37 <strings__Builder_write_b+0x58>
 8049a32:	e8 e9 ed ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049a37:	c9                   	leave  
 8049a38:	c3                   	ret    

08049a39 <strings__Builder_write>:
 8049a39:	55                   	push   %ebp
 8049a3a:	89 e5                	mov    %esp,%ebp
 8049a3c:	83 ec 08             	sub    $0x8,%esp
 8049a3f:	8b 45 10             	mov    0x10(%ebp),%eax
 8049a42:	85 c0                	test   %eax,%eax
 8049a44:	74 2a                	je     8049a70 <strings__Builder_write+0x37>
 8049a46:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8049a49:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049a4c:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a4f:	83 ec 04             	sub    $0x4,%esp
 8049a52:	51                   	push   %ecx
 8049a53:	52                   	push   %edx
 8049a54:	50                   	push   %eax
 8049a55:	e8 c1 cf 00 00       	call   8056a1b <array_push_many>
 8049a5a:	83 c4 10             	add    $0x10,%esp
 8049a5d:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a60:	8b 50 14             	mov    0x14(%eax),%edx
 8049a63:	8b 45 10             	mov    0x10(%ebp),%eax
 8049a66:	01 c2                	add    %eax,%edx
 8049a68:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a6b:	89 50 14             	mov    %edx,0x14(%eax)
 8049a6e:	eb 01                	jmp    8049a71 <strings__Builder_write+0x38>
 8049a70:	90                   	nop
 8049a71:	c9                   	leave  
 8049a72:	c3                   	ret    

08049a73 <strings__Builder_go_back>:
 8049a73:	55                   	push   %ebp
 8049a74:	89 e5                	mov    %esp,%ebp
 8049a76:	83 ec 08             	sub    $0x8,%esp
 8049a79:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a7c:	8b 40 08             	mov    0x8(%eax),%eax
 8049a7f:	2b 45 0c             	sub    0xc(%ebp),%eax
 8049a82:	89 c2                	mov    %eax,%edx
 8049a84:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a87:	83 ec 08             	sub    $0x8,%esp
 8049a8a:	52                   	push   %edx
 8049a8b:	50                   	push   %eax
 8049a8c:	e8 fe c7 00 00       	call   805628f <array_trim>
 8049a91:	83 c4 10             	add    $0x10,%esp
 8049a94:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a97:	8b 40 14             	mov    0x14(%eax),%eax
 8049a9a:	2b 45 0c             	sub    0xc(%ebp),%eax
 8049a9d:	89 c2                	mov    %eax,%edx
 8049a9f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049aa2:	89 50 14             	mov    %edx,0x14(%eax)
 8049aa5:	90                   	nop
 8049aa6:	c9                   	leave  
 8049aa7:	c3                   	ret    

08049aa8 <strings__bytes2string>:
 8049aa8:	55                   	push   %ebp
 8049aa9:	89 e5                	mov    %esp,%ebp
 8049aab:	83 ec 48             	sub    $0x48,%esp
 8049aae:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ab1:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8049ab4:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049aba:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049abd:	31 c0                	xor    %eax,%eax
 8049abf:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8049ac2:	83 ec 08             	sub    $0x8,%esp
 8049ac5:	8d 55 0c             	lea    0xc(%ebp),%edx
 8049ac8:	52                   	push   %edx
 8049ac9:	50                   	push   %eax
 8049aca:	e8 6b cb 00 00       	call   805663a <array_clone>
 8049acf:	83 c4 0c             	add    $0xc,%esp
 8049ad2:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
 8049ad6:	83 ec 08             	sub    $0x8,%esp
 8049ad9:	8d 45 f3             	lea    -0xd(%ebp),%eax
 8049adc:	50                   	push   %eax
 8049add:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8049ae0:	50                   	push   %eax
 8049ae1:	e8 d4 ce 00 00       	call   80569ba <array_push>
 8049ae6:	83 c4 10             	add    $0x10,%esp
 8049ae9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049aec:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8049aef:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8049af2:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 8049af5:	83 ec 04             	sub    $0x4,%esp
 8049af8:	51                   	push   %ecx
 8049af9:	52                   	push   %edx
 8049afa:	50                   	push   %eax
 8049afb:	e8 fa 37 01 00       	call   805d2fa <tos>
 8049b00:	83 c4 0c             	add    $0xc,%esp
 8049b03:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8049b06:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8049b09:	89 10                	mov    %edx,(%eax)
 8049b0b:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8049b0e:	89 50 04             	mov    %edx,0x4(%eax)
 8049b11:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8049b14:	89 50 08             	mov    %edx,0x8(%eax)
 8049b17:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8049b1a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8049b1d:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8049b24:	74 05                	je     8049b2b <strings__bytes2string+0x83>
 8049b26:	e8 f5 ec ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049b2b:	c9                   	leave  
 8049b2c:	c2 04 00             	ret    $0x4

08049b2f <strings__Builder_cut_last>:
 8049b2f:	55                   	push   %ebp
 8049b30:	89 e5                	mov    %esp,%ebp
 8049b32:	83 ec 38             	sub    $0x38,%esp
 8049b35:	8b 45 08             	mov    0x8(%ebp),%eax
 8049b38:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8049b3b:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049b3e:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049b41:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049b47:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049b4a:	31 c0                	xor    %eax,%eax
 8049b4c:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049b4f:	8b 48 08             	mov    0x8(%eax),%ecx
 8049b52:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049b55:	8b 40 14             	mov    0x14(%eax),%eax
 8049b58:	2b 45 10             	sub    0x10(%ebp),%eax
 8049b5b:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8049b5e:	83 ec 04             	sub    $0x4,%esp
 8049b61:	51                   	push   %ecx
 8049b62:	50                   	push   %eax
 8049b63:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049b66:	ff 70 0c             	pushl  0xc(%eax)
 8049b69:	ff 70 08             	pushl  0x8(%eax)
 8049b6c:	ff 70 04             	pushl  0x4(%eax)
 8049b6f:	ff 30                	pushl  (%eax)
 8049b71:	52                   	push   %edx
 8049b72:	e8 f9 c8 00 00       	call   8056470 <array_slice>
 8049b77:	83 c4 1c             	add    $0x1c,%esp
 8049b7a:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8049b7d:	83 ec 0c             	sub    $0xc,%esp
 8049b80:	ff 75 f0             	pushl  -0x10(%ebp)
 8049b83:	ff 75 ec             	pushl  -0x14(%ebp)
 8049b86:	ff 75 e8             	pushl  -0x18(%ebp)
 8049b89:	ff 75 e4             	pushl  -0x1c(%ebp)
 8049b8c:	50                   	push   %eax
 8049b8d:	e8 16 ff ff ff       	call   8049aa8 <strings__bytes2string>
 8049b92:	83 c4 1c             	add    $0x1c,%esp
 8049b95:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049b98:	8b 40 08             	mov    0x8(%eax),%eax
 8049b9b:	2b 45 10             	sub    0x10(%ebp),%eax
 8049b9e:	89 c2                	mov    %eax,%edx
 8049ba0:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049ba3:	83 ec 08             	sub    $0x8,%esp
 8049ba6:	52                   	push   %edx
 8049ba7:	50                   	push   %eax
 8049ba8:	e8 e2 c6 00 00       	call   805628f <array_trim>
 8049bad:	83 c4 10             	add    $0x10,%esp
 8049bb0:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049bb3:	8b 40 14             	mov    0x14(%eax),%eax
 8049bb6:	2b 45 10             	sub    0x10(%ebp),%eax
 8049bb9:	89 c2                	mov    %eax,%edx
 8049bbb:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049bbe:	89 50 14             	mov    %edx,0x14(%eax)
 8049bc1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049bc4:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8049bc7:	89 10                	mov    %edx,(%eax)
 8049bc9:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8049bcc:	89 50 04             	mov    %edx,0x4(%eax)
 8049bcf:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8049bd2:	89 50 08             	mov    %edx,0x8(%eax)
 8049bd5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049bd8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8049bdb:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8049be2:	74 05                	je     8049be9 <strings__Builder_cut_last+0xba>
 8049be4:	e8 37 ec ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049be9:	c9                   	leave  
 8049bea:	c2 04 00             	ret    $0x4

08049bed <strings__Builder_go_back_to>:
 8049bed:	55                   	push   %ebp
 8049bee:	89 e5                	mov    %esp,%ebp
 8049bf0:	83 ec 08             	sub    $0x8,%esp
 8049bf3:	8b 45 08             	mov    0x8(%ebp),%eax
 8049bf6:	83 ec 08             	sub    $0x8,%esp
 8049bf9:	ff 75 0c             	pushl  0xc(%ebp)
 8049bfc:	50                   	push   %eax
 8049bfd:	e8 8d c6 00 00       	call   805628f <array_trim>
 8049c02:	83 c4 10             	add    $0x10,%esp
 8049c05:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c08:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049c0b:	89 50 14             	mov    %edx,0x14(%eax)
 8049c0e:	90                   	nop
 8049c0f:	c9                   	leave  
 8049c10:	c3                   	ret    

08049c11 <strings__Builder_writeln>:
 8049c11:	55                   	push   %ebp
 8049c12:	89 e5                	mov    %esp,%ebp
 8049c14:	83 ec 28             	sub    $0x28,%esp
 8049c17:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c1a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8049c1d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049c23:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049c26:	31 c0                	xor    %eax,%eax
 8049c28:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8049c2b:	8b 55 0c             	mov    0xc(%ebp),%edx
 8049c2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049c31:	83 ec 04             	sub    $0x4,%esp
 8049c34:	51                   	push   %ecx
 8049c35:	52                   	push   %edx
 8049c36:	50                   	push   %eax
 8049c37:	e8 df cd 00 00       	call   8056a1b <array_push_many>
 8049c3c:	83 c4 10             	add    $0x10,%esp
 8049c3f:	c6 45 f3 0a          	movb   $0xa,-0xd(%ebp)
 8049c43:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049c46:	83 ec 08             	sub    $0x8,%esp
 8049c49:	8d 55 f3             	lea    -0xd(%ebp),%edx
 8049c4c:	52                   	push   %edx
 8049c4d:	50                   	push   %eax
 8049c4e:	e8 67 cd 00 00       	call   80569ba <array_push>
 8049c53:	83 c4 10             	add    $0x10,%esp
 8049c56:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049c59:	8b 40 14             	mov    0x14(%eax),%eax
 8049c5c:	8b 55 10             	mov    0x10(%ebp),%edx
 8049c5f:	83 c2 01             	add    $0x1,%edx
 8049c62:	01 c2                	add    %eax,%edx
 8049c64:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049c67:	89 50 14             	mov    %edx,0x14(%eax)
 8049c6a:	90                   	nop
 8049c6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049c6e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049c75:	74 05                	je     8049c7c <strings__Builder_writeln+0x6b>
 8049c77:	e8 a4 eb ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049c7c:	c9                   	leave  
 8049c7d:	c3                   	ret    

08049c7e <strings__Builder_last_n>:
 8049c7e:	55                   	push   %ebp
 8049c7f:	89 e5                	mov    %esp,%ebp
 8049c81:	83 ec 38             	sub    $0x38,%esp
 8049c84:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c87:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8049c8a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049c8d:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049c90:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049c96:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049c99:	31 c0                	xor    %eax,%eax
 8049c9b:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049c9e:	8b 40 14             	mov    0x14(%eax),%eax
 8049ca1:	3b 45 10             	cmp    0x10(%ebp),%eax
 8049ca4:	7d 1f                	jge    8049cc5 <strings__Builder_last_n+0x47>
 8049ca6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049ca9:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 8049caf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049cb2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8049cb9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049cbc:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8049cc3:	eb 49                	jmp    8049d0e <strings__Builder_last_n+0x90>
 8049cc5:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049cc8:	8b 48 08             	mov    0x8(%eax),%ecx
 8049ccb:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049cce:	8b 40 14             	mov    0x14(%eax),%eax
 8049cd1:	2b 45 10             	sub    0x10(%ebp),%eax
 8049cd4:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8049cd7:	83 ec 04             	sub    $0x4,%esp
 8049cda:	51                   	push   %ecx
 8049cdb:	50                   	push   %eax
 8049cdc:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049cdf:	ff 70 0c             	pushl  0xc(%eax)
 8049ce2:	ff 70 08             	pushl  0x8(%eax)
 8049ce5:	ff 70 04             	pushl  0x4(%eax)
 8049ce8:	ff 30                	pushl  (%eax)
 8049cea:	52                   	push   %edx
 8049ceb:	e8 80 c7 00 00       	call   8056470 <array_slice>
 8049cf0:	83 c4 1c             	add    $0x1c,%esp
 8049cf3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049cf6:	83 ec 0c             	sub    $0xc,%esp
 8049cf9:	ff 75 f0             	pushl  -0x10(%ebp)
 8049cfc:	ff 75 ec             	pushl  -0x14(%ebp)
 8049cff:	ff 75 e8             	pushl  -0x18(%ebp)
 8049d02:	ff 75 e4             	pushl  -0x1c(%ebp)
 8049d05:	50                   	push   %eax
 8049d06:	e8 9d fd ff ff       	call   8049aa8 <strings__bytes2string>
 8049d0b:	83 c4 1c             	add    $0x1c,%esp
 8049d0e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049d11:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049d14:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049d1b:	74 05                	je     8049d22 <strings__Builder_last_n+0xa4>
 8049d1d:	e8 fe ea ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049d22:	c9                   	leave  
 8049d23:	c2 04 00             	ret    $0x4

08049d26 <strings__Builder_after>:
 8049d26:	55                   	push   %ebp
 8049d27:	89 e5                	mov    %esp,%ebp
 8049d29:	83 ec 38             	sub    $0x38,%esp
 8049d2c:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d2f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8049d32:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049d35:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049d38:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049d3e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049d41:	31 c0                	xor    %eax,%eax
 8049d43:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049d46:	8b 40 14             	mov    0x14(%eax),%eax
 8049d49:	3b 45 10             	cmp    0x10(%ebp),%eax
 8049d4c:	7f 1f                	jg     8049d6d <strings__Builder_after+0x47>
 8049d4e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049d51:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 8049d57:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049d5a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8049d61:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049d64:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8049d6b:	eb 42                	jmp    8049daf <strings__Builder_after+0x89>
 8049d6d:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049d70:	8b 40 08             	mov    0x8(%eax),%eax
 8049d73:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8049d76:	83 ec 04             	sub    $0x4,%esp
 8049d79:	50                   	push   %eax
 8049d7a:	ff 75 10             	pushl  0x10(%ebp)
 8049d7d:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049d80:	ff 70 0c             	pushl  0xc(%eax)
 8049d83:	ff 70 08             	pushl  0x8(%eax)
 8049d86:	ff 70 04             	pushl  0x4(%eax)
 8049d89:	ff 30                	pushl  (%eax)
 8049d8b:	52                   	push   %edx
 8049d8c:	e8 df c6 00 00       	call   8056470 <array_slice>
 8049d91:	83 c4 1c             	add    $0x1c,%esp
 8049d94:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049d97:	83 ec 0c             	sub    $0xc,%esp
 8049d9a:	ff 75 f0             	pushl  -0x10(%ebp)
 8049d9d:	ff 75 ec             	pushl  -0x14(%ebp)
 8049da0:	ff 75 e8             	pushl  -0x18(%ebp)
 8049da3:	ff 75 e4             	pushl  -0x1c(%ebp)
 8049da6:	50                   	push   %eax
 8049da7:	e8 fc fc ff ff       	call   8049aa8 <strings__bytes2string>
 8049dac:	83 c4 1c             	add    $0x1c,%esp
 8049daf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8049db2:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8049db5:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8049dbc:	74 05                	je     8049dc3 <strings__Builder_after+0x9d>
 8049dbe:	e8 5d ea ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049dc3:	c9                   	leave  
 8049dc4:	c2 04 00             	ret    $0x4

08049dc7 <strings__Builder_str>:
 8049dc7:	55                   	push   %ebp
 8049dc8:	89 e5                	mov    %esp,%ebp
 8049dca:	53                   	push   %ebx
 8049dcb:	83 ec 54             	sub    $0x54,%esp
 8049dce:	8b 45 08             	mov    0x8(%ebp),%eax
 8049dd1:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8049dd4:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049dd7:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8049dda:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049de0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049de3:	31 c0                	xor    %eax,%eax
 8049de5:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049de8:	8b 40 10             	mov    0x10(%eax),%eax
 8049deb:	8d 50 01             	lea    0x1(%eax),%edx
 8049dee:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049df1:	89 50 10             	mov    %edx,0x10(%eax)
 8049df4:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049df7:	8b 40 10             	mov    0x10(%eax),%eax
 8049dfa:	83 f8 01             	cmp    $0x1,%eax
 8049dfd:	7e 29                	jle    8049e28 <strings__Builder_str+0x61>
 8049dff:	c7 45 d8 38 97 06 08 	movl   $0x8069738,-0x28(%ebp)
 8049e06:	c7 45 dc 5e 00 00 00 	movl   $0x5e,-0x24(%ebp)
 8049e0d:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 8049e14:	83 ec 04             	sub    $0x4,%esp
 8049e17:	ff 75 e0             	pushl  -0x20(%ebp)
 8049e1a:	ff 75 dc             	pushl  -0x24(%ebp)
 8049e1d:	ff 75 d8             	pushl  -0x28(%ebp)
 8049e20:	e8 72 d9 00 00       	call   8057797 <v_panic>
 8049e25:	83 c4 10             	add    $0x10,%esp
 8049e28:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
 8049e2c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049e2f:	83 ec 08             	sub    $0x8,%esp
 8049e32:	8d 55 f3             	lea    -0xd(%ebp),%edx
 8049e35:	52                   	push   %edx
 8049e36:	50                   	push   %eax
 8049e37:	e8 7e cb 00 00       	call   80569ba <array_push>
 8049e3c:	83 c4 10             	add    $0x10,%esp
 8049e3f:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049e42:	8b 48 14             	mov    0x14(%eax),%ecx
 8049e45:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049e48:	8b 50 04             	mov    0x4(%eax),%edx
 8049e4b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8049e4e:	83 ec 04             	sub    $0x4,%esp
 8049e51:	51                   	push   %ecx
 8049e52:	52                   	push   %edx
 8049e53:	50                   	push   %eax
 8049e54:	e8 a1 34 01 00       	call   805d2fa <tos>
 8049e59:	83 c4 0c             	add    $0xc,%esp
 8049e5c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049e5f:	8b 40 18             	mov    0x18(%eax),%eax
 8049e62:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8049e65:	8b 5d c0             	mov    -0x40(%ebp),%ebx
 8049e68:	8d 45 a8             	lea    -0x58(%ebp),%eax
 8049e6b:	83 ec 0c             	sub    $0xc,%esp
 8049e6e:	6a 00                	push   $0x0
 8049e70:	6a 01                	push   $0x1
 8049e72:	ff 75 d4             	pushl  -0x2c(%ebp)
 8049e75:	6a 00                	push   $0x0
 8049e77:	50                   	push   %eax
 8049e78:	e8 ec bb 00 00       	call   8055a69 <__new_array_with_default>
 8049e7d:	83 c4 1c             	add    $0x1c,%esp
 8049e80:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8049e83:	89 03                	mov    %eax,(%ebx)
 8049e85:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8049e88:	89 43 04             	mov    %eax,0x4(%ebx)
 8049e8b:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8049e8e:	89 43 08             	mov    %eax,0x8(%ebx)
 8049e91:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8049e94:	89 43 0c             	mov    %eax,0xc(%ebx)
 8049e97:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049e9a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
 8049ea1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8049ea4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8049ea7:	89 10                	mov    %edx,(%eax)
 8049ea9:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8049eac:	89 50 04             	mov    %edx,0x4(%eax)
 8049eaf:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8049eb2:	89 50 08             	mov    %edx,0x8(%eax)
 8049eb5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8049eb8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8049ebb:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8049ec2:	74 05                	je     8049ec9 <strings__Builder_str+0x102>
 8049ec4:	e8 57 e9 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8049ec9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8049ecc:	c9                   	leave  
 8049ecd:	c2 04 00             	ret    $0x4

08049ed0 <strings__Builder_free>:
 8049ed0:	55                   	push   %ebp
 8049ed1:	89 e5                	mov    %esp,%ebp
 8049ed3:	83 ec 08             	sub    $0x8,%esp
 8049ed6:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ed9:	8b 40 04             	mov    0x4(%eax),%eax
 8049edc:	83 ec 0c             	sub    $0xc,%esp
 8049edf:	50                   	push   %eax
 8049ee0:	e8 ca db 00 00       	call   8057aaf <v_free>
 8049ee5:	83 c4 10             	add    $0x10,%esp
 8049ee8:	8b 45 08             	mov    0x8(%ebp),%eax
 8049eeb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
 8049ef2:	8b 45 08             	mov    0x8(%ebp),%eax
 8049ef5:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
 8049efc:	90                   	nop
 8049efd:	c9                   	leave  
 8049efe:	c3                   	ret    

08049eff <strings__levenshtein_distance>:
 8049eff:	55                   	push   %ebp
 8049f00:	89 e5                	mov    %esp,%ebp
 8049f02:	53                   	push   %ebx
 8049f03:	83 ec 54             	sub    $0x54,%esp
 8049f06:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049f0c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8049f0f:	31 c0                	xor    %eax,%eax
 8049f11:	8b 45 18             	mov    0x18(%ebp),%eax
 8049f14:	8d 58 01             	lea    0x1(%eax),%ebx
 8049f17:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 8049f1e:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8049f21:	83 ec 0c             	sub    $0xc,%esp
 8049f24:	8d 55 e8             	lea    -0x18(%ebp),%edx
 8049f27:	52                   	push   %edx
 8049f28:	6a 04                	push   $0x4
 8049f2a:	6a 01                	push   $0x1
 8049f2c:	6a 01                	push   $0x1
 8049f2e:	50                   	push   %eax
 8049f2f:	e8 a5 bc 00 00       	call   8055bd9 <new_array_from_c_array>
 8049f34:	83 c4 1c             	add    $0x1c,%esp
 8049f37:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8049f3a:	83 ec 08             	sub    $0x8,%esp
 8049f3d:	53                   	push   %ebx
 8049f3e:	ff 75 e4             	pushl  -0x1c(%ebp)
 8049f41:	ff 75 e0             	pushl  -0x20(%ebp)
 8049f44:	ff 75 dc             	pushl  -0x24(%ebp)
 8049f47:	ff 75 d8             	pushl  -0x28(%ebp)
 8049f4a:	50                   	push   %eax
 8049f4b:	e8 dc bd 00 00       	call   8055d2c <array_repeat>
 8049f50:	83 c4 1c             	add    $0x1c,%esp
 8049f53:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 8049f5a:	eb 20                	jmp    8049f7c <strings__levenshtein_distance+0x7d>
 8049f5c:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8049f5f:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8049f62:	83 ec 04             	sub    $0x4,%esp
 8049f65:	8d 45 ec             	lea    -0x14(%ebp),%eax
 8049f68:	50                   	push   %eax
 8049f69:	ff 75 b0             	pushl  -0x50(%ebp)
 8049f6c:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8049f6f:	50                   	push   %eax
 8049f70:	e8 a7 c9 00 00       	call   805691c <array_set>
 8049f75:	83 c4 10             	add    $0x10,%esp
 8049f78:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 8049f7c:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049f7f:	3b 45 b0             	cmp    -0x50(%ebp),%eax
 8049f82:	7f d8                	jg     8049f5c <strings__levenshtein_distance+0x5d>
 8049f84:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 8049f8b:	e9 76 01 00 00       	jmp    804a106 <strings__levenshtein_distance+0x207>
 8049f90:	8b 55 08             	mov    0x8(%ebp),%edx
 8049f93:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8049f96:	01 d0                	add    %edx,%eax
 8049f98:	0f b6 00             	movzbl (%eax),%eax
 8049f9b:	88 45 ae             	mov    %al,-0x52(%ebp)
 8049f9e:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%ebp)
 8049fa5:	83 ec 0c             	sub    $0xc,%esp
 8049fa8:	6a 00                	push   $0x0
 8049faa:	ff 75 d4             	pushl  -0x2c(%ebp)
 8049fad:	ff 75 d0             	pushl  -0x30(%ebp)
 8049fb0:	ff 75 cc             	pushl  -0x34(%ebp)
 8049fb3:	ff 75 c8             	pushl  -0x38(%ebp)
 8049fb6:	e8 ff c2 00 00       	call   80562ba <array_get>
 8049fbb:	83 c4 20             	add    $0x20,%esp
 8049fbe:	8b 00                	mov    (%eax),%eax
 8049fc0:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8049fc3:	83 ec 0c             	sub    $0xc,%esp
 8049fc6:	6a 00                	push   $0x0
 8049fc8:	ff 75 d4             	pushl  -0x2c(%ebp)
 8049fcb:	ff 75 d0             	pushl  -0x30(%ebp)
 8049fce:	ff 75 cc             	pushl  -0x34(%ebp)
 8049fd1:	ff 75 c8             	pushl  -0x38(%ebp)
 8049fd4:	e8 e1 c2 00 00       	call   80562ba <array_get>
 8049fd9:	83 c4 20             	add    $0x20,%esp
 8049fdc:	8b 10                	mov    (%eax),%edx
 8049fde:	83 c2 01             	add    $0x1,%edx
 8049fe1:	89 10                	mov    %edx,(%eax)
 8049fe3:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 8049fea:	e9 07 01 00 00       	jmp    804a0f6 <strings__levenshtein_distance+0x1f7>
 8049fef:	8b 55 14             	mov    0x14(%ebp),%edx
 8049ff2:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8049ff5:	01 d0                	add    %edx,%eax
 8049ff7:	0f b6 00             	movzbl (%eax),%eax
 8049ffa:	88 45 af             	mov    %al,-0x51(%ebp)
 8049ffd:	83 ec 0c             	sub    $0xc,%esp
 804a000:	ff 75 b8             	pushl  -0x48(%ebp)
 804a003:	ff 75 d4             	pushl  -0x2c(%ebp)
 804a006:	ff 75 d0             	pushl  -0x30(%ebp)
 804a009:	ff 75 cc             	pushl  -0x34(%ebp)
 804a00c:	ff 75 c8             	pushl  -0x38(%ebp)
 804a00f:	e8 a6 c2 00 00       	call   80562ba <array_get>
 804a014:	83 c4 20             	add    $0x20,%esp
 804a017:	8b 00                	mov    (%eax),%eax
 804a019:	8d 58 01             	lea    0x1(%eax),%ebx
 804a01c:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804a01f:	83 e8 01             	sub    $0x1,%eax
 804a022:	83 ec 0c             	sub    $0xc,%esp
 804a025:	50                   	push   %eax
 804a026:	ff 75 d4             	pushl  -0x2c(%ebp)
 804a029:	ff 75 d0             	pushl  -0x30(%ebp)
 804a02c:	ff 75 cc             	pushl  -0x34(%ebp)
 804a02f:	ff 75 c8             	pushl  -0x38(%ebp)
 804a032:	e8 83 c2 00 00       	call   80562ba <array_get>
 804a037:	83 c4 20             	add    $0x20,%esp
 804a03a:	8b 00                	mov    (%eax),%eax
 804a03c:	83 c0 01             	add    $0x1,%eax
 804a03f:	39 c3                	cmp    %eax,%ebx
 804a041:	7f 21                	jg     804a064 <strings__levenshtein_distance+0x165>
 804a043:	83 ec 0c             	sub    $0xc,%esp
 804a046:	ff 75 b8             	pushl  -0x48(%ebp)
 804a049:	ff 75 d4             	pushl  -0x2c(%ebp)
 804a04c:	ff 75 d0             	pushl  -0x30(%ebp)
 804a04f:	ff 75 cc             	pushl  -0x34(%ebp)
 804a052:	ff 75 c8             	pushl  -0x38(%ebp)
 804a055:	e8 60 c2 00 00       	call   80562ba <array_get>
 804a05a:	83 c4 20             	add    $0x20,%esp
 804a05d:	8b 00                	mov    (%eax),%eax
 804a05f:	83 c0 01             	add    $0x1,%eax
 804a062:	eb 23                	jmp    804a087 <strings__levenshtein_distance+0x188>
 804a064:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804a067:	83 e8 01             	sub    $0x1,%eax
 804a06a:	83 ec 0c             	sub    $0xc,%esp
 804a06d:	50                   	push   %eax
 804a06e:	ff 75 d4             	pushl  -0x2c(%ebp)
 804a071:	ff 75 d0             	pushl  -0x30(%ebp)
 804a074:	ff 75 cc             	pushl  -0x34(%ebp)
 804a077:	ff 75 c8             	pushl  -0x38(%ebp)
 804a07a:	e8 3b c2 00 00       	call   80562ba <array_get>
 804a07f:	83 c4 20             	add    $0x20,%esp
 804a082:	8b 00                	mov    (%eax),%eax
 804a084:	83 c0 01             	add    $0x1,%eax
 804a087:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804a08a:	0f b6 45 af          	movzbl -0x51(%ebp),%eax
 804a08e:	3a 45 ae             	cmp    -0x52(%ebp),%al
 804a091:	74 13                	je     804a0a6 <strings__levenshtein_distance+0x1a7>
 804a093:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804a096:	8d 50 01             	lea    0x1(%eax),%edx
 804a099:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804a09c:	39 c2                	cmp    %eax,%edx
 804a09e:	0f 4e c2             	cmovle %edx,%eax
 804a0a1:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804a0a4:	eb 0d                	jmp    804a0b3 <strings__levenshtein_distance+0x1b4>
 804a0a6:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804a0a9:	39 45 c4             	cmp    %eax,-0x3c(%ebp)
 804a0ac:	0f 4e 45 c4          	cmovle -0x3c(%ebp),%eax
 804a0b0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804a0b3:	83 ec 0c             	sub    $0xc,%esp
 804a0b6:	ff 75 b8             	pushl  -0x48(%ebp)
 804a0b9:	ff 75 d4             	pushl  -0x2c(%ebp)
 804a0bc:	ff 75 d0             	pushl  -0x30(%ebp)
 804a0bf:	ff 75 cc             	pushl  -0x34(%ebp)
 804a0c2:	ff 75 c8             	pushl  -0x38(%ebp)
 804a0c5:	e8 f0 c1 00 00       	call   80562ba <array_get>
 804a0ca:	83 c4 20             	add    $0x20,%esp
 804a0cd:	8b 00                	mov    (%eax),%eax
 804a0cf:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804a0d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804a0d5:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a0d8:	83 ec 04             	sub    $0x4,%esp
 804a0db:	8d 45 f0             	lea    -0x10(%ebp),%eax
 804a0de:	50                   	push   %eax
 804a0df:	ff 75 b8             	pushl  -0x48(%ebp)
 804a0e2:	8d 45 c8             	lea    -0x38(%ebp),%eax
 804a0e5:	50                   	push   %eax
 804a0e6:	e8 31 c8 00 00       	call   805691c <array_set>
 804a0eb:	83 c4 10             	add    $0x10,%esp
 804a0ee:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 804a0f2:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 804a0f6:	8b 45 18             	mov    0x18(%ebp),%eax
 804a0f9:	3b 45 c0             	cmp    -0x40(%ebp),%eax
 804a0fc:	0f 8f ed fe ff ff    	jg     8049fef <strings__levenshtein_distance+0xf0>
 804a102:	83 45 b4 01          	addl   $0x1,-0x4c(%ebp)
 804a106:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a109:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 804a10c:	0f 8f 7e fe ff ff    	jg     8049f90 <strings__levenshtein_distance+0x91>
 804a112:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a115:	83 e8 01             	sub    $0x1,%eax
 804a118:	83 ec 0c             	sub    $0xc,%esp
 804a11b:	50                   	push   %eax
 804a11c:	ff 75 d4             	pushl  -0x2c(%ebp)
 804a11f:	ff 75 d0             	pushl  -0x30(%ebp)
 804a122:	ff 75 cc             	pushl  -0x34(%ebp)
 804a125:	ff 75 c8             	pushl  -0x38(%ebp)
 804a128:	e8 8d c1 00 00       	call   80562ba <array_get>
 804a12d:	83 c4 20             	add    $0x20,%esp
 804a130:	8b 00                	mov    (%eax),%eax
 804a132:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804a135:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804a13c:	74 05                	je     804a143 <strings__levenshtein_distance+0x244>
 804a13e:	e8 dd e6 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804a143:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804a146:	c9                   	leave  
 804a147:	c3                   	ret    

0804a148 <strings__levenshtein_distance_percentage>:
 804a148:	55                   	push   %ebp
 804a149:	89 e5                	mov    %esp,%ebp
 804a14b:	83 ec 28             	sub    $0x28,%esp
 804a14e:	83 ec 08             	sub    $0x8,%esp
 804a151:	ff 75 1c             	pushl  0x1c(%ebp)
 804a154:	ff 75 18             	pushl  0x18(%ebp)
 804a157:	ff 75 14             	pushl  0x14(%ebp)
 804a15a:	ff 75 10             	pushl  0x10(%ebp)
 804a15d:	ff 75 0c             	pushl  0xc(%ebp)
 804a160:	ff 75 08             	pushl  0x8(%ebp)
 804a163:	e8 97 fd ff ff       	call   8049eff <strings__levenshtein_distance>
 804a168:	83 c4 20             	add    $0x20,%esp
 804a16b:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a16e:	8b 55 0c             	mov    0xc(%ebp),%edx
 804a171:	8b 45 18             	mov    0x18(%ebp),%eax
 804a174:	39 c2                	cmp    %eax,%edx
 804a176:	0f 4d c2             	cmovge %edx,%eax
 804a179:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a17c:	db 45 f0             	fildl  -0x10(%ebp)
 804a17f:	db 45 f4             	fildl  -0xc(%ebp)
 804a182:	de f9                	fdivrp %st,%st(1)
 804a184:	d9 e8                	fld1   
 804a186:	de e1                	fsubp  %st,%st(1)
 804a188:	dd 05 b8 bc 06 08    	fldl   0x806bcb8
 804a18e:	de c9                	fmulp  %st,%st(1)
 804a190:	d9 5d e4             	fstps  -0x1c(%ebp)
 804a193:	d9 45 e4             	flds   -0x1c(%ebp)
 804a196:	c9                   	leave  
 804a197:	c3                   	ret    

0804a198 <strings__dice_coefficient>:
 804a198:	55                   	push   %ebp
 804a199:	89 e5                	mov    %esp,%ebp
 804a19b:	57                   	push   %edi
 804a19c:	56                   	push   %esi
 804a19d:	81 ec 40 02 00 00    	sub    $0x240,%esp
 804a1a3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804a1a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a1ac:	31 c0                	xor    %eax,%eax
 804a1ae:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a1b1:	85 c0                	test   %eax,%eax
 804a1b3:	74 07                	je     804a1bc <strings__dice_coefficient+0x24>
 804a1b5:	8b 45 18             	mov    0x18(%ebp),%eax
 804a1b8:	85 c0                	test   %eax,%eax
 804a1ba:	75 07                	jne    804a1c3 <strings__dice_coefficient+0x2b>
 804a1bc:	d9 ee                	fldz   
 804a1be:	e9 61 04 00 00       	jmp    804a624 <strings__dice_coefficient+0x48c>
 804a1c3:	83 ec 08             	sub    $0x8,%esp
 804a1c6:	ff 75 1c             	pushl  0x1c(%ebp)
 804a1c9:	ff 75 18             	pushl  0x18(%ebp)
 804a1cc:	ff 75 14             	pushl  0x14(%ebp)
 804a1cf:	ff 75 10             	pushl  0x10(%ebp)
 804a1d2:	ff 75 0c             	pushl  0xc(%ebp)
 804a1d5:	ff 75 08             	pushl  0x8(%ebp)
 804a1d8:	e8 77 3e 01 00       	call   805e054 <string_eq>
 804a1dd:	83 c4 20             	add    $0x20,%esp
 804a1e0:	85 c0                	test   %eax,%eax
 804a1e2:	74 07                	je     804a1eb <strings__dice_coefficient+0x53>
 804a1e4:	d9 e8                	fld1   
 804a1e6:	e9 39 04 00 00       	jmp    804a624 <strings__dice_coefficient+0x48c>
 804a1eb:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a1ee:	83 f8 01             	cmp    $0x1,%eax
 804a1f1:	7e 08                	jle    804a1fb <strings__dice_coefficient+0x63>
 804a1f3:	8b 45 18             	mov    0x18(%ebp),%eax
 804a1f6:	83 f8 01             	cmp    $0x1,%eax
 804a1f9:	7f 07                	jg     804a202 <strings__dice_coefficient+0x6a>
 804a1fb:	d9 ee                	fldz   
 804a1fd:	e9 22 04 00 00       	jmp    804a624 <strings__dice_coefficient+0x48c>
 804a202:	8b 55 0c             	mov    0xc(%ebp),%edx
 804a205:	8b 45 18             	mov    0x18(%ebp),%eax
 804a208:	39 c2                	cmp    %eax,%edx
 804a20a:	7e 1d                	jle    804a229 <strings__dice_coefficient+0x91>
 804a20c:	8b 45 08             	mov    0x8(%ebp),%eax
 804a20f:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 804a215:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a218:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 804a21e:	8b 45 10             	mov    0x10(%ebp),%eax
 804a221:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 804a227:	eb 1b                	jmp    804a244 <strings__dice_coefficient+0xac>
 804a229:	8b 45 14             	mov    0x14(%ebp),%eax
 804a22c:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 804a232:	8b 45 18             	mov    0x18(%ebp),%eax
 804a235:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 804a23b:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804a23e:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 804a244:	83 ec 08             	sub    $0x8,%esp
 804a247:	ff 75 10             	pushl  0x10(%ebp)
 804a24a:	ff 75 0c             	pushl  0xc(%ebp)
 804a24d:	ff 75 08             	pushl  0x8(%ebp)
 804a250:	ff b5 f0 fd ff ff    	pushl  -0x210(%ebp)
 804a256:	ff b5 ec fd ff ff    	pushl  -0x214(%ebp)
 804a25c:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 804a262:	e8 ed 3d 01 00       	call   805e054 <string_eq>
 804a267:	83 c4 20             	add    $0x20,%esp
 804a26a:	85 c0                	test   %eax,%eax
 804a26c:	74 1d                	je     804a28b <strings__dice_coefficient+0xf3>
 804a26e:	8b 45 14             	mov    0x14(%ebp),%eax
 804a271:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 804a277:	8b 45 18             	mov    0x18(%ebp),%eax
 804a27a:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 804a280:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804a283:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 804a289:	eb 1b                	jmp    804a2a6 <strings__dice_coefficient+0x10e>
 804a28b:	8b 45 08             	mov    0x8(%ebp),%eax
 804a28e:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 804a294:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a297:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 804a29d:	8b 45 10             	mov    0x10(%ebp),%eax
 804a2a0:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 804a2a6:	8d 85 0c fe ff ff    	lea    -0x1f4(%ebp),%eax
 804a2ac:	83 ec 04             	sub    $0x4,%esp
 804a2af:	68 96 a3 05 08       	push   $0x805a396
 804a2b4:	68 db a2 05 08       	push   $0x805a2db
 804a2b9:	68 27 a2 05 08       	push   $0x805a227
 804a2be:	68 78 a1 05 08       	push   $0x805a178
 804a2c3:	6a 04                	push   $0x4
 804a2c5:	6a 0c                	push   $0xc
 804a2c7:	50                   	push   %eax
 804a2c8:	e8 e6 00 01 00       	call   805a3b3 <new_map_2>
 804a2cd:	83 c4 1c             	add    $0x1c,%esp
 804a2d0:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%ebp)
 804a2d7:	00 00 00 
 804a2da:	e9 5a 01 00 00       	jmp    804a439 <strings__dice_coefficient+0x2a1>
 804a2df:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 804a2e5:	8d 50 02             	lea    0x2(%eax),%edx
 804a2e8:	8d 85 00 fe ff ff    	lea    -0x200(%ebp),%eax
 804a2ee:	83 ec 08             	sub    $0x8,%esp
 804a2f1:	52                   	push   %edx
 804a2f2:	ff b5 d4 fd ff ff    	pushl  -0x22c(%ebp)
 804a2f8:	ff b5 f0 fd ff ff    	pushl  -0x210(%ebp)
 804a2fe:	ff b5 ec fd ff ff    	pushl  -0x214(%ebp)
 804a304:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 804a30a:	50                   	push   %eax
 804a30b:	e8 b1 45 01 00       	call   805e8c1 <string_substr>
 804a310:	83 c4 1c             	add    $0x1c,%esp
 804a313:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 804a319:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 804a31f:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 804a325:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 804a32b:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 804a331:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 804a337:	8d 85 b4 fe ff ff    	lea    -0x14c(%ebp),%eax
 804a33d:	8d 95 0c fe ff ff    	lea    -0x1f4(%ebp),%edx
 804a343:	b9 14 00 00 00       	mov    $0x14,%ecx
 804a348:	89 c7                	mov    %eax,%edi
 804a34a:	89 d6                	mov    %edx,%esi
 804a34c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804a34e:	83 ec 08             	sub    $0x8,%esp
 804a351:	8d 85 6c fe ff ff    	lea    -0x194(%ebp),%eax
 804a357:	50                   	push   %eax
 804a358:	8d 85 b4 fe ff ff    	lea    -0x14c(%ebp),%eax
 804a35e:	50                   	push   %eax
 804a35f:	e8 3e 0c 01 00       	call   805afa2 <map_exists_1>
 804a364:	83 c4 10             	add    $0x10,%esp
 804a367:	85 c0                	test   %eax,%eax
 804a369:	74 6c                	je     804a3d7 <strings__dice_coefficient+0x23f>
 804a36b:	c7 85 5c fe ff ff 00 	movl   $0x0,-0x1a4(%ebp)
 804a372:	00 00 00 
 804a375:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 804a37b:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 804a381:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 804a387:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 804a38d:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 804a393:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 804a399:	8d 85 04 ff ff ff    	lea    -0xfc(%ebp),%eax
 804a39f:	8d 95 0c fe ff ff    	lea    -0x1f4(%ebp),%edx
 804a3a5:	b9 14 00 00 00       	mov    $0x14,%ecx
 804a3aa:	89 c7                	mov    %eax,%edi
 804a3ac:	89 d6                	mov    %edx,%esi
 804a3ae:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804a3b0:	83 ec 04             	sub    $0x4,%esp
 804a3b3:	8d 85 5c fe ff ff    	lea    -0x1a4(%ebp),%eax
 804a3b9:	50                   	push   %eax
 804a3ba:	8d 85 78 fe ff ff    	lea    -0x188(%ebp),%eax
 804a3c0:	50                   	push   %eax
 804a3c1:	8d 85 04 ff ff ff    	lea    -0xfc(%ebp),%eax
 804a3c7:	50                   	push   %eax
 804a3c8:	e8 ea 0a 01 00       	call   805aeb7 <map_get_1>
 804a3cd:	83 c4 10             	add    $0x10,%esp
 804a3d0:	8b 00                	mov    (%eax),%eax
 804a3d2:	83 c0 01             	add    $0x1,%eax
 804a3d5:	eb 05                	jmp    804a3dc <strings__dice_coefficient+0x244>
 804a3d7:	b8 01 00 00 00       	mov    $0x1,%eax
 804a3dc:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 804a3e2:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 804a3e8:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 804a3ee:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 804a3f4:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 804a3fa:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 804a400:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 804a406:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 804a40c:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 804a412:	83 ec 04             	sub    $0x4,%esp
 804a415:	8d 85 60 fe ff ff    	lea    -0x1a0(%ebp),%eax
 804a41b:	50                   	push   %eax
 804a41c:	8d 85 84 fe ff ff    	lea    -0x17c(%ebp),%eax
 804a422:	50                   	push   %eax
 804a423:	8d 85 0c fe ff ff    	lea    -0x1f4(%ebp),%eax
 804a429:	50                   	push   %eax
 804a42a:	e8 61 04 01 00       	call   805a890 <map_set_1>
 804a42f:	83 c4 10             	add    $0x10,%esp
 804a432:	83 85 d4 fd ff ff 01 	addl   $0x1,-0x22c(%ebp)
 804a439:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 804a43f:	83 e8 01             	sub    $0x1,%eax
 804a442:	3b 85 d4 fd ff ff    	cmp    -0x22c(%ebp),%eax
 804a448:	0f 8f 91 fe ff ff    	jg     804a2df <strings__dice_coefficient+0x147>
 804a44e:	c7 85 d8 fd ff ff 00 	movl   $0x0,-0x228(%ebp)
 804a455:	00 00 00 
 804a458:	c7 85 dc fd ff ff 00 	movl   $0x0,-0x224(%ebp)
 804a45f:	00 00 00 
 804a462:	e9 64 01 00 00       	jmp    804a5cb <strings__dice_coefficient+0x433>
 804a467:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 804a46d:	8d 50 02             	lea    0x2(%eax),%edx
 804a470:	8d 85 00 fe ff ff    	lea    -0x200(%ebp),%eax
 804a476:	83 ec 08             	sub    $0x8,%esp
 804a479:	52                   	push   %edx
 804a47a:	ff b5 dc fd ff ff    	pushl  -0x224(%ebp)
 804a480:	ff b5 fc fd ff ff    	pushl  -0x204(%ebp)
 804a486:	ff b5 f8 fd ff ff    	pushl  -0x208(%ebp)
 804a48c:	ff b5 f4 fd ff ff    	pushl  -0x20c(%ebp)
 804a492:	50                   	push   %eax
 804a493:	e8 29 44 01 00       	call   805e8c1 <string_substr>
 804a498:	83 c4 1c             	add    $0x1c,%esp
 804a49b:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 804a4a1:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 804a4a7:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 804a4ad:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 804a4b3:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 804a4b9:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 804a4bf:	8d 85 54 ff ff ff    	lea    -0xac(%ebp),%eax
 804a4c5:	8d 95 0c fe ff ff    	lea    -0x1f4(%ebp),%edx
 804a4cb:	b9 14 00 00 00       	mov    $0x14,%ecx
 804a4d0:	89 c7                	mov    %eax,%edi
 804a4d2:	89 d6                	mov    %edx,%esi
 804a4d4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804a4d6:	83 ec 08             	sub    $0x8,%esp
 804a4d9:	8d 85 90 fe ff ff    	lea    -0x170(%ebp),%eax
 804a4df:	50                   	push   %eax
 804a4e0:	8d 85 54 ff ff ff    	lea    -0xac(%ebp),%eax
 804a4e6:	50                   	push   %eax
 804a4e7:	e8 b6 0a 01 00       	call   805afa2 <map_exists_1>
 804a4ec:	83 c4 10             	add    $0x10,%esp
 804a4ef:	85 c0                	test   %eax,%eax
 804a4f1:	74 63                	je     804a556 <strings__dice_coefficient+0x3be>
 804a4f3:	c7 85 64 fe ff ff 00 	movl   $0x0,-0x19c(%ebp)
 804a4fa:	00 00 00 
 804a4fd:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 804a503:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 804a509:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 804a50f:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 804a515:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 804a51b:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 804a521:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 804a524:	8d 95 0c fe ff ff    	lea    -0x1f4(%ebp),%edx
 804a52a:	b9 14 00 00 00       	mov    $0x14,%ecx
 804a52f:	89 c7                	mov    %eax,%edi
 804a531:	89 d6                	mov    %edx,%esi
 804a533:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804a535:	83 ec 04             	sub    $0x4,%esp
 804a538:	8d 85 64 fe ff ff    	lea    -0x19c(%ebp),%eax
 804a53e:	50                   	push   %eax
 804a53f:	8d 85 9c fe ff ff    	lea    -0x164(%ebp),%eax
 804a545:	50                   	push   %eax
 804a546:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 804a549:	50                   	push   %eax
 804a54a:	e8 68 09 01 00       	call   805aeb7 <map_get_1>
 804a54f:	83 c4 10             	add    $0x10,%esp
 804a552:	8b 00                	mov    (%eax),%eax
 804a554:	eb 05                	jmp    804a55b <strings__dice_coefficient+0x3c3>
 804a556:	b8 00 00 00 00       	mov    $0x0,%eax
 804a55b:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 804a561:	83 bd e4 fd ff ff 00 	cmpl   $0x0,-0x21c(%ebp)
 804a568:	7e 5a                	jle    804a5c4 <strings__dice_coefficient+0x42c>
 804a56a:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 804a570:	83 e8 01             	sub    $0x1,%eax
 804a573:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 804a579:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 804a57f:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 804a585:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 804a58b:	89 85 ac fe ff ff    	mov    %eax,-0x154(%ebp)
 804a591:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 804a597:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
 804a59d:	83 ec 04             	sub    $0x4,%esp
 804a5a0:	8d 85 68 fe ff ff    	lea    -0x198(%ebp),%eax
 804a5a6:	50                   	push   %eax
 804a5a7:	8d 85 a8 fe ff ff    	lea    -0x158(%ebp),%eax
 804a5ad:	50                   	push   %eax
 804a5ae:	8d 85 0c fe ff ff    	lea    -0x1f4(%ebp),%eax
 804a5b4:	50                   	push   %eax
 804a5b5:	e8 d6 02 01 00       	call   805a890 <map_set_1>
 804a5ba:	83 c4 10             	add    $0x10,%esp
 804a5bd:	83 85 d8 fd ff ff 01 	addl   $0x1,-0x228(%ebp)
 804a5c4:	83 85 dc fd ff ff 01 	addl   $0x1,-0x224(%ebp)
 804a5cb:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 804a5d1:	83 e8 01             	sub    $0x1,%eax
 804a5d4:	3b 85 dc fd ff ff    	cmp    -0x224(%ebp),%eax
 804a5da:	0f 8f 87 fe ff ff    	jg     804a467 <strings__dice_coefficient+0x2cf>
 804a5e0:	db 85 d8 fd ff ff    	fildl  -0x228(%ebp)
 804a5e6:	d8 c0                	fadd   %st(0),%st
 804a5e8:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 804a5ee:	89 85 c0 fd ff ff    	mov    %eax,-0x240(%ebp)
 804a5f4:	db 85 c0 fd ff ff    	fildl  -0x240(%ebp)
 804a5fa:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 804a600:	89 85 c0 fd ff ff    	mov    %eax,-0x240(%ebp)
 804a606:	db 85 c0 fd ff ff    	fildl  -0x240(%ebp)
 804a60c:	de c1                	faddp  %st,%st(1)
 804a60e:	d9 05 c0 bc 06 08    	flds   0x806bcc0
 804a614:	de e9                	fsubrp %st,%st(1)
 804a616:	de f9                	fdivrp %st,%st(1)
 804a618:	d9 9d c4 fd ff ff    	fstps  -0x23c(%ebp)
 804a61e:	d9 85 c4 fd ff ff    	flds   -0x23c(%ebp)
 804a624:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a627:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804a62e:	74 07                	je     804a637 <strings__dice_coefficient+0x49f>
 804a630:	dd d8                	fstp   %st(0)
 804a632:	e8 e9 e1 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804a637:	8d 65 f8             	lea    -0x8(%ebp),%esp
 804a63a:	5e                   	pop    %esi
 804a63b:	5f                   	pop    %edi
 804a63c:	5d                   	pop    %ebp
 804a63d:	c3                   	ret    

0804a63e <strings__repeat>:
 804a63e:	55                   	push   %ebp
 804a63f:	89 e5                	mov    %esp,%ebp
 804a641:	83 ec 28             	sub    $0x28,%esp
 804a644:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a647:	8b 55 08             	mov    0x8(%ebp),%edx
 804a64a:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804a64d:	88 45 e0             	mov    %al,-0x20(%ebp)
 804a650:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804a656:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a659:	31 c0                	xor    %eax,%eax
 804a65b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804a65f:	7f 1f                	jg     804a680 <strings__repeat+0x42>
 804a661:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a664:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 804a66a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a66d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804a674:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a677:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 804a67e:	eb 4c                	jmp    804a6cc <strings__repeat+0x8e>
 804a680:	8b 45 10             	mov    0x10(%ebp),%eax
 804a683:	83 c0 01             	add    $0x1,%eax
 804a686:	83 ec 0c             	sub    $0xc,%esp
 804a689:	50                   	push   %eax
 804a68a:	e8 98 d2 00 00       	call   8057927 <v_malloc>
 804a68f:	83 c4 10             	add    $0x10,%esp
 804a692:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a695:	8b 55 10             	mov    0x10(%ebp),%edx
 804a698:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 804a69c:	83 ec 04             	sub    $0x4,%esp
 804a69f:	52                   	push   %edx
 804a6a0:	50                   	push   %eax
 804a6a1:	ff 75 f0             	pushl  -0x10(%ebp)
 804a6a4:	e8 17 e2 ff ff       	call   80488c0 <memset@plt>
 804a6a9:	83 c4 10             	add    $0x10,%esp
 804a6ac:	8b 55 10             	mov    0x10(%ebp),%edx
 804a6af:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a6b2:	01 d0                	add    %edx,%eax
 804a6b4:	c6 00 30             	movb   $0x30,(%eax)
 804a6b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a6ba:	83 ec 04             	sub    $0x4,%esp
 804a6bd:	ff 75 10             	pushl  0x10(%ebp)
 804a6c0:	ff 75 f0             	pushl  -0x10(%ebp)
 804a6c3:	50                   	push   %eax
 804a6c4:	e8 4b 2f 01 00       	call   805d614 <byteptr_vstring_with_len>
 804a6c9:	83 c4 0c             	add    $0xc,%esp
 804a6cc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a6cf:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804a6d2:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804a6d9:	74 05                	je     804a6e0 <strings__repeat+0xa2>
 804a6db:	e8 40 e1 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804a6e0:	c9                   	leave  
 804a6e1:	c2 04 00             	ret    $0x4

0804a6e4 <strings__repeat_string>:
 804a6e4:	55                   	push   %ebp
 804a6e5:	89 e5                	mov    %esp,%ebp
 804a6e7:	53                   	push   %ebx
 804a6e8:	83 ec 34             	sub    $0x34,%esp
 804a6eb:	8b 45 08             	mov    0x8(%ebp),%eax
 804a6ee:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804a6f1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804a6f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a6fa:	31 c0                	xor    %eax,%eax
 804a6fc:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 804a700:	7e 07                	jle    804a709 <strings__repeat_string+0x25>
 804a702:	8b 45 10             	mov    0x10(%ebp),%eax
 804a705:	85 c0                	test   %eax,%eax
 804a707:	75 22                	jne    804a72b <strings__repeat_string+0x47>
 804a709:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a70c:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 804a712:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a715:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804a71c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a71f:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 804a726:	e9 9f 00 00 00       	jmp    804a7ca <strings__repeat_string+0xe6>
 804a72b:	8b 45 10             	mov    0x10(%ebp),%eax
 804a72e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804a731:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804a734:	0f af 45 18          	imul   0x18(%ebp),%eax
 804a738:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a73b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a73e:	83 c0 01             	add    $0x1,%eax
 804a741:	83 ec 0c             	sub    $0xc,%esp
 804a744:	50                   	push   %eax
 804a745:	e8 dd d1 00 00       	call   8057927 <v_malloc>
 804a74a:	83 c4 10             	add    $0x10,%esp
 804a74d:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804a750:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804a757:	eb 49                	jmp    804a7a2 <strings__repeat_string+0xbe>
 804a759:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a75c:	0f af 45 e4          	imul   -0x1c(%ebp),%eax
 804a760:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a763:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 804a76a:	eb 2a                	jmp    804a796 <strings__repeat_string+0xb2>
 804a76c:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a76f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a772:	01 d0                	add    %edx,%eax
 804a774:	89 c2                	mov    %eax,%edx
 804a776:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a779:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 804a77c:	ff 75 e0             	pushl  -0x20(%ebp)
 804a77f:	ff 75 14             	pushl  0x14(%ebp)
 804a782:	ff 75 10             	pushl  0x10(%ebp)
 804a785:	ff 75 0c             	pushl  0xc(%ebp)
 804a788:	e8 ad 61 01 00       	call   806093a <string_at>
 804a78d:	83 c4 10             	add    $0x10,%esp
 804a790:	88 03                	mov    %al,(%ebx)
 804a792:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 804a796:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a799:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 804a79c:	7c ce                	jl     804a76c <strings__repeat_string+0x88>
 804a79e:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 804a7a2:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a7a5:	3b 45 18             	cmp    0x18(%ebp),%eax
 804a7a8:	7c af                	jl     804a759 <strings__repeat_string+0x75>
 804a7aa:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804a7ad:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a7b0:	01 d0                	add    %edx,%eax
 804a7b2:	c6 00 30             	movb   $0x30,(%eax)
 804a7b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a7b8:	83 ec 04             	sub    $0x4,%esp
 804a7bb:	ff 75 e8             	pushl  -0x18(%ebp)
 804a7be:	ff 75 ec             	pushl  -0x14(%ebp)
 804a7c1:	50                   	push   %eax
 804a7c2:	e8 4d 2e 01 00       	call   805d614 <byteptr_vstring_with_len>
 804a7c7:	83 c4 0c             	add    $0xc,%esp
 804a7ca:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a7cd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804a7d0:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804a7d7:	74 05                	je     804a7de <strings__repeat_string+0xfa>
 804a7d9:	e8 42 e0 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804a7de:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804a7e1:	c9                   	leave  
 804a7e2:	c2 04 00             	ret    $0x4

0804a7e5 <hash__wyhash_c>:
 804a7e5:	55                   	push   %ebp
 804a7e6:	89 e5                	mov    %esp,%ebp
 804a7e8:	83 ec 18             	sub    $0x18,%esp
 804a7eb:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a7ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a7f1:	8b 45 10             	mov    0x10(%ebp),%eax
 804a7f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a7f7:	8b 45 14             	mov    0x14(%ebp),%eax
 804a7fa:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a7fd:	8b 45 18             	mov    0x18(%ebp),%eax
 804a800:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804a803:	83 ec 0c             	sub    $0xc,%esp
 804a806:	ff 75 ec             	pushl  -0x14(%ebp)
 804a809:	ff 75 e8             	pushl  -0x18(%ebp)
 804a80c:	ff 75 f4             	pushl  -0xc(%ebp)
 804a80f:	ff 75 f0             	pushl  -0x10(%ebp)
 804a812:	ff 75 08             	pushl  0x8(%ebp)
 804a815:	e8 82 e5 ff ff       	call   8048d9c <wyhash>
 804a81a:	83 c4 20             	add    $0x20,%esp
 804a81d:	c9                   	leave  
 804a81e:	c3                   	ret    

0804a81f <hash__wyhash64_c>:
 804a81f:	55                   	push   %ebp
 804a820:	89 e5                	mov    %esp,%ebp
 804a822:	83 ec 10             	sub    $0x10,%esp
 804a825:	8b 45 08             	mov    0x8(%ebp),%eax
 804a828:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804a82b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a82e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804a831:	8b 45 10             	mov    0x10(%ebp),%eax
 804a834:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a837:	8b 45 14             	mov    0x14(%ebp),%eax
 804a83a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a83d:	ff 75 f4             	pushl  -0xc(%ebp)
 804a840:	ff 75 f0             	pushl  -0x10(%ebp)
 804a843:	ff 75 fc             	pushl  -0x4(%ebp)
 804a846:	ff 75 f8             	pushl  -0x8(%ebp)
 804a849:	e8 3d e8 ff ff       	call   804908b <wyhash64>
 804a84e:	83 c4 10             	add    $0x10,%esp
 804a851:	c9                   	leave  
 804a852:	c3                   	ret    

0804a853 <hash__sum64_string>:
 804a853:	55                   	push   %ebp
 804a854:	89 e5                	mov    %esp,%ebp
 804a856:	83 ec 18             	sub    $0x18,%esp
 804a859:	8b 45 14             	mov    0x14(%ebp),%eax
 804a85c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a85f:	8b 45 18             	mov    0x18(%ebp),%eax
 804a862:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a865:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a868:	99                   	cltd   
 804a869:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804a86c:	83 ec 0c             	sub    $0xc,%esp
 804a86f:	ff 75 f4             	pushl  -0xc(%ebp)
 804a872:	ff 75 f0             	pushl  -0x10(%ebp)
 804a875:	52                   	push   %edx
 804a876:	50                   	push   %eax
 804a877:	51                   	push   %ecx
 804a878:	e8 34 00 00 00       	call   804a8b1 <hash__wyhash64>
 804a87d:	83 c4 20             	add    $0x20,%esp
 804a880:	c9                   	leave  
 804a881:	c3                   	ret    

0804a882 <hash__sum64>:
 804a882:	55                   	push   %ebp
 804a883:	89 e5                	mov    %esp,%ebp
 804a885:	83 ec 18             	sub    $0x18,%esp
 804a888:	8b 45 18             	mov    0x18(%ebp),%eax
 804a88b:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a88e:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804a891:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a894:	8b 45 10             	mov    0x10(%ebp),%eax
 804a897:	99                   	cltd   
 804a898:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804a89b:	83 ec 0c             	sub    $0xc,%esp
 804a89e:	ff 75 f4             	pushl  -0xc(%ebp)
 804a8a1:	ff 75 f0             	pushl  -0x10(%ebp)
 804a8a4:	52                   	push   %edx
 804a8a5:	50                   	push   %eax
 804a8a6:	51                   	push   %ecx
 804a8a7:	e8 05 00 00 00       	call   804a8b1 <hash__wyhash64>
 804a8ac:	83 c4 20             	add    $0x20,%esp
 804a8af:	c9                   	leave  
 804a8b0:	c3                   	ret    

0804a8b1 <hash__wyhash64>:
 804a8b1:	55                   	push   %ebp
 804a8b2:	89 e5                	mov    %esp,%ebp
 804a8b4:	56                   	push   %esi
 804a8b5:	53                   	push   %ebx
 804a8b6:	81 ec 60 02 00 00    	sub    $0x260,%esp
 804a8bc:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a8bf:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804a8c2:	8b 45 10             	mov    0x10(%ebp),%eax
 804a8c5:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 804a8c8:	8b 45 14             	mov    0x14(%ebp),%eax
 804a8cb:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804a8ce:	8b 45 18             	mov    0x18(%ebp),%eax
 804a8d1:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804a8d4:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804a8d7:	0b 45 b0             	or     -0x50(%ebp),%eax
 804a8da:	85 c0                	test   %eax,%eax
 804a8dc:	75 0f                	jne    804a8ed <hash__wyhash64+0x3c>
 804a8de:	b8 00 00 00 00       	mov    $0x0,%eax
 804a8e3:	ba 00 00 00 00       	mov    $0x0,%edx
 804a8e8:	e9 1f 0e 00 00       	jmp    804b70c <hash__wyhash64+0xe5b>
 804a8ed:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8f0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804a8f3:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804a8f6:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804a8f9:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804a8fc:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804a8ff:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804a902:	83 e0 3f             	and    $0x3f,%eax
 804a905:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804a908:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804a90b:	83 e0 00             	and    $0x0,%eax
 804a90e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804a911:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a914:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804a917:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a91a:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804a91d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a921:	0f 87 9b 00 00 00    	ja     804a9c2 <hash__wyhash64+0x111>
 804a927:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a92b:	72 0a                	jb     804a937 <hash__wyhash64+0x86>
 804a92d:	83 7d f0 03          	cmpl   $0x3,-0x10(%ebp)
 804a931:	0f 87 8b 00 00 00    	ja     804a9c2 <hash__wyhash64+0x111>
 804a937:	a1 80 32 07 08       	mov    0x8073280,%eax
 804a93c:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804a942:	89 c1                	mov    %eax,%ecx
 804a944:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804a947:	89 8d 70 ff ff ff    	mov    %ecx,-0x90(%ebp)
 804a94d:	89 d0                	mov    %edx,%eax
 804a94f:	33 45 cc             	xor    -0x34(%ebp),%eax
 804a952:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804a958:	83 ec 04             	sub    $0x4,%esp
 804a95b:	ff 75 d4             	pushl  -0x2c(%ebp)
 804a95e:	ff 75 d0             	pushl  -0x30(%ebp)
 804a961:	ff 75 c4             	pushl  -0x3c(%ebp)
 804a964:	e8 b9 0f 00 00       	call   804b922 <hash__wyr3>
 804a969:	83 c4 10             	add    $0x10,%esp
 804a96c:	89 c1                	mov    %eax,%ecx
 804a96e:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804a971:	89 cb                	mov    %ecx,%ebx
 804a973:	89 d0                	mov    %edx,%eax
 804a975:	33 45 cc             	xor    -0x34(%ebp),%eax
 804a978:	89 c6                	mov    %eax,%esi
 804a97a:	a1 78 31 07 08       	mov    0x8073178,%eax
 804a97f:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804a985:	89 d9                	mov    %ebx,%ecx
 804a987:	31 c1                	xor    %eax,%ecx
 804a989:	89 8d 68 ff ff ff    	mov    %ecx,-0x98(%ebp)
 804a98f:	31 d6                	xor    %edx,%esi
 804a991:	89 b5 6c ff ff ff    	mov    %esi,-0x94(%ebp)
 804a997:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804a99d:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804a9a3:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804a9a9:	ff b5 68 ff ff ff    	pushl  -0x98(%ebp)
 804a9af:	e8 d1 0d 00 00       	call   804b785 <hash__wymum>
 804a9b4:	83 c4 10             	add    $0x10,%esp
 804a9b7:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804a9ba:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804a9bd:	e9 ba 08 00 00       	jmp    804b27c <hash__wyhash64+0x9cb>
 804a9c2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a9c6:	0f 82 fc 00 00 00    	jb     804aac8 <hash__wyhash64+0x217>
 804a9cc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a9d0:	77 0a                	ja     804a9dc <hash__wyhash64+0x12b>
 804a9d2:	83 7d f0 03          	cmpl   $0x3,-0x10(%ebp)
 804a9d6:	0f 86 ec 00 00 00    	jbe    804aac8 <hash__wyhash64+0x217>
 804a9dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a9e0:	0f 87 e2 00 00 00    	ja     804aac8 <hash__wyhash64+0x217>
 804a9e6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a9ea:	72 0a                	jb     804a9f6 <hash__wyhash64+0x145>
 804a9ec:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
 804a9f0:	0f 87 d2 00 00 00    	ja     804aac8 <hash__wyhash64+0x217>
 804a9f6:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a9f9:	8d 50 fc             	lea    -0x4(%eax),%edx
 804a9fc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804a9ff:	01 d0                	add    %edx,%eax
 804aa01:	83 ec 0c             	sub    $0xc,%esp
 804aa04:	50                   	push   %eax
 804aa05:	e8 a9 0f 00 00       	call   804b9b3 <hash__wyr4>
 804aa0a:	83 c4 10             	add    $0x10,%esp
 804aa0d:	89 c6                	mov    %eax,%esi
 804aa0f:	33 75 c8             	xor    -0x38(%ebp),%esi
 804aa12:	89 b5 60 ff ff ff    	mov    %esi,-0xa0(%ebp)
 804aa18:	89 d0                	mov    %edx,%eax
 804aa1a:	33 45 cc             	xor    -0x34(%ebp),%eax
 804aa1d:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 804aa23:	a1 80 32 07 08       	mov    0x8073280,%eax
 804aa28:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804aa2e:	8b 8d 60 ff ff ff    	mov    -0xa0(%ebp),%ecx
 804aa34:	8b 9d 64 ff ff ff    	mov    -0x9c(%ebp),%ebx
 804aa3a:	89 ce                	mov    %ecx,%esi
 804aa3c:	31 c6                	xor    %eax,%esi
 804aa3e:	89 b5 58 ff ff ff    	mov    %esi,-0xa8(%ebp)
 804aa44:	89 d0                	mov    %edx,%eax
 804aa46:	31 d8                	xor    %ebx,%eax
 804aa48:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 804aa4e:	83 ec 0c             	sub    $0xc,%esp
 804aa51:	ff 75 c4             	pushl  -0x3c(%ebp)
 804aa54:	e8 5a 0f 00 00       	call   804b9b3 <hash__wyr4>
 804aa59:	83 c4 10             	add    $0x10,%esp
 804aa5c:	89 c6                	mov    %eax,%esi
 804aa5e:	33 75 c8             	xor    -0x38(%ebp),%esi
 804aa61:	89 b5 50 ff ff ff    	mov    %esi,-0xb0(%ebp)
 804aa67:	89 d0                	mov    %edx,%eax
 804aa69:	33 45 cc             	xor    -0x34(%ebp),%eax
 804aa6c:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 804aa72:	a1 78 31 07 08       	mov    0x8073178,%eax
 804aa77:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804aa7d:	8b 8d 50 ff ff ff    	mov    -0xb0(%ebp),%ecx
 804aa83:	8b 9d 54 ff ff ff    	mov    -0xac(%ebp),%ebx
 804aa89:	89 ce                	mov    %ecx,%esi
 804aa8b:	31 c6                	xor    %eax,%esi
 804aa8d:	89 b5 48 ff ff ff    	mov    %esi,-0xb8(%ebp)
 804aa93:	89 d0                	mov    %edx,%eax
 804aa95:	31 d8                	xor    %ebx,%eax
 804aa97:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 804aa9d:	ff b5 5c ff ff ff    	pushl  -0xa4(%ebp)
 804aaa3:	ff b5 58 ff ff ff    	pushl  -0xa8(%ebp)
 804aaa9:	ff b5 4c ff ff ff    	pushl  -0xb4(%ebp)
 804aaaf:	ff b5 48 ff ff ff    	pushl  -0xb8(%ebp)
 804aab5:	e8 cb 0c 00 00       	call   804b785 <hash__wymum>
 804aaba:	83 c4 10             	add    $0x10,%esp
 804aabd:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804aac0:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804aac3:	e9 b4 07 00 00       	jmp    804b27c <hash__wyhash64+0x9cb>
 804aac8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804aacc:	0f 82 fc 00 00 00    	jb     804abce <hash__wyhash64+0x31d>
 804aad2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804aad6:	77 0a                	ja     804aae2 <hash__wyhash64+0x231>
 804aad8:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
 804aadc:	0f 86 ec 00 00 00    	jbe    804abce <hash__wyhash64+0x31d>
 804aae2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804aae6:	0f 87 e2 00 00 00    	ja     804abce <hash__wyhash64+0x31d>
 804aaec:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804aaf0:	72 0a                	jb     804aafc <hash__wyhash64+0x24b>
 804aaf2:	83 7d f0 10          	cmpl   $0x10,-0x10(%ebp)
 804aaf6:	0f 87 d2 00 00 00    	ja     804abce <hash__wyhash64+0x31d>
 804aafc:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804aaff:	8d 50 f8             	lea    -0x8(%eax),%edx
 804ab02:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804ab05:	01 d0                	add    %edx,%eax
 804ab07:	83 ec 0c             	sub    $0xc,%esp
 804ab0a:	50                   	push   %eax
 804ab0b:	e8 e9 0e 00 00       	call   804b9f9 <hash__wyr8>
 804ab10:	83 c4 10             	add    $0x10,%esp
 804ab13:	89 c6                	mov    %eax,%esi
 804ab15:	33 75 c8             	xor    -0x38(%ebp),%esi
 804ab18:	89 b5 40 ff ff ff    	mov    %esi,-0xc0(%ebp)
 804ab1e:	89 d0                	mov    %edx,%eax
 804ab20:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ab23:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 804ab29:	a1 80 32 07 08       	mov    0x8073280,%eax
 804ab2e:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804ab34:	8b 8d 40 ff ff ff    	mov    -0xc0(%ebp),%ecx
 804ab3a:	8b 9d 44 ff ff ff    	mov    -0xbc(%ebp),%ebx
 804ab40:	89 ce                	mov    %ecx,%esi
 804ab42:	31 c6                	xor    %eax,%esi
 804ab44:	89 b5 38 ff ff ff    	mov    %esi,-0xc8(%ebp)
 804ab4a:	89 d0                	mov    %edx,%eax
 804ab4c:	31 d8                	xor    %ebx,%eax
 804ab4e:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 804ab54:	83 ec 0c             	sub    $0xc,%esp
 804ab57:	ff 75 c4             	pushl  -0x3c(%ebp)
 804ab5a:	e8 9a 0e 00 00       	call   804b9f9 <hash__wyr8>
 804ab5f:	83 c4 10             	add    $0x10,%esp
 804ab62:	89 c6                	mov    %eax,%esi
 804ab64:	33 75 c8             	xor    -0x38(%ebp),%esi
 804ab67:	89 b5 30 ff ff ff    	mov    %esi,-0xd0(%ebp)
 804ab6d:	89 d0                	mov    %edx,%eax
 804ab6f:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ab72:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 804ab78:	a1 78 31 07 08       	mov    0x8073178,%eax
 804ab7d:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804ab83:	8b 8d 30 ff ff ff    	mov    -0xd0(%ebp),%ecx
 804ab89:	8b 9d 34 ff ff ff    	mov    -0xcc(%ebp),%ebx
 804ab8f:	89 ce                	mov    %ecx,%esi
 804ab91:	31 c6                	xor    %eax,%esi
 804ab93:	89 b5 28 ff ff ff    	mov    %esi,-0xd8(%ebp)
 804ab99:	89 d0                	mov    %edx,%eax
 804ab9b:	31 d8                	xor    %ebx,%eax
 804ab9d:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 804aba3:	ff b5 3c ff ff ff    	pushl  -0xc4(%ebp)
 804aba9:	ff b5 38 ff ff ff    	pushl  -0xc8(%ebp)
 804abaf:	ff b5 2c ff ff ff    	pushl  -0xd4(%ebp)
 804abb5:	ff b5 28 ff ff ff    	pushl  -0xd8(%ebp)
 804abbb:	e8 c5 0b 00 00       	call   804b785 <hash__wymum>
 804abc0:	83 c4 10             	add    $0x10,%esp
 804abc3:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804abc6:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804abc9:	e9 ae 06 00 00       	jmp    804b27c <hash__wyhash64+0x9cb>
 804abce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804abd2:	0f 82 8a 01 00 00    	jb     804ad62 <hash__wyhash64+0x4b1>
 804abd8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804abdc:	77 0a                	ja     804abe8 <hash__wyhash64+0x337>
 804abde:	83 7d f0 10          	cmpl   $0x10,-0x10(%ebp)
 804abe2:	0f 86 7a 01 00 00    	jbe    804ad62 <hash__wyhash64+0x4b1>
 804abe8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804abec:	0f 87 70 01 00 00    	ja     804ad62 <hash__wyhash64+0x4b1>
 804abf2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804abf6:	72 0a                	jb     804ac02 <hash__wyhash64+0x351>
 804abf8:	83 7d f0 18          	cmpl   $0x18,-0x10(%ebp)
 804abfc:	0f 87 60 01 00 00    	ja     804ad62 <hash__wyhash64+0x4b1>
 804ac02:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804ac05:	83 c0 08             	add    $0x8,%eax
 804ac08:	83 ec 0c             	sub    $0xc,%esp
 804ac0b:	50                   	push   %eax
 804ac0c:	e8 e8 0d 00 00       	call   804b9f9 <hash__wyr8>
 804ac11:	83 c4 10             	add    $0x10,%esp
 804ac14:	89 c6                	mov    %eax,%esi
 804ac16:	33 75 c8             	xor    -0x38(%ebp),%esi
 804ac19:	89 b5 20 ff ff ff    	mov    %esi,-0xe0(%ebp)
 804ac1f:	89 d0                	mov    %edx,%eax
 804ac21:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ac24:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 804ac2a:	a1 80 32 07 08       	mov    0x8073280,%eax
 804ac2f:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804ac35:	8b 8d 20 ff ff ff    	mov    -0xe0(%ebp),%ecx
 804ac3b:	8b 9d 24 ff ff ff    	mov    -0xdc(%ebp),%ebx
 804ac41:	89 ce                	mov    %ecx,%esi
 804ac43:	31 c6                	xor    %eax,%esi
 804ac45:	89 b5 18 ff ff ff    	mov    %esi,-0xe8(%ebp)
 804ac4b:	89 d0                	mov    %edx,%eax
 804ac4d:	31 d8                	xor    %ebx,%eax
 804ac4f:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 804ac55:	83 ec 0c             	sub    $0xc,%esp
 804ac58:	ff 75 c4             	pushl  -0x3c(%ebp)
 804ac5b:	e8 99 0d 00 00       	call   804b9f9 <hash__wyr8>
 804ac60:	83 c4 10             	add    $0x10,%esp
 804ac63:	89 c6                	mov    %eax,%esi
 804ac65:	33 75 c8             	xor    -0x38(%ebp),%esi
 804ac68:	89 b5 10 ff ff ff    	mov    %esi,-0xf0(%ebp)
 804ac6e:	89 d0                	mov    %edx,%eax
 804ac70:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ac73:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 804ac79:	a1 78 31 07 08       	mov    0x8073178,%eax
 804ac7e:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804ac84:	8b 8d 10 ff ff ff    	mov    -0xf0(%ebp),%ecx
 804ac8a:	8b 9d 14 ff ff ff    	mov    -0xec(%ebp),%ebx
 804ac90:	89 ce                	mov    %ecx,%esi
 804ac92:	31 c6                	xor    %eax,%esi
 804ac94:	89 b5 08 ff ff ff    	mov    %esi,-0xf8(%ebp)
 804ac9a:	89 d0                	mov    %edx,%eax
 804ac9c:	31 d8                	xor    %ebx,%eax
 804ac9e:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 804aca4:	ff b5 1c ff ff ff    	pushl  -0xe4(%ebp)
 804acaa:	ff b5 18 ff ff ff    	pushl  -0xe8(%ebp)
 804acb0:	ff b5 0c ff ff ff    	pushl  -0xf4(%ebp)
 804acb6:	ff b5 08 ff ff ff    	pushl  -0xf8(%ebp)
 804acbc:	e8 c4 0a 00 00       	call   804b785 <hash__wymum>
 804acc1:	83 c4 10             	add    $0x10,%esp
 804acc4:	89 c3                	mov    %eax,%ebx
 804acc6:	89 d6                	mov    %edx,%esi
 804acc8:	a1 88 32 07 08       	mov    0x8073288,%eax
 804accd:	8b 15 8c 32 07 08    	mov    0x807328c,%edx
 804acd3:	89 c1                	mov    %eax,%ecx
 804acd5:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804acd8:	89 8d 00 ff ff ff    	mov    %ecx,-0x100(%ebp)
 804acde:	89 d0                	mov    %edx,%eax
 804ace0:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ace3:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 804ace9:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804acec:	8d 50 f8             	lea    -0x8(%eax),%edx
 804acef:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804acf2:	01 d0                	add    %edx,%eax
 804acf4:	83 ec 0c             	sub    $0xc,%esp
 804acf7:	50                   	push   %eax
 804acf8:	e8 fc 0c 00 00       	call   804b9f9 <hash__wyr8>
 804acfd:	83 c4 10             	add    $0x10,%esp
 804ad00:	89 c1                	mov    %eax,%ecx
 804ad02:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804ad05:	89 4d 98             	mov    %ecx,-0x68(%ebp)
 804ad08:	89 d0                	mov    %edx,%eax
 804ad0a:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ad0d:	89 45 9c             	mov    %eax,-0x64(%ebp)
 804ad10:	a1 70 31 07 08       	mov    0x8073170,%eax
 804ad15:	8b 15 74 31 07 08    	mov    0x8073174,%edx
 804ad1b:	8b 4d 98             	mov    -0x68(%ebp),%ecx
 804ad1e:	31 c1                	xor    %eax,%ecx
 804ad20:	89 8d f8 fe ff ff    	mov    %ecx,-0x108(%ebp)
 804ad26:	89 d0                	mov    %edx,%eax
 804ad28:	33 45 9c             	xor    -0x64(%ebp),%eax
 804ad2b:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 804ad31:	ff b5 04 ff ff ff    	pushl  -0xfc(%ebp)
 804ad37:	ff b5 00 ff ff ff    	pushl  -0x100(%ebp)
 804ad3d:	ff b5 fc fe ff ff    	pushl  -0x104(%ebp)
 804ad43:	ff b5 f8 fe ff ff    	pushl  -0x108(%ebp)
 804ad49:	e8 37 0a 00 00       	call   804b785 <hash__wymum>
 804ad4e:	83 c4 10             	add    $0x10,%esp
 804ad51:	89 d9                	mov    %ebx,%ecx
 804ad53:	31 c1                	xor    %eax,%ecx
 804ad55:	89 4d a0             	mov    %ecx,-0x60(%ebp)
 804ad58:	31 d6                	xor    %edx,%esi
 804ad5a:	89 75 a4             	mov    %esi,-0x5c(%ebp)
 804ad5d:	e9 1a 05 00 00       	jmp    804b27c <hash__wyhash64+0x9cb>
 804ad62:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804ad66:	0f 82 ac 01 00 00    	jb     804af18 <hash__wyhash64+0x667>
 804ad6c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804ad70:	77 0a                	ja     804ad7c <hash__wyhash64+0x4cb>
 804ad72:	83 7d f0 18          	cmpl   $0x18,-0x10(%ebp)
 804ad76:	0f 86 9c 01 00 00    	jbe    804af18 <hash__wyhash64+0x667>
 804ad7c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804ad80:	0f 87 92 01 00 00    	ja     804af18 <hash__wyhash64+0x667>
 804ad86:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804ad8a:	72 0a                	jb     804ad96 <hash__wyhash64+0x4e5>
 804ad8c:	83 7d f0 20          	cmpl   $0x20,-0x10(%ebp)
 804ad90:	0f 87 82 01 00 00    	ja     804af18 <hash__wyhash64+0x667>
 804ad96:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804ad99:	83 c0 08             	add    $0x8,%eax
 804ad9c:	83 ec 0c             	sub    $0xc,%esp
 804ad9f:	50                   	push   %eax
 804ada0:	e8 54 0c 00 00       	call   804b9f9 <hash__wyr8>
 804ada5:	83 c4 10             	add    $0x10,%esp
 804ada8:	89 c6                	mov    %eax,%esi
 804adaa:	33 75 c8             	xor    -0x38(%ebp),%esi
 804adad:	89 b5 f0 fe ff ff    	mov    %esi,-0x110(%ebp)
 804adb3:	89 d0                	mov    %edx,%eax
 804adb5:	33 45 cc             	xor    -0x34(%ebp),%eax
 804adb8:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 804adbe:	a1 80 32 07 08       	mov    0x8073280,%eax
 804adc3:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804adc9:	8b 8d f0 fe ff ff    	mov    -0x110(%ebp),%ecx
 804adcf:	8b 9d f4 fe ff ff    	mov    -0x10c(%ebp),%ebx
 804add5:	89 ce                	mov    %ecx,%esi
 804add7:	31 c6                	xor    %eax,%esi
 804add9:	89 b5 e8 fe ff ff    	mov    %esi,-0x118(%ebp)
 804addf:	89 d0                	mov    %edx,%eax
 804ade1:	31 d8                	xor    %ebx,%eax
 804ade3:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 804ade9:	83 ec 0c             	sub    $0xc,%esp
 804adec:	ff 75 c4             	pushl  -0x3c(%ebp)
 804adef:	e8 05 0c 00 00       	call   804b9f9 <hash__wyr8>
 804adf4:	83 c4 10             	add    $0x10,%esp
 804adf7:	89 c6                	mov    %eax,%esi
 804adf9:	33 75 c8             	xor    -0x38(%ebp),%esi
 804adfc:	89 b5 e0 fe ff ff    	mov    %esi,-0x120(%ebp)
 804ae02:	89 d0                	mov    %edx,%eax
 804ae04:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ae07:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 804ae0d:	a1 78 31 07 08       	mov    0x8073178,%eax
 804ae12:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804ae18:	8b 8d e0 fe ff ff    	mov    -0x120(%ebp),%ecx
 804ae1e:	8b 9d e4 fe ff ff    	mov    -0x11c(%ebp),%ebx
 804ae24:	89 ce                	mov    %ecx,%esi
 804ae26:	31 c6                	xor    %eax,%esi
 804ae28:	89 b5 d8 fe ff ff    	mov    %esi,-0x128(%ebp)
 804ae2e:	89 d0                	mov    %edx,%eax
 804ae30:	31 d8                	xor    %ebx,%eax
 804ae32:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 804ae38:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 804ae3e:	ff b5 e8 fe ff ff    	pushl  -0x118(%ebp)
 804ae44:	ff b5 dc fe ff ff    	pushl  -0x124(%ebp)
 804ae4a:	ff b5 d8 fe ff ff    	pushl  -0x128(%ebp)
 804ae50:	e8 30 09 00 00       	call   804b785 <hash__wymum>
 804ae55:	83 c4 10             	add    $0x10,%esp
 804ae58:	89 c3                	mov    %eax,%ebx
 804ae5a:	89 d6                	mov    %edx,%esi
 804ae5c:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804ae5f:	8d 50 f8             	lea    -0x8(%eax),%edx
 804ae62:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804ae65:	01 d0                	add    %edx,%eax
 804ae67:	83 ec 0c             	sub    $0xc,%esp
 804ae6a:	50                   	push   %eax
 804ae6b:	e8 89 0b 00 00       	call   804b9f9 <hash__wyr8>
 804ae70:	83 c4 10             	add    $0x10,%esp
 804ae73:	89 c1                	mov    %eax,%ecx
 804ae75:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804ae78:	89 4d 90             	mov    %ecx,-0x70(%ebp)
 804ae7b:	89 d0                	mov    %edx,%eax
 804ae7d:	33 45 cc             	xor    -0x34(%ebp),%eax
 804ae80:	89 45 94             	mov    %eax,-0x6c(%ebp)
 804ae83:	a1 88 32 07 08       	mov    0x8073288,%eax
 804ae88:	8b 15 8c 32 07 08    	mov    0x807328c,%edx
 804ae8e:	8b 4d 90             	mov    -0x70(%ebp),%ecx
 804ae91:	31 c1                	xor    %eax,%ecx
 804ae93:	89 8d d0 fe ff ff    	mov    %ecx,-0x130(%ebp)
 804ae99:	89 d0                	mov    %edx,%eax
 804ae9b:	33 45 94             	xor    -0x6c(%ebp),%eax
 804ae9e:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 804aea4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804aea7:	83 c0 10             	add    $0x10,%eax
 804aeaa:	83 ec 0c             	sub    $0xc,%esp
 804aead:	50                   	push   %eax
 804aeae:	e8 46 0b 00 00       	call   804b9f9 <hash__wyr8>
 804aeb3:	83 c4 10             	add    $0x10,%esp
 804aeb6:	89 c1                	mov    %eax,%ecx
 804aeb8:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804aebb:	89 4d 88             	mov    %ecx,-0x78(%ebp)
 804aebe:	89 d0                	mov    %edx,%eax
 804aec0:	33 45 cc             	xor    -0x34(%ebp),%eax
 804aec3:	89 45 8c             	mov    %eax,-0x74(%ebp)
 804aec6:	a1 70 31 07 08       	mov    0x8073170,%eax
 804aecb:	8b 15 74 31 07 08    	mov    0x8073174,%edx
 804aed1:	8b 4d 88             	mov    -0x78(%ebp),%ecx
 804aed4:	31 c1                	xor    %eax,%ecx
 804aed6:	89 8d c8 fe ff ff    	mov    %ecx,-0x138(%ebp)
 804aedc:	89 d0                	mov    %edx,%eax
 804aede:	33 45 8c             	xor    -0x74(%ebp),%eax
 804aee1:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 804aee7:	ff b5 d4 fe ff ff    	pushl  -0x12c(%ebp)
 804aeed:	ff b5 d0 fe ff ff    	pushl  -0x130(%ebp)
 804aef3:	ff b5 cc fe ff ff    	pushl  -0x134(%ebp)
 804aef9:	ff b5 c8 fe ff ff    	pushl  -0x138(%ebp)
 804aeff:	e8 81 08 00 00       	call   804b785 <hash__wymum>
 804af04:	83 c4 10             	add    $0x10,%esp
 804af07:	89 d9                	mov    %ebx,%ecx
 804af09:	31 c1                	xor    %eax,%ecx
 804af0b:	89 4d a0             	mov    %ecx,-0x60(%ebp)
 804af0e:	31 d6                	xor    %edx,%esi
 804af10:	89 75 a4             	mov    %esi,-0x5c(%ebp)
 804af13:	e9 64 03 00 00       	jmp    804b27c <hash__wyhash64+0x9cb>
 804af18:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804af1b:	83 c0 08             	add    $0x8,%eax
 804af1e:	83 ec 0c             	sub    $0xc,%esp
 804af21:	50                   	push   %eax
 804af22:	e8 d2 0a 00 00       	call   804b9f9 <hash__wyr8>
 804af27:	83 c4 10             	add    $0x10,%esp
 804af2a:	89 c6                	mov    %eax,%esi
 804af2c:	33 75 c8             	xor    -0x38(%ebp),%esi
 804af2f:	89 b5 c0 fe ff ff    	mov    %esi,-0x140(%ebp)
 804af35:	89 d0                	mov    %edx,%eax
 804af37:	33 45 cc             	xor    -0x34(%ebp),%eax
 804af3a:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 804af40:	a1 80 32 07 08       	mov    0x8073280,%eax
 804af45:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804af4b:	8b 8d c0 fe ff ff    	mov    -0x140(%ebp),%ecx
 804af51:	8b 9d c4 fe ff ff    	mov    -0x13c(%ebp),%ebx
 804af57:	89 ce                	mov    %ecx,%esi
 804af59:	31 c6                	xor    %eax,%esi
 804af5b:	89 b5 b8 fe ff ff    	mov    %esi,-0x148(%ebp)
 804af61:	89 d0                	mov    %edx,%eax
 804af63:	31 d8                	xor    %ebx,%eax
 804af65:	89 85 bc fe ff ff    	mov    %eax,-0x144(%ebp)
 804af6b:	83 ec 0c             	sub    $0xc,%esp
 804af6e:	ff 75 c4             	pushl  -0x3c(%ebp)
 804af71:	e8 83 0a 00 00       	call   804b9f9 <hash__wyr8>
 804af76:	83 c4 10             	add    $0x10,%esp
 804af79:	89 c6                	mov    %eax,%esi
 804af7b:	33 75 c8             	xor    -0x38(%ebp),%esi
 804af7e:	89 b5 b0 fe ff ff    	mov    %esi,-0x150(%ebp)
 804af84:	89 d0                	mov    %edx,%eax
 804af86:	33 45 cc             	xor    -0x34(%ebp),%eax
 804af89:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 804af8f:	a1 78 31 07 08       	mov    0x8073178,%eax
 804af94:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804af9a:	8b 8d b0 fe ff ff    	mov    -0x150(%ebp),%ecx
 804afa0:	8b 9d b4 fe ff ff    	mov    -0x14c(%ebp),%ebx
 804afa6:	89 ce                	mov    %ecx,%esi
 804afa8:	31 c6                	xor    %eax,%esi
 804afaa:	89 b5 a8 fe ff ff    	mov    %esi,-0x158(%ebp)
 804afb0:	89 d0                	mov    %edx,%eax
 804afb2:	31 d8                	xor    %ebx,%eax
 804afb4:	89 85 ac fe ff ff    	mov    %eax,-0x154(%ebp)
 804afba:	ff b5 bc fe ff ff    	pushl  -0x144(%ebp)
 804afc0:	ff b5 b8 fe ff ff    	pushl  -0x148(%ebp)
 804afc6:	ff b5 ac fe ff ff    	pushl  -0x154(%ebp)
 804afcc:	ff b5 a8 fe ff ff    	pushl  -0x158(%ebp)
 804afd2:	e8 ae 07 00 00       	call   804b785 <hash__wymum>
 804afd7:	83 c4 10             	add    $0x10,%esp
 804afda:	89 c3                	mov    %eax,%ebx
 804afdc:	89 d6                	mov    %edx,%esi
 804afde:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804afe1:	83 c0 18             	add    $0x18,%eax
 804afe4:	83 ec 0c             	sub    $0xc,%esp
 804afe7:	50                   	push   %eax
 804afe8:	e8 0c 0a 00 00       	call   804b9f9 <hash__wyr8>
 804afed:	83 c4 10             	add    $0x10,%esp
 804aff0:	89 c1                	mov    %eax,%ecx
 804aff2:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804aff5:	89 4d 80             	mov    %ecx,-0x80(%ebp)
 804aff8:	89 d0                	mov    %edx,%eax
 804affa:	33 45 cc             	xor    -0x34(%ebp),%eax
 804affd:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804b000:	a1 88 32 07 08       	mov    0x8073288,%eax
 804b005:	8b 15 8c 32 07 08    	mov    0x807328c,%edx
 804b00b:	8b 4d 80             	mov    -0x80(%ebp),%ecx
 804b00e:	31 c1                	xor    %eax,%ecx
 804b010:	89 8d a0 fe ff ff    	mov    %ecx,-0x160(%ebp)
 804b016:	89 d0                	mov    %edx,%eax
 804b018:	33 45 84             	xor    -0x7c(%ebp),%eax
 804b01b:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 804b021:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b024:	83 c0 10             	add    $0x10,%eax
 804b027:	83 ec 0c             	sub    $0xc,%esp
 804b02a:	50                   	push   %eax
 804b02b:	e8 c9 09 00 00       	call   804b9f9 <hash__wyr8>
 804b030:	83 c4 10             	add    $0x10,%esp
 804b033:	89 c1                	mov    %eax,%ecx
 804b035:	33 4d c8             	xor    -0x38(%ebp),%ecx
 804b038:	89 8d 78 ff ff ff    	mov    %ecx,-0x88(%ebp)
 804b03e:	89 d0                	mov    %edx,%eax
 804b040:	33 45 cc             	xor    -0x34(%ebp),%eax
 804b043:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804b049:	a1 70 31 07 08       	mov    0x8073170,%eax
 804b04e:	8b 15 74 31 07 08    	mov    0x8073174,%edx
 804b054:	8b 8d 78 ff ff ff    	mov    -0x88(%ebp),%ecx
 804b05a:	31 c1                	xor    %eax,%ecx
 804b05c:	89 8d 98 fe ff ff    	mov    %ecx,-0x168(%ebp)
 804b062:	89 d0                	mov    %edx,%eax
 804b064:	33 85 7c ff ff ff    	xor    -0x84(%ebp),%eax
 804b06a:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 804b070:	ff b5 a4 fe ff ff    	pushl  -0x15c(%ebp)
 804b076:	ff b5 a0 fe ff ff    	pushl  -0x160(%ebp)
 804b07c:	ff b5 9c fe ff ff    	pushl  -0x164(%ebp)
 804b082:	ff b5 98 fe ff ff    	pushl  -0x168(%ebp)
 804b088:	e8 f8 06 00 00       	call   804b785 <hash__wymum>
 804b08d:	83 c4 10             	add    $0x10,%esp
 804b090:	89 d9                	mov    %ebx,%ecx
 804b092:	31 c1                	xor    %eax,%ecx
 804b094:	89 8d 90 fe ff ff    	mov    %ecx,-0x170(%ebp)
 804b09a:	31 d6                	xor    %edx,%esi
 804b09c:	89 b5 94 fe ff ff    	mov    %esi,-0x16c(%ebp)
 804b0a2:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804b0a5:	8d 50 e8             	lea    -0x18(%eax),%edx
 804b0a8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b0ab:	01 d0                	add    %edx,%eax
 804b0ad:	83 ec 0c             	sub    $0xc,%esp
 804b0b0:	50                   	push   %eax
 804b0b1:	e8 43 09 00 00       	call   804b9f9 <hash__wyr8>
 804b0b6:	83 c4 10             	add    $0x10,%esp
 804b0b9:	89 c6                	mov    %eax,%esi
 804b0bb:	33 75 c8             	xor    -0x38(%ebp),%esi
 804b0be:	89 b5 88 fe ff ff    	mov    %esi,-0x178(%ebp)
 804b0c4:	89 d0                	mov    %edx,%eax
 804b0c6:	33 45 cc             	xor    -0x34(%ebp),%eax
 804b0c9:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 804b0cf:	a1 70 31 07 08       	mov    0x8073170,%eax
 804b0d4:	8b 15 74 31 07 08    	mov    0x8073174,%edx
 804b0da:	8b 8d 88 fe ff ff    	mov    -0x178(%ebp),%ecx
 804b0e0:	8b 9d 8c fe ff ff    	mov    -0x174(%ebp),%ebx
 804b0e6:	89 ce                	mov    %ecx,%esi
 804b0e8:	31 c6                	xor    %eax,%esi
 804b0ea:	89 b5 80 fe ff ff    	mov    %esi,-0x180(%ebp)
 804b0f0:	89 d0                	mov    %edx,%eax
 804b0f2:	31 d8                	xor    %ebx,%eax
 804b0f4:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 804b0fa:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804b0fd:	8d 50 e0             	lea    -0x20(%eax),%edx
 804b100:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b103:	01 d0                	add    %edx,%eax
 804b105:	83 ec 0c             	sub    $0xc,%esp
 804b108:	50                   	push   %eax
 804b109:	e8 eb 08 00 00       	call   804b9f9 <hash__wyr8>
 804b10e:	83 c4 10             	add    $0x10,%esp
 804b111:	89 c6                	mov    %eax,%esi
 804b113:	33 75 c8             	xor    -0x38(%ebp),%esi
 804b116:	89 b5 78 fe ff ff    	mov    %esi,-0x188(%ebp)
 804b11c:	89 d0                	mov    %edx,%eax
 804b11e:	33 45 cc             	xor    -0x34(%ebp),%eax
 804b121:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 804b127:	a1 80 32 07 08       	mov    0x8073280,%eax
 804b12c:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804b132:	8b 8d 78 fe ff ff    	mov    -0x188(%ebp),%ecx
 804b138:	8b 9d 7c fe ff ff    	mov    -0x184(%ebp),%ebx
 804b13e:	89 ce                	mov    %ecx,%esi
 804b140:	31 c6                	xor    %eax,%esi
 804b142:	89 b5 70 fe ff ff    	mov    %esi,-0x190(%ebp)
 804b148:	89 d0                	mov    %edx,%eax
 804b14a:	31 d8                	xor    %ebx,%eax
 804b14c:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 804b152:	ff b5 84 fe ff ff    	pushl  -0x17c(%ebp)
 804b158:	ff b5 80 fe ff ff    	pushl  -0x180(%ebp)
 804b15e:	ff b5 74 fe ff ff    	pushl  -0x18c(%ebp)
 804b164:	ff b5 70 fe ff ff    	pushl  -0x190(%ebp)
 804b16a:	e8 16 06 00 00       	call   804b785 <hash__wymum>
 804b16f:	83 c4 10             	add    $0x10,%esp
 804b172:	8b 8d 90 fe ff ff    	mov    -0x170(%ebp),%ecx
 804b178:	8b 9d 94 fe ff ff    	mov    -0x16c(%ebp),%ebx
 804b17e:	89 ce                	mov    %ecx,%esi
 804b180:	31 c6                	xor    %eax,%esi
 804b182:	89 b5 68 fe ff ff    	mov    %esi,-0x198(%ebp)
 804b188:	89 d0                	mov    %edx,%eax
 804b18a:	31 d8                	xor    %ebx,%eax
 804b18c:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 804b192:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804b195:	8d 50 f8             	lea    -0x8(%eax),%edx
 804b198:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b19b:	01 d0                	add    %edx,%eax
 804b19d:	83 ec 0c             	sub    $0xc,%esp
 804b1a0:	50                   	push   %eax
 804b1a1:	e8 53 08 00 00       	call   804b9f9 <hash__wyr8>
 804b1a6:	83 c4 10             	add    $0x10,%esp
 804b1a9:	89 c6                	mov    %eax,%esi
 804b1ab:	33 75 c8             	xor    -0x38(%ebp),%esi
 804b1ae:	89 b5 60 fe ff ff    	mov    %esi,-0x1a0(%ebp)
 804b1b4:	89 d0                	mov    %edx,%eax
 804b1b6:	33 45 cc             	xor    -0x34(%ebp),%eax
 804b1b9:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%ebp)
 804b1bf:	a1 78 31 07 08       	mov    0x8073178,%eax
 804b1c4:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804b1ca:	8b 8d 60 fe ff ff    	mov    -0x1a0(%ebp),%ecx
 804b1d0:	8b 9d 64 fe ff ff    	mov    -0x19c(%ebp),%ebx
 804b1d6:	89 ce                	mov    %ecx,%esi
 804b1d8:	31 c6                	xor    %eax,%esi
 804b1da:	89 b5 58 fe ff ff    	mov    %esi,-0x1a8(%ebp)
 804b1e0:	89 d0                	mov    %edx,%eax
 804b1e2:	31 d8                	xor    %ebx,%eax
 804b1e4:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%ebp)
 804b1ea:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804b1ed:	8d 50 f0             	lea    -0x10(%eax),%edx
 804b1f0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b1f3:	01 d0                	add    %edx,%eax
 804b1f5:	83 ec 0c             	sub    $0xc,%esp
 804b1f8:	50                   	push   %eax
 804b1f9:	e8 fb 07 00 00       	call   804b9f9 <hash__wyr8>
 804b1fe:	83 c4 10             	add    $0x10,%esp
 804b201:	89 c3                	mov    %eax,%ebx
 804b203:	33 5d c8             	xor    -0x38(%ebp),%ebx
 804b206:	89 9d 50 fe ff ff    	mov    %ebx,-0x1b0(%ebp)
 804b20c:	89 d0                	mov    %edx,%eax
 804b20e:	33 45 cc             	xor    -0x34(%ebp),%eax
 804b211:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 804b217:	a1 88 32 07 08       	mov    0x8073288,%eax
 804b21c:	8b 15 8c 32 07 08    	mov    0x807328c,%edx
 804b222:	8b 8d 50 fe ff ff    	mov    -0x1b0(%ebp),%ecx
 804b228:	8b 9d 54 fe ff ff    	mov    -0x1ac(%ebp),%ebx
 804b22e:	89 ce                	mov    %ecx,%esi
 804b230:	31 c6                	xor    %eax,%esi
 804b232:	89 b5 48 fe ff ff    	mov    %esi,-0x1b8(%ebp)
 804b238:	89 d0                	mov    %edx,%eax
 804b23a:	31 d8                	xor    %ebx,%eax
 804b23c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 804b242:	ff b5 5c fe ff ff    	pushl  -0x1a4(%ebp)
 804b248:	ff b5 58 fe ff ff    	pushl  -0x1a8(%ebp)
 804b24e:	ff b5 4c fe ff ff    	pushl  -0x1b4(%ebp)
 804b254:	ff b5 48 fe ff ff    	pushl  -0x1b8(%ebp)
 804b25a:	e8 26 05 00 00       	call   804b785 <hash__wymum>
 804b25f:	83 c4 10             	add    $0x10,%esp
 804b262:	8b 8d 68 fe ff ff    	mov    -0x198(%ebp),%ecx
 804b268:	8b 9d 6c fe ff ff    	mov    -0x194(%ebp),%ebx
 804b26e:	89 ce                	mov    %ecx,%esi
 804b270:	31 c6                	xor    %eax,%esi
 804b272:	89 75 a0             	mov    %esi,-0x60(%ebp)
 804b275:	89 d0                	mov    %edx,%eax
 804b277:	31 d8                	xor    %ebx,%eax
 804b279:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804b27c:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804b27f:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804b282:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804b285:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804b288:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804b28b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804b28e:	89 d1                	mov    %edx,%ecx
 804b290:	33 4d b4             	xor    -0x4c(%ebp),%ecx
 804b293:	33 45 b0             	xor    -0x50(%ebp),%eax
 804b296:	09 c8                	or     %ecx,%eax
 804b298:	85 c0                	test   %eax,%eax
 804b29a:	75 40                	jne    804b2dc <hash__wyhash64+0xa2b>
 804b29c:	a1 80 31 07 08       	mov    0x8073180,%eax
 804b2a1:	8b 15 84 31 07 08    	mov    0x8073184,%edx
 804b2a7:	89 c3                	mov    %eax,%ebx
 804b2a9:	33 5d b0             	xor    -0x50(%ebp),%ebx
 804b2ac:	89 9d 40 fe ff ff    	mov    %ebx,-0x1c0(%ebp)
 804b2b2:	89 d0                	mov    %edx,%eax
 804b2b4:	33 45 b4             	xor    -0x4c(%ebp),%eax
 804b2b7:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%ebp)
 804b2bd:	ff b5 44 fe ff ff    	pushl  -0x1bc(%ebp)
 804b2c3:	ff b5 40 fe ff ff    	pushl  -0x1c0(%ebp)
 804b2c9:	ff 75 cc             	pushl  -0x34(%ebp)
 804b2cc:	ff 75 c8             	pushl  -0x38(%ebp)
 804b2cf:	e8 b1 04 00 00       	call   804b785 <hash__wymum>
 804b2d4:	83 c4 10             	add    $0x10,%esp
 804b2d7:	e9 30 04 00 00       	jmp    804b70c <hash__wyhash64+0xe5b>
 804b2dc:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804b2df:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b2e2:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804b2e5:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804b2e8:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804b2eb:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b2ee:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804b2f1:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804b2f4:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804b2f7:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b2fa:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804b2fd:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804b300:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804b303:	01 45 c4             	add    %eax,-0x3c(%ebp)
 804b306:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804b309:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804b30c:	2b 45 d0             	sub    -0x30(%ebp),%eax
 804b30f:	1b 55 d4             	sbb    -0x2c(%ebp),%edx
 804b312:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804b315:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804b318:	e9 38 03 00 00       	jmp    804b655 <hash__wyhash64+0xda4>
 804b31d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b320:	83 c0 08             	add    $0x8,%eax
 804b323:	83 ec 0c             	sub    $0xc,%esp
 804b326:	50                   	push   %eax
 804b327:	e8 cd 06 00 00       	call   804b9f9 <hash__wyr8>
 804b32c:	83 c4 10             	add    $0x10,%esp
 804b32f:	89 c3                	mov    %eax,%ebx
 804b331:	33 5d c8             	xor    -0x38(%ebp),%ebx
 804b334:	89 9d 38 fe ff ff    	mov    %ebx,-0x1c8(%ebp)
 804b33a:	89 d0                	mov    %edx,%eax
 804b33c:	33 45 cc             	xor    -0x34(%ebp),%eax
 804b33f:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 804b345:	a1 80 32 07 08       	mov    0x8073280,%eax
 804b34a:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804b350:	8b 8d 38 fe ff ff    	mov    -0x1c8(%ebp),%ecx
 804b356:	8b 9d 3c fe ff ff    	mov    -0x1c4(%ebp),%ebx
 804b35c:	89 ce                	mov    %ecx,%esi
 804b35e:	31 c6                	xor    %eax,%esi
 804b360:	89 b5 30 fe ff ff    	mov    %esi,-0x1d0(%ebp)
 804b366:	89 d0                	mov    %edx,%eax
 804b368:	31 d8                	xor    %ebx,%eax
 804b36a:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 804b370:	83 ec 0c             	sub    $0xc,%esp
 804b373:	ff 75 c4             	pushl  -0x3c(%ebp)
 804b376:	e8 7e 06 00 00       	call   804b9f9 <hash__wyr8>
 804b37b:	83 c4 10             	add    $0x10,%esp
 804b37e:	89 c3                	mov    %eax,%ebx
 804b380:	33 5d c8             	xor    -0x38(%ebp),%ebx
 804b383:	89 9d 28 fe ff ff    	mov    %ebx,-0x1d8(%ebp)
 804b389:	89 d0                	mov    %edx,%eax
 804b38b:	33 45 cc             	xor    -0x34(%ebp),%eax
 804b38e:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 804b394:	a1 78 31 07 08       	mov    0x8073178,%eax
 804b399:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804b39f:	8b 8d 28 fe ff ff    	mov    -0x1d8(%ebp),%ecx
 804b3a5:	8b 9d 2c fe ff ff    	mov    -0x1d4(%ebp),%ebx
 804b3ab:	89 ce                	mov    %ecx,%esi
 804b3ad:	31 c6                	xor    %eax,%esi
 804b3af:	89 b5 20 fe ff ff    	mov    %esi,-0x1e0(%ebp)
 804b3b5:	89 d0                	mov    %edx,%eax
 804b3b7:	31 d8                	xor    %ebx,%eax
 804b3b9:	89 85 24 fe ff ff    	mov    %eax,-0x1dc(%ebp)
 804b3bf:	ff b5 34 fe ff ff    	pushl  -0x1cc(%ebp)
 804b3c5:	ff b5 30 fe ff ff    	pushl  -0x1d0(%ebp)
 804b3cb:	ff b5 24 fe ff ff    	pushl  -0x1dc(%ebp)
 804b3d1:	ff b5 20 fe ff ff    	pushl  -0x1e0(%ebp)
 804b3d7:	e8 a9 03 00 00       	call   804b785 <hash__wymum>
 804b3dc:	83 c4 10             	add    $0x10,%esp
 804b3df:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804b3e2:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804b3e5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b3e8:	83 c0 18             	add    $0x18,%eax
 804b3eb:	83 ec 0c             	sub    $0xc,%esp
 804b3ee:	50                   	push   %eax
 804b3ef:	e8 05 06 00 00       	call   804b9f9 <hash__wyr8>
 804b3f4:	83 c4 10             	add    $0x10,%esp
 804b3f7:	89 c3                	mov    %eax,%ebx
 804b3f9:	33 5d d8             	xor    -0x28(%ebp),%ebx
 804b3fc:	89 9d 18 fe ff ff    	mov    %ebx,-0x1e8(%ebp)
 804b402:	89 d0                	mov    %edx,%eax
 804b404:	33 45 dc             	xor    -0x24(%ebp),%eax
 804b407:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%ebp)
 804b40d:	a1 88 32 07 08       	mov    0x8073288,%eax
 804b412:	8b 15 8c 32 07 08    	mov    0x807328c,%edx
 804b418:	8b 8d 18 fe ff ff    	mov    -0x1e8(%ebp),%ecx
 804b41e:	8b 9d 1c fe ff ff    	mov    -0x1e4(%ebp),%ebx
 804b424:	89 ce                	mov    %ecx,%esi
 804b426:	31 c6                	xor    %eax,%esi
 804b428:	89 b5 10 fe ff ff    	mov    %esi,-0x1f0(%ebp)
 804b42e:	89 d0                	mov    %edx,%eax
 804b430:	31 d8                	xor    %ebx,%eax
 804b432:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 804b438:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b43b:	83 c0 10             	add    $0x10,%eax
 804b43e:	83 ec 0c             	sub    $0xc,%esp
 804b441:	50                   	push   %eax
 804b442:	e8 b2 05 00 00       	call   804b9f9 <hash__wyr8>
 804b447:	83 c4 10             	add    $0x10,%esp
 804b44a:	89 c3                	mov    %eax,%ebx
 804b44c:	33 5d d8             	xor    -0x28(%ebp),%ebx
 804b44f:	89 9d 08 fe ff ff    	mov    %ebx,-0x1f8(%ebp)
 804b455:	89 d0                	mov    %edx,%eax
 804b457:	33 45 dc             	xor    -0x24(%ebp),%eax
 804b45a:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%ebp)
 804b460:	a1 70 31 07 08       	mov    0x8073170,%eax
 804b465:	8b 15 74 31 07 08    	mov    0x8073174,%edx
 804b46b:	8b 8d 08 fe ff ff    	mov    -0x1f8(%ebp),%ecx
 804b471:	8b 9d 0c fe ff ff    	mov    -0x1f4(%ebp),%ebx
 804b477:	89 ce                	mov    %ecx,%esi
 804b479:	31 c6                	xor    %eax,%esi
 804b47b:	89 b5 00 fe ff ff    	mov    %esi,-0x200(%ebp)
 804b481:	89 d0                	mov    %edx,%eax
 804b483:	31 d8                	xor    %ebx,%eax
 804b485:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 804b48b:	ff b5 14 fe ff ff    	pushl  -0x1ec(%ebp)
 804b491:	ff b5 10 fe ff ff    	pushl  -0x1f0(%ebp)
 804b497:	ff b5 04 fe ff ff    	pushl  -0x1fc(%ebp)
 804b49d:	ff b5 00 fe ff ff    	pushl  -0x200(%ebp)
 804b4a3:	e8 dd 02 00 00       	call   804b785 <hash__wymum>
 804b4a8:	83 c4 10             	add    $0x10,%esp
 804b4ab:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804b4ae:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804b4b1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b4b4:	83 c0 28             	add    $0x28,%eax
 804b4b7:	83 ec 0c             	sub    $0xc,%esp
 804b4ba:	50                   	push   %eax
 804b4bb:	e8 39 05 00 00       	call   804b9f9 <hash__wyr8>
 804b4c0:	83 c4 10             	add    $0x10,%esp
 804b4c3:	89 c3                	mov    %eax,%ebx
 804b4c5:	33 5d e0             	xor    -0x20(%ebp),%ebx
 804b4c8:	89 9d f8 fd ff ff    	mov    %ebx,-0x208(%ebp)
 804b4ce:	89 d0                	mov    %edx,%eax
 804b4d0:	33 45 e4             	xor    -0x1c(%ebp),%eax
 804b4d3:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 804b4d9:	a1 70 31 07 08       	mov    0x8073170,%eax
 804b4de:	8b 15 74 31 07 08    	mov    0x8073174,%edx
 804b4e4:	8b 8d f8 fd ff ff    	mov    -0x208(%ebp),%ecx
 804b4ea:	8b 9d fc fd ff ff    	mov    -0x204(%ebp),%ebx
 804b4f0:	89 ce                	mov    %ecx,%esi
 804b4f2:	31 c6                	xor    %eax,%esi
 804b4f4:	89 b5 f0 fd ff ff    	mov    %esi,-0x210(%ebp)
 804b4fa:	89 d0                	mov    %edx,%eax
 804b4fc:	31 d8                	xor    %ebx,%eax
 804b4fe:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 804b504:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b507:	83 c0 20             	add    $0x20,%eax
 804b50a:	83 ec 0c             	sub    $0xc,%esp
 804b50d:	50                   	push   %eax
 804b50e:	e8 e6 04 00 00       	call   804b9f9 <hash__wyr8>
 804b513:	83 c4 10             	add    $0x10,%esp
 804b516:	89 c3                	mov    %eax,%ebx
 804b518:	33 5d e0             	xor    -0x20(%ebp),%ebx
 804b51b:	89 9d e8 fd ff ff    	mov    %ebx,-0x218(%ebp)
 804b521:	89 d0                	mov    %edx,%eax
 804b523:	33 45 e4             	xor    -0x1c(%ebp),%eax
 804b526:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 804b52c:	a1 80 32 07 08       	mov    0x8073280,%eax
 804b531:	8b 15 84 32 07 08    	mov    0x8073284,%edx
 804b537:	8b 8d e8 fd ff ff    	mov    -0x218(%ebp),%ecx
 804b53d:	8b 9d ec fd ff ff    	mov    -0x214(%ebp),%ebx
 804b543:	89 ce                	mov    %ecx,%esi
 804b545:	31 c6                	xor    %eax,%esi
 804b547:	89 b5 e0 fd ff ff    	mov    %esi,-0x220(%ebp)
 804b54d:	89 d0                	mov    %edx,%eax
 804b54f:	31 d8                	xor    %ebx,%eax
 804b551:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 804b557:	ff b5 f4 fd ff ff    	pushl  -0x20c(%ebp)
 804b55d:	ff b5 f0 fd ff ff    	pushl  -0x210(%ebp)
 804b563:	ff b5 e4 fd ff ff    	pushl  -0x21c(%ebp)
 804b569:	ff b5 e0 fd ff ff    	pushl  -0x220(%ebp)
 804b56f:	e8 11 02 00 00       	call   804b785 <hash__wymum>
 804b574:	83 c4 10             	add    $0x10,%esp
 804b577:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804b57a:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804b57d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b580:	83 c0 38             	add    $0x38,%eax
 804b583:	83 ec 0c             	sub    $0xc,%esp
 804b586:	50                   	push   %eax
 804b587:	e8 6d 04 00 00       	call   804b9f9 <hash__wyr8>
 804b58c:	83 c4 10             	add    $0x10,%esp
 804b58f:	89 c3                	mov    %eax,%ebx
 804b591:	33 5d e8             	xor    -0x18(%ebp),%ebx
 804b594:	89 9d d8 fd ff ff    	mov    %ebx,-0x228(%ebp)
 804b59a:	89 d0                	mov    %edx,%eax
 804b59c:	33 45 ec             	xor    -0x14(%ebp),%eax
 804b59f:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 804b5a5:	a1 78 31 07 08       	mov    0x8073178,%eax
 804b5aa:	8b 15 7c 31 07 08    	mov    0x807317c,%edx
 804b5b0:	8b 8d d8 fd ff ff    	mov    -0x228(%ebp),%ecx
 804b5b6:	8b 9d dc fd ff ff    	mov    -0x224(%ebp),%ebx
 804b5bc:	89 ce                	mov    %ecx,%esi
 804b5be:	31 c6                	xor    %eax,%esi
 804b5c0:	89 b5 d0 fd ff ff    	mov    %esi,-0x230(%ebp)
 804b5c6:	89 d0                	mov    %edx,%eax
 804b5c8:	31 d8                	xor    %ebx,%eax
 804b5ca:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 804b5d0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804b5d3:	83 c0 30             	add    $0x30,%eax
 804b5d6:	83 ec 0c             	sub    $0xc,%esp
 804b5d9:	50                   	push   %eax
 804b5da:	e8 1a 04 00 00       	call   804b9f9 <hash__wyr8>
 804b5df:	83 c4 10             	add    $0x10,%esp
 804b5e2:	89 c3                	mov    %eax,%ebx
 804b5e4:	33 5d e8             	xor    -0x18(%ebp),%ebx
 804b5e7:	89 9d c8 fd ff ff    	mov    %ebx,-0x238(%ebp)
 804b5ed:	89 d0                	mov    %edx,%eax
 804b5ef:	33 45 ec             	xor    -0x14(%ebp),%eax
 804b5f2:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 804b5f8:	a1 88 32 07 08       	mov    0x8073288,%eax
 804b5fd:	8b 15 8c 32 07 08    	mov    0x807328c,%edx
 804b603:	8b 8d c8 fd ff ff    	mov    -0x238(%ebp),%ecx
 804b609:	8b 9d cc fd ff ff    	mov    -0x234(%ebp),%ebx
 804b60f:	89 ce                	mov    %ecx,%esi
 804b611:	31 c6                	xor    %eax,%esi
 804b613:	89 b5 c0 fd ff ff    	mov    %esi,-0x240(%ebp)
 804b619:	89 d0                	mov    %edx,%eax
 804b61b:	31 d8                	xor    %ebx,%eax
 804b61d:	89 85 c4 fd ff ff    	mov    %eax,-0x23c(%ebp)
 804b623:	ff b5 d4 fd ff ff    	pushl  -0x22c(%ebp)
 804b629:	ff b5 d0 fd ff ff    	pushl  -0x230(%ebp)
 804b62f:	ff b5 c4 fd ff ff    	pushl  -0x23c(%ebp)
 804b635:	ff b5 c0 fd ff ff    	pushl  -0x240(%ebp)
 804b63b:	e8 45 01 00 00       	call   804b785 <hash__wymum>
 804b640:	83 c4 10             	add    $0x10,%esp
 804b643:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804b646:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804b649:	83 45 c4 40          	addl   $0x40,-0x3c(%ebp)
 804b64d:	83 45 d0 c0          	addl   $0xffffffc0,-0x30(%ebp)
 804b651:	83 55 d4 ff          	adcl   $0xffffffff,-0x2c(%ebp)
 804b655:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804b659:	0f 87 be fc ff ff    	ja     804b31d <hash__wyhash64+0xa6c>
 804b65f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804b663:	72 0a                	jb     804b66f <hash__wyhash64+0xdbe>
 804b665:	83 7d d0 3f          	cmpl   $0x3f,-0x30(%ebp)
 804b669:	0f 87 ae fc ff ff    	ja     804b31d <hash__wyhash64+0xa6c>
 804b66f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804b672:	33 45 b0             	xor    -0x50(%ebp),%eax
 804b675:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 804b67b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804b67e:	33 45 b4             	xor    -0x4c(%ebp),%eax
 804b681:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 804b687:	a1 80 31 07 08       	mov    0x8073180,%eax
 804b68c:	8b 15 84 31 07 08    	mov    0x8073184,%edx
 804b692:	8b 8d b8 fd ff ff    	mov    -0x248(%ebp),%ecx
 804b698:	8b 9d bc fd ff ff    	mov    -0x244(%ebp),%ebx
 804b69e:	89 ce                	mov    %ecx,%esi
 804b6a0:	31 c6                	xor    %eax,%esi
 804b6a2:	89 b5 b0 fd ff ff    	mov    %esi,-0x250(%ebp)
 804b6a8:	89 d0                	mov    %edx,%eax
 804b6aa:	31 d8                	xor    %ebx,%eax
 804b6ac:	89 85 b4 fd ff ff    	mov    %eax,-0x24c(%ebp)
 804b6b2:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804b6b5:	33 45 d8             	xor    -0x28(%ebp),%eax
 804b6b8:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 804b6be:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804b6c1:	33 45 dc             	xor    -0x24(%ebp),%eax
 804b6c4:	89 85 ac fd ff ff    	mov    %eax,-0x254(%ebp)
 804b6ca:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 804b6d0:	8b 95 ac fd ff ff    	mov    -0x254(%ebp),%edx
 804b6d6:	89 c3                	mov    %eax,%ebx
 804b6d8:	33 5d e0             	xor    -0x20(%ebp),%ebx
 804b6db:	89 9d a0 fd ff ff    	mov    %ebx,-0x260(%ebp)
 804b6e1:	89 d0                	mov    %edx,%eax
 804b6e3:	33 45 e4             	xor    -0x1c(%ebp),%eax
 804b6e6:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%ebp)
 804b6ec:	ff b5 b4 fd ff ff    	pushl  -0x24c(%ebp)
 804b6f2:	ff b5 b0 fd ff ff    	pushl  -0x250(%ebp)
 804b6f8:	ff b5 a4 fd ff ff    	pushl  -0x25c(%ebp)
 804b6fe:	ff b5 a0 fd ff ff    	pushl  -0x260(%ebp)
 804b704:	e8 7c 00 00 00       	call   804b785 <hash__wymum>
 804b709:	83 c4 10             	add    $0x10,%esp
 804b70c:	8d 65 f8             	lea    -0x8(%ebp),%esp
 804b70f:	5b                   	pop    %ebx
 804b710:	5e                   	pop    %esi
 804b711:	5d                   	pop    %ebp
 804b712:	c3                   	ret    

0804b713 <hash__wyrotr>:
 804b713:	55                   	push   %ebp
 804b714:	89 e5                	mov    %esp,%ebp
 804b716:	56                   	push   %esi
 804b717:	53                   	push   %ebx
 804b718:	83 ec 18             	sub    $0x18,%esp
 804b71b:	8b 45 08             	mov    0x8(%ebp),%eax
 804b71e:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804b721:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b724:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b727:	8b 5d f0             	mov    -0x10(%ebp),%ebx
 804b72a:	8b 75 f4             	mov    -0xc(%ebp),%esi
 804b72d:	8b 4d 10             	mov    0x10(%ebp),%ecx
 804b730:	89 d8                	mov    %ebx,%eax
 804b732:	89 f2                	mov    %esi,%edx
 804b734:	0f ad d0             	shrd   %cl,%edx,%eax
 804b737:	d3 ea                	shr    %cl,%edx
 804b739:	f6 c1 20             	test   $0x20,%cl
 804b73c:	74 04                	je     804b742 <hash__wyrotr+0x2f>
 804b73e:	89 d0                	mov    %edx,%eax
 804b740:	31 d2                	xor    %edx,%edx
 804b742:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804b745:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804b748:	8b 45 10             	mov    0x10(%ebp),%eax
 804b74b:	f7 d8                	neg    %eax
 804b74d:	83 e0 3f             	and    $0x3f,%eax
 804b750:	89 c1                	mov    %eax,%ecx
 804b752:	89 d8                	mov    %ebx,%eax
 804b754:	89 f2                	mov    %esi,%edx
 804b756:	0f a5 c2             	shld   %cl,%eax,%edx
 804b759:	d3 e0                	shl    %cl,%eax
 804b75b:	f6 c1 20             	test   $0x20,%cl
 804b75e:	74 04                	je     804b764 <hash__wyrotr+0x51>
 804b760:	89 c2                	mov    %eax,%edx
 804b762:	31 c0                	xor    %eax,%eax
 804b764:	8b 5d e0             	mov    -0x20(%ebp),%ebx
 804b767:	8b 75 e4             	mov    -0x1c(%ebp),%esi
 804b76a:	89 d9                	mov    %ebx,%ecx
 804b76c:	09 c1                	or     %eax,%ecx
 804b76e:	89 4d e8             	mov    %ecx,-0x18(%ebp)
 804b771:	89 d0                	mov    %edx,%eax
 804b773:	09 f0                	or     %esi,%eax
 804b775:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804b778:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804b77b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804b77e:	83 c4 18             	add    $0x18,%esp
 804b781:	5b                   	pop    %ebx
 804b782:	5e                   	pop    %esi
 804b783:	5d                   	pop    %ebp
 804b784:	c3                   	ret    

0804b785 <hash__wymum>:
 804b785:	55                   	push   %ebp
 804b786:	89 e5                	mov    %esp,%ebp
 804b788:	57                   	push   %edi
 804b789:	56                   	push   %esi
 804b78a:	53                   	push   %ebx
 804b78b:	83 ec 74             	sub    $0x74,%esp
 804b78e:	8b 45 08             	mov    0x8(%ebp),%eax
 804b791:	89 45 88             	mov    %eax,-0x78(%ebp)
 804b794:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b797:	89 45 8c             	mov    %eax,-0x74(%ebp)
 804b79a:	8b 45 10             	mov    0x10(%ebp),%eax
 804b79d:	89 45 80             	mov    %eax,-0x80(%ebp)
 804b7a0:	8b 45 14             	mov    0x14(%ebp),%eax
 804b7a3:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804b7a6:	c7 45 9c ff ff ff ff 	movl   $0xffffffff,-0x64(%ebp)
 804b7ad:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804b7b0:	ba 00 00 00 00       	mov    $0x0,%edx
 804b7b5:	89 c1                	mov    %eax,%ecx
 804b7b7:	23 4d 88             	and    -0x78(%ebp),%ecx
 804b7ba:	89 4d a0             	mov    %ecx,-0x60(%ebp)
 804b7bd:	89 d0                	mov    %edx,%eax
 804b7bf:	23 45 8c             	and    -0x74(%ebp),%eax
 804b7c2:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804b7c5:	8b 45 88             	mov    -0x78(%ebp),%eax
 804b7c8:	8b 55 8c             	mov    -0x74(%ebp),%edx
 804b7cb:	89 d0                	mov    %edx,%eax
 804b7cd:	31 d2                	xor    %edx,%edx
 804b7cf:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804b7d2:	89 55 ac             	mov    %edx,-0x54(%ebp)
 804b7d5:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804b7d8:	ba 00 00 00 00       	mov    $0x0,%edx
 804b7dd:	89 c1                	mov    %eax,%ecx
 804b7df:	23 4d 80             	and    -0x80(%ebp),%ecx
 804b7e2:	89 4d b0             	mov    %ecx,-0x50(%ebp)
 804b7e5:	89 d0                	mov    %edx,%eax
 804b7e7:	23 45 84             	and    -0x7c(%ebp),%eax
 804b7ea:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 804b7ed:	8b 45 80             	mov    -0x80(%ebp),%eax
 804b7f0:	8b 55 84             	mov    -0x7c(%ebp),%edx
 804b7f3:	89 d0                	mov    %edx,%eax
 804b7f5:	31 d2                	xor    %edx,%edx
 804b7f7:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804b7fa:	89 55 bc             	mov    %edx,-0x44(%ebp)
 804b7fd:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804b800:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 804b804:	89 c2                	mov    %eax,%edx
 804b806:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804b809:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 804b80d:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b810:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804b813:	f7 65 a0             	mull   -0x60(%ebp)
 804b816:	01 d1                	add    %edx,%ecx
 804b818:	89 ca                	mov    %ecx,%edx
 804b81a:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804b81d:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 804b820:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804b823:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 804b826:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804b829:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 804b82d:	89 c2                	mov    %eax,%edx
 804b82f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804b832:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 804b836:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b839:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804b83c:	f7 65 a8             	mull   -0x58(%ebp)
 804b83f:	01 d1                	add    %edx,%ecx
 804b841:	89 ca                	mov    %ecx,%edx
 804b843:	8b 4d c0             	mov    -0x40(%ebp),%ecx
 804b846:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
 804b849:	89 d9                	mov    %ebx,%ecx
 804b84b:	31 db                	xor    %ebx,%ebx
 804b84d:	01 c8                	add    %ecx,%eax
 804b84f:	11 da                	adc    %ebx,%edx
 804b851:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804b854:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804b857:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804b85a:	ba 00 00 00 00       	mov    $0x0,%edx
 804b85f:	89 c1                	mov    %eax,%ecx
 804b861:	23 4d c8             	and    -0x38(%ebp),%ecx
 804b864:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 804b867:	89 d0                	mov    %edx,%eax
 804b869:	23 45 cc             	and    -0x34(%ebp),%eax
 804b86c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804b86f:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804b872:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804b875:	89 d0                	mov    %edx,%eax
 804b877:	31 d2                	xor    %edx,%edx
 804b879:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804b87c:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804b87f:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804b882:	0f af 45 b8          	imul   -0x48(%ebp),%eax
 804b886:	89 c2                	mov    %eax,%edx
 804b888:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b88b:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 804b88f:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b892:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804b895:	f7 65 a0             	mull   -0x60(%ebp)
 804b898:	01 d1                	add    %edx,%ecx
 804b89a:	89 ca                	mov    %ecx,%edx
 804b89c:	01 45 d0             	add    %eax,-0x30(%ebp)
 804b89f:	11 55 d4             	adc    %edx,-0x2c(%ebp)
 804b8a2:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804b8a5:	0f af 45 b8          	imul   -0x48(%ebp),%eax
 804b8a9:	89 c2                	mov    %eax,%edx
 804b8ab:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804b8ae:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 804b8b2:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b8b5:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804b8b8:	f7 65 a8             	mull   -0x58(%ebp)
 804b8bb:	01 d1                	add    %edx,%ecx
 804b8bd:	89 ca                	mov    %ecx,%edx
 804b8bf:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804b8c2:	8b 5d dc             	mov    -0x24(%ebp),%ebx
 804b8c5:	01 c1                	add    %eax,%ecx
 804b8c7:	11 d3                	adc    %edx,%ebx
 804b8c9:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804b8cc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804b8cf:	89 d0                	mov    %edx,%eax
 804b8d1:	31 d2                	xor    %edx,%edx
 804b8d3:	01 c8                	add    %ecx,%eax
 804b8d5:	11 da                	adc    %ebx,%edx
 804b8d7:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804b8da:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804b8dd:	8b 45 8c             	mov    -0x74(%ebp),%eax
 804b8e0:	0f af 45 80          	imul   -0x80(%ebp),%eax
 804b8e4:	89 c2                	mov    %eax,%edx
 804b8e6:	8b 45 84             	mov    -0x7c(%ebp),%eax
 804b8e9:	0f af 45 88          	imul   -0x78(%ebp),%eax
 804b8ed:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804b8f0:	8b 45 80             	mov    -0x80(%ebp),%eax
 804b8f3:	f7 65 88             	mull   -0x78(%ebp)
 804b8f6:	01 d1                	add    %edx,%ecx
 804b8f8:	89 ca                	mov    %ecx,%edx
 804b8fa:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804b8fd:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804b900:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804b903:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804b906:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b909:	33 45 e8             	xor    -0x18(%ebp),%eax
 804b90c:	89 c6                	mov    %eax,%esi
 804b90e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804b911:	33 45 ec             	xor    -0x14(%ebp),%eax
 804b914:	89 c7                	mov    %eax,%edi
 804b916:	89 f0                	mov    %esi,%eax
 804b918:	89 fa                	mov    %edi,%edx
 804b91a:	83 c4 74             	add    $0x74,%esp
 804b91d:	5b                   	pop    %ebx
 804b91e:	5e                   	pop    %esi
 804b91f:	5f                   	pop    %edi
 804b920:	5d                   	pop    %ebp
 804b921:	c3                   	ret    

0804b922 <hash__wyr3>:
 804b922:	55                   	push   %ebp
 804b923:	89 e5                	mov    %esp,%ebp
 804b925:	56                   	push   %esi
 804b926:	53                   	push   %ebx
 804b927:	83 ec 18             	sub    $0x18,%esp
 804b92a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804b92d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804b930:	8b 45 10             	mov    0x10(%ebp),%eax
 804b933:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804b936:	8b 45 08             	mov    0x8(%ebp),%eax
 804b939:	0f b6 08             	movzbl (%eax),%ecx
 804b93c:	0f b6 c1             	movzbl %cl,%eax
 804b93f:	ba 00 00 00 00       	mov    $0x0,%edx
 804b944:	0f a4 c2 10          	shld   $0x10,%eax,%edx
 804b948:	c1 e0 10             	shl    $0x10,%eax
 804b94b:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804b94e:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804b951:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804b954:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804b957:	0f ac d0 01          	shrd   $0x1,%edx,%eax
 804b95b:	d1 ea                	shr    %edx
 804b95d:	89 c2                	mov    %eax,%edx
 804b95f:	8b 45 08             	mov    0x8(%ebp),%eax
 804b962:	01 d0                	add    %edx,%eax
 804b964:	0f b6 08             	movzbl (%eax),%ecx
 804b967:	0f b6 c1             	movzbl %cl,%eax
 804b96a:	ba 00 00 00 00       	mov    $0x0,%edx
 804b96f:	0f a4 c2 08          	shld   $0x8,%eax,%edx
 804b973:	c1 e0 08             	shl    $0x8,%eax
 804b976:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 804b979:	09 c1                	or     %eax,%ecx
 804b97b:	89 cb                	mov    %ecx,%ebx
 804b97d:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 804b980:	09 d1                	or     %edx,%ecx
 804b982:	89 ce                	mov    %ecx,%esi
 804b984:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804b987:	8d 50 ff             	lea    -0x1(%eax),%edx
 804b98a:	8b 45 08             	mov    0x8(%ebp),%eax
 804b98d:	01 d0                	add    %edx,%eax
 804b98f:	0f b6 08             	movzbl (%eax),%ecx
 804b992:	0f b6 c1             	movzbl %cl,%eax
 804b995:	ba 00 00 00 00       	mov    $0x0,%edx
 804b99a:	89 d9                	mov    %ebx,%ecx
 804b99c:	09 c1                	or     %eax,%ecx
 804b99e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 804b9a1:	09 d6                	or     %edx,%esi
 804b9a3:	89 75 e4             	mov    %esi,-0x1c(%ebp)
 804b9a6:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804b9a9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804b9ac:	83 c4 18             	add    $0x18,%esp
 804b9af:	5b                   	pop    %ebx
 804b9b0:	5e                   	pop    %esi
 804b9b1:	5d                   	pop    %ebp
 804b9b2:	c3                   	ret    

0804b9b3 <hash__wyr4>:
 804b9b3:	55                   	push   %ebp
 804b9b4:	89 e5                	mov    %esp,%ebp
 804b9b6:	8b 45 08             	mov    0x8(%ebp),%eax
 804b9b9:	0f b6 00             	movzbl (%eax),%eax
 804b9bc:	0f b6 c0             	movzbl %al,%eax
 804b9bf:	8b 55 08             	mov    0x8(%ebp),%edx
 804b9c2:	83 c2 01             	add    $0x1,%edx
 804b9c5:	0f b6 12             	movzbl (%edx),%edx
 804b9c8:	0f b6 d2             	movzbl %dl,%edx
 804b9cb:	c1 e2 08             	shl    $0x8,%edx
 804b9ce:	09 c2                	or     %eax,%edx
 804b9d0:	8b 45 08             	mov    0x8(%ebp),%eax
 804b9d3:	83 c0 02             	add    $0x2,%eax
 804b9d6:	0f b6 00             	movzbl (%eax),%eax
 804b9d9:	0f b6 c0             	movzbl %al,%eax
 804b9dc:	c1 e0 10             	shl    $0x10,%eax
 804b9df:	09 c2                	or     %eax,%edx
 804b9e1:	8b 45 08             	mov    0x8(%ebp),%eax
 804b9e4:	83 c0 03             	add    $0x3,%eax
 804b9e7:	0f b6 00             	movzbl (%eax),%eax
 804b9ea:	0f b6 c0             	movzbl %al,%eax
 804b9ed:	c1 e0 18             	shl    $0x18,%eax
 804b9f0:	09 d0                	or     %edx,%eax
 804b9f2:	ba 00 00 00 00       	mov    $0x0,%edx
 804b9f7:	5d                   	pop    %ebp
 804b9f8:	c3                   	ret    

0804b9f9 <hash__wyr8>:
 804b9f9:	55                   	push   %ebp
 804b9fa:	89 e5                	mov    %esp,%ebp
 804b9fc:	56                   	push   %esi
 804b9fd:	53                   	push   %ebx
 804b9fe:	83 ec 38             	sub    $0x38,%esp
 804ba01:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba04:	0f b6 00             	movzbl (%eax),%eax
 804ba07:	0f b6 c0             	movzbl %al,%eax
 804ba0a:	89 c3                	mov    %eax,%ebx
 804ba0c:	be 00 00 00 00       	mov    $0x0,%esi
 804ba11:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba14:	83 c0 01             	add    $0x1,%eax
 804ba17:	0f b6 08             	movzbl (%eax),%ecx
 804ba1a:	0f b6 c1             	movzbl %cl,%eax
 804ba1d:	ba 00 00 00 00       	mov    $0x0,%edx
 804ba22:	0f a4 c2 08          	shld   $0x8,%eax,%edx
 804ba26:	c1 e0 08             	shl    $0x8,%eax
 804ba29:	89 d9                	mov    %ebx,%ecx
 804ba2b:	09 c1                	or     %eax,%ecx
 804ba2d:	89 4d f0             	mov    %ecx,-0x10(%ebp)
 804ba30:	09 d6                	or     %edx,%esi
 804ba32:	89 75 f4             	mov    %esi,-0xc(%ebp)
 804ba35:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba38:	83 c0 02             	add    $0x2,%eax
 804ba3b:	0f b6 08             	movzbl (%eax),%ecx
 804ba3e:	0f b6 c1             	movzbl %cl,%eax
 804ba41:	ba 00 00 00 00       	mov    $0x0,%edx
 804ba46:	0f a4 c2 10          	shld   $0x10,%eax,%edx
 804ba4a:	c1 e0 10             	shl    $0x10,%eax
 804ba4d:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804ba50:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 804ba53:	89 ce                	mov    %ecx,%esi
 804ba55:	09 c6                	or     %eax,%esi
 804ba57:	89 75 e8             	mov    %esi,-0x18(%ebp)
 804ba5a:	89 d0                	mov    %edx,%eax
 804ba5c:	09 d8                	or     %ebx,%eax
 804ba5e:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804ba61:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba64:	83 c0 03             	add    $0x3,%eax
 804ba67:	0f b6 08             	movzbl (%eax),%ecx
 804ba6a:	0f b6 c1             	movzbl %cl,%eax
 804ba6d:	ba 00 00 00 00       	mov    $0x0,%edx
 804ba72:	0f a4 c2 18          	shld   $0x18,%eax,%edx
 804ba76:	c1 e0 18             	shl    $0x18,%eax
 804ba79:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 804ba7c:	8b 5d ec             	mov    -0x14(%ebp),%ebx
 804ba7f:	89 ce                	mov    %ecx,%esi
 804ba81:	09 c6                	or     %eax,%esi
 804ba83:	89 75 e0             	mov    %esi,-0x20(%ebp)
 804ba86:	89 d0                	mov    %edx,%eax
 804ba88:	09 d8                	or     %ebx,%eax
 804ba8a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804ba8d:	8b 45 08             	mov    0x8(%ebp),%eax
 804ba90:	83 c0 04             	add    $0x4,%eax
 804ba93:	0f b6 08             	movzbl (%eax),%ecx
 804ba96:	0f b6 c1             	movzbl %cl,%eax
 804ba99:	ba 00 00 00 00       	mov    $0x0,%edx
 804ba9e:	89 c2                	mov    %eax,%edx
 804baa0:	b8 00 00 00 00       	mov    $0x0,%eax
 804baa5:	8b 5d e0             	mov    -0x20(%ebp),%ebx
 804baa8:	8b 75 e4             	mov    -0x1c(%ebp),%esi
 804baab:	89 d9                	mov    %ebx,%ecx
 804baad:	09 c1                	or     %eax,%ecx
 804baaf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
 804bab2:	89 d0                	mov    %edx,%eax
 804bab4:	09 f0                	or     %esi,%eax
 804bab6:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804bab9:	8b 45 08             	mov    0x8(%ebp),%eax
 804babc:	83 c0 05             	add    $0x5,%eax
 804babf:	0f b6 08             	movzbl (%eax),%ecx
 804bac2:	0f b6 c1             	movzbl %cl,%eax
 804bac5:	ba 00 00 00 00       	mov    $0x0,%edx
 804baca:	89 c2                	mov    %eax,%edx
 804bacc:	b8 00 00 00 00       	mov    $0x0,%eax
 804bad1:	c1 e2 08             	shl    $0x8,%edx
 804bad4:	8b 5d d8             	mov    -0x28(%ebp),%ebx
 804bad7:	8b 75 dc             	mov    -0x24(%ebp),%esi
 804bada:	89 d9                	mov    %ebx,%ecx
 804badc:	09 c1                	or     %eax,%ecx
 804bade:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 804bae1:	89 d0                	mov    %edx,%eax
 804bae3:	09 f0                	or     %esi,%eax
 804bae5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804bae8:	8b 45 08             	mov    0x8(%ebp),%eax
 804baeb:	83 c0 06             	add    $0x6,%eax
 804baee:	0f b6 08             	movzbl (%eax),%ecx
 804baf1:	0f b6 c1             	movzbl %cl,%eax
 804baf4:	ba 00 00 00 00       	mov    $0x0,%edx
 804baf9:	89 c2                	mov    %eax,%edx
 804bafb:	b8 00 00 00 00       	mov    $0x0,%eax
 804bb00:	c1 e2 10             	shl    $0x10,%edx
 804bb03:	8b 5d d0             	mov    -0x30(%ebp),%ebx
 804bb06:	8b 75 d4             	mov    -0x2c(%ebp),%esi
 804bb09:	89 d9                	mov    %ebx,%ecx
 804bb0b:	09 c1                	or     %eax,%ecx
 804bb0d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
 804bb10:	89 d0                	mov    %edx,%eax
 804bb12:	09 f0                	or     %esi,%eax
 804bb14:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804bb17:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb1a:	83 c0 07             	add    $0x7,%eax
 804bb1d:	0f b6 08             	movzbl (%eax),%ecx
 804bb20:	0f b6 c1             	movzbl %cl,%eax
 804bb23:	ba 00 00 00 00       	mov    $0x0,%edx
 804bb28:	89 c2                	mov    %eax,%edx
 804bb2a:	b8 00 00 00 00       	mov    $0x0,%eax
 804bb2f:	c1 e2 18             	shl    $0x18,%edx
 804bb32:	8b 5d c8             	mov    -0x38(%ebp),%ebx
 804bb35:	8b 75 cc             	mov    -0x34(%ebp),%esi
 804bb38:	89 d9                	mov    %ebx,%ecx
 804bb3a:	09 c1                	or     %eax,%ecx
 804bb3c:	89 4d c0             	mov    %ecx,-0x40(%ebp)
 804bb3f:	89 d0                	mov    %edx,%eax
 804bb41:	09 f0                	or     %esi,%eax
 804bb43:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804bb46:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804bb49:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804bb4c:	83 c4 38             	add    $0x38,%esp
 804bb4f:	5b                   	pop    %ebx
 804bb50:	5e                   	pop    %esi
 804bb51:	5d                   	pop    %ebp
 804bb52:	c3                   	ret    

0804bb53 <math__bits__leading_zeros_8>:
 804bb53:	55                   	push   %ebp
 804bb54:	89 e5                	mov    %esp,%ebp
 804bb56:	83 ec 18             	sub    $0x18,%esp
 804bb59:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb5c:	88 45 f4             	mov    %al,-0xc(%ebp)
 804bb5f:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
 804bb63:	83 ec 0c             	sub    $0xc,%esp
 804bb66:	50                   	push   %eax
 804bb67:	e8 e1 0e 00 00       	call   804ca4d <math__bits__len_8>
 804bb6c:	83 c4 10             	add    $0x10,%esp
 804bb6f:	ba 08 00 00 00       	mov    $0x8,%edx
 804bb74:	29 c2                	sub    %eax,%edx
 804bb76:	89 d0                	mov    %edx,%eax
 804bb78:	c9                   	leave  
 804bb79:	c3                   	ret    

0804bb7a <math__bits__leading_zeros_16>:
 804bb7a:	55                   	push   %ebp
 804bb7b:	89 e5                	mov    %esp,%ebp
 804bb7d:	83 ec 18             	sub    $0x18,%esp
 804bb80:	8b 45 08             	mov    0x8(%ebp),%eax
 804bb83:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
 804bb87:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
 804bb8b:	83 ec 0c             	sub    $0xc,%esp
 804bb8e:	50                   	push   %eax
 804bb8f:	e8 f5 0e 00 00       	call   804ca89 <math__bits__len_16>
 804bb94:	83 c4 10             	add    $0x10,%esp
 804bb97:	ba 10 00 00 00       	mov    $0x10,%edx
 804bb9c:	29 c2                	sub    %eax,%edx
 804bb9e:	89 d0                	mov    %edx,%eax
 804bba0:	c9                   	leave  
 804bba1:	c3                   	ret    

0804bba2 <math__bits__leading_zeros_32>:
 804bba2:	55                   	push   %ebp
 804bba3:	89 e5                	mov    %esp,%ebp
 804bba5:	83 ec 08             	sub    $0x8,%esp
 804bba8:	83 ec 0c             	sub    $0xc,%esp
 804bbab:	ff 75 08             	pushl  0x8(%ebp)
 804bbae:	e8 3b 0f 00 00       	call   804caee <math__bits__len_32>
 804bbb3:	83 c4 10             	add    $0x10,%esp
 804bbb6:	ba 20 00 00 00       	mov    $0x20,%edx
 804bbbb:	29 c2                	sub    %eax,%edx
 804bbbd:	89 d0                	mov    %edx,%eax
 804bbbf:	c9                   	leave  
 804bbc0:	c3                   	ret    

0804bbc1 <math__bits__leading_zeros_64>:
 804bbc1:	55                   	push   %ebp
 804bbc2:	89 e5                	mov    %esp,%ebp
 804bbc4:	83 ec 18             	sub    $0x18,%esp
 804bbc7:	8b 45 08             	mov    0x8(%ebp),%eax
 804bbca:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804bbcd:	8b 45 0c             	mov    0xc(%ebp),%eax
 804bbd0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804bbd3:	83 ec 08             	sub    $0x8,%esp
 804bbd6:	ff 75 f4             	pushl  -0xc(%ebp)
 804bbd9:	ff 75 f0             	pushl  -0x10(%ebp)
 804bbdc:	e8 79 0f 00 00       	call   804cb5a <math__bits__len_64>
 804bbe1:	83 c4 10             	add    $0x10,%esp
 804bbe4:	ba 40 00 00 00       	mov    $0x40,%edx
 804bbe9:	29 c2                	sub    %eax,%edx
 804bbeb:	89 d0                	mov    %edx,%eax
 804bbed:	c9                   	leave  
 804bbee:	c3                   	ret    

0804bbef <math__bits__trailing_zeros_8>:
 804bbef:	55                   	push   %ebp
 804bbf0:	89 e5                	mov    %esp,%ebp
 804bbf2:	83 ec 18             	sub    $0x18,%esp
 804bbf5:	8b 45 08             	mov    0x8(%ebp),%eax
 804bbf8:	88 45 f4             	mov    %al,-0xc(%ebp)
 804bbfb:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
 804bbff:	83 ec 0c             	sub    $0xc,%esp
 804bc02:	50                   	push   %eax
 804bc03:	ff 35 e4 32 07 08    	pushl  0x80732e4
 804bc09:	ff 35 e0 32 07 08    	pushl  0x80732e0
 804bc0f:	ff 35 dc 32 07 08    	pushl  0x80732dc
 804bc15:	ff 35 d8 32 07 08    	pushl  0x80732d8
 804bc1b:	e8 9a a6 00 00       	call   80562ba <array_get>
 804bc20:	83 c4 20             	add    $0x20,%esp
 804bc23:	0f b6 00             	movzbl (%eax),%eax
 804bc26:	0f b6 c0             	movzbl %al,%eax
 804bc29:	c9                   	leave  
 804bc2a:	c3                   	ret    

0804bc2b <math__bits__trailing_zeros_16>:
 804bc2b:	55                   	push   %ebp
 804bc2c:	89 e5                	mov    %esp,%ebp
 804bc2e:	83 ec 18             	sub    $0x18,%esp
 804bc31:	8b 45 08             	mov    0x8(%ebp),%eax
 804bc34:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
 804bc38:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%ebp)
 804bc3d:	75 07                	jne    804bc46 <math__bits__trailing_zeros_16+0x1b>
 804bc3f:	b8 10 00 00 00       	mov    $0x10,%eax
 804bc44:	eb 43                	jmp    804bc89 <math__bits__trailing_zeros_16+0x5e>
 804bc46:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
 804bc4a:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
 804bc4e:	f7 da                	neg    %edx
 804bc50:	21 d0                	and    %edx,%eax
 804bc52:	89 c2                	mov    %eax,%edx
 804bc54:	a1 64 31 07 08       	mov    0x8073164,%eax
 804bc59:	0f af c2             	imul   %edx,%eax
 804bc5c:	c1 e8 1b             	shr    $0x1b,%eax
 804bc5f:	83 ec 0c             	sub    $0xc,%esp
 804bc62:	50                   	push   %eax
 804bc63:	ff 35 74 32 07 08    	pushl  0x8073274
 804bc69:	ff 35 70 32 07 08    	pushl  0x8073270
 804bc6f:	ff 35 6c 32 07 08    	pushl  0x807326c
 804bc75:	ff 35 68 32 07 08    	pushl  0x8073268
 804bc7b:	e8 3a a6 00 00       	call   80562ba <array_get>
 804bc80:	83 c4 20             	add    $0x20,%esp
 804bc83:	0f b6 00             	movzbl (%eax),%eax
 804bc86:	0f b6 c0             	movzbl %al,%eax
 804bc89:	c9                   	leave  
 804bc8a:	c3                   	ret    

0804bc8b <math__bits__trailing_zeros_32>:
 804bc8b:	55                   	push   %ebp
 804bc8c:	89 e5                	mov    %esp,%ebp
 804bc8e:	83 ec 08             	sub    $0x8,%esp
 804bc91:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804bc95:	75 07                	jne    804bc9e <math__bits__trailing_zeros_32+0x13>
 804bc97:	b8 20 00 00 00       	mov    $0x20,%eax
 804bc9c:	eb 3f                	jmp    804bcdd <math__bits__trailing_zeros_32+0x52>
 804bc9e:	8b 45 08             	mov    0x8(%ebp),%eax
 804bca1:	f7 d8                	neg    %eax
 804bca3:	23 45 08             	and    0x8(%ebp),%eax
 804bca6:	89 c2                	mov    %eax,%edx
 804bca8:	a1 64 31 07 08       	mov    0x8073164,%eax
 804bcad:	0f af c2             	imul   %edx,%eax
 804bcb0:	c1 e8 1b             	shr    $0x1b,%eax
 804bcb3:	83 ec 0c             	sub    $0xc,%esp
 804bcb6:	50                   	push   %eax
 804bcb7:	ff 35 74 32 07 08    	pushl  0x8073274
 804bcbd:	ff 35 70 32 07 08    	pushl  0x8073270
 804bcc3:	ff 35 6c 32 07 08    	pushl  0x807326c
 804bcc9:	ff 35 68 32 07 08    	pushl  0x8073268
 804bccf:	e8 e6 a5 00 00       	call   80562ba <array_get>
 804bcd4:	83 c4 20             	add    $0x20,%esp
 804bcd7:	0f b6 00             	movzbl (%eax),%eax
 804bcda:	0f b6 c0             	movzbl %al,%eax
 804bcdd:	c9                   	leave  
 804bcde:	c3                   	ret    

0804bcdf <math__bits__trailing_zeros_64>:
 804bcdf:	55                   	push   %ebp
 804bce0:	89 e5                	mov    %esp,%ebp
 804bce2:	57                   	push   %edi
 804bce3:	56                   	push   %esi
 804bce4:	53                   	push   %ebx
 804bce5:	83 ec 1c             	sub    $0x1c,%esp
 804bce8:	8b 45 08             	mov    0x8(%ebp),%eax
 804bceb:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804bcee:	8b 45 0c             	mov    0xc(%ebp),%eax
 804bcf1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804bcf4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804bcf7:	0b 45 e0             	or     -0x20(%ebp),%eax
 804bcfa:	85 c0                	test   %eax,%eax
 804bcfc:	75 07                	jne    804bd05 <math__bits__trailing_zeros_64+0x26>
 804bcfe:	b8 40 00 00 00       	mov    $0x40,%eax
 804bd03:	eb 6a                	jmp    804bd6f <math__bits__trailing_zeros_64+0x90>
 804bd05:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804bd08:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804bd0b:	f7 d8                	neg    %eax
 804bd0d:	83 d2 00             	adc    $0x0,%edx
 804bd10:	f7 da                	neg    %edx
 804bd12:	89 c7                	mov    %eax,%edi
 804bd14:	23 7d e0             	and    -0x20(%ebp),%edi
 804bd17:	89 f9                	mov    %edi,%ecx
 804bd19:	89 d0                	mov    %edx,%eax
 804bd1b:	23 45 e4             	and    -0x1c(%ebp),%eax
 804bd1e:	89 c3                	mov    %eax,%ebx
 804bd20:	a1 88 31 07 08       	mov    0x8073188,%eax
 804bd25:	8b 15 8c 31 07 08    	mov    0x807318c,%edx
 804bd2b:	89 df                	mov    %ebx,%edi
 804bd2d:	0f af f8             	imul   %eax,%edi
 804bd30:	89 d6                	mov    %edx,%esi
 804bd32:	0f af f1             	imul   %ecx,%esi
 804bd35:	01 fe                	add    %edi,%esi
 804bd37:	f7 e1                	mul    %ecx
 804bd39:	8d 0c 16             	lea    (%esi,%edx,1),%ecx
 804bd3c:	89 ca                	mov    %ecx,%edx
 804bd3e:	89 d0                	mov    %edx,%eax
 804bd40:	31 d2                	xor    %edx,%edx
 804bd42:	c1 e8 1a             	shr    $0x1a,%eax
 804bd45:	83 ec 0c             	sub    $0xc,%esp
 804bd48:	50                   	push   %eax
 804bd49:	ff 35 e8 31 07 08    	pushl  0x80731e8
 804bd4f:	ff 35 e4 31 07 08    	pushl  0x80731e4
 804bd55:	ff 35 e0 31 07 08    	pushl  0x80731e0
 804bd5b:	ff 35 dc 31 07 08    	pushl  0x80731dc
 804bd61:	e8 54 a5 00 00       	call   80562ba <array_get>
 804bd66:	83 c4 20             	add    $0x20,%esp
 804bd69:	0f b6 00             	movzbl (%eax),%eax
 804bd6c:	0f b6 c0             	movzbl %al,%eax
 804bd6f:	8d 65 f4             	lea    -0xc(%ebp),%esp
 804bd72:	5b                   	pop    %ebx
 804bd73:	5e                   	pop    %esi
 804bd74:	5f                   	pop    %edi
 804bd75:	5d                   	pop    %ebp
 804bd76:	c3                   	ret    

0804bd77 <math__bits__ones_count_8>:
 804bd77:	55                   	push   %ebp
 804bd78:	89 e5                	mov    %esp,%ebp
 804bd7a:	83 ec 18             	sub    $0x18,%esp
 804bd7d:	8b 45 08             	mov    0x8(%ebp),%eax
 804bd80:	88 45 f4             	mov    %al,-0xc(%ebp)
 804bd83:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
 804bd87:	83 ec 0c             	sub    $0xc,%esp
 804bd8a:	50                   	push   %eax
 804bd8b:	ff 35 58 32 07 08    	pushl  0x8073258
 804bd91:	ff 35 54 32 07 08    	pushl  0x8073254
 804bd97:	ff 35 50 32 07 08    	pushl  0x8073250
 804bd9d:	ff 35 4c 32 07 08    	pushl  0x807324c
 804bda3:	e8 12 a5 00 00       	call   80562ba <array_get>
 804bda8:	83 c4 20             	add    $0x20,%esp
 804bdab:	0f b6 00             	movzbl (%eax),%eax
 804bdae:	0f b6 c0             	movzbl %al,%eax
 804bdb1:	c9                   	leave  
 804bdb2:	c3                   	ret    

0804bdb3 <math__bits__ones_count_16>:
 804bdb3:	55                   	push   %ebp
 804bdb4:	89 e5                	mov    %esp,%ebp
 804bdb6:	53                   	push   %ebx
 804bdb7:	83 ec 14             	sub    $0x14,%esp
 804bdba:	8b 45 08             	mov    0x8(%ebp),%eax
 804bdbd:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
 804bdc1:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
 804bdc5:	66 c1 e8 08          	shr    $0x8,%ax
 804bdc9:	0f b7 c0             	movzwl %ax,%eax
 804bdcc:	83 ec 0c             	sub    $0xc,%esp
 804bdcf:	50                   	push   %eax
 804bdd0:	ff 35 58 32 07 08    	pushl  0x8073258
 804bdd6:	ff 35 54 32 07 08    	pushl  0x8073254
 804bddc:	ff 35 50 32 07 08    	pushl  0x8073250
 804bde2:	ff 35 4c 32 07 08    	pushl  0x807324c
 804bde8:	e8 cd a4 00 00       	call   80562ba <array_get>
 804bded:	83 c4 20             	add    $0x20,%esp
 804bdf0:	0f b6 00             	movzbl (%eax),%eax
 804bdf3:	0f b6 d8             	movzbl %al,%ebx
 804bdf6:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
 804bdfa:	0f b6 c0             	movzbl %al,%eax
 804bdfd:	83 ec 0c             	sub    $0xc,%esp
 804be00:	50                   	push   %eax
 804be01:	ff 35 58 32 07 08    	pushl  0x8073258
 804be07:	ff 35 54 32 07 08    	pushl  0x8073254
 804be0d:	ff 35 50 32 07 08    	pushl  0x8073250
 804be13:	ff 35 4c 32 07 08    	pushl  0x807324c
 804be19:	e8 9c a4 00 00       	call   80562ba <array_get>
 804be1e:	83 c4 20             	add    $0x20,%esp
 804be21:	0f b6 00             	movzbl (%eax),%eax
 804be24:	0f b6 c0             	movzbl %al,%eax
 804be27:	01 d8                	add    %ebx,%eax
 804be29:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804be2c:	c9                   	leave  
 804be2d:	c3                   	ret    

0804be2e <math__bits__ones_count_32>:
 804be2e:	55                   	push   %ebp
 804be2f:	89 e5                	mov    %esp,%ebp
 804be31:	53                   	push   %ebx
 804be32:	83 ec 04             	sub    $0x4,%esp
 804be35:	8b 45 08             	mov    0x8(%ebp),%eax
 804be38:	c1 e8 18             	shr    $0x18,%eax
 804be3b:	83 ec 0c             	sub    $0xc,%esp
 804be3e:	50                   	push   %eax
 804be3f:	ff 35 58 32 07 08    	pushl  0x8073258
 804be45:	ff 35 54 32 07 08    	pushl  0x8073254
 804be4b:	ff 35 50 32 07 08    	pushl  0x8073250
 804be51:	ff 35 4c 32 07 08    	pushl  0x807324c
 804be57:	e8 5e a4 00 00       	call   80562ba <array_get>
 804be5c:	83 c4 20             	add    $0x20,%esp
 804be5f:	0f b6 00             	movzbl (%eax),%eax
 804be62:	0f b6 d8             	movzbl %al,%ebx
 804be65:	8b 45 08             	mov    0x8(%ebp),%eax
 804be68:	c1 e8 10             	shr    $0x10,%eax
 804be6b:	0f b6 c0             	movzbl %al,%eax
 804be6e:	83 ec 0c             	sub    $0xc,%esp
 804be71:	50                   	push   %eax
 804be72:	ff 35 58 32 07 08    	pushl  0x8073258
 804be78:	ff 35 54 32 07 08    	pushl  0x8073254
 804be7e:	ff 35 50 32 07 08    	pushl  0x8073250
 804be84:	ff 35 4c 32 07 08    	pushl  0x807324c
 804be8a:	e8 2b a4 00 00       	call   80562ba <array_get>
 804be8f:	83 c4 20             	add    $0x20,%esp
 804be92:	0f b6 00             	movzbl (%eax),%eax
 804be95:	0f b6 c0             	movzbl %al,%eax
 804be98:	01 c3                	add    %eax,%ebx
 804be9a:	8b 45 08             	mov    0x8(%ebp),%eax
 804be9d:	c1 e8 08             	shr    $0x8,%eax
 804bea0:	0f b6 c0             	movzbl %al,%eax
 804bea3:	83 ec 0c             	sub    $0xc,%esp
 804bea6:	50                   	push   %eax
 804bea7:	ff 35 58 32 07 08    	pushl  0x8073258
 804bead:	ff 35 54 32 07 08    	pushl  0x8073254
 804beb3:	ff 35 50 32 07 08    	pushl  0x8073250
 804beb9:	ff 35 4c 32 07 08    	pushl  0x807324c
 804bebf:	e8 f6 a3 00 00       	call   80562ba <array_get>
 804bec4:	83 c4 20             	add    $0x20,%esp
 804bec7:	0f b6 00             	movzbl (%eax),%eax
 804beca:	0f b6 c0             	movzbl %al,%eax
 804becd:	01 c3                	add    %eax,%ebx
 804becf:	8b 45 08             	mov    0x8(%ebp),%eax
 804bed2:	0f b6 c0             	movzbl %al,%eax
 804bed5:	83 ec 0c             	sub    $0xc,%esp
 804bed8:	50                   	push   %eax
 804bed9:	ff 35 58 32 07 08    	pushl  0x8073258
 804bedf:	ff 35 54 32 07 08    	pushl  0x8073254
 804bee5:	ff 35 50 32 07 08    	pushl  0x8073250
 804beeb:	ff 35 4c 32 07 08    	pushl  0x807324c
 804bef1:	e8 c4 a3 00 00       	call   80562ba <array_get>
 804bef6:	83 c4 20             	add    $0x20,%esp
 804bef9:	0f b6 00             	movzbl (%eax),%eax
 804befc:	0f b6 c0             	movzbl %al,%eax
 804beff:	01 d8                	add    %ebx,%eax
 804bf01:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804bf04:	c9                   	leave  
 804bf05:	c3                   	ret    

0804bf06 <math__bits__ones_count_64>:
 804bf06:	55                   	push   %ebp
 804bf07:	89 e5                	mov    %esp,%ebp
 804bf09:	57                   	push   %edi
 804bf0a:	56                   	push   %esi
 804bf0b:	53                   	push   %ebx
 804bf0c:	83 ec 6c             	sub    $0x6c,%esp
 804bf0f:	8b 45 08             	mov    0x8(%ebp),%eax
 804bf12:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804bf15:	8b 45 0c             	mov    0xc(%ebp),%eax
 804bf18:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804bf1b:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804bf1e:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804bf21:	0f ac d0 01          	shrd   $0x1,%edx,%eax
 804bf25:	d1 ea                	shr    %edx
 804bf27:	89 45 88             	mov    %eax,-0x78(%ebp)
 804bf2a:	89 55 8c             	mov    %edx,-0x74(%ebp)
 804bf2d:	8b 0d f8 30 07 08    	mov    0x80730f8,%ecx
 804bf33:	8b 1d fc 30 07 08    	mov    0x80730fc,%ebx
 804bf39:	a1 58 31 07 08       	mov    0x8073158,%eax
 804bf3e:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804bf44:	89 cf                	mov    %ecx,%edi
 804bf46:	21 c7                	and    %eax,%edi
 804bf48:	89 7d d0             	mov    %edi,-0x30(%ebp)
 804bf4b:	21 d3                	and    %edx,%ebx
 804bf4d:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
 804bf50:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804bf53:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804bf56:	89 c3                	mov    %eax,%ebx
 804bf58:	8b 75 88             	mov    -0x78(%ebp),%esi
 804bf5b:	8b 7d 8c             	mov    -0x74(%ebp),%edi
 804bf5e:	21 f3                	and    %esi,%ebx
 804bf60:	89 5d c8             	mov    %ebx,-0x38(%ebp)
 804bf63:	21 d7                	and    %edx,%edi
 804bf65:	89 7d cc             	mov    %edi,-0x34(%ebp)
 804bf68:	8b 0d f8 30 07 08    	mov    0x80730f8,%ecx
 804bf6e:	8b 1d fc 30 07 08    	mov    0x80730fc,%ebx
 804bf74:	a1 58 31 07 08       	mov    0x8073158,%eax
 804bf79:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804bf7f:	89 cf                	mov    %ecx,%edi
 804bf81:	21 c7                	and    %eax,%edi
 804bf83:	89 7d c0             	mov    %edi,-0x40(%ebp)
 804bf86:	21 d3                	and    %edx,%ebx
 804bf88:	89 5d c4             	mov    %ebx,-0x3c(%ebp)
 804bf8b:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804bf8e:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804bf91:	89 c3                	mov    %eax,%ebx
 804bf93:	23 5d d8             	and    -0x28(%ebp),%ebx
 804bf96:	89 5d b8             	mov    %ebx,-0x48(%ebp)
 804bf99:	89 d0                	mov    %edx,%eax
 804bf9b:	23 45 dc             	and    -0x24(%ebp),%eax
 804bf9e:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804bfa1:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804bfa4:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804bfa7:	03 45 b8             	add    -0x48(%ebp),%eax
 804bfaa:	13 55 bc             	adc    -0x44(%ebp),%edx
 804bfad:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804bfb0:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804bfb3:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804bfb6:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804bfb9:	0f ac d0 02          	shrd   $0x2,%edx,%eax
 804bfbd:	c1 ea 02             	shr    $0x2,%edx
 804bfc0:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804bfc3:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804bfc6:	8b 0d b0 31 07 08    	mov    0x80731b0,%ecx
 804bfcc:	8b 1d b4 31 07 08    	mov    0x80731b4,%ebx
 804bfd2:	a1 58 31 07 08       	mov    0x8073158,%eax
 804bfd7:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804bfdd:	89 ce                	mov    %ecx,%esi
 804bfdf:	21 c6                	and    %eax,%esi
 804bfe1:	89 75 b0             	mov    %esi,-0x50(%ebp)
 804bfe4:	89 df                	mov    %ebx,%edi
 804bfe6:	21 d7                	and    %edx,%edi
 804bfe8:	89 7d b4             	mov    %edi,-0x4c(%ebp)
 804bfeb:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804bfee:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804bff1:	89 c6                	mov    %eax,%esi
 804bff3:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 804bff6:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
 804bff9:	21 ce                	and    %ecx,%esi
 804bffb:	89 75 a8             	mov    %esi,-0x58(%ebp)
 804bffe:	89 df                	mov    %ebx,%edi
 804c000:	21 d7                	and    %edx,%edi
 804c002:	89 7d ac             	mov    %edi,-0x54(%ebp)
 804c005:	8b 0d b0 31 07 08    	mov    0x80731b0,%ecx
 804c00b:	8b 1d b4 31 07 08    	mov    0x80731b4,%ebx
 804c011:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c016:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c01c:	89 ce                	mov    %ecx,%esi
 804c01e:	21 c6                	and    %eax,%esi
 804c020:	89 75 a0             	mov    %esi,-0x60(%ebp)
 804c023:	21 d3                	and    %edx,%ebx
 804c025:	89 5d a4             	mov    %ebx,-0x5c(%ebp)
 804c028:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804c02b:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804c02e:	89 c7                	mov    %eax,%edi
 804c030:	23 7d e8             	and    -0x18(%ebp),%edi
 804c033:	89 7d 98             	mov    %edi,-0x68(%ebp)
 804c036:	89 d0                	mov    %edx,%eax
 804c038:	23 45 ec             	and    -0x14(%ebp),%eax
 804c03b:	89 45 9c             	mov    %eax,-0x64(%ebp)
 804c03e:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804c041:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804c044:	03 45 98             	add    -0x68(%ebp),%eax
 804c047:	13 55 9c             	adc    -0x64(%ebp),%edx
 804c04a:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804c04d:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804c050:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c053:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804c056:	0f ac d0 04          	shrd   $0x4,%edx,%eax
 804c05a:	c1 ea 04             	shr    $0x4,%edx
 804c05d:	89 c1                	mov    %eax,%ecx
 804c05f:	89 d3                	mov    %edx,%ebx
 804c061:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c064:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804c067:	89 ce                	mov    %ecx,%esi
 804c069:	89 df                	mov    %ebx,%edi
 804c06b:	01 c6                	add    %eax,%esi
 804c06d:	11 d7                	adc    %edx,%edi
 804c06f:	89 75 d0             	mov    %esi,-0x30(%ebp)
 804c072:	89 7d d4             	mov    %edi,-0x2c(%ebp)
 804c075:	8b 0d 18 31 07 08    	mov    0x8073118,%ecx
 804c07b:	8b 1d 1c 31 07 08    	mov    0x807311c,%ebx
 804c081:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c086:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c08c:	89 ce                	mov    %ecx,%esi
 804c08e:	21 c6                	and    %eax,%esi
 804c090:	89 75 90             	mov    %esi,-0x70(%ebp)
 804c093:	89 df                	mov    %ebx,%edi
 804c095:	21 d7                	and    %edx,%edi
 804c097:	89 7d 94             	mov    %edi,-0x6c(%ebp)
 804c09a:	8b 55 90             	mov    -0x70(%ebp),%edx
 804c09d:	8b 4d 94             	mov    -0x6c(%ebp),%ecx
 804c0a0:	89 d0                	mov    %edx,%eax
 804c0a2:	8b 5d d0             	mov    -0x30(%ebp),%ebx
 804c0a5:	8b 75 d4             	mov    -0x2c(%ebp),%esi
 804c0a8:	21 d8                	and    %ebx,%eax
 804c0aa:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804c0ad:	89 c8                	mov    %ecx,%eax
 804c0af:	21 f0                	and    %esi,%eax
 804c0b1:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804c0b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0b7:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804c0ba:	0f ac d0 08          	shrd   $0x8,%edx,%eax
 804c0be:	c1 ea 08             	shr    $0x8,%edx
 804c0c1:	01 45 e8             	add    %eax,-0x18(%ebp)
 804c0c4:	11 55 ec             	adc    %edx,-0x14(%ebp)
 804c0c7:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0ca:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804c0cd:	0f ac d0 10          	shrd   $0x10,%edx,%eax
 804c0d1:	c1 ea 10             	shr    $0x10,%edx
 804c0d4:	01 45 e8             	add    %eax,-0x18(%ebp)
 804c0d7:	11 55 ec             	adc    %edx,-0x14(%ebp)
 804c0da:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0dd:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804c0e0:	89 d0                	mov    %edx,%eax
 804c0e2:	31 d2                	xor    %edx,%edx
 804c0e4:	01 45 e8             	add    %eax,-0x18(%ebp)
 804c0e7:	11 55 ec             	adc    %edx,-0x14(%ebp)
 804c0ea:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c0ed:	83 e0 7f             	and    $0x7f,%eax
 804c0f0:	83 c4 6c             	add    $0x6c,%esp
 804c0f3:	5b                   	pop    %ebx
 804c0f4:	5e                   	pop    %esi
 804c0f5:	5f                   	pop    %edi
 804c0f6:	5d                   	pop    %ebp
 804c0f7:	c3                   	ret    

0804c0f8 <math__bits__rotate_left_8>:
 804c0f8:	55                   	push   %ebp
 804c0f9:	89 e5                	mov    %esp,%ebp
 804c0fb:	53                   	push   %ebx
 804c0fc:	83 ec 14             	sub    $0x14,%esp
 804c0ff:	8b 45 08             	mov    0x8(%ebp),%eax
 804c102:	88 45 e8             	mov    %al,-0x18(%ebp)
 804c105:	c6 45 fa 08          	movb   $0x8,-0x6(%ebp)
 804c109:	8b 45 0c             	mov    0xc(%ebp),%eax
 804c10c:	89 c2                	mov    %eax,%edx
 804c10e:	0f b6 45 fa          	movzbl -0x6(%ebp),%eax
 804c112:	83 e8 01             	sub    $0x1,%eax
 804c115:	21 d0                	and    %edx,%eax
 804c117:	88 45 fb             	mov    %al,-0x5(%ebp)
 804c11a:	0f b6 55 e8          	movzbl -0x18(%ebp),%edx
 804c11e:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 804c122:	89 c1                	mov    %eax,%ecx
 804c124:	d3 e2                	shl    %cl,%edx
 804c126:	89 d0                	mov    %edx,%eax
 804c128:	89 c3                	mov    %eax,%ebx
 804c12a:	0f b6 55 e8          	movzbl -0x18(%ebp),%edx
 804c12e:	0f b6 4d fa          	movzbl -0x6(%ebp),%ecx
 804c132:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 804c136:	29 c1                	sub    %eax,%ecx
 804c138:	89 c8                	mov    %ecx,%eax
 804c13a:	89 c1                	mov    %eax,%ecx
 804c13c:	d3 fa                	sar    %cl,%edx
 804c13e:	89 d0                	mov    %edx,%eax
 804c140:	09 d8                	or     %ebx,%eax
 804c142:	83 c4 14             	add    $0x14,%esp
 804c145:	5b                   	pop    %ebx
 804c146:	5d                   	pop    %ebp
 804c147:	c3                   	ret    

0804c148 <math__bits__rotate_left_16>:
 804c148:	55                   	push   %ebp
 804c149:	89 e5                	mov    %esp,%ebp
 804c14b:	53                   	push   %ebx
 804c14c:	83 ec 14             	sub    $0x14,%esp
 804c14f:	8b 45 08             	mov    0x8(%ebp),%eax
 804c152:	66 89 45 e8          	mov    %ax,-0x18(%ebp)
 804c156:	66 c7 45 f8 10 00    	movw   $0x10,-0x8(%ebp)
 804c15c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804c15f:	89 c2                	mov    %eax,%edx
 804c161:	0f b7 45 f8          	movzwl -0x8(%ebp),%eax
 804c165:	83 e8 01             	sub    $0x1,%eax
 804c168:	21 d0                	and    %edx,%eax
 804c16a:	66 89 45 fa          	mov    %ax,-0x6(%ebp)
 804c16e:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx
 804c172:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax
 804c176:	89 c1                	mov    %eax,%ecx
 804c178:	d3 e2                	shl    %cl,%edx
 804c17a:	89 d0                	mov    %edx,%eax
 804c17c:	89 c3                	mov    %eax,%ebx
 804c17e:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx
 804c182:	0f b7 4d f8          	movzwl -0x8(%ebp),%ecx
 804c186:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax
 804c18a:	29 c1                	sub    %eax,%ecx
 804c18c:	89 c8                	mov    %ecx,%eax
 804c18e:	89 c1                	mov    %eax,%ecx
 804c190:	d3 fa                	sar    %cl,%edx
 804c192:	89 d0                	mov    %edx,%eax
 804c194:	09 d8                	or     %ebx,%eax
 804c196:	83 c4 14             	add    $0x14,%esp
 804c199:	5b                   	pop    %ebx
 804c19a:	5d                   	pop    %ebp
 804c19b:	c3                   	ret    

0804c19c <math__bits__rotate_left_32>:
 804c19c:	55                   	push   %ebp
 804c19d:	89 e5                	mov    %esp,%ebp
 804c19f:	53                   	push   %ebx
 804c1a0:	83 ec 10             	sub    $0x10,%esp
 804c1a3:	c7 45 f4 20 00 00 00 	movl   $0x20,-0xc(%ebp)
 804c1aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c1ad:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c1b0:	8b 45 0c             	mov    0xc(%ebp),%eax
 804c1b3:	21 d0                	and    %edx,%eax
 804c1b5:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804c1b8:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804c1bb:	8b 55 08             	mov    0x8(%ebp),%edx
 804c1be:	89 d3                	mov    %edx,%ebx
 804c1c0:	89 c1                	mov    %eax,%ecx
 804c1c2:	d3 e3                	shl    %cl,%ebx
 804c1c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804c1c7:	2b 45 f8             	sub    -0x8(%ebp),%eax
 804c1ca:	8b 55 08             	mov    0x8(%ebp),%edx
 804c1cd:	89 c1                	mov    %eax,%ecx
 804c1cf:	d3 ea                	shr    %cl,%edx
 804c1d1:	89 d0                	mov    %edx,%eax
 804c1d3:	09 d8                	or     %ebx,%eax
 804c1d5:	83 c4 10             	add    $0x10,%esp
 804c1d8:	5b                   	pop    %ebx
 804c1d9:	5d                   	pop    %ebp
 804c1da:	c3                   	ret    

0804c1db <math__bits__rotate_left_64>:
 804c1db:	55                   	push   %ebp
 804c1dc:	89 e5                	mov    %esp,%ebp
 804c1de:	56                   	push   %esi
 804c1df:	53                   	push   %ebx
 804c1e0:	83 ec 20             	sub    $0x20,%esp
 804c1e3:	8b 45 08             	mov    0x8(%ebp),%eax
 804c1e6:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804c1e9:	8b 45 0c             	mov    0xc(%ebp),%eax
 804c1ec:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c1ef:	c7 45 e8 40 00 00 00 	movl   $0x40,-0x18(%ebp)
 804c1f6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804c1fd:	8b 45 10             	mov    0x10(%ebp),%eax
 804c200:	99                   	cltd   
 804c201:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 804c204:	8b 5d ec             	mov    -0x14(%ebp),%ebx
 804c207:	83 c1 ff             	add    $0xffffffff,%ecx
 804c20a:	83 d3 ff             	adc    $0xffffffff,%ebx
 804c20d:	89 c6                	mov    %eax,%esi
 804c20f:	21 ce                	and    %ecx,%esi
 804c211:	89 75 f0             	mov    %esi,-0x10(%ebp)
 804c214:	89 d0                	mov    %edx,%eax
 804c216:	21 d8                	and    %ebx,%eax
 804c218:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804c21b:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804c21e:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c221:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c224:	0f a5 c2             	shld   %cl,%eax,%edx
 804c227:	d3 e0                	shl    %cl,%eax
 804c229:	f6 c1 20             	test   $0x20,%cl
 804c22c:	74 04                	je     804c232 <math__bits__rotate_left_64+0x57>
 804c22e:	89 c2                	mov    %eax,%edx
 804c230:	31 c0                	xor    %eax,%eax
 804c232:	89 c3                	mov    %eax,%ebx
 804c234:	89 d6                	mov    %edx,%esi
 804c236:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804c239:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804c23c:	29 c2                	sub    %eax,%edx
 804c23e:	89 d1                	mov    %edx,%ecx
 804c240:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c243:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c246:	0f ad d0             	shrd   %cl,%edx,%eax
 804c249:	d3 ea                	shr    %cl,%edx
 804c24b:	f6 c1 20             	test   $0x20,%cl
 804c24e:	74 04                	je     804c254 <math__bits__rotate_left_64+0x79>
 804c250:	89 d0                	mov    %edx,%eax
 804c252:	31 d2                	xor    %edx,%edx
 804c254:	89 d9                	mov    %ebx,%ecx
 804c256:	09 c1                	or     %eax,%ecx
 804c258:	89 4d d8             	mov    %ecx,-0x28(%ebp)
 804c25b:	89 f3                	mov    %esi,%ebx
 804c25d:	09 d3                	or     %edx,%ebx
 804c25f:	89 5d dc             	mov    %ebx,-0x24(%ebp)
 804c262:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804c265:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804c268:	83 c4 20             	add    $0x20,%esp
 804c26b:	5b                   	pop    %ebx
 804c26c:	5e                   	pop    %esi
 804c26d:	5d                   	pop    %ebp
 804c26e:	c3                   	ret    

0804c26f <math__bits__reverse_8>:
 804c26f:	55                   	push   %ebp
 804c270:	89 e5                	mov    %esp,%ebp
 804c272:	83 ec 18             	sub    $0x18,%esp
 804c275:	8b 45 08             	mov    0x8(%ebp),%eax
 804c278:	88 45 f4             	mov    %al,-0xc(%ebp)
 804c27b:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
 804c27f:	83 ec 0c             	sub    $0xc,%esp
 804c282:	50                   	push   %eax
 804c283:	ff 35 d8 31 07 08    	pushl  0x80731d8
 804c289:	ff 35 d4 31 07 08    	pushl  0x80731d4
 804c28f:	ff 35 d0 31 07 08    	pushl  0x80731d0
 804c295:	ff 35 cc 31 07 08    	pushl  0x80731cc
 804c29b:	e8 1a a0 00 00       	call   80562ba <array_get>
 804c2a0:	83 c4 20             	add    $0x20,%esp
 804c2a3:	0f b6 00             	movzbl (%eax),%eax
 804c2a6:	c9                   	leave  
 804c2a7:	c3                   	ret    

0804c2a8 <math__bits__reverse_16>:
 804c2a8:	55                   	push   %ebp
 804c2a9:	89 e5                	mov    %esp,%ebp
 804c2ab:	53                   	push   %ebx
 804c2ac:	83 ec 14             	sub    $0x14,%esp
 804c2af:	8b 45 08             	mov    0x8(%ebp),%eax
 804c2b2:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
 804c2b6:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
 804c2ba:	66 c1 e8 08          	shr    $0x8,%ax
 804c2be:	0f b7 c0             	movzwl %ax,%eax
 804c2c1:	83 ec 0c             	sub    $0xc,%esp
 804c2c4:	50                   	push   %eax
 804c2c5:	ff 35 d8 31 07 08    	pushl  0x80731d8
 804c2cb:	ff 35 d4 31 07 08    	pushl  0x80731d4
 804c2d1:	ff 35 d0 31 07 08    	pushl  0x80731d0
 804c2d7:	ff 35 cc 31 07 08    	pushl  0x80731cc
 804c2dd:	e8 d8 9f 00 00       	call   80562ba <array_get>
 804c2e2:	83 c4 20             	add    $0x20,%esp
 804c2e5:	0f b6 00             	movzbl (%eax),%eax
 804c2e8:	0f b6 d8             	movzbl %al,%ebx
 804c2eb:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
 804c2ef:	0f b6 c0             	movzbl %al,%eax
 804c2f2:	83 ec 0c             	sub    $0xc,%esp
 804c2f5:	50                   	push   %eax
 804c2f6:	ff 35 d8 31 07 08    	pushl  0x80731d8
 804c2fc:	ff 35 d4 31 07 08    	pushl  0x80731d4
 804c302:	ff 35 d0 31 07 08    	pushl  0x80731d0
 804c308:	ff 35 cc 31 07 08    	pushl  0x80731cc
 804c30e:	e8 a7 9f 00 00       	call   80562ba <array_get>
 804c313:	83 c4 20             	add    $0x20,%esp
 804c316:	0f b6 00             	movzbl (%eax),%eax
 804c319:	0f b6 c0             	movzbl %al,%eax
 804c31c:	c1 e0 08             	shl    $0x8,%eax
 804c31f:	09 d8                	or     %ebx,%eax
 804c321:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804c324:	c9                   	leave  
 804c325:	c3                   	ret    

0804c326 <math__bits__reverse_32>:
 804c326:	55                   	push   %ebp
 804c327:	89 e5                	mov    %esp,%ebp
 804c329:	57                   	push   %edi
 804c32a:	56                   	push   %esi
 804c32b:	53                   	push   %ebx
 804c32c:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
 804c332:	8b 45 08             	mov    0x8(%ebp),%eax
 804c335:	d1 e8                	shr    %eax
 804c337:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804c33d:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%ebp)
 804c344:	00 00 00 
 804c347:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c34c:	89 c1                	mov    %eax,%ecx
 804c34e:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c353:	a1 f8 30 07 08       	mov    0x80730f8,%eax
 804c358:	8b 15 fc 30 07 08    	mov    0x80730fc,%edx
 804c35e:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c361:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c364:	89 ca                	mov    %ecx,%edx
 804c366:	23 55 d0             	and    -0x30(%ebp),%edx
 804c369:	89 d6                	mov    %edx,%esi
 804c36b:	23 5d d4             	and    -0x2c(%ebp),%ebx
 804c36e:	89 df                	mov    %ebx,%edi
 804c370:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804c376:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
 804c37c:	89 c3                	mov    %eax,%ebx
 804c37e:	21 f3                	and    %esi,%ebx
 804c380:	89 5d c8             	mov    %ebx,-0x38(%ebp)
 804c383:	21 d7                	and    %edx,%edi
 804c385:	89 7d cc             	mov    %edi,-0x34(%ebp)
 804c388:	8b 45 08             	mov    0x8(%ebp),%eax
 804c38b:	ba 00 00 00 00       	mov    $0x0,%edx
 804c390:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c393:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c396:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c39b:	89 c1                	mov    %eax,%ecx
 804c39d:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c3a2:	a1 f8 30 07 08       	mov    0x80730f8,%eax
 804c3a7:	8b 15 fc 30 07 08    	mov    0x80730fc,%edx
 804c3ad:	89 cf                	mov    %ecx,%edi
 804c3af:	21 c7                	and    %eax,%edi
 804c3b1:	89 7d c0             	mov    %edi,-0x40(%ebp)
 804c3b4:	89 df                	mov    %ebx,%edi
 804c3b6:	21 d7                	and    %edx,%edi
 804c3b8:	89 7d c4             	mov    %edi,-0x3c(%ebp)
 804c3bb:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804c3be:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804c3c1:	89 c7                	mov    %eax,%edi
 804c3c3:	8b 5d d0             	mov    -0x30(%ebp),%ebx
 804c3c6:	8b 75 d4             	mov    -0x2c(%ebp),%esi
 804c3c9:	21 df                	and    %ebx,%edi
 804c3cb:	89 7d b8             	mov    %edi,-0x48(%ebp)
 804c3ce:	89 f7                	mov    %esi,%edi
 804c3d0:	21 d7                	and    %edx,%edi
 804c3d2:	89 7d bc             	mov    %edi,-0x44(%ebp)
 804c3d5:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804c3d8:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804c3db:	0f a4 c2 01          	shld   $0x1,%eax,%edx
 804c3df:	01 c0                	add    %eax,%eax
 804c3e1:	8b 5d c8             	mov    -0x38(%ebp),%ebx
 804c3e4:	8b 75 cc             	mov    -0x34(%ebp),%esi
 804c3e7:	89 d9                	mov    %ebx,%ecx
 804c3e9:	09 c1                	or     %eax,%ecx
 804c3eb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 804c3ee:	89 f7                	mov    %esi,%edi
 804c3f0:	09 d7                	or     %edx,%edi
 804c3f2:	89 f8                	mov    %edi,%eax
 804c3f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c3f7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c3fa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c3fd:	0f ac d0 02          	shrd   $0x2,%edx,%eax
 804c401:	c1 ea 02             	shr    $0x2,%edx
 804c404:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c407:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c40a:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c40f:	89 c1                	mov    %eax,%ecx
 804c411:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c416:	a1 b0 31 07 08       	mov    0x80731b0,%eax
 804c41b:	8b 15 b4 31 07 08    	mov    0x80731b4,%edx
 804c421:	89 cf                	mov    %ecx,%edi
 804c423:	21 c7                	and    %eax,%edi
 804c425:	89 7d b0             	mov    %edi,-0x50(%ebp)
 804c428:	21 d3                	and    %edx,%ebx
 804c42a:	89 5d b4             	mov    %ebx,-0x4c(%ebp)
 804c42d:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804c430:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804c433:	89 c7                	mov    %eax,%edi
 804c435:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 804c438:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
 804c43b:	21 cf                	and    %ecx,%edi
 804c43d:	89 7d a8             	mov    %edi,-0x58(%ebp)
 804c440:	89 de                	mov    %ebx,%esi
 804c442:	21 d6                	and    %edx,%esi
 804c444:	89 75 ac             	mov    %esi,-0x54(%ebp)
 804c447:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c44c:	89 c1                	mov    %eax,%ecx
 804c44e:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c453:	a1 b0 31 07 08       	mov    0x80731b0,%eax
 804c458:	8b 15 b4 31 07 08    	mov    0x80731b4,%edx
 804c45e:	89 cf                	mov    %ecx,%edi
 804c460:	21 c7                	and    %eax,%edi
 804c462:	89 7d a0             	mov    %edi,-0x60(%ebp)
 804c465:	21 d3                	and    %edx,%ebx
 804c467:	89 5d a4             	mov    %ebx,-0x5c(%ebp)
 804c46a:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804c46d:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804c470:	89 c6                	mov    %eax,%esi
 804c472:	23 75 e0             	and    -0x20(%ebp),%esi
 804c475:	89 75 98             	mov    %esi,-0x68(%ebp)
 804c478:	89 d0                	mov    %edx,%eax
 804c47a:	23 45 e4             	and    -0x1c(%ebp),%eax
 804c47d:	89 45 9c             	mov    %eax,-0x64(%ebp)
 804c480:	8b 45 98             	mov    -0x68(%ebp),%eax
 804c483:	8b 55 9c             	mov    -0x64(%ebp),%edx
 804c486:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 804c48a:	c1 e0 02             	shl    $0x2,%eax
 804c48d:	8b 5d a8             	mov    -0x58(%ebp),%ebx
 804c490:	8b 75 ac             	mov    -0x54(%ebp),%esi
 804c493:	89 d9                	mov    %ebx,%ecx
 804c495:	09 c1                	or     %eax,%ecx
 804c497:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 804c49a:	89 f3                	mov    %esi,%ebx
 804c49c:	09 d3                	or     %edx,%ebx
 804c49e:	89 d8                	mov    %ebx,%eax
 804c4a0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c4a3:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c4a6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c4a9:	0f ac d0 04          	shrd   $0x4,%edx,%eax
 804c4ad:	c1 ea 04             	shr    $0x4,%edx
 804c4b0:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c4b3:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c4b6:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c4bb:	89 c1                	mov    %eax,%ecx
 804c4bd:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c4c2:	a1 18 31 07 08       	mov    0x8073118,%eax
 804c4c7:	8b 15 1c 31 07 08    	mov    0x807311c,%edx
 804c4cd:	89 cf                	mov    %ecx,%edi
 804c4cf:	21 c7                	and    %eax,%edi
 804c4d1:	89 7d 90             	mov    %edi,-0x70(%ebp)
 804c4d4:	89 de                	mov    %ebx,%esi
 804c4d6:	21 d6                	and    %edx,%esi
 804c4d8:	89 75 94             	mov    %esi,-0x6c(%ebp)
 804c4db:	8b 45 90             	mov    -0x70(%ebp),%eax
 804c4de:	8b 55 94             	mov    -0x6c(%ebp),%edx
 804c4e1:	89 c7                	mov    %eax,%edi
 804c4e3:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 804c4e6:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
 804c4e9:	21 cf                	and    %ecx,%edi
 804c4eb:	89 7d 88             	mov    %edi,-0x78(%ebp)
 804c4ee:	89 de                	mov    %ebx,%esi
 804c4f0:	21 d6                	and    %edx,%esi
 804c4f2:	89 75 8c             	mov    %esi,-0x74(%ebp)
 804c4f5:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c4fa:	89 c1                	mov    %eax,%ecx
 804c4fc:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c501:	a1 18 31 07 08       	mov    0x8073118,%eax
 804c506:	8b 15 1c 31 07 08    	mov    0x807311c,%edx
 804c50c:	89 cf                	mov    %ecx,%edi
 804c50e:	21 c7                	and    %eax,%edi
 804c510:	89 7d 80             	mov    %edi,-0x80(%ebp)
 804c513:	21 d3                	and    %edx,%ebx
 804c515:	89 5d 84             	mov    %ebx,-0x7c(%ebp)
 804c518:	8b 45 80             	mov    -0x80(%ebp),%eax
 804c51b:	8b 55 84             	mov    -0x7c(%ebp),%edx
 804c51e:	89 c6                	mov    %eax,%esi
 804c520:	23 75 e0             	and    -0x20(%ebp),%esi
 804c523:	89 b5 78 ff ff ff    	mov    %esi,-0x88(%ebp)
 804c529:	89 d0                	mov    %edx,%eax
 804c52b:	23 45 e4             	and    -0x1c(%ebp),%eax
 804c52e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804c534:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804c53a:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 804c540:	0f a4 c2 04          	shld   $0x4,%eax,%edx
 804c544:	c1 e0 04             	shl    $0x4,%eax
 804c547:	8b 5d 88             	mov    -0x78(%ebp),%ebx
 804c54a:	8b 75 8c             	mov    -0x74(%ebp),%esi
 804c54d:	89 d9                	mov    %ebx,%ecx
 804c54f:	09 c1                	or     %eax,%ecx
 804c551:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 804c554:	89 f3                	mov    %esi,%ebx
 804c556:	09 d3                	or     %edx,%ebx
 804c558:	89 d8                	mov    %ebx,%eax
 804c55a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c55d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c560:	83 ec 0c             	sub    $0xc,%esp
 804c563:	50                   	push   %eax
 804c564:	e8 7e 02 00 00       	call   804c7e7 <math__bits__reverse_bytes_32>
 804c569:	83 c4 10             	add    $0x10,%esp
 804c56c:	8d 65 f4             	lea    -0xc(%ebp),%esp
 804c56f:	5b                   	pop    %ebx
 804c570:	5e                   	pop    %esi
 804c571:	5f                   	pop    %edi
 804c572:	5d                   	pop    %ebp
 804c573:	c3                   	ret    

0804c574 <math__bits__reverse_64>:
 804c574:	55                   	push   %ebp
 804c575:	89 e5                	mov    %esp,%ebp
 804c577:	57                   	push   %edi
 804c578:	56                   	push   %esi
 804c579:	53                   	push   %ebx
 804c57a:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
 804c580:	8b 45 08             	mov    0x8(%ebp),%eax
 804c583:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c586:	8b 45 0c             	mov    0xc(%ebp),%eax
 804c589:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804c58c:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804c58f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804c592:	0f ac d0 01          	shrd   $0x1,%edx,%eax
 804c596:	d1 ea                	shr    %edx
 804c598:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804c59b:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804c59e:	8b 0d f8 30 07 08    	mov    0x80730f8,%ecx
 804c5a4:	8b 1d fc 30 07 08    	mov    0x80730fc,%ebx
 804c5aa:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c5af:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c5b5:	89 cf                	mov    %ecx,%edi
 804c5b7:	21 c7                	and    %eax,%edi
 804c5b9:	89 7d c0             	mov    %edi,-0x40(%ebp)
 804c5bc:	89 df                	mov    %ebx,%edi
 804c5be:	21 d7                	and    %edx,%edi
 804c5c0:	89 7d c4             	mov    %edi,-0x3c(%ebp)
 804c5c3:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804c5c6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804c5c9:	89 c7                	mov    %eax,%edi
 804c5cb:	23 7d c8             	and    -0x38(%ebp),%edi
 804c5ce:	89 7d b8             	mov    %edi,-0x48(%ebp)
 804c5d1:	8b 7d cc             	mov    -0x34(%ebp),%edi
 804c5d4:	21 d7                	and    %edx,%edi
 804c5d6:	89 7d bc             	mov    %edi,-0x44(%ebp)
 804c5d9:	8b 0d f8 30 07 08    	mov    0x80730f8,%ecx
 804c5df:	8b 1d fc 30 07 08    	mov    0x80730fc,%ebx
 804c5e5:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c5ea:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c5f0:	89 cf                	mov    %ecx,%edi
 804c5f2:	21 c7                	and    %eax,%edi
 804c5f4:	89 7d b0             	mov    %edi,-0x50(%ebp)
 804c5f7:	21 d3                	and    %edx,%ebx
 804c5f9:	89 5d b4             	mov    %ebx,-0x4c(%ebp)
 804c5fc:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804c5ff:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804c602:	89 c3                	mov    %eax,%ebx
 804c604:	23 5d d0             	and    -0x30(%ebp),%ebx
 804c607:	89 5d a8             	mov    %ebx,-0x58(%ebp)
 804c60a:	89 d0                	mov    %edx,%eax
 804c60c:	23 45 d4             	and    -0x2c(%ebp),%eax
 804c60f:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804c612:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804c615:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804c618:	0f a4 c2 01          	shld   $0x1,%eax,%edx
 804c61c:	01 c0                	add    %eax,%eax
 804c61e:	8b 5d b8             	mov    -0x48(%ebp),%ebx
 804c621:	8b 75 bc             	mov    -0x44(%ebp),%esi
 804c624:	89 d9                	mov    %ebx,%ecx
 804c626:	09 c1                	or     %eax,%ecx
 804c628:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 804c62b:	89 f7                	mov    %esi,%edi
 804c62d:	09 d7                	or     %edx,%edi
 804c62f:	89 f8                	mov    %edi,%eax
 804c631:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c634:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c637:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c63a:	0f ac d0 02          	shrd   $0x2,%edx,%eax
 804c63e:	c1 ea 02             	shr    $0x2,%edx
 804c641:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804c644:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804c647:	8b 0d b0 31 07 08    	mov    0x80731b0,%ecx
 804c64d:	8b 1d b4 31 07 08    	mov    0x80731b4,%ebx
 804c653:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c658:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c65e:	89 ce                	mov    %ecx,%esi
 804c660:	21 c6                	and    %eax,%esi
 804c662:	89 75 a0             	mov    %esi,-0x60(%ebp)
 804c665:	89 df                	mov    %ebx,%edi
 804c667:	21 d7                	and    %edx,%edi
 804c669:	89 7d a4             	mov    %edi,-0x5c(%ebp)
 804c66c:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804c66f:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804c672:	89 c3                	mov    %eax,%ebx
 804c674:	23 5d c8             	and    -0x38(%ebp),%ebx
 804c677:	89 5d 98             	mov    %ebx,-0x68(%ebp)
 804c67a:	8b 75 cc             	mov    -0x34(%ebp),%esi
 804c67d:	21 d6                	and    %edx,%esi
 804c67f:	89 75 9c             	mov    %esi,-0x64(%ebp)
 804c682:	8b 0d b0 31 07 08    	mov    0x80731b0,%ecx
 804c688:	8b 1d b4 31 07 08    	mov    0x80731b4,%ebx
 804c68e:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c693:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c699:	89 cf                	mov    %ecx,%edi
 804c69b:	21 c7                	and    %eax,%edi
 804c69d:	89 7d 90             	mov    %edi,-0x70(%ebp)
 804c6a0:	21 d3                	and    %edx,%ebx
 804c6a2:	89 5d 94             	mov    %ebx,-0x6c(%ebp)
 804c6a5:	8b 45 90             	mov    -0x70(%ebp),%eax
 804c6a8:	8b 55 94             	mov    -0x6c(%ebp),%edx
 804c6ab:	89 c6                	mov    %eax,%esi
 804c6ad:	23 75 e0             	and    -0x20(%ebp),%esi
 804c6b0:	89 75 88             	mov    %esi,-0x78(%ebp)
 804c6b3:	89 d0                	mov    %edx,%eax
 804c6b5:	23 45 e4             	and    -0x1c(%ebp),%eax
 804c6b8:	89 45 8c             	mov    %eax,-0x74(%ebp)
 804c6bb:	8b 45 88             	mov    -0x78(%ebp),%eax
 804c6be:	8b 55 8c             	mov    -0x74(%ebp),%edx
 804c6c1:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 804c6c5:	c1 e0 02             	shl    $0x2,%eax
 804c6c8:	8b 5d 98             	mov    -0x68(%ebp),%ebx
 804c6cb:	8b 75 9c             	mov    -0x64(%ebp),%esi
 804c6ce:	89 d9                	mov    %ebx,%ecx
 804c6d0:	09 c1                	or     %eax,%ecx
 804c6d2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 804c6d5:	89 f7                	mov    %esi,%edi
 804c6d7:	09 d7                	or     %edx,%edi
 804c6d9:	89 f8                	mov    %edi,%eax
 804c6db:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c6de:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804c6e1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804c6e4:	0f ac d0 04          	shrd   $0x4,%edx,%eax
 804c6e8:	c1 ea 04             	shr    $0x4,%edx
 804c6eb:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804c6ee:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804c6f1:	8b 0d 18 31 07 08    	mov    0x8073118,%ecx
 804c6f7:	8b 1d 1c 31 07 08    	mov    0x807311c,%ebx
 804c6fd:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c702:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c708:	89 ce                	mov    %ecx,%esi
 804c70a:	21 c6                	and    %eax,%esi
 804c70c:	89 75 80             	mov    %esi,-0x80(%ebp)
 804c70f:	89 df                	mov    %ebx,%edi
 804c711:	21 d7                	and    %edx,%edi
 804c713:	89 7d 84             	mov    %edi,-0x7c(%ebp)
 804c716:	8b 45 80             	mov    -0x80(%ebp),%eax
 804c719:	8b 55 84             	mov    -0x7c(%ebp),%edx
 804c71c:	89 c3                	mov    %eax,%ebx
 804c71e:	23 5d c8             	and    -0x38(%ebp),%ebx
 804c721:	89 9d 78 ff ff ff    	mov    %ebx,-0x88(%ebp)
 804c727:	8b 75 cc             	mov    -0x34(%ebp),%esi
 804c72a:	21 d6                	and    %edx,%esi
 804c72c:	89 b5 7c ff ff ff    	mov    %esi,-0x84(%ebp)
 804c732:	8b 0d 18 31 07 08    	mov    0x8073118,%ecx
 804c738:	8b 1d 1c 31 07 08    	mov    0x807311c,%ebx
 804c73e:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c743:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c749:	89 cf                	mov    %ecx,%edi
 804c74b:	21 c7                	and    %eax,%edi
 804c74d:	89 bd 70 ff ff ff    	mov    %edi,-0x90(%ebp)
 804c753:	21 d3                	and    %edx,%ebx
 804c755:	89 9d 74 ff ff ff    	mov    %ebx,-0x8c(%ebp)
 804c75b:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804c761:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
 804c767:	89 c6                	mov    %eax,%esi
 804c769:	23 75 e0             	and    -0x20(%ebp),%esi
 804c76c:	89 b5 68 ff ff ff    	mov    %esi,-0x98(%ebp)
 804c772:	89 d0                	mov    %edx,%eax
 804c774:	23 45 e4             	and    -0x1c(%ebp),%eax
 804c777:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804c77d:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 804c783:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 804c789:	0f a4 c2 04          	shld   $0x4,%eax,%edx
 804c78d:	c1 e0 04             	shl    $0x4,%eax
 804c790:	8b 9d 78 ff ff ff    	mov    -0x88(%ebp),%ebx
 804c796:	8b b5 7c ff ff ff    	mov    -0x84(%ebp),%esi
 804c79c:	89 d9                	mov    %ebx,%ecx
 804c79e:	09 c1                	or     %eax,%ecx
 804c7a0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 804c7a3:	89 f7                	mov    %esi,%edi
 804c7a5:	09 d7                	or     %edx,%edi
 804c7a7:	89 f8                	mov    %edi,%eax
 804c7a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804c7ac:	83 ec 08             	sub    $0x8,%esp
 804c7af:	ff 75 e4             	pushl  -0x1c(%ebp)
 804c7b2:	ff 75 e0             	pushl  -0x20(%ebp)
 804c7b5:	e8 10 01 00 00       	call   804c8ca <math__bits__reverse_bytes_64>
 804c7ba:	83 c4 10             	add    $0x10,%esp
 804c7bd:	8d 65 f4             	lea    -0xc(%ebp),%esp
 804c7c0:	5b                   	pop    %ebx
 804c7c1:	5e                   	pop    %esi
 804c7c2:	5f                   	pop    %edi
 804c7c3:	5d                   	pop    %ebp
 804c7c4:	c3                   	ret    

0804c7c5 <math__bits__reverse_bytes_16>:
 804c7c5:	55                   	push   %ebp
 804c7c6:	89 e5                	mov    %esp,%ebp
 804c7c8:	83 ec 04             	sub    $0x4,%esp
 804c7cb:	8b 45 08             	mov    0x8(%ebp),%eax
 804c7ce:	66 89 45 fc          	mov    %ax,-0x4(%ebp)
 804c7d2:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax
 804c7d6:	66 c1 e8 08          	shr    $0x8,%ax
 804c7da:	89 c2                	mov    %eax,%edx
 804c7dc:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax
 804c7e0:	c1 e0 08             	shl    $0x8,%eax
 804c7e3:	09 d0                	or     %edx,%eax
 804c7e5:	c9                   	leave  
 804c7e6:	c3                   	ret    

0804c7e7 <math__bits__reverse_bytes_32>:
 804c7e7:	55                   	push   %ebp
 804c7e8:	89 e5                	mov    %esp,%ebp
 804c7ea:	57                   	push   %edi
 804c7eb:	56                   	push   %esi
 804c7ec:	53                   	push   %ebx
 804c7ed:	83 ec 3c             	sub    $0x3c,%esp
 804c7f0:	8b 45 08             	mov    0x8(%ebp),%eax
 804c7f3:	c1 e8 08             	shr    $0x8,%eax
 804c7f6:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804c7f9:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 804c800:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c805:	89 c1                	mov    %eax,%ecx
 804c807:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c80c:	a1 b8 31 07 08       	mov    0x80731b8,%eax
 804c811:	8b 15 bc 31 07 08    	mov    0x80731bc,%edx
 804c817:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804c81a:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804c81d:	89 ca                	mov    %ecx,%edx
 804c81f:	23 55 d8             	and    -0x28(%ebp),%edx
 804c822:	89 d6                	mov    %edx,%esi
 804c824:	23 5d dc             	and    -0x24(%ebp),%ebx
 804c827:	89 df                	mov    %ebx,%edi
 804c829:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804c82c:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804c82f:	89 c3                	mov    %eax,%ebx
 804c831:	21 f3                	and    %esi,%ebx
 804c833:	89 5d d0             	mov    %ebx,-0x30(%ebp)
 804c836:	21 d7                	and    %edx,%edi
 804c838:	89 7d d4             	mov    %edi,-0x2c(%ebp)
 804c83b:	8b 45 08             	mov    0x8(%ebp),%eax
 804c83e:	ba 00 00 00 00       	mov    $0x0,%edx
 804c843:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804c846:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804c849:	a1 40 31 07 08       	mov    0x8073140,%eax
 804c84e:	89 c1                	mov    %eax,%ecx
 804c850:	bb 00 00 00 00       	mov    $0x0,%ebx
 804c855:	a1 b8 31 07 08       	mov    0x80731b8,%eax
 804c85a:	8b 15 bc 31 07 08    	mov    0x80731bc,%edx
 804c860:	89 cf                	mov    %ecx,%edi
 804c862:	21 c7                	and    %eax,%edi
 804c864:	89 7d c8             	mov    %edi,-0x38(%ebp)
 804c867:	89 df                	mov    %ebx,%edi
 804c869:	21 d7                	and    %edx,%edi
 804c86b:	89 7d cc             	mov    %edi,-0x34(%ebp)
 804c86e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804c871:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804c874:	89 c7                	mov    %eax,%edi
 804c876:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804c879:	8b 5d dc             	mov    -0x24(%ebp),%ebx
 804c87c:	21 cf                	and    %ecx,%edi
 804c87e:	89 7d c0             	mov    %edi,-0x40(%ebp)
 804c881:	89 de                	mov    %ebx,%esi
 804c883:	21 d6                	and    %edx,%esi
 804c885:	89 75 c4             	mov    %esi,-0x3c(%ebp)
 804c888:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804c88b:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804c88e:	0f a4 c2 08          	shld   $0x8,%eax,%edx
 804c892:	c1 e0 08             	shl    $0x8,%eax
 804c895:	8b 5d d0             	mov    -0x30(%ebp),%ebx
 804c898:	8b 75 d4             	mov    -0x2c(%ebp),%esi
 804c89b:	89 d9                	mov    %ebx,%ecx
 804c89d:	09 c1                	or     %eax,%ecx
 804c89f:	89 4d e8             	mov    %ecx,-0x18(%ebp)
 804c8a2:	89 f3                	mov    %esi,%ebx
 804c8a4:	09 d3                	or     %edx,%ebx
 804c8a6:	89 d8                	mov    %ebx,%eax
 804c8a8:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804c8ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c8ae:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804c8b1:	0f ac d0 10          	shrd   $0x10,%edx,%eax
 804c8b5:	c1 ea 10             	shr    $0x10,%edx
 804c8b8:	89 c2                	mov    %eax,%edx
 804c8ba:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c8bd:	c1 e0 10             	shl    $0x10,%eax
 804c8c0:	09 d0                	or     %edx,%eax
 804c8c2:	83 c4 3c             	add    $0x3c,%esp
 804c8c5:	5b                   	pop    %ebx
 804c8c6:	5e                   	pop    %esi
 804c8c7:	5f                   	pop    %edi
 804c8c8:	5d                   	pop    %ebp
 804c8c9:	c3                   	ret    

0804c8ca <math__bits__reverse_bytes_64>:
 804c8ca:	55                   	push   %ebp
 804c8cb:	89 e5                	mov    %esp,%ebp
 804c8cd:	57                   	push   %edi
 804c8ce:	56                   	push   %esi
 804c8cf:	53                   	push   %ebx
 804c8d0:	83 ec 6c             	sub    $0x6c,%esp
 804c8d3:	8b 45 08             	mov    0x8(%ebp),%eax
 804c8d6:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804c8d9:	8b 45 0c             	mov    0xc(%ebp),%eax
 804c8dc:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804c8df:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804c8e2:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804c8e5:	0f ac d0 08          	shrd   $0x8,%edx,%eax
 804c8e9:	c1 ea 08             	shr    $0x8,%edx
 804c8ec:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c8ef:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c8f2:	8b 0d b8 31 07 08    	mov    0x80731b8,%ecx
 804c8f8:	8b 1d bc 31 07 08    	mov    0x80731bc,%ebx
 804c8fe:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c903:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c909:	89 cf                	mov    %ecx,%edi
 804c90b:	21 c7                	and    %eax,%edi
 804c90d:	89 7d c8             	mov    %edi,-0x38(%ebp)
 804c910:	89 df                	mov    %ebx,%edi
 804c912:	21 d7                	and    %edx,%edi
 804c914:	89 7d cc             	mov    %edi,-0x34(%ebp)
 804c917:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804c91a:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804c91d:	89 c7                	mov    %eax,%edi
 804c91f:	23 7d d0             	and    -0x30(%ebp),%edi
 804c922:	89 7d c0             	mov    %edi,-0x40(%ebp)
 804c925:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
 804c928:	21 d3                	and    %edx,%ebx
 804c92a:	89 5d c4             	mov    %ebx,-0x3c(%ebp)
 804c92d:	8b 0d b8 31 07 08    	mov    0x80731b8,%ecx
 804c933:	8b 1d bc 31 07 08    	mov    0x80731bc,%ebx
 804c939:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c93e:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c944:	89 cf                	mov    %ecx,%edi
 804c946:	21 c7                	and    %eax,%edi
 804c948:	89 7d b8             	mov    %edi,-0x48(%ebp)
 804c94b:	21 d3                	and    %edx,%ebx
 804c94d:	89 5d bc             	mov    %ebx,-0x44(%ebp)
 804c950:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804c953:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804c956:	89 c6                	mov    %eax,%esi
 804c958:	23 75 d8             	and    -0x28(%ebp),%esi
 804c95b:	89 75 b0             	mov    %esi,-0x50(%ebp)
 804c95e:	89 d0                	mov    %edx,%eax
 804c960:	23 45 dc             	and    -0x24(%ebp),%eax
 804c963:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 804c966:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804c969:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804c96c:	0f a4 c2 08          	shld   $0x8,%eax,%edx
 804c970:	c1 e0 08             	shl    $0x8,%eax
 804c973:	8b 5d c0             	mov    -0x40(%ebp),%ebx
 804c976:	8b 75 c4             	mov    -0x3c(%ebp),%esi
 804c979:	89 d9                	mov    %ebx,%ecx
 804c97b:	09 c1                	or     %eax,%ecx
 804c97d:	89 4d e8             	mov    %ecx,-0x18(%ebp)
 804c980:	89 f7                	mov    %esi,%edi
 804c982:	09 d7                	or     %edx,%edi
 804c984:	89 f8                	mov    %edi,%eax
 804c986:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804c989:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804c98c:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804c98f:	0f ac d0 10          	shrd   $0x10,%edx,%eax
 804c993:	c1 ea 10             	shr    $0x10,%edx
 804c996:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804c999:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804c99c:	8b 0d 00 31 07 08    	mov    0x8073100,%ecx
 804c9a2:	8b 1d 04 31 07 08    	mov    0x8073104,%ebx
 804c9a8:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c9ad:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c9b3:	89 ce                	mov    %ecx,%esi
 804c9b5:	21 c6                	and    %eax,%esi
 804c9b7:	89 75 a8             	mov    %esi,-0x58(%ebp)
 804c9ba:	89 df                	mov    %ebx,%edi
 804c9bc:	21 d7                	and    %edx,%edi
 804c9be:	89 7d ac             	mov    %edi,-0x54(%ebp)
 804c9c1:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804c9c4:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804c9c7:	89 c3                	mov    %eax,%ebx
 804c9c9:	23 5d d0             	and    -0x30(%ebp),%ebx
 804c9cc:	89 5d a0             	mov    %ebx,-0x60(%ebp)
 804c9cf:	8b 75 d4             	mov    -0x2c(%ebp),%esi
 804c9d2:	21 d6                	and    %edx,%esi
 804c9d4:	89 75 a4             	mov    %esi,-0x5c(%ebp)
 804c9d7:	8b 0d 00 31 07 08    	mov    0x8073100,%ecx
 804c9dd:	8b 1d 04 31 07 08    	mov    0x8073104,%ebx
 804c9e3:	a1 58 31 07 08       	mov    0x8073158,%eax
 804c9e8:	8b 15 5c 31 07 08    	mov    0x807315c,%edx
 804c9ee:	89 cf                	mov    %ecx,%edi
 804c9f0:	21 c7                	and    %eax,%edi
 804c9f2:	89 7d 98             	mov    %edi,-0x68(%ebp)
 804c9f5:	21 d3                	and    %edx,%ebx
 804c9f7:	89 5d 9c             	mov    %ebx,-0x64(%ebp)
 804c9fa:	8b 45 98             	mov    -0x68(%ebp),%eax
 804c9fd:	8b 55 9c             	mov    -0x64(%ebp),%edx
 804ca00:	89 c6                	mov    %eax,%esi
 804ca02:	23 75 e8             	and    -0x18(%ebp),%esi
 804ca05:	89 75 90             	mov    %esi,-0x70(%ebp)
 804ca08:	89 d0                	mov    %edx,%eax
 804ca0a:	23 45 ec             	and    -0x14(%ebp),%eax
 804ca0d:	89 45 94             	mov    %eax,-0x6c(%ebp)
 804ca10:	8b 45 90             	mov    -0x70(%ebp),%eax
 804ca13:	8b 55 94             	mov    -0x6c(%ebp),%edx
 804ca16:	0f a4 c2 10          	shld   $0x10,%eax,%edx
 804ca1a:	c1 e0 10             	shl    $0x10,%eax
 804ca1d:	8b 5d a0             	mov    -0x60(%ebp),%ebx
 804ca20:	8b 75 a4             	mov    -0x5c(%ebp),%esi
 804ca23:	89 d9                	mov    %ebx,%ecx
 804ca25:	09 c1                	or     %eax,%ecx
 804ca27:	89 4d e8             	mov    %ecx,-0x18(%ebp)
 804ca2a:	89 f7                	mov    %esi,%edi
 804ca2c:	09 d7                	or     %edx,%edi
 804ca2e:	89 f8                	mov    %edi,%eax
 804ca30:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804ca33:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804ca36:	89 45 88             	mov    %eax,-0x78(%ebp)
 804ca39:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ca3c:	89 45 8c             	mov    %eax,-0x74(%ebp)
 804ca3f:	8b 45 88             	mov    -0x78(%ebp),%eax
 804ca42:	8b 55 8c             	mov    -0x74(%ebp),%edx
 804ca45:	83 c4 6c             	add    $0x6c,%esp
 804ca48:	5b                   	pop    %ebx
 804ca49:	5e                   	pop    %esi
 804ca4a:	5f                   	pop    %edi
 804ca4b:	5d                   	pop    %ebp
 804ca4c:	c3                   	ret    

0804ca4d <math__bits__len_8>:
 804ca4d:	55                   	push   %ebp
 804ca4e:	89 e5                	mov    %esp,%ebp
 804ca50:	83 ec 18             	sub    $0x18,%esp
 804ca53:	8b 45 08             	mov    0x8(%ebp),%eax
 804ca56:	88 45 f4             	mov    %al,-0xc(%ebp)
 804ca59:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
 804ca5d:	83 ec 0c             	sub    $0xc,%esp
 804ca60:	50                   	push   %eax
 804ca61:	ff 35 14 31 07 08    	pushl  0x8073114
 804ca67:	ff 35 10 31 07 08    	pushl  0x8073110
 804ca6d:	ff 35 0c 31 07 08    	pushl  0x807310c
 804ca73:	ff 35 08 31 07 08    	pushl  0x8073108
 804ca79:	e8 3c 98 00 00       	call   80562ba <array_get>
 804ca7e:	83 c4 20             	add    $0x20,%esp
 804ca81:	0f b6 00             	movzbl (%eax),%eax
 804ca84:	0f b6 c0             	movzbl %al,%eax
 804ca87:	c9                   	leave  
 804ca88:	c3                   	ret    

0804ca89 <math__bits__len_16>:
 804ca89:	55                   	push   %ebp
 804ca8a:	89 e5                	mov    %esp,%ebp
 804ca8c:	83 ec 28             	sub    $0x28,%esp
 804ca8f:	8b 45 08             	mov    0x8(%ebp),%eax
 804ca92:	66 89 45 e4          	mov    %ax,-0x1c(%ebp)
 804ca96:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
 804ca9a:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
 804ca9e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804caa5:	66 81 7d f2 ff 00    	cmpw   $0xff,-0xe(%ebp)
 804caab:	76 0c                	jbe    804cab9 <math__bits__len_16+0x30>
 804caad:	66 c1 6d f2 08       	shrw   $0x8,-0xe(%ebp)
 804cab2:	c7 45 f4 08 00 00 00 	movl   $0x8,-0xc(%ebp)
 804cab9:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
 804cabd:	83 ec 0c             	sub    $0xc,%esp
 804cac0:	50                   	push   %eax
 804cac1:	ff 35 14 31 07 08    	pushl  0x8073114
 804cac7:	ff 35 10 31 07 08    	pushl  0x8073110
 804cacd:	ff 35 0c 31 07 08    	pushl  0x807310c
 804cad3:	ff 35 08 31 07 08    	pushl  0x8073108
 804cad9:	e8 dc 97 00 00       	call   80562ba <array_get>
 804cade:	83 c4 20             	add    $0x20,%esp
 804cae1:	0f b6 00             	movzbl (%eax),%eax
 804cae4:	0f b6 d0             	movzbl %al,%edx
 804cae7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804caea:	01 d0                	add    %edx,%eax
 804caec:	c9                   	leave  
 804caed:	c3                   	ret    

0804caee <math__bits__len_32>:
 804caee:	55                   	push   %ebp
 804caef:	89 e5                	mov    %esp,%ebp
 804caf1:	83 ec 18             	sub    $0x18,%esp
 804caf4:	8b 45 08             	mov    0x8(%ebp),%eax
 804caf7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804cafa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804cb01:	81 7d f0 ff ff 00 00 	cmpl   $0xffff,-0x10(%ebp)
 804cb08:	76 0b                	jbe    804cb15 <math__bits__len_32+0x27>
 804cb0a:	c1 6d f0 10          	shrl   $0x10,-0x10(%ebp)
 804cb0e:	c7 45 f4 10 00 00 00 	movl   $0x10,-0xc(%ebp)
 804cb15:	81 7d f0 ff 00 00 00 	cmpl   $0xff,-0x10(%ebp)
 804cb1c:	76 08                	jbe    804cb26 <math__bits__len_32+0x38>
 804cb1e:	c1 6d f0 08          	shrl   $0x8,-0x10(%ebp)
 804cb22:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
 804cb26:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cb29:	83 ec 0c             	sub    $0xc,%esp
 804cb2c:	50                   	push   %eax
 804cb2d:	ff 35 14 31 07 08    	pushl  0x8073114
 804cb33:	ff 35 10 31 07 08    	pushl  0x8073110
 804cb39:	ff 35 0c 31 07 08    	pushl  0x807310c
 804cb3f:	ff 35 08 31 07 08    	pushl  0x8073108
 804cb45:	e8 70 97 00 00       	call   80562ba <array_get>
 804cb4a:	83 c4 20             	add    $0x20,%esp
 804cb4d:	0f b6 00             	movzbl (%eax),%eax
 804cb50:	0f b6 d0             	movzbl %al,%edx
 804cb53:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804cb56:	01 d0                	add    %edx,%eax
 804cb58:	c9                   	leave  
 804cb59:	c3                   	ret    

0804cb5a <math__bits__len_64>:
 804cb5a:	55                   	push   %ebp
 804cb5b:	89 e5                	mov    %esp,%ebp
 804cb5d:	83 ec 28             	sub    $0x28,%esp
 804cb60:	8b 45 08             	mov    0x8(%ebp),%eax
 804cb63:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804cb66:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cb69:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804cb6c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804cb6f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804cb72:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804cb75:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804cb78:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804cb7f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804cb83:	76 17                	jbe    804cb9c <math__bits__len_64+0x42>
 804cb85:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cb88:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804cb8b:	89 d0                	mov    %edx,%eax
 804cb8d:	31 d2                	xor    %edx,%edx
 804cb8f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804cb92:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804cb95:	c7 45 ec 20 00 00 00 	movl   $0x20,-0x14(%ebp)
 804cb9c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804cba0:	72 26                	jb     804cbc8 <math__bits__len_64+0x6e>
 804cba2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804cba6:	77 09                	ja     804cbb1 <math__bits__len_64+0x57>
 804cba8:	81 7d f0 ff ff 00 00 	cmpl   $0xffff,-0x10(%ebp)
 804cbaf:	76 17                	jbe    804cbc8 <math__bits__len_64+0x6e>
 804cbb1:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cbb4:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804cbb7:	0f ac d0 10          	shrd   $0x10,%edx,%eax
 804cbbb:	c1 ea 10             	shr    $0x10,%edx
 804cbbe:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804cbc1:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804cbc4:	83 45 ec 10          	addl   $0x10,-0x14(%ebp)
 804cbc8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804cbcc:	72 26                	jb     804cbf4 <math__bits__len_64+0x9a>
 804cbce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804cbd2:	77 09                	ja     804cbdd <math__bits__len_64+0x83>
 804cbd4:	81 7d f0 ff 00 00 00 	cmpl   $0xff,-0x10(%ebp)
 804cbdb:	76 17                	jbe    804cbf4 <math__bits__len_64+0x9a>
 804cbdd:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cbe0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804cbe3:	0f ac d0 08          	shrd   $0x8,%edx,%eax
 804cbe7:	c1 ea 08             	shr    $0x8,%edx
 804cbea:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804cbed:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804cbf0:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
 804cbf4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cbf7:	83 ec 0c             	sub    $0xc,%esp
 804cbfa:	50                   	push   %eax
 804cbfb:	ff 35 14 31 07 08    	pushl  0x8073114
 804cc01:	ff 35 10 31 07 08    	pushl  0x8073110
 804cc07:	ff 35 0c 31 07 08    	pushl  0x807310c
 804cc0d:	ff 35 08 31 07 08    	pushl  0x8073108
 804cc13:	e8 a2 96 00 00       	call   80562ba <array_get>
 804cc18:	83 c4 20             	add    $0x20,%esp
 804cc1b:	0f b6 00             	movzbl (%eax),%eax
 804cc1e:	0f b6 d0             	movzbl %al,%edx
 804cc21:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804cc24:	01 d0                	add    %edx,%eax
 804cc26:	c9                   	leave  
 804cc27:	c3                   	ret    

0804cc28 <math__bits__add_32>:
 804cc28:	55                   	push   %ebp
 804cc29:	89 e5                	mov    %esp,%ebp
 804cc2b:	53                   	push   %ebx
 804cc2c:	83 ec 14             	sub    $0x14,%esp
 804cc2f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804cc32:	bb 00 00 00 00       	mov    $0x0,%ebx
 804cc37:	8b 45 10             	mov    0x10(%ebp),%eax
 804cc3a:	ba 00 00 00 00       	mov    $0x0,%edx
 804cc3f:	01 c1                	add    %eax,%ecx
 804cc41:	11 d3                	adc    %edx,%ebx
 804cc43:	8b 45 14             	mov    0x14(%ebp),%eax
 804cc46:	ba 00 00 00 00       	mov    $0x0,%edx
 804cc4b:	01 c8                	add    %ecx,%eax
 804cc4d:	11 da                	adc    %ebx,%edx
 804cc4f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804cc52:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804cc55:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cc58:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804cc5b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804cc5e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804cc61:	89 d0                	mov    %edx,%eax
 804cc63:	31 d2                	xor    %edx,%edx
 804cc65:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804cc68:	8b 45 08             	mov    0x8(%ebp),%eax
 804cc6b:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804cc6e:	89 10                	mov    %edx,(%eax)
 804cc70:	8b 45 08             	mov    0x8(%ebp),%eax
 804cc73:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804cc76:	89 50 04             	mov    %edx,0x4(%eax)
 804cc79:	8b 45 08             	mov    0x8(%ebp),%eax
 804cc7c:	83 c4 14             	add    $0x14,%esp
 804cc7f:	5b                   	pop    %ebx
 804cc80:	5d                   	pop    %ebp
 804cc81:	c2 04 00             	ret    $0x4

0804cc84 <math__bits__add_64>:
 804cc84:	55                   	push   %ebp
 804cc85:	89 e5                	mov    %esp,%ebp
 804cc87:	57                   	push   %edi
 804cc88:	56                   	push   %esi
 804cc89:	53                   	push   %ebx
 804cc8a:	83 ec 4c             	sub    $0x4c,%esp
 804cc8d:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cc90:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804cc93:	8b 45 10             	mov    0x10(%ebp),%eax
 804cc96:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804cc99:	8b 45 14             	mov    0x14(%ebp),%eax
 804cc9c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804cc9f:	8b 45 18             	mov    0x18(%ebp),%eax
 804cca2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804cca5:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804cca8:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804ccab:	8b 45 20             	mov    0x20(%ebp),%eax
 804ccae:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804ccb1:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804ccb4:	8b 5d dc             	mov    -0x24(%ebp),%ebx
 804ccb7:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804ccba:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804ccbd:	01 c1                	add    %eax,%ecx
 804ccbf:	11 d3                	adc    %edx,%ebx
 804ccc1:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804ccc4:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804ccc7:	01 c8                	add    %ecx,%eax
 804ccc9:	11 da                	adc    %ebx,%edx
 804cccb:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804ccce:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804ccd1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ccd4:	23 45 d0             	and    -0x30(%ebp),%eax
 804ccd7:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804ccda:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ccdd:	23 45 d4             	and    -0x2c(%ebp),%eax
 804cce0:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804cce3:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804cce6:	0b 45 d0             	or     -0x30(%ebp),%eax
 804cce9:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804ccec:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ccef:	0b 45 d4             	or     -0x2c(%ebp),%eax
 804ccf2:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 804ccf5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804ccf8:	f7 d0                	not    %eax
 804ccfa:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804ccfd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804cd00:	f7 d0                	not    %eax
 804cd02:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804cd05:	8b 4d b0             	mov    -0x50(%ebp),%ecx
 804cd08:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
 804cd0b:	89 c8                	mov    %ecx,%eax
 804cd0d:	23 45 c0             	and    -0x40(%ebp),%eax
 804cd10:	89 c6                	mov    %eax,%esi
 804cd12:	89 d8                	mov    %ebx,%eax
 804cd14:	23 45 c4             	and    -0x3c(%ebp),%eax
 804cd17:	89 c7                	mov    %eax,%edi
 804cd19:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804cd1c:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804cd1f:	89 c3                	mov    %eax,%ebx
 804cd21:	09 f3                	or     %esi,%ebx
 804cd23:	89 5d a8             	mov    %ebx,-0x58(%ebp)
 804cd26:	09 d7                	or     %edx,%edi
 804cd28:	89 7d ac             	mov    %edi,-0x54(%ebp)
 804cd2b:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804cd2e:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804cd31:	89 d0                	mov    %edx,%eax
 804cd33:	31 d2                	xor    %edx,%edx
 804cd35:	c1 e8 1f             	shr    $0x1f,%eax
 804cd38:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804cd3b:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804cd3e:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804cd41:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804cd44:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804cd47:	89 01                	mov    %eax,(%ecx)
 804cd49:	89 51 04             	mov    %edx,0x4(%ecx)
 804cd4c:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804cd4f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cd52:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804cd55:	89 41 08             	mov    %eax,0x8(%ecx)
 804cd58:	89 51 0c             	mov    %edx,0xc(%ecx)
 804cd5b:	8b 45 08             	mov    0x8(%ebp),%eax
 804cd5e:	83 c4 4c             	add    $0x4c,%esp
 804cd61:	5b                   	pop    %ebx
 804cd62:	5e                   	pop    %esi
 804cd63:	5f                   	pop    %edi
 804cd64:	5d                   	pop    %ebp
 804cd65:	c2 04 00             	ret    $0x4

0804cd68 <math__bits__sub_32>:
 804cd68:	55                   	push   %ebp
 804cd69:	89 e5                	mov    %esp,%ebp
 804cd6b:	83 ec 10             	sub    $0x10,%esp
 804cd6e:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cd71:	2b 45 10             	sub    0x10(%ebp),%eax
 804cd74:	2b 45 14             	sub    0x14(%ebp),%eax
 804cd77:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804cd7a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cd7d:	f7 d0                	not    %eax
 804cd7f:	23 45 10             	and    0x10(%ebp),%eax
 804cd82:	89 c2                	mov    %eax,%edx
 804cd84:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cd87:	33 45 10             	xor    0x10(%ebp),%eax
 804cd8a:	f7 d0                	not    %eax
 804cd8c:	23 45 f8             	and    -0x8(%ebp),%eax
 804cd8f:	09 d0                	or     %edx,%eax
 804cd91:	c1 e8 1f             	shr    $0x1f,%eax
 804cd94:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804cd97:	8b 45 08             	mov    0x8(%ebp),%eax
 804cd9a:	8b 55 f8             	mov    -0x8(%ebp),%edx
 804cd9d:	89 10                	mov    %edx,(%eax)
 804cd9f:	8b 45 08             	mov    0x8(%ebp),%eax
 804cda2:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804cda5:	89 50 04             	mov    %edx,0x4(%eax)
 804cda8:	8b 45 08             	mov    0x8(%ebp),%eax
 804cdab:	c9                   	leave  
 804cdac:	c2 04 00             	ret    $0x4

0804cdaf <math__bits__sub_64>:
 804cdaf:	55                   	push   %ebp
 804cdb0:	89 e5                	mov    %esp,%ebp
 804cdb2:	57                   	push   %edi
 804cdb3:	56                   	push   %esi
 804cdb4:	53                   	push   %ebx
 804cdb5:	83 ec 4c             	sub    $0x4c,%esp
 804cdb8:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cdbb:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804cdbe:	8b 45 10             	mov    0x10(%ebp),%eax
 804cdc1:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804cdc4:	8b 45 14             	mov    0x14(%ebp),%eax
 804cdc7:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804cdca:	8b 45 18             	mov    0x18(%ebp),%eax
 804cdcd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804cdd0:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804cdd3:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804cdd6:	8b 45 20             	mov    0x20(%ebp),%eax
 804cdd9:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804cddc:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804cddf:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804cde2:	2b 45 d0             	sub    -0x30(%ebp),%eax
 804cde5:	1b 55 d4             	sbb    -0x2c(%ebp),%edx
 804cde8:	2b 45 c8             	sub    -0x38(%ebp),%eax
 804cdeb:	1b 55 cc             	sbb    -0x34(%ebp),%edx
 804cdee:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804cdf1:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804cdf4:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804cdf7:	f7 d0                	not    %eax
 804cdf9:	89 c1                	mov    %eax,%ecx
 804cdfb:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804cdfe:	f7 d0                	not    %eax
 804ce00:	89 c3                	mov    %eax,%ebx
 804ce02:	89 c8                	mov    %ecx,%eax
 804ce04:	23 45 d0             	and    -0x30(%ebp),%eax
 804ce07:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804ce0a:	89 d8                	mov    %ebx,%eax
 804ce0c:	23 45 d4             	and    -0x2c(%ebp),%eax
 804ce0f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804ce12:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ce15:	33 45 d0             	xor    -0x30(%ebp),%eax
 804ce18:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804ce1b:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ce1e:	33 45 d4             	xor    -0x2c(%ebp),%eax
 804ce21:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804ce24:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804ce27:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804ce2a:	89 c3                	mov    %eax,%ebx
 804ce2c:	f7 d3                	not    %ebx
 804ce2e:	89 5d b0             	mov    %ebx,-0x50(%ebp)
 804ce31:	89 d0                	mov    %edx,%eax
 804ce33:	f7 d0                	not    %eax
 804ce35:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 804ce38:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804ce3b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804ce3e:	89 c3                	mov    %eax,%ebx
 804ce40:	23 5d e0             	and    -0x20(%ebp),%ebx
 804ce43:	89 de                	mov    %ebx,%esi
 804ce45:	89 d0                	mov    %edx,%eax
 804ce47:	23 45 e4             	and    -0x1c(%ebp),%eax
 804ce4a:	89 c7                	mov    %eax,%edi
 804ce4c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804ce4f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 804ce52:	89 c3                	mov    %eax,%ebx
 804ce54:	09 f3                	or     %esi,%ebx
 804ce56:	89 5d a8             	mov    %ebx,-0x58(%ebp)
 804ce59:	09 d7                	or     %edx,%edi
 804ce5b:	89 7d ac             	mov    %edi,-0x54(%ebp)
 804ce5e:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804ce61:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804ce64:	89 d0                	mov    %edx,%eax
 804ce66:	31 d2                	xor    %edx,%edx
 804ce68:	c1 e8 1f             	shr    $0x1f,%eax
 804ce6b:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804ce6e:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804ce71:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804ce74:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804ce77:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804ce7a:	89 01                	mov    %eax,(%ecx)
 804ce7c:	89 51 04             	mov    %edx,0x4(%ecx)
 804ce7f:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804ce82:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ce85:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804ce88:	89 41 08             	mov    %eax,0x8(%ecx)
 804ce8b:	89 51 0c             	mov    %edx,0xc(%ecx)
 804ce8e:	8b 45 08             	mov    0x8(%ebp),%eax
 804ce91:	83 c4 4c             	add    $0x4c,%esp
 804ce94:	5b                   	pop    %ebx
 804ce95:	5e                   	pop    %esi
 804ce96:	5f                   	pop    %edi
 804ce97:	5d                   	pop    %ebp
 804ce98:	c2 04 00             	ret    $0x4

0804ce9b <math__bits__mul_32>:
 804ce9b:	55                   	push   %ebp
 804ce9c:	89 e5                	mov    %esp,%ebp
 804ce9e:	57                   	push   %edi
 804ce9f:	56                   	push   %esi
 804cea0:	53                   	push   %ebx
 804cea1:	83 ec 14             	sub    $0x14,%esp
 804cea4:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804cea7:	bb 00 00 00 00       	mov    $0x0,%ebx
 804ceac:	8b 45 10             	mov    0x10(%ebp),%eax
 804ceaf:	ba 00 00 00 00       	mov    $0x0,%edx
 804ceb4:	89 df                	mov    %ebx,%edi
 804ceb6:	0f af f8             	imul   %eax,%edi
 804ceb9:	89 d6                	mov    %edx,%esi
 804cebb:	0f af f1             	imul   %ecx,%esi
 804cebe:	01 fe                	add    %edi,%esi
 804cec0:	f7 e1                	mul    %ecx
 804cec2:	8d 0c 16             	lea    (%esi,%edx,1),%ecx
 804cec5:	89 ca                	mov    %ecx,%edx
 804cec7:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804ceca:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804cecd:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804ced0:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804ced3:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ced6:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804ced9:	89 d0                	mov    %edx,%eax
 804cedb:	31 d2                	xor    %edx,%edx
 804cedd:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804cee0:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804cee3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804cee6:	8b 45 08             	mov    0x8(%ebp),%eax
 804cee9:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804ceec:	89 10                	mov    %edx,(%eax)
 804ceee:	8b 45 08             	mov    0x8(%ebp),%eax
 804cef1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804cef4:	89 50 04             	mov    %edx,0x4(%eax)
 804cef7:	8b 45 08             	mov    0x8(%ebp),%eax
 804cefa:	83 c4 14             	add    $0x14,%esp
 804cefd:	5b                   	pop    %ebx
 804cefe:	5e                   	pop    %esi
 804ceff:	5f                   	pop    %edi
 804cf00:	5d                   	pop    %ebp
 804cf01:	c2 04 00             	ret    $0x4

0804cf04 <math__bits__mul_64>:
 804cf04:	55                   	push   %ebp
 804cf05:	89 e5                	mov    %esp,%ebp
 804cf07:	53                   	push   %ebx
 804cf08:	83 ec 64             	sub    $0x64,%esp
 804cf0b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804cf0e:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804cf11:	8b 45 10             	mov    0x10(%ebp),%eax
 804cf14:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804cf17:	8b 45 14             	mov    0x14(%ebp),%eax
 804cf1a:	89 45 98             	mov    %eax,-0x68(%ebp)
 804cf1d:	8b 45 18             	mov    0x18(%ebp),%eax
 804cf20:	89 45 9c             	mov    %eax,-0x64(%ebp)
 804cf23:	a1 e8 32 07 08       	mov    0x80732e8,%eax
 804cf28:	8b 15 ec 32 07 08    	mov    0x80732ec,%edx
 804cf2e:	89 c1                	mov    %eax,%ecx
 804cf30:	23 4d a0             	and    -0x60(%ebp),%ecx
 804cf33:	89 4d a8             	mov    %ecx,-0x58(%ebp)
 804cf36:	89 d0                	mov    %edx,%eax
 804cf38:	23 45 a4             	and    -0x5c(%ebp),%eax
 804cf3b:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804cf3e:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804cf41:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804cf44:	89 d0                	mov    %edx,%eax
 804cf46:	31 d2                	xor    %edx,%edx
 804cf48:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804cf4b:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804cf4e:	a1 e8 32 07 08       	mov    0x80732e8,%eax
 804cf53:	8b 15 ec 32 07 08    	mov    0x80732ec,%edx
 804cf59:	89 c1                	mov    %eax,%ecx
 804cf5b:	23 4d 98             	and    -0x68(%ebp),%ecx
 804cf5e:	89 4d b8             	mov    %ecx,-0x48(%ebp)
 804cf61:	89 d0                	mov    %edx,%eax
 804cf63:	23 45 9c             	and    -0x64(%ebp),%eax
 804cf66:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804cf69:	8b 45 98             	mov    -0x68(%ebp),%eax
 804cf6c:	8b 55 9c             	mov    -0x64(%ebp),%edx
 804cf6f:	89 d0                	mov    %edx,%eax
 804cf71:	31 d2                	xor    %edx,%edx
 804cf73:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804cf76:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 804cf79:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804cf7c:	0f af 45 b8          	imul   -0x48(%ebp),%eax
 804cf80:	89 c2                	mov    %eax,%edx
 804cf82:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804cf85:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 804cf89:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804cf8c:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804cf8f:	f7 65 a8             	mull   -0x58(%ebp)
 804cf92:	01 d1                	add    %edx,%ecx
 804cf94:	89 ca                	mov    %ecx,%edx
 804cf96:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804cf99:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804cf9c:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804cf9f:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804cfa2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804cfa5:	0f af 45 b8          	imul   -0x48(%ebp),%eax
 804cfa9:	89 c2                	mov    %eax,%edx
 804cfab:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804cfae:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 804cfb2:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804cfb5:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804cfb8:	f7 65 b0             	mull   -0x50(%ebp)
 804cfbb:	01 d1                	add    %edx,%ecx
 804cfbd:	89 ca                	mov    %ecx,%edx
 804cfbf:	8b 4d c8             	mov    -0x38(%ebp),%ecx
 804cfc2:	8b 5d cc             	mov    -0x34(%ebp),%ebx
 804cfc5:	89 d9                	mov    %ebx,%ecx
 804cfc7:	31 db                	xor    %ebx,%ebx
 804cfc9:	01 c8                	add    %ecx,%eax
 804cfcb:	11 da                	adc    %ebx,%edx
 804cfcd:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804cfd0:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804cfd3:	a1 e8 32 07 08       	mov    0x80732e8,%eax
 804cfd8:	8b 15 ec 32 07 08    	mov    0x80732ec,%edx
 804cfde:	89 c1                	mov    %eax,%ecx
 804cfe0:	23 4d d0             	and    -0x30(%ebp),%ecx
 804cfe3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
 804cfe6:	89 d0                	mov    %edx,%eax
 804cfe8:	23 45 d4             	and    -0x2c(%ebp),%eax
 804cfeb:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804cfee:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804cff1:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804cff4:	89 d0                	mov    %edx,%eax
 804cff6:	31 d2                	xor    %edx,%edx
 804cff8:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804cffb:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804cffe:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804d001:	0f af 45 c0          	imul   -0x40(%ebp),%eax
 804d005:	89 c2                	mov    %eax,%edx
 804d007:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804d00a:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 804d00e:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804d011:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804d014:	f7 65 a8             	mull   -0x58(%ebp)
 804d017:	01 d1                	add    %edx,%ecx
 804d019:	89 ca                	mov    %ecx,%edx
 804d01b:	01 45 d8             	add    %eax,-0x28(%ebp)
 804d01e:	11 55 dc             	adc    %edx,-0x24(%ebp)
 804d021:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804d024:	0f af 45 c0          	imul   -0x40(%ebp),%eax
 804d028:	89 c2                	mov    %eax,%edx
 804d02a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804d02d:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 804d031:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804d034:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804d037:	f7 65 b0             	mull   -0x50(%ebp)
 804d03a:	01 d1                	add    %edx,%ecx
 804d03c:	89 ca                	mov    %ecx,%edx
 804d03e:	8b 4d e0             	mov    -0x20(%ebp),%ecx
 804d041:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
 804d044:	01 c1                	add    %eax,%ecx
 804d046:	11 d3                	adc    %edx,%ebx
 804d048:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804d04b:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804d04e:	89 d0                	mov    %edx,%eax
 804d050:	31 d2                	xor    %edx,%edx
 804d052:	01 c8                	add    %ecx,%eax
 804d054:	11 da                	adc    %ebx,%edx
 804d056:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804d059:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804d05c:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804d05f:	0f af 45 98          	imul   -0x68(%ebp),%eax
 804d063:	89 c2                	mov    %eax,%edx
 804d065:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804d068:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 804d06c:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804d06f:	8b 45 98             	mov    -0x68(%ebp),%eax
 804d072:	f7 65 a0             	mull   -0x60(%ebp)
 804d075:	01 d1                	add    %edx,%ecx
 804d077:	89 ca                	mov    %ecx,%edx
 804d079:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d07c:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d07f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d082:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d085:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804d088:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804d08b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804d08e:	89 01                	mov    %eax,(%ecx)
 804d090:	89 51 04             	mov    %edx,0x4(%ecx)
 804d093:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804d096:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d099:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d09c:	89 41 08             	mov    %eax,0x8(%ecx)
 804d09f:	89 51 0c             	mov    %edx,0xc(%ecx)
 804d0a2:	8b 45 08             	mov    0x8(%ebp),%eax
 804d0a5:	83 c4 64             	add    $0x64,%esp
 804d0a8:	5b                   	pop    %ebx
 804d0a9:	5d                   	pop    %ebp
 804d0aa:	c2 04 00             	ret    $0x4

0804d0ad <math__bits__div_32>:
 804d0ad:	55                   	push   %ebp
 804d0ae:	89 e5                	mov    %esp,%ebp
 804d0b0:	56                   	push   %esi
 804d0b1:	53                   	push   %ebx
 804d0b2:	83 ec 10             	sub    $0x10,%esp
 804d0b5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 804d0b9:	74 25                	je     804d0e0 <math__bits__div_32+0x33>
 804d0bb:	8b 45 14             	mov    0x14(%ebp),%eax
 804d0be:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804d0c1:	77 1d                	ja     804d0e0 <math__bits__div_32+0x33>
 804d0c3:	83 ec 04             	sub    $0x4,%esp
 804d0c6:	ff 35 9c 31 07 08    	pushl  0x807319c
 804d0cc:	ff 35 98 31 07 08    	pushl  0x8073198
 804d0d2:	ff 35 94 31 07 08    	pushl  0x8073194
 804d0d8:	e8 ba a6 00 00       	call   8057797 <v_panic>
 804d0dd:	83 c4 10             	add    $0x10,%esp
 804d0e0:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d0e3:	ba 00 00 00 00       	mov    $0x0,%edx
 804d0e8:	89 c2                	mov    %eax,%edx
 804d0ea:	b8 00 00 00 00       	mov    $0x0,%eax
 804d0ef:	8b 4d 10             	mov    0x10(%ebp),%ecx
 804d0f2:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d0f7:	89 c6                	mov    %eax,%esi
 804d0f9:	09 ce                	or     %ecx,%esi
 804d0fb:	89 75 f0             	mov    %esi,-0x10(%ebp)
 804d0fe:	89 d0                	mov    %edx,%eax
 804d100:	09 d8                	or     %ebx,%eax
 804d102:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d105:	8b 45 14             	mov    0x14(%ebp),%eax
 804d108:	ba 00 00 00 00       	mov    $0x0,%edx
 804d10d:	52                   	push   %edx
 804d10e:	50                   	push   %eax
 804d10f:	ff 75 f4             	pushl  -0xc(%ebp)
 804d112:	ff 75 f0             	pushl  -0x10(%ebp)
 804d115:	e8 d6 c1 01 00       	call   80692f0 <__udivdi3>
 804d11a:	83 c4 10             	add    $0x10,%esp
 804d11d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804d120:	8b 4d 14             	mov    0x14(%ebp),%ecx
 804d123:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d128:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d12b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d12e:	53                   	push   %ebx
 804d12f:	51                   	push   %ecx
 804d130:	52                   	push   %edx
 804d131:	50                   	push   %eax
 804d132:	e8 e9 c2 01 00       	call   8069420 <__umoddi3>
 804d137:	83 c4 10             	add    $0x10,%esp
 804d13a:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804d13d:	8b 45 08             	mov    0x8(%ebp),%eax
 804d140:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804d143:	89 10                	mov    %edx,(%eax)
 804d145:	8b 45 08             	mov    0x8(%ebp),%eax
 804d148:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804d14b:	89 50 04             	mov    %edx,0x4(%eax)
 804d14e:	8b 45 08             	mov    0x8(%ebp),%eax
 804d151:	8d 65 f8             	lea    -0x8(%ebp),%esp
 804d154:	5b                   	pop    %ebx
 804d155:	5e                   	pop    %esi
 804d156:	5d                   	pop    %ebp
 804d157:	c2 04 00             	ret    $0x4

0804d15a <math__bits__div_64>:
 804d15a:	55                   	push   %ebp
 804d15b:	89 e5                	mov    %esp,%ebp
 804d15d:	57                   	push   %edi
 804d15e:	56                   	push   %esi
 804d15f:	53                   	push   %ebx
 804d160:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
 804d166:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d169:	89 45 80             	mov    %eax,-0x80(%ebp)
 804d16c:	8b 45 10             	mov    0x10(%ebp),%eax
 804d16f:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804d172:	8b 45 14             	mov    0x14(%ebp),%eax
 804d175:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 804d17b:	8b 45 18             	mov    0x18(%ebp),%eax
 804d17e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804d184:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804d187:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804d18d:	8b 45 20             	mov    0x20(%ebp),%eax
 804d190:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804d196:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804d19c:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
 804d1a2:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804d1a5:	89 55 ac             	mov    %edx,-0x54(%ebp)
 804d1a8:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804d1ab:	0b 45 a8             	or     -0x58(%ebp),%eax
 804d1ae:	85 c0                	test   %eax,%eax
 804d1b0:	75 1d                	jne    804d1cf <math__bits__div_64+0x75>
 804d1b2:	83 ec 04             	sub    $0x4,%esp
 804d1b5:	ff 35 9c 31 07 08    	pushl  0x807319c
 804d1bb:	ff 35 98 31 07 08    	pushl  0x8073198
 804d1c1:	ff 35 94 31 07 08    	pushl  0x8073194
 804d1c7:	e8 cb a5 00 00       	call   8057797 <v_panic>
 804d1cc:	83 c4 10             	add    $0x10,%esp
 804d1cf:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804d1d2:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804d1d5:	3b 55 84             	cmp    -0x7c(%ebp),%edx
 804d1d8:	77 27                	ja     804d201 <math__bits__div_64+0xa7>
 804d1da:	3b 55 84             	cmp    -0x7c(%ebp),%edx
 804d1dd:	72 05                	jb     804d1e4 <math__bits__div_64+0x8a>
 804d1df:	3b 45 80             	cmp    -0x80(%ebp),%eax
 804d1e2:	77 1d                	ja     804d201 <math__bits__div_64+0xa7>
 804d1e4:	83 ec 04             	sub    $0x4,%esp
 804d1e7:	ff 35 9c 31 07 08    	pushl  0x807319c
 804d1ed:	ff 35 98 31 07 08    	pushl  0x8073198
 804d1f3:	ff 35 94 31 07 08    	pushl  0x8073194
 804d1f9:	e8 99 a5 00 00       	call   8057797 <v_panic>
 804d1fe:	83 c4 10             	add    $0x10,%esp
 804d201:	83 ec 08             	sub    $0x8,%esp
 804d204:	ff 75 ac             	pushl  -0x54(%ebp)
 804d207:	ff 75 a8             	pushl  -0x58(%ebp)
 804d20a:	e8 b2 e9 ff ff       	call   804bbc1 <math__bits__leading_zeros_64>
 804d20f:	83 c4 10             	add    $0x10,%esp
 804d212:	89 45 8c             	mov    %eax,-0x74(%ebp)
 804d215:	8b 4d 8c             	mov    -0x74(%ebp),%ecx
 804d218:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804d21b:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804d21e:	0f a5 c2             	shld   %cl,%eax,%edx
 804d221:	d3 e0                	shl    %cl,%eax
 804d223:	f6 c1 20             	test   $0x20,%cl
 804d226:	74 04                	je     804d22c <math__bits__div_64+0xd2>
 804d228:	89 c2                	mov    %eax,%edx
 804d22a:	31 c0                	xor    %eax,%eax
 804d22c:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804d22f:	89 55 ac             	mov    %edx,-0x54(%ebp)
 804d232:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804d235:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804d238:	89 d0                	mov    %edx,%eax
 804d23a:	31 d2                	xor    %edx,%edx
 804d23c:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804d23f:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804d242:	a1 e8 32 07 08       	mov    0x80732e8,%eax
 804d247:	8b 15 ec 32 07 08    	mov    0x80732ec,%edx
 804d24d:	89 c1                	mov    %eax,%ecx
 804d24f:	23 4d a8             	and    -0x58(%ebp),%ecx
 804d252:	89 4d b8             	mov    %ecx,-0x48(%ebp)
 804d255:	89 d0                	mov    %edx,%eax
 804d257:	23 45 ac             	and    -0x54(%ebp),%eax
 804d25a:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804d25d:	8b 4d 8c             	mov    -0x74(%ebp),%ecx
 804d260:	8b 45 80             	mov    -0x80(%ebp),%eax
 804d263:	8b 55 84             	mov    -0x7c(%ebp),%edx
 804d266:	0f a5 c2             	shld   %cl,%eax,%edx
 804d269:	d3 e0                	shl    %cl,%eax
 804d26b:	f6 c1 20             	test   $0x20,%cl
 804d26e:	74 04                	je     804d274 <math__bits__div_64+0x11a>
 804d270:	89 c2                	mov    %eax,%edx
 804d272:	31 c0                	xor    %eax,%eax
 804d274:	89 c3                	mov    %eax,%ebx
 804d276:	89 d6                	mov    %edx,%esi
 804d278:	b8 40 00 00 00       	mov    $0x40,%eax
 804d27d:	2b 45 8c             	sub    -0x74(%ebp),%eax
 804d280:	89 c1                	mov    %eax,%ecx
 804d282:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804d288:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 804d28e:	0f ad d0             	shrd   %cl,%edx,%eax
 804d291:	d3 ea                	shr    %cl,%edx
 804d293:	f6 c1 20             	test   $0x20,%cl
 804d296:	74 04                	je     804d29c <math__bits__div_64+0x142>
 804d298:	89 d0                	mov    %edx,%eax
 804d29a:	31 d2                	xor    %edx,%edx
 804d29c:	89 d9                	mov    %ebx,%ecx
 804d29e:	09 c1                	or     %eax,%ecx
 804d2a0:	89 4d c0             	mov    %ecx,-0x40(%ebp)
 804d2a3:	89 f7                	mov    %esi,%edi
 804d2a5:	09 d7                	or     %edx,%edi
 804d2a7:	89 f8                	mov    %edi,%eax
 804d2a9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804d2ac:	8b 4d 8c             	mov    -0x74(%ebp),%ecx
 804d2af:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804d2b5:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 804d2bb:	0f a5 c2             	shld   %cl,%eax,%edx
 804d2be:	d3 e0                	shl    %cl,%eax
 804d2c0:	f6 c1 20             	test   $0x20,%cl
 804d2c3:	74 04                	je     804d2c9 <math__bits__div_64+0x16f>
 804d2c5:	89 c2                	mov    %eax,%edx
 804d2c7:	31 c0                	xor    %eax,%eax
 804d2c9:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804d2cc:	89 55 cc             	mov    %edx,-0x34(%ebp)
 804d2cf:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804d2d2:	8b 55 cc             	mov    -0x34(%ebp),%edx
 804d2d5:	89 d0                	mov    %edx,%eax
 804d2d7:	31 d2                	xor    %edx,%edx
 804d2d9:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804d2dc:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 804d2df:	a1 e8 32 07 08       	mov    0x80732e8,%eax
 804d2e4:	8b 15 ec 32 07 08    	mov    0x80732ec,%edx
 804d2ea:	89 c1                	mov    %eax,%ecx
 804d2ec:	23 4d c8             	and    -0x38(%ebp),%ecx
 804d2ef:	89 4d d8             	mov    %ecx,-0x28(%ebp)
 804d2f2:	89 d0                	mov    %edx,%eax
 804d2f4:	23 45 cc             	and    -0x34(%ebp),%eax
 804d2f7:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804d2fa:	ff 75 b4             	pushl  -0x4c(%ebp)
 804d2fd:	ff 75 b0             	pushl  -0x50(%ebp)
 804d300:	ff 75 c4             	pushl  -0x3c(%ebp)
 804d303:	ff 75 c0             	pushl  -0x40(%ebp)
 804d306:	e8 e5 bf 01 00       	call   80692f0 <__udivdi3>
 804d30b:	83 c4 10             	add    $0x10,%esp
 804d30e:	89 45 90             	mov    %eax,-0x70(%ebp)
 804d311:	89 55 94             	mov    %edx,-0x6c(%ebp)
 804d314:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804d317:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 804d31b:	89 c2                	mov    %eax,%edx
 804d31d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804d320:	0f af 45 90          	imul   -0x70(%ebp),%eax
 804d324:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804d327:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804d32a:	f7 65 90             	mull   -0x70(%ebp)
 804d32d:	01 d1                	add    %edx,%ecx
 804d32f:	89 ca                	mov    %ecx,%edx
 804d331:	8b 4d c0             	mov    -0x40(%ebp),%ecx
 804d334:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
 804d337:	29 c1                	sub    %eax,%ecx
 804d339:	19 d3                	sbb    %edx,%ebx
 804d33b:	89 c8                	mov    %ecx,%eax
 804d33d:	89 da                	mov    %ebx,%edx
 804d33f:	89 45 98             	mov    %eax,-0x68(%ebp)
 804d342:	89 55 9c             	mov    %edx,-0x64(%ebp)
 804d345:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d34a:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d350:	39 55 94             	cmp    %edx,-0x6c(%ebp)
 804d353:	77 66                	ja     804d3bb <math__bits__div_64+0x261>
 804d355:	39 55 94             	cmp    %edx,-0x6c(%ebp)
 804d358:	72 05                	jb     804d35f <math__bits__div_64+0x205>
 804d35a:	39 45 90             	cmp    %eax,-0x70(%ebp)
 804d35d:	73 5c                	jae    804d3bb <math__bits__div_64+0x261>
 804d35f:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804d362:	0f af 45 b8          	imul   -0x48(%ebp),%eax
 804d366:	89 c2                	mov    %eax,%edx
 804d368:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804d36b:	0f af 45 90          	imul   -0x70(%ebp),%eax
 804d36f:	8d 34 02             	lea    (%edx,%eax,1),%esi
 804d372:	8b 7d b8             	mov    -0x48(%ebp),%edi
 804d375:	89 f8                	mov    %edi,%eax
 804d377:	f7 65 90             	mull   -0x70(%ebp)
 804d37a:	89 c1                	mov    %eax,%ecx
 804d37c:	89 d3                	mov    %edx,%ebx
 804d37e:	8d 04 1e             	lea    (%esi,%ebx,1),%eax
 804d381:	89 c3                	mov    %eax,%ebx
 804d383:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d388:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d38e:	8b 75 98             	mov    -0x68(%ebp),%esi
 804d391:	89 f7                	mov    %esi,%edi
 804d393:	0f af fa             	imul   %edx,%edi
 804d396:	8b 75 9c             	mov    -0x64(%ebp),%esi
 804d399:	0f af f0             	imul   %eax,%esi
 804d39c:	01 fe                	add    %edi,%esi
 804d39e:	f7 65 98             	mull   -0x68(%ebp)
 804d3a1:	01 d6                	add    %edx,%esi
 804d3a3:	89 f2                	mov    %esi,%edx
 804d3a5:	8b 75 d0             	mov    -0x30(%ebp),%esi
 804d3a8:	8b 7d d4             	mov    -0x2c(%ebp),%edi
 804d3ab:	01 f0                	add    %esi,%eax
 804d3ad:	11 fa                	adc    %edi,%edx
 804d3af:	39 d3                	cmp    %edx,%ebx
 804d3b1:	77 08                	ja     804d3bb <math__bits__div_64+0x261>
 804d3b3:	39 d3                	cmp    %edx,%ebx
 804d3b5:	72 3b                	jb     804d3f2 <math__bits__div_64+0x298>
 804d3b7:	39 c1                	cmp    %eax,%ecx
 804d3b9:	76 37                	jbe    804d3f2 <math__bits__div_64+0x298>
 804d3bb:	83 45 90 ff          	addl   $0xffffffff,-0x70(%ebp)
 804d3bf:	83 55 94 ff          	adcl   $0xffffffff,-0x6c(%ebp)
 804d3c3:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804d3c6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804d3c9:	01 45 98             	add    %eax,-0x68(%ebp)
 804d3cc:	11 55 9c             	adc    %edx,-0x64(%ebp)
 804d3cf:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d3d4:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d3da:	39 55 9c             	cmp    %edx,-0x64(%ebp)
 804d3dd:	0f 82 62 ff ff ff    	jb     804d345 <math__bits__div_64+0x1eb>
 804d3e3:	39 55 9c             	cmp    %edx,-0x64(%ebp)
 804d3e6:	77 0d                	ja     804d3f5 <math__bits__div_64+0x29b>
 804d3e8:	39 45 98             	cmp    %eax,-0x68(%ebp)
 804d3eb:	73 08                	jae    804d3f5 <math__bits__div_64+0x29b>
 804d3ed:	e9 53 ff ff ff       	jmp    804d345 <math__bits__div_64+0x1eb>
 804d3f2:	90                   	nop
 804d3f3:	eb 01                	jmp    804d3f6 <math__bits__div_64+0x29c>
 804d3f5:	90                   	nop
 804d3f6:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d3fb:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d401:	8b 4d c0             	mov    -0x40(%ebp),%ecx
 804d404:	89 cb                	mov    %ecx,%ebx
 804d406:	0f af da             	imul   %edx,%ebx
 804d409:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
 804d40c:	0f af c8             	imul   %eax,%ecx
 804d40f:	01 d9                	add    %ebx,%ecx
 804d411:	f7 65 c0             	mull   -0x40(%ebp)
 804d414:	01 d1                	add    %edx,%ecx
 804d416:	89 ca                	mov    %ecx,%edx
 804d418:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 804d41b:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
 804d41e:	01 c8                	add    %ecx,%eax
 804d420:	11 da                	adc    %ebx,%edx
 804d422:	89 c3                	mov    %eax,%ebx
 804d424:	89 d6                	mov    %edx,%esi
 804d426:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804d429:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 804d42d:	89 c2                	mov    %eax,%edx
 804d42f:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804d432:	0f af 45 90          	imul   -0x70(%ebp),%eax
 804d436:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804d439:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804d43c:	f7 65 90             	mull   -0x70(%ebp)
 804d43f:	01 d1                	add    %edx,%ecx
 804d441:	89 ca                	mov    %ecx,%edx
 804d443:	29 c3                	sub    %eax,%ebx
 804d445:	19 d6                	sbb    %edx,%esi
 804d447:	89 d8                	mov    %ebx,%eax
 804d449:	89 f2                	mov    %esi,%edx
 804d44b:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804d44e:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804d451:	ff 75 b4             	pushl  -0x4c(%ebp)
 804d454:	ff 75 b0             	pushl  -0x50(%ebp)
 804d457:	ff 75 e4             	pushl  -0x1c(%ebp)
 804d45a:	ff 75 e0             	pushl  -0x20(%ebp)
 804d45d:	e8 8e be 01 00       	call   80692f0 <__udivdi3>
 804d462:	83 c4 10             	add    $0x10,%esp
 804d465:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804d468:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804d46b:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804d46e:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 804d472:	89 c2                	mov    %eax,%edx
 804d474:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 804d477:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 804d47b:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804d47e:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804d481:	f7 65 a0             	mull   -0x60(%ebp)
 804d484:	01 d1                	add    %edx,%ecx
 804d486:	89 ca                	mov    %ecx,%edx
 804d488:	8b 4d e0             	mov    -0x20(%ebp),%ecx
 804d48b:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
 804d48e:	29 c1                	sub    %eax,%ecx
 804d490:	19 d3                	sbb    %edx,%ebx
 804d492:	89 c8                	mov    %ecx,%eax
 804d494:	89 da                	mov    %ebx,%edx
 804d496:	89 45 98             	mov    %eax,-0x68(%ebp)
 804d499:	89 55 9c             	mov    %edx,-0x64(%ebp)
 804d49c:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d4a1:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d4a7:	39 55 a4             	cmp    %edx,-0x5c(%ebp)
 804d4aa:	77 66                	ja     804d512 <math__bits__div_64+0x3b8>
 804d4ac:	39 55 a4             	cmp    %edx,-0x5c(%ebp)
 804d4af:	72 05                	jb     804d4b6 <math__bits__div_64+0x35c>
 804d4b1:	39 45 a0             	cmp    %eax,-0x60(%ebp)
 804d4b4:	73 5c                	jae    804d512 <math__bits__div_64+0x3b8>
 804d4b6:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804d4b9:	0f af 45 b8          	imul   -0x48(%ebp),%eax
 804d4bd:	89 c2                	mov    %eax,%edx
 804d4bf:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804d4c2:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 804d4c6:	8d 34 02             	lea    (%edx,%eax,1),%esi
 804d4c9:	8b 7d b8             	mov    -0x48(%ebp),%edi
 804d4cc:	89 f8                	mov    %edi,%eax
 804d4ce:	f7 65 a0             	mull   -0x60(%ebp)
 804d4d1:	89 c1                	mov    %eax,%ecx
 804d4d3:	89 d3                	mov    %edx,%ebx
 804d4d5:	8d 04 1e             	lea    (%esi,%ebx,1),%eax
 804d4d8:	89 c3                	mov    %eax,%ebx
 804d4da:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d4df:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d4e5:	8b 75 98             	mov    -0x68(%ebp),%esi
 804d4e8:	89 f7                	mov    %esi,%edi
 804d4ea:	0f af fa             	imul   %edx,%edi
 804d4ed:	8b 75 9c             	mov    -0x64(%ebp),%esi
 804d4f0:	0f af f0             	imul   %eax,%esi
 804d4f3:	01 fe                	add    %edi,%esi
 804d4f5:	f7 65 98             	mull   -0x68(%ebp)
 804d4f8:	01 d6                	add    %edx,%esi
 804d4fa:	89 f2                	mov    %esi,%edx
 804d4fc:	8b 75 d8             	mov    -0x28(%ebp),%esi
 804d4ff:	8b 7d dc             	mov    -0x24(%ebp),%edi
 804d502:	01 f0                	add    %esi,%eax
 804d504:	11 fa                	adc    %edi,%edx
 804d506:	39 d3                	cmp    %edx,%ebx
 804d508:	77 08                	ja     804d512 <math__bits__div_64+0x3b8>
 804d50a:	39 d3                	cmp    %edx,%ebx
 804d50c:	72 3b                	jb     804d549 <math__bits__div_64+0x3ef>
 804d50e:	39 c1                	cmp    %eax,%ecx
 804d510:	76 37                	jbe    804d549 <math__bits__div_64+0x3ef>
 804d512:	83 45 a0 ff          	addl   $0xffffffff,-0x60(%ebp)
 804d516:	83 55 a4 ff          	adcl   $0xffffffff,-0x5c(%ebp)
 804d51a:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804d51d:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804d520:	01 45 98             	add    %eax,-0x68(%ebp)
 804d523:	11 55 9c             	adc    %edx,-0x64(%ebp)
 804d526:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d52b:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d531:	39 55 9c             	cmp    %edx,-0x64(%ebp)
 804d534:	0f 82 62 ff ff ff    	jb     804d49c <math__bits__div_64+0x342>
 804d53a:	39 55 9c             	cmp    %edx,-0x64(%ebp)
 804d53d:	77 0d                	ja     804d54c <math__bits__div_64+0x3f2>
 804d53f:	39 45 98             	cmp    %eax,-0x68(%ebp)
 804d542:	73 08                	jae    804d54c <math__bits__div_64+0x3f2>
 804d544:	e9 53 ff ff ff       	jmp    804d49c <math__bits__div_64+0x342>
 804d549:	90                   	nop
 804d54a:	eb 01                	jmp    804d54d <math__bits__div_64+0x3f3>
 804d54c:	90                   	nop
 804d54d:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d552:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d558:	8b 4d 90             	mov    -0x70(%ebp),%ecx
 804d55b:	89 cb                	mov    %ecx,%ebx
 804d55d:	0f af da             	imul   %edx,%ebx
 804d560:	8b 4d 94             	mov    -0x6c(%ebp),%ecx
 804d563:	0f af c8             	imul   %eax,%ecx
 804d566:	01 d9                	add    %ebx,%ecx
 804d568:	f7 65 90             	mull   -0x70(%ebp)
 804d56b:	01 d1                	add    %edx,%ecx
 804d56d:	89 ca                	mov    %ecx,%edx
 804d56f:	8b 4d a0             	mov    -0x60(%ebp),%ecx
 804d572:	8b 5d a4             	mov    -0x5c(%ebp),%ebx
 804d575:	01 c8                	add    %ecx,%eax
 804d577:	11 da                	adc    %ebx,%edx
 804d579:	89 c6                	mov    %eax,%esi
 804d57b:	89 d7                	mov    %edx,%edi
 804d57d:	a1 20 32 07 08       	mov    0x8073220,%eax
 804d582:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 804d588:	8b 4d e0             	mov    -0x20(%ebp),%ecx
 804d58b:	89 cb                	mov    %ecx,%ebx
 804d58d:	0f af da             	imul   %edx,%ebx
 804d590:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 804d593:	0f af c8             	imul   %eax,%ecx
 804d596:	01 d9                	add    %ebx,%ecx
 804d598:	f7 65 e0             	mull   -0x20(%ebp)
 804d59b:	01 d1                	add    %edx,%ecx
 804d59d:	89 ca                	mov    %ecx,%edx
 804d59f:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804d5a2:	8b 5d dc             	mov    -0x24(%ebp),%ebx
 804d5a5:	01 c8                	add    %ecx,%eax
 804d5a7:	11 da                	adc    %ebx,%edx
 804d5a9:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 804d5af:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
 804d5b5:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804d5b8:	89 c2                	mov    %eax,%edx
 804d5ba:	0f af 55 a8          	imul   -0x58(%ebp),%edx
 804d5be:	8b 45 ac             	mov    -0x54(%ebp),%eax
 804d5c1:	0f af 45 a0          	imul   -0x60(%ebp),%eax
 804d5c5:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 804d5c8:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804d5cb:	f7 65 a0             	mull   -0x60(%ebp)
 804d5ce:	01 d1                	add    %edx,%ecx
 804d5d0:	89 ca                	mov    %ecx,%edx
 804d5d2:	8b 8d 68 ff ff ff    	mov    -0x98(%ebp),%ecx
 804d5d8:	8b 9d 6c ff ff ff    	mov    -0x94(%ebp),%ebx
 804d5de:	29 c1                	sub    %eax,%ecx
 804d5e0:	19 d3                	sbb    %edx,%ebx
 804d5e2:	89 c8                	mov    %ecx,%eax
 804d5e4:	89 da                	mov    %ebx,%edx
 804d5e6:	8b 4d 8c             	mov    -0x74(%ebp),%ecx
 804d5e9:	0f ad d0             	shrd   %cl,%edx,%eax
 804d5ec:	d3 ea                	shr    %cl,%edx
 804d5ee:	f6 c1 20             	test   $0x20,%cl
 804d5f1:	74 04                	je     804d5f7 <math__bits__div_64+0x49d>
 804d5f3:	89 d0                	mov    %edx,%eax
 804d5f5:	31 d2                	xor    %edx,%edx
 804d5f7:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804d5fa:	89 31                	mov    %esi,(%ecx)
 804d5fc:	89 79 04             	mov    %edi,0x4(%ecx)
 804d5ff:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804d602:	89 41 08             	mov    %eax,0x8(%ecx)
 804d605:	89 51 0c             	mov    %edx,0xc(%ecx)
 804d608:	8b 45 08             	mov    0x8(%ebp),%eax
 804d60b:	8d 65 f4             	lea    -0xc(%ebp),%esp
 804d60e:	5b                   	pop    %ebx
 804d60f:	5e                   	pop    %esi
 804d610:	5f                   	pop    %edi
 804d611:	5d                   	pop    %ebp
 804d612:	c2 04 00             	ret    $0x4

0804d615 <math__bits__rem_32>:
 804d615:	55                   	push   %ebp
 804d616:	89 e5                	mov    %esp,%ebp
 804d618:	57                   	push   %edi
 804d619:	56                   	push   %esi
 804d61a:	53                   	push   %ebx
 804d61b:	83 ec 1c             	sub    $0x1c,%esp
 804d61e:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804d621:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d626:	89 cb                	mov    %ecx,%ebx
 804d628:	b9 00 00 00 00       	mov    $0x0,%ecx
 804d62d:	8b 75 0c             	mov    0xc(%ebp),%esi
 804d630:	bf 00 00 00 00       	mov    $0x0,%edi
 804d635:	89 c8                	mov    %ecx,%eax
 804d637:	09 f0                	or     %esi,%eax
 804d639:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804d63c:	89 d8                	mov    %ebx,%eax
 804d63e:	09 f8                	or     %edi,%eax
 804d640:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804d643:	8b 4d 10             	mov    0x10(%ebp),%ecx
 804d646:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d64b:	53                   	push   %ebx
 804d64c:	51                   	push   %ecx
 804d64d:	ff 75 e4             	pushl  -0x1c(%ebp)
 804d650:	ff 75 e0             	pushl  -0x20(%ebp)
 804d653:	e8 c8 bd 01 00       	call   8069420 <__umoddi3>
 804d658:	83 c4 10             	add    $0x10,%esp
 804d65b:	8d 65 f4             	lea    -0xc(%ebp),%esp
 804d65e:	5b                   	pop    %ebx
 804d65f:	5e                   	pop    %esi
 804d660:	5f                   	pop    %edi
 804d661:	5d                   	pop    %ebp
 804d662:	c3                   	ret    

0804d663 <math__bits__rem_64>:
 804d663:	55                   	push   %ebp
 804d664:	89 e5                	mov    %esp,%ebp
 804d666:	83 ec 48             	sub    $0x48,%esp
 804d669:	8b 45 08             	mov    0x8(%ebp),%eax
 804d66c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804d66f:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d672:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804d675:	8b 45 10             	mov    0x10(%ebp),%eax
 804d678:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804d67b:	8b 45 14             	mov    0x14(%ebp),%eax
 804d67e:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804d681:	8b 45 18             	mov    0x18(%ebp),%eax
 804d684:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804d687:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804d68a:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804d68d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804d693:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d696:	31 c0                	xor    %eax,%eax
 804d698:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804d69b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804d69e:	ff 75 c4             	pushl  -0x3c(%ebp)
 804d6a1:	ff 75 c0             	pushl  -0x40(%ebp)
 804d6a4:	52                   	push   %edx
 804d6a5:	50                   	push   %eax
 804d6a6:	e8 75 bd 01 00       	call   8069420 <__umoddi3>
 804d6ab:	83 c4 10             	add    $0x10,%esp
 804d6ae:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
 804d6b1:	83 ec 04             	sub    $0x4,%esp
 804d6b4:	ff 75 c4             	pushl  -0x3c(%ebp)
 804d6b7:	ff 75 c0             	pushl  -0x40(%ebp)
 804d6ba:	ff 75 cc             	pushl  -0x34(%ebp)
 804d6bd:	ff 75 c8             	pushl  -0x38(%ebp)
 804d6c0:	52                   	push   %edx
 804d6c1:	50                   	push   %eax
 804d6c2:	51                   	push   %ecx
 804d6c3:	e8 92 fa ff ff       	call   804d15a <math__bits__div_64>
 804d6c8:	83 c4 1c             	add    $0x1c,%esp
 804d6cb:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804d6ce:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804d6d1:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804d6d4:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804d6d7:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804d6da:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804d6dd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804d6e0:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804d6e7:	74 05                	je     804d6ee <math__bits__rem_64+0x8b>
 804d6e9:	e8 32 b1 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804d6ee:	c9                   	leave  
 804d6ef:	c3                   	ret    

0804d6f0 <strconv__lsr96>:
 804d6f0:	55                   	push   %ebp
 804d6f1:	89 e5                	mov    %esp,%ebp
 804d6f3:	83 ec 10             	sub    $0x10,%esp
 804d6f6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804d6fd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 804d704:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d70b:	8b 45 14             	mov    0x14(%ebp),%eax
 804d70e:	d1 e8                	shr    %eax
 804d710:	89 c2                	mov    %eax,%edx
 804d712:	8b 45 10             	mov    0x10(%ebp),%eax
 804d715:	c1 e0 1f             	shl    $0x1f,%eax
 804d718:	09 d0                	or     %edx,%eax
 804d71a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d71d:	8b 45 10             	mov    0x10(%ebp),%eax
 804d720:	d1 e8                	shr    %eax
 804d722:	89 c2                	mov    %eax,%edx
 804d724:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d727:	c1 e0 1f             	shl    $0x1f,%eax
 804d72a:	09 d0                	or     %edx,%eax
 804d72c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804d72f:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d732:	d1 e8                	shr    %eax
 804d734:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804d737:	8b 45 08             	mov    0x8(%ebp),%eax
 804d73a:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804d73d:	89 10                	mov    %edx,(%eax)
 804d73f:	8b 45 08             	mov    0x8(%ebp),%eax
 804d742:	8b 55 f8             	mov    -0x8(%ebp),%edx
 804d745:	89 50 04             	mov    %edx,0x4(%eax)
 804d748:	8b 45 08             	mov    0x8(%ebp),%eax
 804d74b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d74e:	89 50 08             	mov    %edx,0x8(%eax)
 804d751:	8b 45 08             	mov    0x8(%ebp),%eax
 804d754:	c9                   	leave  
 804d755:	c2 04 00             	ret    $0x4

0804d758 <strconv__lsl96>:
 804d758:	55                   	push   %ebp
 804d759:	89 e5                	mov    %esp,%ebp
 804d75b:	83 ec 10             	sub    $0x10,%esp
 804d75e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804d765:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 804d76c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804d773:	8b 45 0c             	mov    0xc(%ebp),%eax
 804d776:	8d 14 00             	lea    (%eax,%eax,1),%edx
 804d779:	8b 45 10             	mov    0x10(%ebp),%eax
 804d77c:	c1 e8 1f             	shr    $0x1f,%eax
 804d77f:	09 d0                	or     %edx,%eax
 804d781:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804d784:	8b 45 10             	mov    0x10(%ebp),%eax
 804d787:	8d 14 00             	lea    (%eax,%eax,1),%edx
 804d78a:	8b 45 14             	mov    0x14(%ebp),%eax
 804d78d:	c1 e8 1f             	shr    $0x1f,%eax
 804d790:	09 d0                	or     %edx,%eax
 804d792:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804d795:	8b 45 14             	mov    0x14(%ebp),%eax
 804d798:	01 c0                	add    %eax,%eax
 804d79a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804d79d:	8b 45 08             	mov    0x8(%ebp),%eax
 804d7a0:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804d7a3:	89 10                	mov    %edx,(%eax)
 804d7a5:	8b 45 08             	mov    0x8(%ebp),%eax
 804d7a8:	8b 55 f8             	mov    -0x8(%ebp),%edx
 804d7ab:	89 50 04             	mov    %edx,0x4(%eax)
 804d7ae:	8b 45 08             	mov    0x8(%ebp),%eax
 804d7b1:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d7b4:	89 50 08             	mov    %edx,0x8(%eax)
 804d7b7:	8b 45 08             	mov    0x8(%ebp),%eax
 804d7ba:	c9                   	leave  
 804d7bb:	c2 04 00             	ret    $0x4

0804d7be <strconv__add96>:
 804d7be:	55                   	push   %ebp
 804d7bf:	89 e5                	mov    %esp,%ebp
 804d7c1:	53                   	push   %ebx
 804d7c2:	83 ec 24             	sub    $0x24,%esp
 804d7c5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804d7cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804d7d3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 804d7da:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804d7e1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804d7e8:	8b 4d 14             	mov    0x14(%ebp),%ecx
 804d7eb:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d7f0:	8b 45 20             	mov    0x20(%ebp),%eax
 804d7f3:	ba 00 00 00 00       	mov    $0x0,%edx
 804d7f8:	01 c8                	add    %ecx,%eax
 804d7fa:	11 da                	adc    %ebx,%edx
 804d7fc:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d7ff:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d802:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d805:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804d808:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d80b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d80e:	89 d0                	mov    %edx,%eax
 804d810:	31 d2                	xor    %edx,%edx
 804d812:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d815:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d818:	8b 4d 10             	mov    0x10(%ebp),%ecx
 804d81b:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d820:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804d823:	ba 00 00 00 00       	mov    $0x0,%edx
 804d828:	01 c8                	add    %ecx,%eax
 804d82a:	11 da                	adc    %ebx,%edx
 804d82c:	01 45 f0             	add    %eax,-0x10(%ebp)
 804d82f:	11 55 f4             	adc    %edx,-0xc(%ebp)
 804d832:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d835:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804d838:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d83b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d83e:	89 d0                	mov    %edx,%eax
 804d840:	31 d2                	xor    %edx,%edx
 804d842:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d845:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d848:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804d84b:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d850:	8b 45 18             	mov    0x18(%ebp),%eax
 804d853:	ba 00 00 00 00       	mov    $0x0,%edx
 804d858:	01 c8                	add    %ecx,%eax
 804d85a:	11 da                	adc    %ebx,%edx
 804d85c:	01 45 f0             	add    %eax,-0x10(%ebp)
 804d85f:	11 55 f4             	adc    %edx,-0xc(%ebp)
 804d862:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d865:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804d868:	8b 45 08             	mov    0x8(%ebp),%eax
 804d86b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804d86e:	89 10                	mov    %edx,(%eax)
 804d870:	8b 45 08             	mov    0x8(%ebp),%eax
 804d873:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804d876:	89 50 04             	mov    %edx,0x4(%eax)
 804d879:	8b 45 08             	mov    0x8(%ebp),%eax
 804d87c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804d87f:	89 50 08             	mov    %edx,0x8(%eax)
 804d882:	8b 45 08             	mov    0x8(%ebp),%eax
 804d885:	83 c4 24             	add    $0x24,%esp
 804d888:	5b                   	pop    %ebx
 804d889:	5d                   	pop    %ebp
 804d88a:	c2 04 00             	ret    $0x4

0804d88d <strconv__sub96>:
 804d88d:	55                   	push   %ebp
 804d88e:	89 e5                	mov    %esp,%ebp
 804d890:	53                   	push   %ebx
 804d891:	83 ec 24             	sub    $0x24,%esp
 804d894:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804d89b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804d8a2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 804d8a9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804d8b0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804d8b7:	8b 4d 14             	mov    0x14(%ebp),%ecx
 804d8ba:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d8bf:	8b 45 20             	mov    0x20(%ebp),%eax
 804d8c2:	ba 00 00 00 00       	mov    $0x0,%edx
 804d8c7:	29 c1                	sub    %eax,%ecx
 804d8c9:	19 d3                	sbb    %edx,%ebx
 804d8cb:	89 c8                	mov    %ecx,%eax
 804d8cd:	89 da                	mov    %ebx,%edx
 804d8cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d8d2:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d8d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d8d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804d8db:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d8de:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d8e1:	89 d0                	mov    %edx,%eax
 804d8e3:	31 d2                	xor    %edx,%edx
 804d8e5:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d8e8:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d8eb:	8b 4d 10             	mov    0x10(%ebp),%ecx
 804d8ee:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d8f3:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804d8f6:	ba 00 00 00 00       	mov    $0x0,%edx
 804d8fb:	29 c1                	sub    %eax,%ecx
 804d8fd:	19 d3                	sbb    %edx,%ebx
 804d8ff:	89 c8                	mov    %ecx,%eax
 804d901:	89 da                	mov    %ebx,%edx
 804d903:	01 45 f0             	add    %eax,-0x10(%ebp)
 804d906:	11 55 f4             	adc    %edx,-0xc(%ebp)
 804d909:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d90c:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804d90f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d912:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804d915:	89 d0                	mov    %edx,%eax
 804d917:	31 d2                	xor    %edx,%edx
 804d919:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804d91c:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804d91f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804d922:	bb 00 00 00 00       	mov    $0x0,%ebx
 804d927:	8b 45 18             	mov    0x18(%ebp),%eax
 804d92a:	ba 00 00 00 00       	mov    $0x0,%edx
 804d92f:	29 c1                	sub    %eax,%ecx
 804d931:	19 d3                	sbb    %edx,%ebx
 804d933:	89 c8                	mov    %ecx,%eax
 804d935:	89 da                	mov    %ebx,%edx
 804d937:	01 45 f0             	add    %eax,-0x10(%ebp)
 804d93a:	11 55 f4             	adc    %edx,-0xc(%ebp)
 804d93d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804d940:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804d943:	8b 45 08             	mov    0x8(%ebp),%eax
 804d946:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804d949:	89 10                	mov    %edx,(%eax)
 804d94b:	8b 45 08             	mov    0x8(%ebp),%eax
 804d94e:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804d951:	89 50 04             	mov    %edx,0x4(%eax)
 804d954:	8b 45 08             	mov    0x8(%ebp),%eax
 804d957:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804d95a:	89 50 08             	mov    %edx,0x8(%eax)
 804d95d:	8b 45 08             	mov    0x8(%ebp),%eax
 804d960:	83 c4 24             	add    $0x24,%esp
 804d963:	5b                   	pop    %ebx
 804d964:	5d                   	pop    %ebp
 804d965:	c2 04 00             	ret    $0x4

0804d968 <strconv__is_digit>:
 804d968:	55                   	push   %ebp
 804d969:	89 e5                	mov    %esp,%ebp
 804d96b:	83 ec 04             	sub    $0x4,%esp
 804d96e:	8b 45 08             	mov    0x8(%ebp),%eax
 804d971:	88 45 fc             	mov    %al,-0x4(%ebp)
 804d974:	80 7d fc 2f          	cmpb   $0x2f,-0x4(%ebp)
 804d978:	76 0d                	jbe    804d987 <strconv__is_digit+0x1f>
 804d97a:	80 7d fc 39          	cmpb   $0x39,-0x4(%ebp)
 804d97e:	77 07                	ja     804d987 <strconv__is_digit+0x1f>
 804d980:	b8 01 00 00 00       	mov    $0x1,%eax
 804d985:	eb 05                	jmp    804d98c <strconv__is_digit+0x24>
 804d987:	b8 00 00 00 00       	mov    $0x0,%eax
 804d98c:	83 f8 01             	cmp    $0x1,%eax
 804d98f:	0f 94 c0             	sete   %al
 804d992:	0f b6 c0             	movzbl %al,%eax
 804d995:	c9                   	leave  
 804d996:	c3                   	ret    

0804d997 <strconv__is_space>:
 804d997:	55                   	push   %ebp
 804d998:	89 e5                	mov    %esp,%ebp
 804d99a:	83 ec 04             	sub    $0x4,%esp
 804d99d:	8b 45 08             	mov    0x8(%ebp),%eax
 804d9a0:	88 45 fc             	mov    %al,-0x4(%ebp)
 804d9a3:	80 7d fc 09          	cmpb   $0x9,-0x4(%ebp)
 804d9a7:	74 1e                	je     804d9c7 <strconv__is_space+0x30>
 804d9a9:	80 7d fc 0a          	cmpb   $0xa,-0x4(%ebp)
 804d9ad:	74 18                	je     804d9c7 <strconv__is_space+0x30>
 804d9af:	80 7d fc 0b          	cmpb   $0xb,-0x4(%ebp)
 804d9b3:	74 12                	je     804d9c7 <strconv__is_space+0x30>
 804d9b5:	80 7d fc 0c          	cmpb   $0xc,-0x4(%ebp)
 804d9b9:	74 0c                	je     804d9c7 <strconv__is_space+0x30>
 804d9bb:	80 7d fc 0d          	cmpb   $0xd,-0x4(%ebp)
 804d9bf:	74 06                	je     804d9c7 <strconv__is_space+0x30>
 804d9c1:	80 7d fc 20          	cmpb   $0x20,-0x4(%ebp)
 804d9c5:	75 07                	jne    804d9ce <strconv__is_space+0x37>
 804d9c7:	b8 01 00 00 00       	mov    $0x1,%eax
 804d9cc:	eb 05                	jmp    804d9d3 <strconv__is_space+0x3c>
 804d9ce:	b8 00 00 00 00       	mov    $0x0,%eax
 804d9d3:	c9                   	leave  
 804d9d4:	c3                   	ret    

0804d9d5 <strconv__is_exp>:
 804d9d5:	55                   	push   %ebp
 804d9d6:	89 e5                	mov    %esp,%ebp
 804d9d8:	83 ec 04             	sub    $0x4,%esp
 804d9db:	8b 45 08             	mov    0x8(%ebp),%eax
 804d9de:	88 45 fc             	mov    %al,-0x4(%ebp)
 804d9e1:	80 7d fc 45          	cmpb   $0x45,-0x4(%ebp)
 804d9e5:	74 06                	je     804d9ed <strconv__is_exp+0x18>
 804d9e7:	80 7d fc 65          	cmpb   $0x65,-0x4(%ebp)
 804d9eb:	75 07                	jne    804d9f4 <strconv__is_exp+0x1f>
 804d9ed:	b8 01 00 00 00       	mov    $0x1,%eax
 804d9f2:	eb 05                	jmp    804d9f9 <strconv__is_exp+0x24>
 804d9f4:	b8 00 00 00 00       	mov    $0x0,%eax
 804d9f9:	83 f8 01             	cmp    $0x1,%eax
 804d9fc:	0f 94 c0             	sete   %al
 804d9ff:	0f b6 c0             	movzbl %al,%eax
 804da02:	c9                   	leave  
 804da03:	c3                   	ret    

0804da04 <strconv__parser>:
 804da04:	55                   	push   %ebp
 804da05:	89 e5                	mov    %esp,%ebp
 804da07:	53                   	push   %ebx
 804da08:	83 ec 34             	sub    $0x34,%esp
 804da0b:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804da12:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804da19:	c6 45 cb 20          	movb   $0x20,-0x35(%ebp)
 804da1d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 804da24:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 804da2b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804da32:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 804da39:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 804da40:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 804da47:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804da4e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804da55:	83 7d cc 09          	cmpl   $0x9,-0x34(%ebp)
 804da59:	0f 84 54 04 00 00    	je     804deb3 <strconv__parser+0x4af>
 804da5f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804da62:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804da65:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 804da69:	75 3e                	jne    804daa9 <strconv__parser+0xa5>
 804da6b:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804da6f:	50                   	push   %eax
 804da70:	e8 22 ff ff ff       	call   804d997 <strconv__is_space>
 804da75:	83 c4 04             	add    $0x4,%esp
 804da78:	83 f8 01             	cmp    $0x1,%eax
 804da7b:	75 20                	jne    804da9d <strconv__parser+0x99>
 804da7d:	ff 75 e0             	pushl  -0x20(%ebp)
 804da80:	ff 75 14             	pushl  0x14(%ebp)
 804da83:	ff 75 10             	pushl  0x10(%ebp)
 804da86:	ff 75 0c             	pushl  0xc(%ebp)
 804da89:	e8 ac 2e 01 00       	call   806093a <string_at>
 804da8e:	83 c4 10             	add    $0x10,%esp
 804da91:	88 45 cb             	mov    %al,-0x35(%ebp)
 804da94:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 804da98:	e9 fe 03 00 00       	jmp    804de9b <strconv__parser+0x497>
 804da9d:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 804daa4:	e9 f2 03 00 00       	jmp    804de9b <strconv__parser+0x497>
 804daa9:	83 7d e4 01          	cmpl   $0x1,-0x1c(%ebp)
 804daad:	0f 85 88 00 00 00    	jne    804db3b <strconv__parser+0x137>
 804dab3:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%ebp)
 804daba:	80 7d cb 2b          	cmpb   $0x2b,-0x35(%ebp)
 804dabe:	75 20                	jne    804dae0 <strconv__parser+0xdc>
 804dac0:	ff 75 e0             	pushl  -0x20(%ebp)
 804dac3:	ff 75 14             	pushl  0x14(%ebp)
 804dac6:	ff 75 10             	pushl  0x10(%ebp)
 804dac9:	ff 75 0c             	pushl  0xc(%ebp)
 804dacc:	e8 69 2e 01 00       	call   806093a <string_at>
 804dad1:	83 c4 10             	add    $0x10,%esp
 804dad4:	88 45 cb             	mov    %al,-0x35(%ebp)
 804dad7:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 804dadb:	e9 bb 03 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dae0:	80 7d cb 2d          	cmpb   $0x2d,-0x35(%ebp)
 804dae4:	75 27                	jne    804db0d <strconv__parser+0x109>
 804dae6:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 804daed:	ff 75 e0             	pushl  -0x20(%ebp)
 804daf0:	ff 75 14             	pushl  0x14(%ebp)
 804daf3:	ff 75 10             	pushl  0x10(%ebp)
 804daf6:	ff 75 0c             	pushl  0xc(%ebp)
 804daf9:	e8 3c 2e 01 00       	call   806093a <string_at>
 804dafe:	83 c4 10             	add    $0x10,%esp
 804db01:	88 45 cb             	mov    %al,-0x35(%ebp)
 804db04:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 804db08:	e9 8e 03 00 00       	jmp    804de9b <strconv__parser+0x497>
 804db0d:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804db11:	83 ec 0c             	sub    $0xc,%esp
 804db14:	50                   	push   %eax
 804db15:	e8 4e fe ff ff       	call   804d968 <strconv__is_digit>
 804db1a:	83 c4 10             	add    $0x10,%esp
 804db1d:	85 c0                	test   %eax,%eax
 804db1f:	0f 85 76 03 00 00    	jne    804de9b <strconv__parser+0x497>
 804db25:	80 7d cb 2e          	cmpb   $0x2e,-0x35(%ebp)
 804db29:	0f 84 6c 03 00 00    	je     804de9b <strconv__parser+0x497>
 804db2f:	c7 45 cc 09 00 00 00 	movl   $0x9,-0x34(%ebp)
 804db36:	e9 60 03 00 00       	jmp    804de9b <strconv__parser+0x497>
 804db3b:	83 7d e4 02          	cmpl   $0x2,-0x1c(%ebp)
 804db3f:	75 65                	jne    804dba6 <strconv__parser+0x1a2>
 804db41:	80 7d cb 30          	cmpb   $0x30,-0x35(%ebp)
 804db45:	75 23                	jne    804db6a <strconv__parser+0x166>
 804db47:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804db4a:	8d 50 01             	lea    0x1(%eax),%edx
 804db4d:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804db50:	50                   	push   %eax
 804db51:	ff 75 14             	pushl  0x14(%ebp)
 804db54:	ff 75 10             	pushl  0x10(%ebp)
 804db57:	ff 75 0c             	pushl  0xc(%ebp)
 804db5a:	e8 db 2d 01 00       	call   806093a <string_at>
 804db5f:	83 c4 10             	add    $0x10,%esp
 804db62:	88 45 cb             	mov    %al,-0x35(%ebp)
 804db65:	e9 31 03 00 00       	jmp    804de9b <strconv__parser+0x497>
 804db6a:	80 7d cb 2e          	cmpb   $0x2e,-0x35(%ebp)
 804db6e:	75 2a                	jne    804db9a <strconv__parser+0x196>
 804db70:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804db73:	8d 50 01             	lea    0x1(%eax),%edx
 804db76:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804db79:	50                   	push   %eax
 804db7a:	ff 75 14             	pushl  0x14(%ebp)
 804db7d:	ff 75 10             	pushl  0x10(%ebp)
 804db80:	ff 75 0c             	pushl  0xc(%ebp)
 804db83:	e8 b2 2d 01 00       	call   806093a <string_at>
 804db88:	83 c4 10             	add    $0x10,%esp
 804db8b:	88 45 cb             	mov    %al,-0x35(%ebp)
 804db8e:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%ebp)
 804db95:	e9 01 03 00 00       	jmp    804de9b <strconv__parser+0x497>
 804db9a:	c7 45 cc 04 00 00 00 	movl   $0x4,-0x34(%ebp)
 804dba1:	e9 f5 02 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dba6:	83 7d e4 03          	cmpl   $0x3,-0x1c(%ebp)
 804dbaa:	75 4c                	jne    804dbf8 <strconv__parser+0x1f4>
 804dbac:	80 7d cb 30          	cmpb   $0x30,-0x35(%ebp)
 804dbb0:	75 3a                	jne    804dbec <strconv__parser+0x1e8>
 804dbb2:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804dbb5:	8d 50 01             	lea    0x1(%eax),%edx
 804dbb8:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804dbbb:	50                   	push   %eax
 804dbbc:	ff 75 14             	pushl  0x14(%ebp)
 804dbbf:	ff 75 10             	pushl  0x10(%ebp)
 804dbc2:	ff 75 0c             	pushl  0xc(%ebp)
 804dbc5:	e8 70 2d 01 00       	call   806093a <string_at>
 804dbca:	83 c4 10             	add    $0x10,%esp
 804dbcd:	88 45 cb             	mov    %al,-0x35(%ebp)
 804dbd0:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804dbd3:	3d 02 00 00 80       	cmp    $0x80000002,%eax
 804dbd8:	0f 8c bd 02 00 00    	jl     804de9b <strconv__parser+0x497>
 804dbde:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804dbe1:	83 e8 01             	sub    $0x1,%eax
 804dbe4:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804dbe7:	e9 af 02 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dbec:	c7 45 cc 05 00 00 00 	movl   $0x5,-0x34(%ebp)
 804dbf3:	e9 a3 02 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dbf8:	83 7d e4 04          	cmpl   $0x4,-0x1c(%ebp)
 804dbfc:	0f 85 c9 00 00 00    	jne    804dccb <strconv__parser+0x2c7>
 804dc02:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804dc06:	83 ec 0c             	sub    $0xc,%esp
 804dc09:	50                   	push   %eax
 804dc0a:	e8 59 fd ff ff       	call   804d968 <strconv__is_digit>
 804dc0f:	83 c4 10             	add    $0x10,%esp
 804dc12:	85 c0                	test   %eax,%eax
 804dc14:	74 79                	je     804dc8f <strconv__parser+0x28b>
 804dc16:	83 7d d0 11          	cmpl   $0x11,-0x30(%ebp)
 804dc1a:	7f 3d                	jg     804dc59 <strconv__parser+0x255>
 804dc1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804dc1f:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804dc22:	6b da 0a             	imul   $0xa,%edx,%ebx
 804dc25:	6b c8 00             	imul   $0x0,%eax,%ecx
 804dc28:	01 d9                	add    %ebx,%ecx
 804dc2a:	bb 0a 00 00 00       	mov    $0xa,%ebx
 804dc2f:	f7 e3                	mul    %ebx
 804dc31:	01 d1                	add    %edx,%ecx
 804dc33:	89 ca                	mov    %ecx,%edx
 804dc35:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804dc38:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804dc3b:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804dc3e:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 804dc41:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804dc45:	83 e8 30             	sub    $0x30,%eax
 804dc48:	99                   	cltd   
 804dc49:	01 c8                	add    %ecx,%eax
 804dc4b:	11 da                	adc    %ebx,%edx
 804dc4d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804dc50:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804dc53:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 804dc57:	eb 13                	jmp    804dc6c <strconv__parser+0x268>
 804dc59:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804dc5c:	3d ff ff ff 7f       	cmp    $0x7fffffff,%eax
 804dc61:	74 09                	je     804dc6c <strconv__parser+0x268>
 804dc63:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804dc66:	83 c0 01             	add    $0x1,%eax
 804dc69:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804dc6c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804dc6f:	8d 50 01             	lea    0x1(%eax),%edx
 804dc72:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804dc75:	50                   	push   %eax
 804dc76:	ff 75 14             	pushl  0x14(%ebp)
 804dc79:	ff 75 10             	pushl  0x10(%ebp)
 804dc7c:	ff 75 0c             	pushl  0xc(%ebp)
 804dc7f:	e8 b6 2c 01 00       	call   806093a <string_at>
 804dc84:	83 c4 10             	add    $0x10,%esp
 804dc87:	88 45 cb             	mov    %al,-0x35(%ebp)
 804dc8a:	e9 0c 02 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dc8f:	80 7d cb 2e          	cmpb   $0x2e,-0x35(%ebp)
 804dc93:	75 2a                	jne    804dcbf <strconv__parser+0x2bb>
 804dc95:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804dc98:	8d 50 01             	lea    0x1(%eax),%edx
 804dc9b:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804dc9e:	50                   	push   %eax
 804dc9f:	ff 75 14             	pushl  0x14(%ebp)
 804dca2:	ff 75 10             	pushl  0x10(%ebp)
 804dca5:	ff 75 0c             	pushl  0xc(%ebp)
 804dca8:	e8 8d 2c 01 00       	call   806093a <string_at>
 804dcad:	83 c4 10             	add    $0x10,%esp
 804dcb0:	88 45 cb             	mov    %al,-0x35(%ebp)
 804dcb3:	c7 45 cc 05 00 00 00 	movl   $0x5,-0x34(%ebp)
 804dcba:	e9 dc 01 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dcbf:	c7 45 cc 05 00 00 00 	movl   $0x5,-0x34(%ebp)
 804dcc6:	e9 d0 01 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dccb:	83 7d e4 05          	cmpl   $0x5,-0x1c(%ebp)
 804dccf:	0f 85 cb 00 00 00    	jne    804dda0 <strconv__parser+0x39c>
 804dcd5:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804dcd9:	83 ec 0c             	sub    $0xc,%esp
 804dcdc:	50                   	push   %eax
 804dcdd:	e8 86 fc ff ff       	call   804d968 <strconv__is_digit>
 804dce2:	83 c4 10             	add    $0x10,%esp
 804dce5:	85 c0                	test   %eax,%eax
 804dce7:	74 6d                	je     804dd56 <strconv__parser+0x352>
 804dce9:	83 7d d0 11          	cmpl   $0x11,-0x30(%ebp)
 804dced:	7f 44                	jg     804dd33 <strconv__parser+0x32f>
 804dcef:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804dcf2:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804dcf5:	6b da 0a             	imul   $0xa,%edx,%ebx
 804dcf8:	6b c8 00             	imul   $0x0,%eax,%ecx
 804dcfb:	01 d9                	add    %ebx,%ecx
 804dcfd:	bb 0a 00 00 00       	mov    $0xa,%ebx
 804dd02:	f7 e3                	mul    %ebx
 804dd04:	01 d1                	add    %edx,%ecx
 804dd06:	89 ca                	mov    %ecx,%edx
 804dd08:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804dd0b:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804dd0e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 804dd11:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 804dd14:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804dd18:	83 e8 30             	sub    $0x30,%eax
 804dd1b:	99                   	cltd   
 804dd1c:	01 c8                	add    %ecx,%eax
 804dd1e:	11 da                	adc    %ebx,%edx
 804dd20:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804dd23:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804dd26:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804dd29:	83 e8 01             	sub    $0x1,%eax
 804dd2c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804dd2f:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 804dd33:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804dd36:	8d 50 01             	lea    0x1(%eax),%edx
 804dd39:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804dd3c:	50                   	push   %eax
 804dd3d:	ff 75 14             	pushl  0x14(%ebp)
 804dd40:	ff 75 10             	pushl  0x10(%ebp)
 804dd43:	ff 75 0c             	pushl  0xc(%ebp)
 804dd46:	e8 ef 2b 01 00       	call   806093a <string_at>
 804dd4b:	83 c4 10             	add    $0x10,%esp
 804dd4e:	88 45 cb             	mov    %al,-0x35(%ebp)
 804dd51:	e9 45 01 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dd56:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804dd5a:	83 ec 0c             	sub    $0xc,%esp
 804dd5d:	50                   	push   %eax
 804dd5e:	e8 72 fc ff ff       	call   804d9d5 <strconv__is_exp>
 804dd63:	83 c4 10             	add    $0x10,%esp
 804dd66:	85 c0                	test   %eax,%eax
 804dd68:	74 2a                	je     804dd94 <strconv__parser+0x390>
 804dd6a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804dd6d:	8d 50 01             	lea    0x1(%eax),%edx
 804dd70:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804dd73:	50                   	push   %eax
 804dd74:	ff 75 14             	pushl  0x14(%ebp)
 804dd77:	ff 75 10             	pushl  0x10(%ebp)
 804dd7a:	ff 75 0c             	pushl  0xc(%ebp)
 804dd7d:	e8 b8 2b 01 00       	call   806093a <string_at>
 804dd82:	83 c4 10             	add    $0x10,%esp
 804dd85:	88 45 cb             	mov    %al,-0x35(%ebp)
 804dd88:	c7 45 cc 06 00 00 00 	movl   $0x6,-0x34(%ebp)
 804dd8f:	e9 07 01 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dd94:	c7 45 cc 06 00 00 00 	movl   $0x6,-0x34(%ebp)
 804dd9b:	e9 fb 00 00 00       	jmp    804de9b <strconv__parser+0x497>
 804dda0:	83 7d e4 06          	cmpl   $0x6,-0x1c(%ebp)
 804dda4:	75 5d                	jne    804de03 <strconv__parser+0x3ff>
 804dda6:	80 7d cb 2b          	cmpb   $0x2b,-0x35(%ebp)
 804ddaa:	75 20                	jne    804ddcc <strconv__parser+0x3c8>
 804ddac:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804ddaf:	8d 50 01             	lea    0x1(%eax),%edx
 804ddb2:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804ddb5:	50                   	push   %eax
 804ddb6:	ff 75 14             	pushl  0x14(%ebp)
 804ddb9:	ff 75 10             	pushl  0x10(%ebp)
 804ddbc:	ff 75 0c             	pushl  0xc(%ebp)
 804ddbf:	e8 76 2b 01 00       	call   806093a <string_at>
 804ddc4:	83 c4 10             	add    $0x10,%esp
 804ddc7:	88 45 cb             	mov    %al,-0x35(%ebp)
 804ddca:	eb 2b                	jmp    804ddf7 <strconv__parser+0x3f3>
 804ddcc:	80 7d cb 2d          	cmpb   $0x2d,-0x35(%ebp)
 804ddd0:	75 25                	jne    804ddf7 <strconv__parser+0x3f3>
 804ddd2:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 804ddd9:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804dddc:	8d 50 01             	lea    0x1(%eax),%edx
 804dddf:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804dde2:	50                   	push   %eax
 804dde3:	ff 75 14             	pushl  0x14(%ebp)
 804dde6:	ff 75 10             	pushl  0x10(%ebp)
 804dde9:	ff 75 0c             	pushl  0xc(%ebp)
 804ddec:	e8 49 2b 01 00       	call   806093a <string_at>
 804ddf1:	83 c4 10             	add    $0x10,%esp
 804ddf4:	88 45 cb             	mov    %al,-0x35(%ebp)
 804ddf7:	c7 45 cc 07 00 00 00 	movl   $0x7,-0x34(%ebp)
 804ddfe:	e9 98 00 00 00       	jmp    804de9b <strconv__parser+0x497>
 804de03:	83 7d e4 07          	cmpl   $0x7,-0x1c(%ebp)
 804de07:	75 2f                	jne    804de38 <strconv__parser+0x434>
 804de09:	80 7d cb 30          	cmpb   $0x30,-0x35(%ebp)
 804de0d:	75 20                	jne    804de2f <strconv__parser+0x42b>
 804de0f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804de12:	8d 50 01             	lea    0x1(%eax),%edx
 804de15:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804de18:	50                   	push   %eax
 804de19:	ff 75 14             	pushl  0x14(%ebp)
 804de1c:	ff 75 10             	pushl  0x10(%ebp)
 804de1f:	ff 75 0c             	pushl  0xc(%ebp)
 804de22:	e8 13 2b 01 00       	call   806093a <string_at>
 804de27:	83 c4 10             	add    $0x10,%esp
 804de2a:	88 45 cb             	mov    %al,-0x35(%ebp)
 804de2d:	eb 6c                	jmp    804de9b <strconv__parser+0x497>
 804de2f:	c7 45 cc 08 00 00 00 	movl   $0x8,-0x34(%ebp)
 804de36:	eb 63                	jmp    804de9b <strconv__parser+0x497>
 804de38:	83 7d e4 08          	cmpl   $0x8,-0x1c(%ebp)
 804de3c:	75 5d                	jne    804de9b <strconv__parser+0x497>
 804de3e:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804de42:	83 ec 0c             	sub    $0xc,%esp
 804de45:	50                   	push   %eax
 804de46:	e8 1d fb ff ff       	call   804d968 <strconv__is_digit>
 804de4b:	83 c4 10             	add    $0x10,%esp
 804de4e:	85 c0                	test   %eax,%eax
 804de50:	74 42                	je     804de94 <strconv__parser+0x490>
 804de52:	81 7d dc cb cc cc 0c 	cmpl   $0xccccccb,-0x24(%ebp)
 804de59:	7f 19                	jg     804de74 <strconv__parser+0x470>
 804de5b:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804de5e:	89 d0                	mov    %edx,%eax
 804de60:	c1 e0 02             	shl    $0x2,%eax
 804de63:	01 d0                	add    %edx,%eax
 804de65:	01 c0                	add    %eax,%eax
 804de67:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804de6a:	0f b6 45 cb          	movzbl -0x35(%ebp),%eax
 804de6e:	83 e8 30             	sub    $0x30,%eax
 804de71:	01 45 dc             	add    %eax,-0x24(%ebp)
 804de74:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804de77:	8d 50 01             	lea    0x1(%eax),%edx
 804de7a:	89 55 e0             	mov    %edx,-0x20(%ebp)
 804de7d:	50                   	push   %eax
 804de7e:	ff 75 14             	pushl  0x14(%ebp)
 804de81:	ff 75 10             	pushl  0x10(%ebp)
 804de84:	ff 75 0c             	pushl  0xc(%ebp)
 804de87:	e8 ae 2a 01 00       	call   806093a <string_at>
 804de8c:	83 c4 10             	add    $0x10,%esp
 804de8f:	88 45 cb             	mov    %al,-0x35(%ebp)
 804de92:	eb 07                	jmp    804de9b <strconv__parser+0x497>
 804de94:	c7 45 cc 09 00 00 00 	movl   $0x9,-0x34(%ebp)
 804de9b:	8b 45 10             	mov    0x10(%ebp),%eax
 804de9e:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804dea1:	0f 8f ae fb ff ff    	jg     804da55 <strconv__parser+0x51>
 804dea7:	c7 45 cc 09 00 00 00 	movl   $0x9,-0x34(%ebp)
 804deae:	e9 a2 fb ff ff       	jmp    804da55 <strconv__parser+0x51>
 804deb3:	90                   	nop
 804deb4:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 804deb8:	74 03                	je     804debd <strconv__parser+0x4b9>
 804deba:	f7 5d dc             	negl   -0x24(%ebp)
 804debd:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804dec0:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804dec3:	01 d0                	add    %edx,%eax
 804dec5:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804dec8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804decb:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804dece:	09 d0                	or     %edx,%eax
 804ded0:	85 c0                	test   %eax,%eax
 804ded2:	75 19                	jne    804deed <strconv__parser+0x4e9>
 804ded4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ded7:	85 c0                	test   %eax,%eax
 804ded9:	74 09                	je     804dee4 <strconv__parser+0x4e0>
 804dedb:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%ebp)
 804dee2:	eb 4d                	jmp    804df31 <strconv__parser+0x52d>
 804dee4:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 804deeb:	eb 44                	jmp    804df31 <strconv__parser+0x52d>
 804deed:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804def0:	3d 35 01 00 00       	cmp    $0x135,%eax
 804def5:	7e 19                	jle    804df10 <strconv__parser+0x50c>
 804def7:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804defa:	85 c0                	test   %eax,%eax
 804defc:	74 09                	je     804df07 <strconv__parser+0x503>
 804defe:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 804df05:	eb 2a                	jmp    804df31 <strconv__parser+0x52d>
 804df07:	c7 45 d4 03 00 00 00 	movl   $0x3,-0x2c(%ebp)
 804df0e:	eb 21                	jmp    804df31 <strconv__parser+0x52d>
 804df10:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804df13:	3d b8 fe ff ff       	cmp    $0xfffffeb8,%eax
 804df18:	7d 17                	jge    804df31 <strconv__parser+0x52d>
 804df1a:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804df1d:	85 c0                	test   %eax,%eax
 804df1f:	74 09                	je     804df2a <strconv__parser+0x526>
 804df21:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%ebp)
 804df28:	eb 07                	jmp    804df31 <strconv__parser+0x52d>
 804df2a:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 804df31:	8b 45 08             	mov    0x8(%ebp),%eax
 804df34:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804df37:	89 10                	mov    %edx,(%eax)
 804df39:	8b 45 08             	mov    0x8(%ebp),%eax
 804df3c:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804df3f:	89 50 04             	mov    %edx,0x4(%eax)
 804df42:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804df45:	89 50 08             	mov    %edx,0x8(%eax)
 804df48:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804df4b:	89 50 0c             	mov    %edx,0xc(%eax)
 804df4e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804df51:	89 50 10             	mov    %edx,0x10(%eax)
 804df54:	8b 45 08             	mov    0x8(%ebp),%eax
 804df57:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804df5a:	c9                   	leave  
 804df5b:	c2 04 00             	ret    $0x4

0804df5e <strconv__converter>:
 804df5e:	55                   	push   %ebp
 804df5f:	89 e5                	mov    %esp,%ebp
 804df61:	56                   	push   %esi
 804df62:	53                   	push   %ebx
 804df63:	81 ec a0 00 00 00    	sub    $0xa0,%esp
 804df69:	8b 45 08             	mov    0x8(%ebp),%eax
 804df6c:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 804df72:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804df78:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804df7b:	31 c0                	xor    %eax,%eax
 804df7d:	c7 85 68 ff ff ff 5c 	movl   $0x5c,-0x98(%ebp)
 804df84:	00 00 00 
 804df87:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%ebp)
 804df8e:	00 00 00 
 804df91:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%ebp)
 804df98:	00 00 00 
 804df9b:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%ebp)
 804dfa2:	00 00 00 
 804dfa5:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%ebp)
 804dfac:	00 00 00 
 804dfaf:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%ebp)
 804dfb6:	00 00 00 
 804dfb9:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
 804dfc0:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
 804dfc7:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
 804dfce:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
 804dfd5:	c7 45 90 00 00 00 f0 	movl   $0xf0000000,-0x70(%ebp)
 804dfdc:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 804dfe3:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)
 804dfea:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804dff0:	8b 50 0c             	mov    0xc(%eax),%edx
 804dff3:	8b 40 08             	mov    0x8(%eax),%eax
 804dff6:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804dffc:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e002:	8b 50 0c             	mov    0xc(%eax),%edx
 804e005:	8b 40 08             	mov    0x8(%eax),%eax
 804e008:	89 d0                	mov    %edx,%eax
 804e00a:	31 d2                	xor    %edx,%edx
 804e00c:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e012:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%ebp)
 804e019:	00 00 00 
 804e01c:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e022:	8b 40 04             	mov    0x4(%eax),%eax
 804e025:	85 c0                	test   %eax,%eax
 804e027:	7f 05                	jg     804e02e <strconv__converter+0xd0>
 804e029:	e9 65 01 00 00       	jmp    804e193 <strconv__converter+0x235>
 804e02e:	8d 45 b8             	lea    -0x48(%ebp),%eax
 804e031:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e037:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e03d:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e043:	50                   	push   %eax
 804e044:	e8 0f f7 ff ff       	call   804d758 <strconv__lsl96>
 804e049:	83 c4 0c             	add    $0xc,%esp
 804e04c:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804e04f:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 804e055:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804e058:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804e05e:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804e061:	89 45 80             	mov    %eax,-0x80(%ebp)
 804e064:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 804e067:	ff 75 80             	pushl  -0x80(%ebp)
 804e06a:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 804e070:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 804e076:	50                   	push   %eax
 804e077:	e8 dc f6 ff ff       	call   804d758 <strconv__lsl96>
 804e07c:	83 c4 0c             	add    $0xc,%esp
 804e07f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804e082:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804e085:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804e088:	89 45 88             	mov    %eax,-0x78(%ebp)
 804e08b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804e08e:	89 45 8c             	mov    %eax,-0x74(%ebp)
 804e091:	8d 45 d0             	lea    -0x30(%ebp),%eax
 804e094:	ff 75 8c             	pushl  -0x74(%ebp)
 804e097:	ff 75 88             	pushl  -0x78(%ebp)
 804e09a:	ff 75 84             	pushl  -0x7c(%ebp)
 804e09d:	50                   	push   %eax
 804e09e:	e8 b5 f6 ff ff       	call   804d758 <strconv__lsl96>
 804e0a3:	83 c4 0c             	add    $0xc,%esp
 804e0a6:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804e0a9:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e0af:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804e0b2:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e0b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804e0bb:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e0c1:	8d 45 dc             	lea    -0x24(%ebp),%eax
 804e0c4:	83 ec 04             	sub    $0x4,%esp
 804e0c7:	ff 75 80             	pushl  -0x80(%ebp)
 804e0ca:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 804e0d0:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 804e0d6:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e0dc:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e0e2:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e0e8:	50                   	push   %eax
 804e0e9:	e8 d0 f6 ff ff       	call   804d7be <strconv__add96>
 804e0ee:	83 c4 1c             	add    $0x1c,%esp
 804e0f1:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804e0f4:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e0fa:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804e0fd:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e103:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804e106:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e10c:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e112:	8b 40 04             	mov    0x4(%eax),%eax
 804e115:	8d 50 ff             	lea    -0x1(%eax),%edx
 804e118:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e11e:	89 50 04             	mov    %edx,0x4(%eax)
 804e121:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 804e127:	23 45 90             	and    -0x70(%ebp),%eax
 804e12a:	85 c0                	test   %eax,%eax
 804e12c:	75 05                	jne    804e133 <strconv__converter+0x1d5>
 804e12e:	e9 e9 fe ff ff       	jmp    804e01c <strconv__converter+0xbe>
 804e133:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804e136:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e13c:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e142:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e148:	50                   	push   %eax
 804e149:	e8 a2 f5 ff ff       	call   804d6f0 <strconv__lsr96>
 804e14e:	83 c4 0c             	add    $0xc,%esp
 804e151:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804e154:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 804e15a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e15d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804e163:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804e166:	89 45 80             	mov    %eax,-0x80(%ebp)
 804e169:	83 85 68 ff ff ff 01 	addl   $0x1,-0x98(%ebp)
 804e170:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804e176:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e17c:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804e182:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e188:	8b 45 80             	mov    -0x80(%ebp),%eax
 804e18b:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e191:	eb 8e                	jmp    804e121 <strconv__converter+0x1c3>
 804e193:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e199:	8b 40 04             	mov    0x4(%eax),%eax
 804e19c:	85 c0                	test   %eax,%eax
 804e19e:	0f 89 b2 01 00 00    	jns    804e356 <strconv__converter+0x3f8>
 804e1a4:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 804e1aa:	85 c0                	test   %eax,%eax
 804e1ac:	0f 89 41 01 00 00    	jns    804e2f3 <strconv__converter+0x395>
 804e1b2:	8b 0d d0 30 07 08    	mov    0x80730d0,%ecx
 804e1b8:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 804e1be:	ba 00 00 00 00       	mov    $0x0,%edx
 804e1c3:	f7 f1                	div    %ecx
 804e1c5:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 804e1cb:	8b 0d d0 30 07 08    	mov    0x80730d0,%ecx
 804e1d1:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 804e1d7:	ba 00 00 00 00       	mov    $0x0,%edx
 804e1dc:	f7 f1                	div    %ecx
 804e1de:	89 55 88             	mov    %edx,-0x78(%ebp)
 804e1e1:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804e1e7:	c1 e8 08             	shr    $0x8,%eax
 804e1ea:	89 c2                	mov    %eax,%edx
 804e1ec:	8b 45 88             	mov    -0x78(%ebp),%eax
 804e1ef:	c1 e0 18             	shl    $0x18,%eax
 804e1f2:	09 d0                	or     %edx,%eax
 804e1f4:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804e1f7:	8b 0d d0 30 07 08    	mov    0x80730d0,%ecx
 804e1fd:	8b 45 84             	mov    -0x7c(%ebp),%eax
 804e200:	ba 00 00 00 00       	mov    $0x0,%edx
 804e205:	f7 f1                	div    %ecx
 804e207:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804e20d:	8b 0d d0 30 07 08    	mov    0x80730d0,%ecx
 804e213:	8b 45 84             	mov    -0x7c(%ebp),%eax
 804e216:	ba 00 00 00 00       	mov    $0x0,%edx
 804e21b:	f7 f1                	div    %ecx
 804e21d:	89 55 88             	mov    %edx,-0x78(%ebp)
 804e220:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804e226:	0f b6 c0             	movzbl %al,%eax
 804e229:	c1 e0 10             	shl    $0x10,%eax
 804e22c:	89 c2                	mov    %eax,%edx
 804e22e:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804e234:	c1 e8 10             	shr    $0x10,%eax
 804e237:	09 c2                	or     %eax,%edx
 804e239:	8b 45 88             	mov    -0x78(%ebp),%eax
 804e23c:	c1 e0 18             	shl    $0x18,%eax
 804e23f:	09 d0                	or     %edx,%eax
 804e241:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804e244:	8b 0d d0 30 07 08    	mov    0x80730d0,%ecx
 804e24a:	8b 45 84             	mov    -0x7c(%ebp),%eax
 804e24d:	ba 00 00 00 00       	mov    $0x0,%edx
 804e252:	f7 f1                	div    %ecx
 804e254:	89 45 8c             	mov    %eax,-0x74(%ebp)
 804e257:	8b 0d d0 30 07 08    	mov    0x80730d0,%ecx
 804e25d:	8b 45 84             	mov    -0x7c(%ebp),%eax
 804e260:	ba 00 00 00 00       	mov    $0x0,%edx
 804e265:	f7 f1                	div    %ecx
 804e267:	89 55 88             	mov    %edx,-0x78(%ebp)
 804e26a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804e270:	c1 e0 08             	shl    $0x8,%eax
 804e273:	89 c2                	mov    %eax,%edx
 804e275:	8b 45 8c             	mov    -0x74(%ebp),%eax
 804e278:	25 00 00 ff 00       	and    $0xff0000,%eax
 804e27d:	c1 e8 10             	shr    $0x10,%eax
 804e280:	09 d0                	or     %edx,%eax
 804e282:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804e288:	8b 45 8c             	mov    -0x74(%ebp),%eax
 804e28b:	c1 e0 10             	shl    $0x10,%eax
 804e28e:	89 45 80             	mov    %eax,-0x80(%ebp)
 804e291:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804e297:	0f b7 c0             	movzwl %ax,%eax
 804e29a:	8b 55 88             	mov    -0x78(%ebp),%edx
 804e29d:	c1 e2 10             	shl    $0x10,%edx
 804e2a0:	09 d0                	or     %edx,%eax
 804e2a2:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804e2a5:	8b 0d d0 30 07 08    	mov    0x80730d0,%ecx
 804e2ab:	8b 45 84             	mov    -0x7c(%ebp),%eax
 804e2ae:	ba 00 00 00 00       	mov    $0x0,%edx
 804e2b3:	f7 f1                	div    %ecx
 804e2b5:	09 45 80             	or     %eax,-0x80(%ebp)
 804e2b8:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804e2be:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e2c4:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804e2ca:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e2d0:	8b 45 80             	mov    -0x80(%ebp),%eax
 804e2d3:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e2d9:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e2df:	8b 40 04             	mov    0x4(%eax),%eax
 804e2e2:	8d 50 01             	lea    0x1(%eax),%edx
 804e2e5:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e2eb:	89 50 04             	mov    %edx,0x4(%eax)
 804e2ee:	e9 a0 fe ff ff       	jmp    804e193 <strconv__converter+0x235>
 804e2f3:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804e2f6:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e2fc:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e302:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e308:	50                   	push   %eax
 804e309:	e8 4a f4 ff ff       	call   804d758 <strconv__lsl96>
 804e30e:	83 c4 0c             	add    $0xc,%esp
 804e311:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804e314:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 804e31a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e31d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804e323:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804e326:	89 45 80             	mov    %eax,-0x80(%ebp)
 804e329:	83 ad 68 ff ff ff 01 	subl   $0x1,-0x98(%ebp)
 804e330:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804e336:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e33c:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804e342:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e348:	8b 45 80             	mov    -0x80(%ebp),%eax
 804e34b:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e351:	e9 4e fe ff ff       	jmp    804e1a4 <strconv__converter+0x246>
 804e356:	90                   	nop
 804e357:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%ebp)
 804e35e:	75 12                	jne    804e372 <strconv__converter+0x414>
 804e360:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%ebp)
 804e367:	75 09                	jne    804e372 <strconv__converter+0x414>
 804e369:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%ebp)
 804e370:	74 6e                	je     804e3e0 <strconv__converter+0x482>
 804e372:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 804e378:	23 45 90             	and    -0x70(%ebp),%eax
 804e37b:	85 c0                	test   %eax,%eax
 804e37d:	75 60                	jne    804e3df <strconv__converter+0x481>
 804e37f:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804e382:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e388:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e38e:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e394:	50                   	push   %eax
 804e395:	e8 be f3 ff ff       	call   804d758 <strconv__lsl96>
 804e39a:	83 c4 0c             	add    $0xc,%esp
 804e39d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804e3a0:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 804e3a6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e3a9:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804e3af:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804e3b2:	89 45 80             	mov    %eax,-0x80(%ebp)
 804e3b5:	83 ad 68 ff ff ff 01 	subl   $0x1,-0x98(%ebp)
 804e3bc:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804e3c2:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e3c8:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804e3ce:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e3d4:	8b 45 80             	mov    -0x80(%ebp),%eax
 804e3d7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e3dd:	eb 93                	jmp    804e372 <strconv__converter+0x414>
 804e3df:	90                   	nop
 804e3e0:	c7 45 94 07 00 00 00 	movl   $0x7,-0x6c(%ebp)
 804e3e7:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804e3ea:	ba 01 00 00 00       	mov    $0x1,%edx
 804e3ef:	89 c1                	mov    %eax,%ecx
 804e3f1:	d3 e2                	shl    %cl,%edx
 804e3f3:	89 d0                	mov    %edx,%eax
 804e3f5:	89 45 98             	mov    %eax,-0x68(%ebp)
 804e3f8:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804e3fb:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 804e400:	89 c1                	mov    %eax,%ecx
 804e402:	d3 e2                	shl    %cl,%edx
 804e404:	89 d0                	mov    %edx,%eax
 804e406:	89 45 9c             	mov    %eax,-0x64(%ebp)
 804e409:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804e40f:	23 45 98             	and    -0x68(%ebp),%eax
 804e412:	85 c0                	test   %eax,%eax
 804e414:	0f 84 26 01 00 00    	je     804e540 <strconv__converter+0x5e2>
 804e41a:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804e41d:	f7 d0                	not    %eax
 804e41f:	23 85 70 ff ff ff    	and    -0x90(%ebp),%eax
 804e425:	85 c0                	test   %eax,%eax
 804e427:	74 45                	je     804e46e <strconv__converter+0x510>
 804e429:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804e42c:	83 ec 04             	sub    $0x4,%esp
 804e42f:	6a 00                	push   $0x0
 804e431:	ff 75 98             	pushl  -0x68(%ebp)
 804e434:	6a 00                	push   $0x0
 804e436:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e43c:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e442:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e448:	50                   	push   %eax
 804e449:	e8 70 f3 ff ff       	call   804d7be <strconv__add96>
 804e44e:	83 c4 1c             	add    $0x1c,%esp
 804e451:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804e454:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e45a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e45d:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e463:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804e466:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e46c:	eb 52                	jmp    804e4c0 <strconv__converter+0x562>
 804e46e:	8b 45 98             	mov    -0x68(%ebp),%eax
 804e471:	01 c0                	add    %eax,%eax
 804e473:	23 85 70 ff ff ff    	and    -0x90(%ebp),%eax
 804e479:	85 c0                	test   %eax,%eax
 804e47b:	74 43                	je     804e4c0 <strconv__converter+0x562>
 804e47d:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804e480:	83 ec 04             	sub    $0x4,%esp
 804e483:	6a 00                	push   $0x0
 804e485:	ff 75 98             	pushl  -0x68(%ebp)
 804e488:	6a 00                	push   $0x0
 804e48a:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e490:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e496:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e49c:	50                   	push   %eax
 804e49d:	e8 1c f3 ff ff       	call   804d7be <strconv__add96>
 804e4a2:	83 c4 1c             	add    $0x1c,%esp
 804e4a5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804e4a8:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e4ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e4b1:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e4b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804e4ba:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e4c0:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804e4c3:	21 85 70 ff ff ff    	and    %eax,-0x90(%ebp)
 804e4c9:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%ebp)
 804e4d0:	00 00 00 
 804e4d3:	8b 45 90             	mov    -0x70(%ebp),%eax
 804e4d6:	01 c0                	add    %eax,%eax
 804e4d8:	23 85 6c ff ff ff    	and    -0x94(%ebp),%eax
 804e4de:	85 c0                	test   %eax,%eax
 804e4e0:	74 5e                	je     804e540 <strconv__converter+0x5e2>
 804e4e2:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804e4e5:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 804e4eb:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 804e4f1:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 804e4f7:	50                   	push   %eax
 804e4f8:	e8 f3 f1 ff ff       	call   804d6f0 <strconv__lsr96>
 804e4fd:	83 c4 0c             	add    $0xc,%esp
 804e500:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804e503:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 804e509:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e50c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804e512:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804e515:	89 45 80             	mov    %eax,-0x80(%ebp)
 804e518:	83 ad 68 ff ff ff 01 	subl   $0x1,-0x98(%ebp)
 804e51f:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804e525:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 804e52b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804e531:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 804e537:	8b 45 80             	mov    -0x80(%ebp),%eax
 804e53a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804e540:	81 85 68 ff ff ff ff 	addl   $0x3ff,-0x98(%ebp)
 804e547:	03 00 00 
 804e54a:	81 bd 68 ff ff ff fe 	cmpl   $0x7fe,-0x98(%ebp)
 804e551:	07 00 00 
 804e554:	7e 38                	jle    804e58e <strconv__converter+0x630>
 804e556:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e55c:	8b 00                	mov    (%eax),%eax
 804e55e:	85 c0                	test   %eax,%eax
 804e560:	74 16                	je     804e578 <strconv__converter+0x61a>
 804e562:	a1 48 31 07 08       	mov    0x8073148,%eax
 804e567:	8b 15 4c 31 07 08    	mov    0x807314c,%edx
 804e56d:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804e570:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804e573:	e9 0d 01 00 00       	jmp    804e685 <strconv__converter+0x727>
 804e578:	a1 c0 30 07 08       	mov    0x80730c0,%eax
 804e57d:	8b 15 c4 30 07 08    	mov    0x80730c4,%edx
 804e583:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804e586:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804e589:	e9 f7 00 00 00       	jmp    804e685 <strconv__converter+0x727>
 804e58e:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%ebp)
 804e595:	7f 38                	jg     804e5cf <strconv__converter+0x671>
 804e597:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e59d:	8b 00                	mov    (%eax),%eax
 804e59f:	85 c0                	test   %eax,%eax
 804e5a1:	74 16                	je     804e5b9 <strconv__converter+0x65b>
 804e5a3:	a1 60 32 07 08       	mov    0x8073260,%eax
 804e5a8:	8b 15 64 32 07 08    	mov    0x8073264,%edx
 804e5ae:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804e5b1:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804e5b4:	e9 cc 00 00 00       	jmp    804e685 <strconv__converter+0x727>
 804e5b9:	a1 c8 30 07 08       	mov    0x80730c8,%eax
 804e5be:	8b 15 cc 30 07 08    	mov    0x80730cc,%edx
 804e5c4:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804e5c7:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804e5ca:	e9 b6 00 00 00       	jmp    804e685 <strconv__converter+0x727>
 804e5cf:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%ebp)
 804e5d6:	0f 84 a9 00 00 00    	je     804e685 <strconv__converter+0x727>
 804e5dc:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)
 804e5e3:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 804e5ea:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 804e5f0:	99                   	cltd   
 804e5f1:	89 c2                	mov    %eax,%edx
 804e5f3:	b8 00 00 00 00       	mov    $0x0,%eax
 804e5f8:	c1 e2 14             	shl    $0x14,%edx
 804e5fb:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804e5fe:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804e601:	8b 45 90             	mov    -0x70(%ebp),%eax
 804e604:	f7 d0                	not    %eax
 804e606:	23 85 6c ff ff ff    	and    -0x94(%ebp),%eax
 804e60c:	ba 00 00 00 00       	mov    $0x0,%edx
 804e611:	0f a4 c2 18          	shld   $0x18,%eax,%edx
 804e615:	c1 e0 18             	shl    $0x18,%eax
 804e618:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 804e61e:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 804e624:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 804e62a:	ba 00 00 00 00       	mov    $0x0,%edx
 804e62f:	05 80 00 00 00       	add    $0x80,%eax
 804e634:	83 d2 00             	adc    $0x0,%edx
 804e637:	0f ac d0 08          	shrd   $0x8,%edx,%eax
 804e63b:	c1 ea 08             	shr    $0x8,%edx
 804e63e:	8b 8d 58 ff ff ff    	mov    -0xa8(%ebp),%ecx
 804e644:	09 c1                	or     %eax,%ecx
 804e646:	89 cb                	mov    %ecx,%ebx
 804e648:	8b 8d 5c ff ff ff    	mov    -0xa4(%ebp),%ecx
 804e64e:	09 d1                	or     %edx,%ecx
 804e650:	89 ce                	mov    %ecx,%esi
 804e652:	89 d8                	mov    %ebx,%eax
 804e654:	0b 45 b0             	or     -0x50(%ebp),%eax
 804e657:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804e65a:	89 f0                	mov    %esi,%eax
 804e65c:	0b 45 b4             	or     -0x4c(%ebp),%eax
 804e65f:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804e662:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 804e668:	8b 00                	mov    (%eax),%eax
 804e66a:	85 c0                	test   %eax,%eax
 804e66c:	74 0b                	je     804e679 <strconv__converter+0x71b>
 804e66e:	83 4d a8 00          	orl    $0x0,-0x58(%ebp)
 804e672:	81 4d ac 00 00 00 80 	orl    $0x80000000,-0x54(%ebp)
 804e679:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804e67c:	8b 55 ac             	mov    -0x54(%ebp),%edx
 804e67f:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804e682:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 804e685:	8b 45 a0             	mov    -0x60(%ebp),%eax
 804e688:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 804e68b:	8b 75 f4             	mov    -0xc(%ebp),%esi
 804e68e:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
 804e695:	74 05                	je     804e69c <strconv__converter+0x73e>
 804e697:	e8 84 a1 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804e69c:	8d 65 f8             	lea    -0x8(%ebp),%esp
 804e69f:	5b                   	pop    %ebx
 804e6a0:	5e                   	pop    %esi
 804e6a1:	5d                   	pop    %ebp
 804e6a2:	c3                   	ret    

0804e6a3 <strconv__atof64>:
 804e6a3:	55                   	push   %ebp
 804e6a4:	89 e5                	mov    %esp,%ebp
 804e6a6:	83 ec 58             	sub    $0x58,%esp
 804e6a9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804e6af:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804e6b2:	31 c0                	xor    %eax,%eax
 804e6b4:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804e6bb:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 804e6c2:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 804e6c9:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804e6d0:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)
 804e6d7:	d9 ee                	fldz   
 804e6d9:	dd 5d b0             	fstpl  -0x50(%ebp)
 804e6dc:	c7 45 b8 97 97 06 08 	movl   $0x8069797,-0x48(%ebp)
 804e6e3:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
 804e6ea:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)
 804e6f1:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 804e6f4:	83 ec 04             	sub    $0x4,%esp
 804e6f7:	ff 75 c0             	pushl  -0x40(%ebp)
 804e6fa:	ff 75 bc             	pushl  -0x44(%ebp)
 804e6fd:	ff 75 b8             	pushl  -0x48(%ebp)
 804e700:	ff 75 10             	pushl  0x10(%ebp)
 804e703:	ff 75 0c             	pushl  0xc(%ebp)
 804e706:	ff 75 08             	pushl  0x8(%ebp)
 804e709:	50                   	push   %eax
 804e70a:	e8 35 fb 00 00       	call   805e244 <string_add>
 804e70f:	83 c4 1c             	add    $0x1c,%esp
 804e712:	8d 45 e0             	lea    -0x20(%ebp),%eax
 804e715:	ff 75 cc             	pushl  -0x34(%ebp)
 804e718:	ff 75 c8             	pushl  -0x38(%ebp)
 804e71b:	ff 75 c4             	pushl  -0x3c(%ebp)
 804e71e:	50                   	push   %eax
 804e71f:	e8 e0 f2 ff ff       	call   804da04 <strconv__parser>
 804e724:	83 c4 0c             	add    $0xc,%esp
 804e727:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804e72a:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804e72d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804e730:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804e733:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804e736:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804e739:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804e73c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804e73f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804e742:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804e745:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804e748:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804e74b:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)
 804e74f:	75 17                	jne    804e768 <strconv__atof64+0xc5>
 804e751:	83 ec 0c             	sub    $0xc,%esp
 804e754:	8d 45 d0             	lea    -0x30(%ebp),%eax
 804e757:	50                   	push   %eax
 804e758:	e8 01 f8 ff ff       	call   804df5e <strconv__converter>
 804e75d:	83 c4 10             	add    $0x10,%esp
 804e760:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804e763:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804e766:	eb 62                	jmp    804e7ca <strconv__atof64+0x127>
 804e768:	83 7d ac 01          	cmpl   $0x1,-0x54(%ebp)
 804e76c:	75 13                	jne    804e781 <strconv__atof64+0xde>
 804e76e:	a1 c8 30 07 08       	mov    0x80730c8,%eax
 804e773:	8b 15 cc 30 07 08    	mov    0x80730cc,%edx
 804e779:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804e77c:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804e77f:	eb 49                	jmp    804e7ca <strconv__atof64+0x127>
 804e781:	83 7d ac 02          	cmpl   $0x2,-0x54(%ebp)
 804e785:	75 13                	jne    804e79a <strconv__atof64+0xf7>
 804e787:	a1 60 32 07 08       	mov    0x8073260,%eax
 804e78c:	8b 15 64 32 07 08    	mov    0x8073264,%edx
 804e792:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804e795:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804e798:	eb 30                	jmp    804e7ca <strconv__atof64+0x127>
 804e79a:	83 7d ac 03          	cmpl   $0x3,-0x54(%ebp)
 804e79e:	75 13                	jne    804e7b3 <strconv__atof64+0x110>
 804e7a0:	a1 c0 30 07 08       	mov    0x80730c0,%eax
 804e7a5:	8b 15 c4 30 07 08    	mov    0x80730c4,%edx
 804e7ab:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804e7ae:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804e7b1:	eb 17                	jmp    804e7ca <strconv__atof64+0x127>
 804e7b3:	83 7d ac 04          	cmpl   $0x4,-0x54(%ebp)
 804e7b7:	75 11                	jne    804e7ca <strconv__atof64+0x127>
 804e7b9:	a1 48 31 07 08       	mov    0x8073148,%eax
 804e7be:	8b 15 4c 31 07 08    	mov    0x807314c,%edx
 804e7c4:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804e7c7:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 804e7ca:	dd 45 b0             	fldl   -0x50(%ebp)
 804e7cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804e7d0:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804e7d7:	74 07                	je     804e7e0 <strconv__atof64+0x13d>
 804e7d9:	dd d8                	fstp   %st(0)
 804e7db:	e8 40 a0 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804e7e0:	c9                   	leave  
 804e7e1:	c3                   	ret    

0804e7e2 <strconv__atof_quick>:
 804e7e2:	55                   	push   %ebp
 804e7e3:	89 e5                	mov    %esp,%ebp
 804e7e5:	83 ec 48             	sub    $0x48,%esp
 804e7e8:	d9 ee                	fldz   
 804e7ea:	dd 5d d8             	fstpl  -0x28(%ebp)
 804e7ed:	d9 e8                	fld1   
 804e7ef:	dd 5d e8             	fstpl  -0x18(%ebp)
 804e7f2:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804e7f9:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e7fc:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804e7ff:	7e 1e                	jle    804e81f <strconv__atof_quick+0x3d>
 804e801:	ff 75 cc             	pushl  -0x34(%ebp)
 804e804:	ff 75 10             	pushl  0x10(%ebp)
 804e807:	ff 75 0c             	pushl  0xc(%ebp)
 804e80a:	ff 75 08             	pushl  0x8(%ebp)
 804e80d:	e8 28 21 01 00       	call   806093a <string_at>
 804e812:	83 c4 10             	add    $0x10,%esp
 804e815:	3c 20                	cmp    $0x20,%al
 804e817:	75 06                	jne    804e81f <strconv__atof_quick+0x3d>
 804e819:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804e81d:	eb da                	jmp    804e7f9 <strconv__atof_quick+0x17>
 804e81f:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e822:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804e825:	7e 41                	jle    804e868 <strconv__atof_quick+0x86>
 804e827:	ff 75 cc             	pushl  -0x34(%ebp)
 804e82a:	ff 75 10             	pushl  0x10(%ebp)
 804e82d:	ff 75 0c             	pushl  0xc(%ebp)
 804e830:	ff 75 08             	pushl  0x8(%ebp)
 804e833:	e8 02 21 01 00       	call   806093a <string_at>
 804e838:	83 c4 10             	add    $0x10,%esp
 804e83b:	3c 2d                	cmp    $0x2d,%al
 804e83d:	75 0d                	jne    804e84c <strconv__atof_quick+0x6a>
 804e83f:	d9 e8                	fld1   
 804e841:	d9 e0                	fchs   
 804e843:	dd 5d e8             	fstpl  -0x18(%ebp)
 804e846:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804e84a:	eb 1c                	jmp    804e868 <strconv__atof_quick+0x86>
 804e84c:	ff 75 cc             	pushl  -0x34(%ebp)
 804e84f:	ff 75 10             	pushl  0x10(%ebp)
 804e852:	ff 75 0c             	pushl  0xc(%ebp)
 804e855:	ff 75 08             	pushl  0x8(%ebp)
 804e858:	e8 dd 20 01 00       	call   806093a <string_at>
 804e85d:	83 c4 10             	add    $0x10,%esp
 804e860:	3c 2b                	cmp    $0x2b,%al
 804e862:	75 04                	jne    804e868 <strconv__atof_quick+0x86>
 804e864:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804e868:	ff 75 cc             	pushl  -0x34(%ebp)
 804e86b:	ff 75 10             	pushl  0x10(%ebp)
 804e86e:	ff 75 0c             	pushl  0xc(%ebp)
 804e871:	ff 75 08             	pushl  0x8(%ebp)
 804e874:	e8 c1 20 01 00       	call   806093a <string_at>
 804e879:	83 c4 10             	add    $0x10,%esp
 804e87c:	3c 69                	cmp    $0x69,%al
 804e87e:	75 7e                	jne    804e8fe <strconv__atof_quick+0x11c>
 804e880:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804e883:	8d 50 02             	lea    0x2(%eax),%edx
 804e886:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e889:	39 c2                	cmp    %eax,%edx
 804e88b:	7d 71                	jge    804e8fe <strconv__atof_quick+0x11c>
 804e88d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804e890:	83 c0 01             	add    $0x1,%eax
 804e893:	50                   	push   %eax
 804e894:	ff 75 10             	pushl  0x10(%ebp)
 804e897:	ff 75 0c             	pushl  0xc(%ebp)
 804e89a:	ff 75 08             	pushl  0x8(%ebp)
 804e89d:	e8 98 20 01 00       	call   806093a <string_at>
 804e8a2:	83 c4 10             	add    $0x10,%esp
 804e8a5:	3c 6e                	cmp    $0x6e,%al
 804e8a7:	75 55                	jne    804e8fe <strconv__atof_quick+0x11c>
 804e8a9:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804e8ac:	83 c0 02             	add    $0x2,%eax
 804e8af:	50                   	push   %eax
 804e8b0:	ff 75 10             	pushl  0x10(%ebp)
 804e8b3:	ff 75 0c             	pushl  0xc(%ebp)
 804e8b6:	ff 75 08             	pushl  0x8(%ebp)
 804e8b9:	e8 7c 20 01 00       	call   806093a <string_at>
 804e8be:	83 c4 10             	add    $0x10,%esp
 804e8c1:	3c 66                	cmp    $0x66,%al
 804e8c3:	75 39                	jne    804e8fe <strconv__atof_quick+0x11c>
 804e8c5:	dd 45 e8             	fldl   -0x18(%ebp)
 804e8c8:	d9 ee                	fldz   
 804e8ca:	d9 c9                	fxch   %st(1)
 804e8cc:	df e9                	fucomip %st(1),%st
 804e8ce:	dd d8                	fstp   %st(0)
 804e8d0:	76 13                	jbe    804e8e5 <strconv__atof_quick+0x103>
 804e8d2:	a1 c0 30 07 08       	mov    0x80730c0,%eax
 804e8d7:	8b 15 c4 30 07 08    	mov    0x80730c4,%edx
 804e8dd:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804e8e0:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804e8e3:	eb 11                	jmp    804e8f6 <strconv__atof_quick+0x114>
 804e8e5:	a1 48 31 07 08       	mov    0x8073148,%eax
 804e8ea:	8b 15 4c 31 07 08    	mov    0x807314c,%edx
 804e8f0:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804e8f3:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804e8f6:	dd 45 d8             	fldl   -0x28(%ebp)
 804e8f9:	e9 c3 03 00 00       	jmp    804ecc1 <strconv__atof_quick+0x4df>
 804e8fe:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e901:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804e904:	7e 5d                	jle    804e963 <strconv__atof_quick+0x181>
 804e906:	ff 75 cc             	pushl  -0x34(%ebp)
 804e909:	ff 75 10             	pushl  0x10(%ebp)
 804e90c:	ff 75 0c             	pushl  0xc(%ebp)
 804e90f:	ff 75 08             	pushl  0x8(%ebp)
 804e912:	e8 23 20 01 00       	call   806093a <string_at>
 804e917:	83 c4 10             	add    $0x10,%esp
 804e91a:	3c 30                	cmp    $0x30,%al
 804e91c:	75 45                	jne    804e963 <strconv__atof_quick+0x181>
 804e91e:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804e922:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e925:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804e928:	7f d4                	jg     804e8fe <strconv__atof_quick+0x11c>
 804e92a:	dd 45 e8             	fldl   -0x18(%ebp)
 804e92d:	d9 ee                	fldz   
 804e92f:	d9 c9                	fxch   %st(1)
 804e931:	df e9                	fucomip %st(1),%st
 804e933:	dd d8                	fstp   %st(0)
 804e935:	76 13                	jbe    804e94a <strconv__atof_quick+0x168>
 804e937:	a1 c8 30 07 08       	mov    0x80730c8,%eax
 804e93c:	8b 15 cc 30 07 08    	mov    0x80730cc,%edx
 804e942:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804e945:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804e948:	eb 11                	jmp    804e95b <strconv__atof_quick+0x179>
 804e94a:	a1 60 32 07 08       	mov    0x8073260,%eax
 804e94f:	8b 15 64 32 07 08    	mov    0x8073264,%edx
 804e955:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804e958:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804e95b:	dd 45 d8             	fldl   -0x28(%ebp)
 804e95e:	e9 5e 03 00 00       	jmp    804ecc1 <strconv__atof_quick+0x4df>
 804e963:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e966:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804e969:	7e 6c                	jle    804e9d7 <strconv__atof_quick+0x1f5>
 804e96b:	ff 75 cc             	pushl  -0x34(%ebp)
 804e96e:	ff 75 10             	pushl  0x10(%ebp)
 804e971:	ff 75 0c             	pushl  0xc(%ebp)
 804e974:	ff 75 08             	pushl  0x8(%ebp)
 804e977:	e8 be 1f 01 00       	call   806093a <string_at>
 804e97c:	83 c4 10             	add    $0x10,%esp
 804e97f:	3c 2f                	cmp    $0x2f,%al
 804e981:	76 54                	jbe    804e9d7 <strconv__atof_quick+0x1f5>
 804e983:	ff 75 cc             	pushl  -0x34(%ebp)
 804e986:	ff 75 10             	pushl  0x10(%ebp)
 804e989:	ff 75 0c             	pushl  0xc(%ebp)
 804e98c:	ff 75 08             	pushl  0x8(%ebp)
 804e98f:	e8 a6 1f 01 00       	call   806093a <string_at>
 804e994:	83 c4 10             	add    $0x10,%esp
 804e997:	3c 39                	cmp    $0x39,%al
 804e999:	77 3c                	ja     804e9d7 <strconv__atof_quick+0x1f5>
 804e99b:	dd 45 d8             	fldl   -0x28(%ebp)
 804e99e:	dd 05 c8 bc 06 08    	fldl   0x806bcc8
 804e9a4:	de c9                	fmulp  %st,%st(1)
 804e9a6:	dd 5d d8             	fstpl  -0x28(%ebp)
 804e9a9:	ff 75 cc             	pushl  -0x34(%ebp)
 804e9ac:	ff 75 10             	pushl  0x10(%ebp)
 804e9af:	ff 75 0c             	pushl  0xc(%ebp)
 804e9b2:	ff 75 08             	pushl  0x8(%ebp)
 804e9b5:	e8 80 1f 01 00       	call   806093a <string_at>
 804e9ba:	83 c4 10             	add    $0x10,%esp
 804e9bd:	0f b6 c0             	movzbl %al,%eax
 804e9c0:	83 e8 30             	sub    $0x30,%eax
 804e9c3:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804e9c6:	db 45 c4             	fildl  -0x3c(%ebp)
 804e9c9:	dd 45 d8             	fldl   -0x28(%ebp)
 804e9cc:	de c1                	faddp  %st,%st(1)
 804e9ce:	dd 5d d8             	fstpl  -0x28(%ebp)
 804e9d1:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804e9d5:	eb 8c                	jmp    804e963 <strconv__atof_quick+0x181>
 804e9d7:	8b 45 0c             	mov    0xc(%ebp),%eax
 804e9da:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804e9dd:	0f 8e a0 00 00 00    	jle    804ea83 <strconv__atof_quick+0x2a1>
 804e9e3:	ff 75 cc             	pushl  -0x34(%ebp)
 804e9e6:	ff 75 10             	pushl  0x10(%ebp)
 804e9e9:	ff 75 0c             	pushl  0xc(%ebp)
 804e9ec:	ff 75 08             	pushl  0x8(%ebp)
 804e9ef:	e8 46 1f 01 00       	call   806093a <string_at>
 804e9f4:	83 c4 10             	add    $0x10,%esp
 804e9f7:	3c 2e                	cmp    $0x2e,%al
 804e9f9:	0f 85 84 00 00 00    	jne    804ea83 <strconv__atof_quick+0x2a1>
 804e9ff:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804ea03:	dd 05 d0 bc 06 08    	fldl   0x806bcd0
 804ea09:	dd 5d f0             	fstpl  -0x10(%ebp)
 804ea0c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ea0f:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804ea12:	7e 6f                	jle    804ea83 <strconv__atof_quick+0x2a1>
 804ea14:	ff 75 cc             	pushl  -0x34(%ebp)
 804ea17:	ff 75 10             	pushl  0x10(%ebp)
 804ea1a:	ff 75 0c             	pushl  0xc(%ebp)
 804ea1d:	ff 75 08             	pushl  0x8(%ebp)
 804ea20:	e8 15 1f 01 00       	call   806093a <string_at>
 804ea25:	83 c4 10             	add    $0x10,%esp
 804ea28:	3c 2f                	cmp    $0x2f,%al
 804ea2a:	76 57                	jbe    804ea83 <strconv__atof_quick+0x2a1>
 804ea2c:	ff 75 cc             	pushl  -0x34(%ebp)
 804ea2f:	ff 75 10             	pushl  0x10(%ebp)
 804ea32:	ff 75 0c             	pushl  0xc(%ebp)
 804ea35:	ff 75 08             	pushl  0x8(%ebp)
 804ea38:	e8 fd 1e 01 00       	call   806093a <string_at>
 804ea3d:	83 c4 10             	add    $0x10,%esp
 804ea40:	3c 39                	cmp    $0x39,%al
 804ea42:	77 3f                	ja     804ea83 <strconv__atof_quick+0x2a1>
 804ea44:	ff 75 cc             	pushl  -0x34(%ebp)
 804ea47:	ff 75 10             	pushl  0x10(%ebp)
 804ea4a:	ff 75 0c             	pushl  0xc(%ebp)
 804ea4d:	ff 75 08             	pushl  0x8(%ebp)
 804ea50:	e8 e5 1e 01 00       	call   806093a <string_at>
 804ea55:	83 c4 10             	add    $0x10,%esp
 804ea58:	0f b6 c0             	movzbl %al,%eax
 804ea5b:	83 e8 30             	sub    $0x30,%eax
 804ea5e:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804ea61:	db 45 c4             	fildl  -0x3c(%ebp)
 804ea64:	dc 4d f0             	fmull  -0x10(%ebp)
 804ea67:	dd 45 d8             	fldl   -0x28(%ebp)
 804ea6a:	de c1                	faddp  %st,%st(1)
 804ea6c:	dd 5d d8             	fstpl  -0x28(%ebp)
 804ea6f:	dd 45 f0             	fldl   -0x10(%ebp)
 804ea72:	dd 05 d0 bc 06 08    	fldl   0x806bcd0
 804ea78:	de c9                	fmulp  %st,%st(1)
 804ea7a:	dd 5d f0             	fstpl  -0x10(%ebp)
 804ea7d:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804ea81:	eb 89                	jmp    804ea0c <strconv__atof_quick+0x22a>
 804ea83:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ea86:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804ea89:	0f 8e 26 02 00 00    	jle    804ecb5 <strconv__atof_quick+0x4d3>
 804ea8f:	ff 75 cc             	pushl  -0x34(%ebp)
 804ea92:	ff 75 10             	pushl  0x10(%ebp)
 804ea95:	ff 75 0c             	pushl  0xc(%ebp)
 804ea98:	ff 75 08             	pushl  0x8(%ebp)
 804ea9b:	e8 9a 1e 01 00       	call   806093a <string_at>
 804eaa0:	83 c4 10             	add    $0x10,%esp
 804eaa3:	3c 65                	cmp    $0x65,%al
 804eaa5:	74 1c                	je     804eac3 <strconv__atof_quick+0x2e1>
 804eaa7:	ff 75 cc             	pushl  -0x34(%ebp)
 804eaaa:	ff 75 10             	pushl  0x10(%ebp)
 804eaad:	ff 75 0c             	pushl  0xc(%ebp)
 804eab0:	ff 75 08             	pushl  0x8(%ebp)
 804eab3:	e8 82 1e 01 00       	call   806093a <string_at>
 804eab8:	83 c4 10             	add    $0x10,%esp
 804eabb:	3c 45                	cmp    $0x45,%al
 804eabd:	0f 85 f2 01 00 00    	jne    804ecb5 <strconv__atof_quick+0x4d3>
 804eac3:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804eac7:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804eace:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 804ead5:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ead8:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804eadb:	7e 41                	jle    804eb1e <strconv__atof_quick+0x33c>
 804eadd:	ff 75 cc             	pushl  -0x34(%ebp)
 804eae0:	ff 75 10             	pushl  0x10(%ebp)
 804eae3:	ff 75 0c             	pushl  0xc(%ebp)
 804eae6:	ff 75 08             	pushl  0x8(%ebp)
 804eae9:	e8 4c 1e 01 00       	call   806093a <string_at>
 804eaee:	83 c4 10             	add    $0x10,%esp
 804eaf1:	3c 2d                	cmp    $0x2d,%al
 804eaf3:	75 0d                	jne    804eb02 <strconv__atof_quick+0x320>
 804eaf5:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)
 804eafc:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804eb00:	eb 1c                	jmp    804eb1e <strconv__atof_quick+0x33c>
 804eb02:	ff 75 cc             	pushl  -0x34(%ebp)
 804eb05:	ff 75 10             	pushl  0x10(%ebp)
 804eb08:	ff 75 0c             	pushl  0xc(%ebp)
 804eb0b:	ff 75 08             	pushl  0x8(%ebp)
 804eb0e:	e8 27 1e 01 00       	call   806093a <string_at>
 804eb13:	83 c4 10             	add    $0x10,%esp
 804eb16:	3c 2b                	cmp    $0x2b,%al
 804eb18:	75 04                	jne    804eb1e <strconv__atof_quick+0x33c>
 804eb1a:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804eb1e:	8b 45 0c             	mov    0xc(%ebp),%eax
 804eb21:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804eb24:	7e 1e                	jle    804eb44 <strconv__atof_quick+0x362>
 804eb26:	ff 75 cc             	pushl  -0x34(%ebp)
 804eb29:	ff 75 10             	pushl  0x10(%ebp)
 804eb2c:	ff 75 0c             	pushl  0xc(%ebp)
 804eb2f:	ff 75 08             	pushl  0x8(%ebp)
 804eb32:	e8 03 1e 01 00       	call   806093a <string_at>
 804eb37:	83 c4 10             	add    $0x10,%esp
 804eb3a:	3c 30                	cmp    $0x30,%al
 804eb3c:	75 06                	jne    804eb44 <strconv__atof_quick+0x362>
 804eb3e:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804eb42:	eb da                	jmp    804eb1e <strconv__atof_quick+0x33c>
 804eb44:	8b 45 0c             	mov    0xc(%ebp),%eax
 804eb47:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 804eb4a:	7e 62                	jle    804ebae <strconv__atof_quick+0x3cc>
 804eb4c:	ff 75 cc             	pushl  -0x34(%ebp)
 804eb4f:	ff 75 10             	pushl  0x10(%ebp)
 804eb52:	ff 75 0c             	pushl  0xc(%ebp)
 804eb55:	ff 75 08             	pushl  0x8(%ebp)
 804eb58:	e8 dd 1d 01 00       	call   806093a <string_at>
 804eb5d:	83 c4 10             	add    $0x10,%esp
 804eb60:	3c 2f                	cmp    $0x2f,%al
 804eb62:	76 4a                	jbe    804ebae <strconv__atof_quick+0x3cc>
 804eb64:	ff 75 cc             	pushl  -0x34(%ebp)
 804eb67:	ff 75 10             	pushl  0x10(%ebp)
 804eb6a:	ff 75 0c             	pushl  0xc(%ebp)
 804eb6d:	ff 75 08             	pushl  0x8(%ebp)
 804eb70:	e8 c5 1d 01 00       	call   806093a <string_at>
 804eb75:	83 c4 10             	add    $0x10,%esp
 804eb78:	3c 39                	cmp    $0x39,%al
 804eb7a:	77 32                	ja     804ebae <strconv__atof_quick+0x3cc>
 804eb7c:	8b 55 d0             	mov    -0x30(%ebp),%edx
 804eb7f:	89 d0                	mov    %edx,%eax
 804eb81:	c1 e0 02             	shl    $0x2,%eax
 804eb84:	01 d0                	add    %edx,%eax
 804eb86:	01 c0                	add    %eax,%eax
 804eb88:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804eb8b:	ff 75 cc             	pushl  -0x34(%ebp)
 804eb8e:	ff 75 10             	pushl  0x10(%ebp)
 804eb91:	ff 75 0c             	pushl  0xc(%ebp)
 804eb94:	ff 75 08             	pushl  0x8(%ebp)
 804eb97:	e8 9e 1d 01 00       	call   806093a <string_at>
 804eb9c:	83 c4 10             	add    $0x10,%esp
 804eb9f:	0f b6 c0             	movzbl %al,%eax
 804eba2:	83 e8 30             	sub    $0x30,%eax
 804eba5:	01 45 d0             	add    %eax,-0x30(%ebp)
 804eba8:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804ebac:	eb 96                	jmp    804eb44 <strconv__atof_quick+0x362>
 804ebae:	83 7d d4 01          	cmpl   $0x1,-0x2c(%ebp)
 804ebb2:	0f 85 81 00 00 00    	jne    804ec39 <strconv__atof_quick+0x457>
 804ebb8:	a1 ac 32 07 08       	mov    0x80732ac,%eax
 804ebbd:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 804ebc0:	7d 39                	jge    804ebfb <strconv__atof_quick+0x419>
 804ebc2:	dd 45 e8             	fldl   -0x18(%ebp)
 804ebc5:	d9 ee                	fldz   
 804ebc7:	d9 c9                	fxch   %st(1)
 804ebc9:	df e9                	fucomip %st(1),%st
 804ebcb:	dd d8                	fstp   %st(0)
 804ebcd:	76 13                	jbe    804ebe2 <strconv__atof_quick+0x400>
 804ebcf:	a1 c0 30 07 08       	mov    0x80730c0,%eax
 804ebd4:	8b 15 c4 30 07 08    	mov    0x80730c4,%edx
 804ebda:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804ebdd:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804ebe0:	eb 11                	jmp    804ebf3 <strconv__atof_quick+0x411>
 804ebe2:	a1 48 31 07 08       	mov    0x8073148,%eax
 804ebe7:	8b 15 4c 31 07 08    	mov    0x807314c,%edx
 804ebed:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804ebf0:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804ebf3:	dd 45 d8             	fldl   -0x28(%ebp)
 804ebf6:	e9 c6 00 00 00       	jmp    804ecc1 <strconv__atof_quick+0x4df>
 804ebfb:	83 ec 0c             	sub    $0xc,%esp
 804ebfe:	ff 75 d0             	pushl  -0x30(%ebp)
 804ec01:	ff 35 b0 32 07 08    	pushl  0x80732b0
 804ec07:	ff 35 ac 32 07 08    	pushl  0x80732ac
 804ec0d:	ff 35 a8 32 07 08    	pushl  0x80732a8
 804ec13:	ff 35 a4 32 07 08    	pushl  0x80732a4
 804ec19:	e8 9c 76 00 00       	call   80562ba <array_get>
 804ec1e:	83 c4 20             	add    $0x20,%esp
 804ec21:	8b 50 04             	mov    0x4(%eax),%edx
 804ec24:	8b 00                	mov    (%eax),%eax
 804ec26:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804ec29:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804ec2c:	dd 45 d8             	fldl   -0x28(%ebp)
 804ec2f:	dd 45 e0             	fldl   -0x20(%ebp)
 804ec32:	de c9                	fmulp  %st,%st(1)
 804ec34:	dd 5d d8             	fstpl  -0x28(%ebp)
 804ec37:	eb 7c                	jmp    804ecb5 <strconv__atof_quick+0x4d3>
 804ec39:	a1 c0 32 07 08       	mov    0x80732c0,%eax
 804ec3e:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 804ec41:	7d 36                	jge    804ec79 <strconv__atof_quick+0x497>
 804ec43:	dd 45 e8             	fldl   -0x18(%ebp)
 804ec46:	d9 ee                	fldz   
 804ec48:	d9 c9                	fxch   %st(1)
 804ec4a:	df e9                	fucomip %st(1),%st
 804ec4c:	dd d8                	fstp   %st(0)
 804ec4e:	76 13                	jbe    804ec63 <strconv__atof_quick+0x481>
 804ec50:	a1 c8 30 07 08       	mov    0x80730c8,%eax
 804ec55:	8b 15 cc 30 07 08    	mov    0x80730cc,%edx
 804ec5b:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804ec5e:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804ec61:	eb 11                	jmp    804ec74 <strconv__atof_quick+0x492>
 804ec63:	a1 60 32 07 08       	mov    0x8073260,%eax
 804ec68:	8b 15 64 32 07 08    	mov    0x8073264,%edx
 804ec6e:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804ec71:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804ec74:	dd 45 d8             	fldl   -0x28(%ebp)
 804ec77:	eb 48                	jmp    804ecc1 <strconv__atof_quick+0x4df>
 804ec79:	83 ec 0c             	sub    $0xc,%esp
 804ec7c:	ff 75 d0             	pushl  -0x30(%ebp)
 804ec7f:	ff 35 c4 32 07 08    	pushl  0x80732c4
 804ec85:	ff 35 c0 32 07 08    	pushl  0x80732c0
 804ec8b:	ff 35 bc 32 07 08    	pushl  0x80732bc
 804ec91:	ff 35 b8 32 07 08    	pushl  0x80732b8
 804ec97:	e8 1e 76 00 00       	call   80562ba <array_get>
 804ec9c:	83 c4 20             	add    $0x20,%esp
 804ec9f:	8b 50 04             	mov    0x4(%eax),%edx
 804eca2:	8b 00                	mov    (%eax),%eax
 804eca4:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804eca7:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804ecaa:	dd 45 d8             	fldl   -0x28(%ebp)
 804ecad:	dd 45 e0             	fldl   -0x20(%ebp)
 804ecb0:	de c9                	fmulp  %st,%st(1)
 804ecb2:	dd 5d d8             	fstpl  -0x28(%ebp)
 804ecb5:	dd 45 d8             	fldl   -0x28(%ebp)
 804ecb8:	dc 4d e8             	fmull  -0x18(%ebp)
 804ecbb:	dd 5d d8             	fstpl  -0x28(%ebp)
 804ecbe:	dd 45 d8             	fldl   -0x28(%ebp)
 804ecc1:	c9                   	leave  
 804ecc2:	c3                   	ret    

0804ecc3 <strconv__byte_to_lower>:
 804ecc3:	55                   	push   %ebp
 804ecc4:	89 e5                	mov    %esp,%ebp
 804ecc6:	83 ec 04             	sub    $0x4,%esp
 804ecc9:	8b 45 08             	mov    0x8(%ebp),%eax
 804eccc:	88 45 fc             	mov    %al,-0x4(%ebp)
 804eccf:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 804ecd3:	83 c8 20             	or     $0x20,%eax
 804ecd6:	c9                   	leave  
 804ecd7:	c3                   	ret    

0804ecd8 <strconv__common_parse_uint>:
 804ecd8:	55                   	push   %ebp
 804ecd9:	89 e5                	mov    %esp,%ebp
 804ecdb:	83 ec 28             	sub    $0x28,%esp
 804ecde:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804ece4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804ece7:	31 c0                	xor    %eax,%eax
 804ece9:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804ecec:	83 ec 08             	sub    $0x8,%esp
 804ecef:	ff 75 18             	pushl  0x18(%ebp)
 804ecf2:	ff 75 14             	pushl  0x14(%ebp)
 804ecf5:	ff 75 10             	pushl  0x10(%ebp)
 804ecf8:	ff 75 0c             	pushl  0xc(%ebp)
 804ecfb:	ff 75 08             	pushl  0x8(%ebp)
 804ecfe:	50                   	push   %eax
 804ecff:	e8 52 00 00 00       	call   804ed56 <strconv__common_parse_uint2>
 804ed04:	83 c4 1c             	add    $0x1c,%esp
 804ed07:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804ed0a:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804ed0d:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804ed10:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804ed13:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ed16:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804ed19:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 804ed1d:	74 1e                	je     804ed3d <strconv__common_parse_uint+0x65>
 804ed1f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 804ed23:	7e 18                	jle    804ed3d <strconv__common_parse_uint+0x65>
 804ed25:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
 804ed29:	75 06                	jne    804ed31 <strconv__common_parse_uint+0x59>
 804ed2b:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)
 804ed2f:	74 0c                	je     804ed3d <strconv__common_parse_uint+0x65>
 804ed31:	b8 00 00 00 00       	mov    $0x0,%eax
 804ed36:	ba 00 00 00 00       	mov    $0x0,%edx
 804ed3b:	eb 06                	jmp    804ed43 <strconv__common_parse_uint+0x6b>
 804ed3d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804ed40:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804ed43:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804ed46:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804ed4d:	74 05                	je     804ed54 <strconv__common_parse_uint+0x7c>
 804ed4f:	e8 cc 9a ff ff       	call   8048820 <__stack_chk_fail@plt>
 804ed54:	c9                   	leave  
 804ed55:	c3                   	ret    

0804ed56 <strconv__common_parse_uint2>:
 804ed56:	55                   	push   %ebp
 804ed57:	89 e5                	mov    %esp,%ebp
 804ed59:	53                   	push   %ebx
 804ed5a:	83 ec 44             	sub    $0x44,%esp
 804ed5d:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804ed60:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804ed63:	8b 45 18             	mov    0x18(%ebp),%eax
 804ed66:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804ed69:	8b 45 10             	mov    0x10(%ebp),%eax
 804ed6c:	85 c0                	test   %eax,%eax
 804ed6e:	7e 18                	jle    804ed88 <strconv__common_parse_uint2+0x32>
 804ed70:	83 ec 04             	sub    $0x4,%esp
 804ed73:	ff 75 14             	pushl  0x14(%ebp)
 804ed76:	ff 75 10             	pushl  0x10(%ebp)
 804ed79:	ff 75 0c             	pushl  0xc(%ebp)
 804ed7c:	e8 a7 09 00 00       	call   804f728 <strconv__underscore_ok>
 804ed81:	83 c4 10             	add    $0x10,%esp
 804ed84:	85 c0                	test   %eax,%eax
 804ed86:	75 1f                	jne    804eda7 <strconv__common_parse_uint2+0x51>
 804ed88:	8b 45 08             	mov    0x8(%ebp),%eax
 804ed8b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804ed91:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804ed98:	8b 45 08             	mov    0x8(%ebp),%eax
 804ed9b:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 804eda2:	e9 d7 03 00 00       	jmp    804f17e <strconv__common_parse_uint2+0x428>
 804eda7:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 804edab:	0f 94 c0             	sete   %al
 804edae:	0f b6 c0             	movzbl %al,%eax
 804edb1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804edb4:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 804edbb:	83 7d c8 01          	cmpl   $0x1,-0x38(%ebp)
 804edbf:	7e 0a                	jle    804edcb <strconv__common_parse_uint2+0x75>
 804edc1:	83 7d c8 24          	cmpl   $0x24,-0x38(%ebp)
 804edc5:	0f 8e 52 01 00 00    	jle    804ef1d <strconv__common_parse_uint2+0x1c7>
 804edcb:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 804edcf:	0f 85 29 01 00 00    	jne    804eefe <strconv__common_parse_uint2+0x1a8>
 804edd5:	c7 45 c8 0a 00 00 00 	movl   $0xa,-0x38(%ebp)
 804eddc:	6a 00                	push   $0x0
 804edde:	ff 75 14             	pushl  0x14(%ebp)
 804ede1:	ff 75 10             	pushl  0x10(%ebp)
 804ede4:	ff 75 0c             	pushl  0xc(%ebp)
 804ede7:	e8 4e 1b 01 00       	call   806093a <string_at>
 804edec:	83 c4 10             	add    $0x10,%esp
 804edef:	3c 30                	cmp    $0x30,%al
 804edf1:	0f 85 26 01 00 00    	jne    804ef1d <strconv__common_parse_uint2+0x1c7>
 804edf7:	8b 45 10             	mov    0x10(%ebp),%eax
 804edfa:	83 f8 02             	cmp    $0x2,%eax
 804edfd:	7e 36                	jle    804ee35 <strconv__common_parse_uint2+0xdf>
 804edff:	6a 01                	push   $0x1
 804ee01:	ff 75 14             	pushl  0x14(%ebp)
 804ee04:	ff 75 10             	pushl  0x10(%ebp)
 804ee07:	ff 75 0c             	pushl  0xc(%ebp)
 804ee0a:	e8 2b 1b 01 00       	call   806093a <string_at>
 804ee0f:	83 c4 10             	add    $0x10,%esp
 804ee12:	0f b6 c0             	movzbl %al,%eax
 804ee15:	83 ec 0c             	sub    $0xc,%esp
 804ee18:	50                   	push   %eax
 804ee19:	e8 a5 fe ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804ee1e:	83 c4 10             	add    $0x10,%esp
 804ee21:	3c 62                	cmp    $0x62,%al
 804ee23:	75 10                	jne    804ee35 <strconv__common_parse_uint2+0xdf>
 804ee25:	c7 45 c8 02 00 00 00 	movl   $0x2,-0x38(%ebp)
 804ee2c:	83 45 cc 02          	addl   $0x2,-0x34(%ebp)
 804ee30:	e9 e8 00 00 00       	jmp    804ef1d <strconv__common_parse_uint2+0x1c7>
 804ee35:	8b 45 10             	mov    0x10(%ebp),%eax
 804ee38:	83 f8 02             	cmp    $0x2,%eax
 804ee3b:	7e 36                	jle    804ee73 <strconv__common_parse_uint2+0x11d>
 804ee3d:	6a 01                	push   $0x1
 804ee3f:	ff 75 14             	pushl  0x14(%ebp)
 804ee42:	ff 75 10             	pushl  0x10(%ebp)
 804ee45:	ff 75 0c             	pushl  0xc(%ebp)
 804ee48:	e8 ed 1a 01 00       	call   806093a <string_at>
 804ee4d:	83 c4 10             	add    $0x10,%esp
 804ee50:	0f b6 c0             	movzbl %al,%eax
 804ee53:	83 ec 0c             	sub    $0xc,%esp
 804ee56:	50                   	push   %eax
 804ee57:	e8 67 fe ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804ee5c:	83 c4 10             	add    $0x10,%esp
 804ee5f:	3c 6f                	cmp    $0x6f,%al
 804ee61:	75 10                	jne    804ee73 <strconv__common_parse_uint2+0x11d>
 804ee63:	c7 45 c8 08 00 00 00 	movl   $0x8,-0x38(%ebp)
 804ee6a:	83 45 cc 02          	addl   $0x2,-0x34(%ebp)
 804ee6e:	e9 aa 00 00 00       	jmp    804ef1d <strconv__common_parse_uint2+0x1c7>
 804ee73:	8b 45 10             	mov    0x10(%ebp),%eax
 804ee76:	83 f8 02             	cmp    $0x2,%eax
 804ee79:	7e 33                	jle    804eeae <strconv__common_parse_uint2+0x158>
 804ee7b:	6a 01                	push   $0x1
 804ee7d:	ff 75 14             	pushl  0x14(%ebp)
 804ee80:	ff 75 10             	pushl  0x10(%ebp)
 804ee83:	ff 75 0c             	pushl  0xc(%ebp)
 804ee86:	e8 af 1a 01 00       	call   806093a <string_at>
 804ee8b:	83 c4 10             	add    $0x10,%esp
 804ee8e:	0f b6 c0             	movzbl %al,%eax
 804ee91:	83 ec 0c             	sub    $0xc,%esp
 804ee94:	50                   	push   %eax
 804ee95:	e8 29 fe ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804ee9a:	83 c4 10             	add    $0x10,%esp
 804ee9d:	3c 78                	cmp    $0x78,%al
 804ee9f:	75 0d                	jne    804eeae <strconv__common_parse_uint2+0x158>
 804eea1:	c7 45 c8 10 00 00 00 	movl   $0x10,-0x38(%ebp)
 804eea8:	83 45 cc 02          	addl   $0x2,-0x34(%ebp)
 804eeac:	eb 6f                	jmp    804ef1d <strconv__common_parse_uint2+0x1c7>
 804eeae:	8b 45 10             	mov    0x10(%ebp),%eax
 804eeb1:	83 f8 01             	cmp    $0x1,%eax
 804eeb4:	7e 3b                	jle    804eef1 <strconv__common_parse_uint2+0x19b>
 804eeb6:	6a 01                	push   $0x1
 804eeb8:	ff 75 14             	pushl  0x14(%ebp)
 804eebb:	ff 75 10             	pushl  0x10(%ebp)
 804eebe:	ff 75 0c             	pushl  0xc(%ebp)
 804eec1:	e8 74 1a 01 00       	call   806093a <string_at>
 804eec6:	83 c4 10             	add    $0x10,%esp
 804eec9:	3c 2f                	cmp    $0x2f,%al
 804eecb:	76 24                	jbe    804eef1 <strconv__common_parse_uint2+0x19b>
 804eecd:	6a 01                	push   $0x1
 804eecf:	ff 75 14             	pushl  0x14(%ebp)
 804eed2:	ff 75 10             	pushl  0x10(%ebp)
 804eed5:	ff 75 0c             	pushl  0xc(%ebp)
 804eed8:	e8 5d 1a 01 00       	call   806093a <string_at>
 804eedd:	83 c4 10             	add    $0x10,%esp
 804eee0:	3c 39                	cmp    $0x39,%al
 804eee2:	77 0d                	ja     804eef1 <strconv__common_parse_uint2+0x19b>
 804eee4:	c7 45 c8 0a 00 00 00 	movl   $0xa,-0x38(%ebp)
 804eeeb:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804eeef:	eb 2c                	jmp    804ef1d <strconv__common_parse_uint2+0x1c7>
 804eef1:	c7 45 c8 08 00 00 00 	movl   $0x8,-0x38(%ebp)
 804eef8:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 804eefc:	eb 1f                	jmp    804ef1d <strconv__common_parse_uint2+0x1c7>
 804eefe:	8b 45 08             	mov    0x8(%ebp),%eax
 804ef01:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804ef07:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804ef0e:	8b 45 08             	mov    0x8(%ebp),%eax
 804ef11:	c7 40 08 ff ff ff ff 	movl   $0xffffffff,0x8(%eax)
 804ef18:	e9 61 02 00 00       	jmp    804f17e <strconv__common_parse_uint2+0x428>
 804ef1d:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 804ef21:	75 09                	jne    804ef2c <strconv__common_parse_uint2+0x1d6>
 804ef23:	c7 45 c4 20 00 00 00 	movl   $0x20,-0x3c(%ebp)
 804ef2a:	eb 2b                	jmp    804ef57 <strconv__common_parse_uint2+0x201>
 804ef2c:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 804ef30:	78 06                	js     804ef38 <strconv__common_parse_uint2+0x1e2>
 804ef32:	83 7d c4 40          	cmpl   $0x40,-0x3c(%ebp)
 804ef36:	7e 1f                	jle    804ef57 <strconv__common_parse_uint2+0x201>
 804ef38:	8b 45 08             	mov    0x8(%ebp),%eax
 804ef3b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804ef41:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804ef48:	8b 45 08             	mov    0x8(%ebp),%eax
 804ef4b:	c7 40 08 fe ff ff ff 	movl   $0xfffffffe,0x8(%eax)
 804ef52:	e9 27 02 00 00       	jmp    804f17e <strconv__common_parse_uint2+0x428>
 804ef57:	a1 f0 30 07 08       	mov    0x80730f0,%eax
 804ef5c:	8b 15 f4 30 07 08    	mov    0x80730f4,%edx
 804ef62:	8b 4d c8             	mov    -0x38(%ebp),%ecx
 804ef65:	89 cb                	mov    %ecx,%ebx
 804ef67:	c1 fb 1f             	sar    $0x1f,%ebx
 804ef6a:	53                   	push   %ebx
 804ef6b:	51                   	push   %ecx
 804ef6c:	52                   	push   %edx
 804ef6d:	50                   	push   %eax
 804ef6e:	e8 7d a3 01 00       	call   80692f0 <__udivdi3>
 804ef73:	83 c4 10             	add    $0x10,%esp
 804ef76:	83 c0 01             	add    $0x1,%eax
 804ef79:	83 d2 00             	adc    $0x0,%edx
 804ef7c:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804ef7f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804ef82:	83 7d c4 40          	cmpl   $0x40,-0x3c(%ebp)
 804ef86:	74 23                	je     804efab <strconv__common_parse_uint2+0x255>
 804ef88:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
 804ef8b:	b8 01 00 00 00       	mov    $0x1,%eax
 804ef90:	ba 00 00 00 00       	mov    $0x0,%edx
 804ef95:	0f a5 c2             	shld   %cl,%eax,%edx
 804ef98:	d3 e0                	shl    %cl,%eax
 804ef9a:	f6 c1 20             	test   $0x20,%cl
 804ef9d:	74 04                	je     804efa3 <strconv__common_parse_uint2+0x24d>
 804ef9f:	89 c2                	mov    %eax,%edx
 804efa1:	31 c0                	xor    %eax,%eax
 804efa3:	83 c0 ff             	add    $0xffffffff,%eax
 804efa6:	83 d2 ff             	adc    $0xffffffff,%edx
 804efa9:	eb 0b                	jmp    804efb6 <strconv__common_parse_uint2+0x260>
 804efab:	a1 f0 30 07 08       	mov    0x80730f0,%eax
 804efb0:	8b 15 f4 30 07 08    	mov    0x80730f4,%edx
 804efb6:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804efb9:	89 55 ec             	mov    %edx,-0x14(%ebp)
 804efbc:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 804efc3:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 804efca:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804efcd:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804efd0:	e9 85 01 00 00       	jmp    804f15a <strconv__common_parse_uint2+0x404>
 804efd5:	ff 75 d0             	pushl  -0x30(%ebp)
 804efd8:	ff 75 14             	pushl  0x14(%ebp)
 804efdb:	ff 75 10             	pushl  0x10(%ebp)
 804efde:	ff 75 0c             	pushl  0xc(%ebp)
 804efe1:	e8 54 19 01 00       	call   806093a <string_at>
 804efe6:	83 c4 10             	add    $0x10,%esp
 804efe9:	88 45 c2             	mov    %al,-0x3e(%ebp)
 804efec:	0f b6 45 c2          	movzbl -0x3e(%ebp),%eax
 804eff0:	83 ec 0c             	sub    $0xc,%esp
 804eff3:	50                   	push   %eax
 804eff4:	e8 ca fc ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804eff9:	83 c4 10             	add    $0x10,%esp
 804effc:	88 45 c3             	mov    %al,-0x3d(%ebp)
 804efff:	c6 45 c1 00          	movb   $0x0,-0x3f(%ebp)
 804f003:	80 7d c2 5f          	cmpb   $0x5f,-0x3e(%ebp)
 804f007:	75 0a                	jne    804f013 <strconv__common_parse_uint2+0x2bd>
 804f009:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804f00d:	0f 85 42 01 00 00    	jne    804f155 <strconv__common_parse_uint2+0x3ff>
 804f013:	80 7d c2 2f          	cmpb   $0x2f,-0x3e(%ebp)
 804f017:	76 12                	jbe    804f02b <strconv__common_parse_uint2+0x2d5>
 804f019:	80 7d c2 39          	cmpb   $0x39,-0x3e(%ebp)
 804f01d:	77 0c                	ja     804f02b <strconv__common_parse_uint2+0x2d5>
 804f01f:	0f b6 45 c2          	movzbl -0x3e(%ebp),%eax
 804f023:	83 e8 30             	sub    $0x30,%eax
 804f026:	88 45 c1             	mov    %al,-0x3f(%ebp)
 804f029:	eb 37                	jmp    804f062 <strconv__common_parse_uint2+0x30c>
 804f02b:	80 7d c3 60          	cmpb   $0x60,-0x3d(%ebp)
 804f02f:	76 12                	jbe    804f043 <strconv__common_parse_uint2+0x2ed>
 804f031:	80 7d c3 7a          	cmpb   $0x7a,-0x3d(%ebp)
 804f035:	77 0c                	ja     804f043 <strconv__common_parse_uint2+0x2ed>
 804f037:	0f b6 45 c3          	movzbl -0x3d(%ebp),%eax
 804f03b:	83 e8 57             	sub    $0x57,%eax
 804f03e:	88 45 c1             	mov    %al,-0x3f(%ebp)
 804f041:	eb 1f                	jmp    804f062 <strconv__common_parse_uint2+0x30c>
 804f043:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804f046:	8d 58 01             	lea    0x1(%eax),%ebx
 804f049:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804f04c:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f04f:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f052:	89 01                	mov    %eax,(%ecx)
 804f054:	89 51 04             	mov    %edx,0x4(%ecx)
 804f057:	8b 45 08             	mov    0x8(%ebp),%eax
 804f05a:	89 58 08             	mov    %ebx,0x8(%eax)
 804f05d:	e9 1c 01 00 00       	jmp    804f17e <strconv__common_parse_uint2+0x428>
 804f062:	0f b6 55 c1          	movzbl -0x3f(%ebp),%edx
 804f066:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804f069:	0f b6 c0             	movzbl %al,%eax
 804f06c:	39 c2                	cmp    %eax,%edx
 804f06e:	7c 1f                	jl     804f08f <strconv__common_parse_uint2+0x339>
 804f070:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804f073:	8d 58 01             	lea    0x1(%eax),%ebx
 804f076:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804f079:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f07c:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f07f:	89 01                	mov    %eax,(%ecx)
 804f081:	89 51 04             	mov    %edx,0x4(%ecx)
 804f084:	8b 45 08             	mov    0x8(%ebp),%eax
 804f087:	89 58 08             	mov    %ebx,0x8(%eax)
 804f08a:	e9 ef 00 00 00       	jmp    804f17e <strconv__common_parse_uint2+0x428>
 804f08f:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f092:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f095:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 804f098:	72 27                	jb     804f0c1 <strconv__common_parse_uint2+0x36b>
 804f09a:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 804f09d:	77 05                	ja     804f0a4 <strconv__common_parse_uint2+0x34e>
 804f09f:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804f0a2:	72 1d                	jb     804f0c1 <strconv__common_parse_uint2+0x36b>
 804f0a4:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804f0a7:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804f0aa:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f0ad:	89 01                	mov    %eax,(%ecx)
 804f0af:	89 51 04             	mov    %edx,0x4(%ecx)
 804f0b2:	8b 45 08             	mov    0x8(%ebp),%eax
 804f0b5:	c7 40 08 fd ff ff ff 	movl   $0xfffffffd,0x8(%eax)
 804f0bc:	e9 bd 00 00 00       	jmp    804f17e <strconv__common_parse_uint2+0x428>
 804f0c1:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804f0c4:	99                   	cltd   
 804f0c5:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 804f0c8:	89 cb                	mov    %ecx,%ebx
 804f0ca:	0f af d8             	imul   %eax,%ebx
 804f0cd:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804f0d0:	0f af ca             	imul   %edx,%ecx
 804f0d3:	01 d9                	add    %ebx,%ecx
 804f0d5:	f7 65 d8             	mull   -0x28(%ebp)
 804f0d8:	01 d1                	add    %edx,%ecx
 804f0da:	89 ca                	mov    %ecx,%edx
 804f0dc:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804f0df:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804f0e2:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804f0e5:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804f0e8:	0f b6 45 c1          	movzbl -0x3f(%ebp),%eax
 804f0ec:	89 c1                	mov    %eax,%ecx
 804f0ee:	bb 00 00 00 00       	mov    $0x0,%ebx
 804f0f3:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f0f6:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f0f9:	01 c8                	add    %ecx,%eax
 804f0fb:	11 da                	adc    %ebx,%edx
 804f0fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804f100:	89 55 f4             	mov    %edx,-0xc(%ebp)
 804f103:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804f106:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804f109:	3b 55 dc             	cmp    -0x24(%ebp),%edx
 804f10c:	72 1f                	jb     804f12d <strconv__common_parse_uint2+0x3d7>
 804f10e:	3b 55 dc             	cmp    -0x24(%ebp),%edx
 804f111:	77 05                	ja     804f118 <strconv__common_parse_uint2+0x3c2>
 804f113:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 804f116:	72 15                	jb     804f12d <strconv__common_parse_uint2+0x3d7>
 804f118:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804f11b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804f11e:	3b 55 ec             	cmp    -0x14(%ebp),%edx
 804f121:	72 24                	jb     804f147 <strconv__common_parse_uint2+0x3f1>
 804f123:	3b 55 ec             	cmp    -0x14(%ebp),%edx
 804f126:	77 05                	ja     804f12d <strconv__common_parse_uint2+0x3d7>
 804f128:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 804f12b:	76 1a                	jbe    804f147 <strconv__common_parse_uint2+0x3f1>
 804f12d:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804f130:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804f133:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f136:	89 01                	mov    %eax,(%ecx)
 804f138:	89 51 04             	mov    %edx,0x4(%ecx)
 804f13b:	8b 45 08             	mov    0x8(%ebp),%eax
 804f13e:	c7 40 08 fd ff ff ff 	movl   $0xfffffffd,0x8(%eax)
 804f145:	eb 37                	jmp    804f17e <strconv__common_parse_uint2+0x428>
 804f147:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804f14a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804f14d:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804f150:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804f153:	eb 01                	jmp    804f156 <strconv__common_parse_uint2+0x400>
 804f155:	90                   	nop
 804f156:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 804f15a:	8b 45 10             	mov    0x10(%ebp),%eax
 804f15d:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 804f160:	0f 8f 6f fe ff ff    	jg     804efd5 <strconv__common_parse_uint2+0x27f>
 804f166:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804f169:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f16c:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f16f:	89 01                	mov    %eax,(%ecx)
 804f171:	89 51 04             	mov    %edx,0x4(%ecx)
 804f174:	8b 45 08             	mov    0x8(%ebp),%eax
 804f177:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 804f17e:	8b 45 08             	mov    0x8(%ebp),%eax
 804f181:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 804f184:	c9                   	leave  
 804f185:	c2 04 00             	ret    $0x4

0804f188 <strconv__parse_uint>:
 804f188:	55                   	push   %ebp
 804f189:	89 e5                	mov    %esp,%ebp
 804f18b:	83 ec 08             	sub    $0x8,%esp
 804f18e:	83 ec 04             	sub    $0x4,%esp
 804f191:	6a 01                	push   $0x1
 804f193:	6a 01                	push   $0x1
 804f195:	ff 75 18             	pushl  0x18(%ebp)
 804f198:	ff 75 14             	pushl  0x14(%ebp)
 804f19b:	ff 75 10             	pushl  0x10(%ebp)
 804f19e:	ff 75 0c             	pushl  0xc(%ebp)
 804f1a1:	ff 75 08             	pushl  0x8(%ebp)
 804f1a4:	e8 2f fb ff ff       	call   804ecd8 <strconv__common_parse_uint>
 804f1a9:	83 c4 20             	add    $0x20,%esp
 804f1ac:	c9                   	leave  
 804f1ad:	c3                   	ret    

0804f1ae <strconv__common_parse_int>:
 804f1ae:	55                   	push   %ebp
 804f1af:	89 e5                	mov    %esp,%ebp
 804f1b1:	83 ec 48             	sub    $0x48,%esp
 804f1b4:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804f1ba:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804f1bd:	31 c0                	xor    %eax,%eax
 804f1bf:	8b 45 08             	mov    0x8(%ebp),%eax
 804f1c2:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804f1c5:	8b 45 0c             	mov    0xc(%ebp),%eax
 804f1c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804f1cb:	8b 45 10             	mov    0x10(%ebp),%eax
 804f1ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804f1d1:	8b 45 18             	mov    0x18(%ebp),%eax
 804f1d4:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804f1d7:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804f1da:	85 c0                	test   %eax,%eax
 804f1dc:	7f 0f                	jg     804f1ed <strconv__common_parse_int+0x3f>
 804f1de:	b8 00 00 00 00       	mov    $0x0,%eax
 804f1e3:	ba 00 00 00 00       	mov    $0x0,%edx
 804f1e8:	e9 6d 01 00 00       	jmp    804f35a <strconv__common_parse_int+0x1ac>
 804f1ed:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 804f1f4:	6a 00                	push   $0x0
 804f1f6:	ff 75 f0             	pushl  -0x10(%ebp)
 804f1f9:	ff 75 ec             	pushl  -0x14(%ebp)
 804f1fc:	ff 75 e8             	pushl  -0x18(%ebp)
 804f1ff:	e8 36 17 01 00       	call   806093a <string_at>
 804f204:	83 c4 10             	add    $0x10,%esp
 804f207:	3c 2b                	cmp    $0x2b,%al
 804f209:	75 20                	jne    804f22b <strconv__common_parse_int+0x7d>
 804f20b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f20e:	8d 45 e8             	lea    -0x18(%ebp),%eax
 804f211:	83 ec 08             	sub    $0x8,%esp
 804f214:	52                   	push   %edx
 804f215:	6a 01                	push   $0x1
 804f217:	ff 75 f0             	pushl  -0x10(%ebp)
 804f21a:	ff 75 ec             	pushl  -0x14(%ebp)
 804f21d:	ff 75 e8             	pushl  -0x18(%ebp)
 804f220:	50                   	push   %eax
 804f221:	e8 9b f6 00 00       	call   805e8c1 <string_substr>
 804f226:	83 c4 1c             	add    $0x1c,%esp
 804f229:	eb 4e                	jmp    804f279 <strconv__common_parse_int+0xcb>
 804f22b:	6a 00                	push   $0x0
 804f22d:	ff 75 f0             	pushl  -0x10(%ebp)
 804f230:	ff 75 ec             	pushl  -0x14(%ebp)
 804f233:	ff 75 e8             	pushl  -0x18(%ebp)
 804f236:	e8 ff 16 01 00       	call   806093a <string_at>
 804f23b:	83 c4 10             	add    $0x10,%esp
 804f23e:	3c 2d                	cmp    $0x2d,%al
 804f240:	75 37                	jne    804f279 <strconv__common_parse_int+0xcb>
 804f242:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 804f249:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f24c:	8d 45 b8             	lea    -0x48(%ebp),%eax
 804f24f:	83 ec 08             	sub    $0x8,%esp
 804f252:	52                   	push   %edx
 804f253:	6a 01                	push   $0x1
 804f255:	ff 75 f0             	pushl  -0x10(%ebp)
 804f258:	ff 75 ec             	pushl  -0x14(%ebp)
 804f25b:	ff 75 e8             	pushl  -0x18(%ebp)
 804f25e:	50                   	push   %eax
 804f25f:	e8 5d f6 00 00       	call   805e8c1 <string_substr>
 804f264:	83 c4 1c             	add    $0x1c,%esp
 804f267:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804f26a:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804f26d:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804f270:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804f273:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804f276:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804f279:	83 ec 04             	sub    $0x4,%esp
 804f27c:	ff 75 20             	pushl  0x20(%ebp)
 804f27f:	ff 75 1c             	pushl  0x1c(%ebp)
 804f282:	ff 75 d0             	pushl  -0x30(%ebp)
 804f285:	ff 75 14             	pushl  0x14(%ebp)
 804f288:	ff 75 f0             	pushl  -0x10(%ebp)
 804f28b:	ff 75 ec             	pushl  -0x14(%ebp)
 804f28e:	ff 75 e8             	pushl  -0x18(%ebp)
 804f291:	e8 42 fa ff ff       	call   804ecd8 <strconv__common_parse_uint>
 804f296:	83 c4 20             	add    $0x20,%esp
 804f299:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804f29c:	89 55 dc             	mov    %edx,-0x24(%ebp)
 804f29f:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804f2a2:	0b 45 d8             	or     -0x28(%ebp),%eax
 804f2a5:	85 c0                	test   %eax,%eax
 804f2a7:	75 0f                	jne    804f2b8 <strconv__common_parse_int+0x10a>
 804f2a9:	b8 00 00 00 00       	mov    $0x0,%eax
 804f2ae:	ba 00 00 00 00       	mov    $0x0,%edx
 804f2b3:	e9 a2 00 00 00       	jmp    804f35a <strconv__common_parse_int+0x1ac>
 804f2b8:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 804f2bc:	75 07                	jne    804f2c5 <strconv__common_parse_int+0x117>
 804f2be:	c7 45 d0 20 00 00 00 	movl   $0x20,-0x30(%ebp)
 804f2c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804f2c8:	83 e8 01             	sub    $0x1,%eax
 804f2cb:	89 c1                	mov    %eax,%ecx
 804f2cd:	b8 01 00 00 00       	mov    $0x1,%eax
 804f2d2:	ba 00 00 00 00       	mov    $0x0,%edx
 804f2d7:	0f a5 c2             	shld   %cl,%eax,%edx
 804f2da:	d3 e0                	shl    %cl,%eax
 804f2dc:	f6 c1 20             	test   $0x20,%cl
 804f2df:	74 04                	je     804f2e5 <strconv__common_parse_int+0x137>
 804f2e1:	89 c2                	mov    %eax,%edx
 804f2e3:	31 c0                	xor    %eax,%eax
 804f2e5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804f2e8:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 804f2eb:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804f2ef:	75 23                	jne    804f314 <strconv__common_parse_int+0x166>
 804f2f1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f2f4:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f2f7:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 804f2fa:	72 18                	jb     804f314 <strconv__common_parse_int+0x166>
 804f2fc:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 804f2ff:	77 05                	ja     804f306 <strconv__common_parse_int+0x158>
 804f301:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804f304:	72 0e                	jb     804f314 <strconv__common_parse_int+0x166>
 804f306:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804f309:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804f30c:	83 c0 ff             	add    $0xffffffff,%eax
 804f30f:	83 d2 ff             	adc    $0xffffffff,%edx
 804f312:	eb 46                	jmp    804f35a <strconv__common_parse_int+0x1ac>
 804f314:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804f318:	74 24                	je     804f33e <strconv__common_parse_int+0x190>
 804f31a:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f31d:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f320:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 804f323:	72 19                	jb     804f33e <strconv__common_parse_int+0x190>
 804f325:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 804f328:	77 05                	ja     804f32f <strconv__common_parse_int+0x181>
 804f32a:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 804f32d:	76 0f                	jbe    804f33e <strconv__common_parse_int+0x190>
 804f32f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804f332:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804f335:	f7 d8                	neg    %eax
 804f337:	83 d2 00             	adc    $0x0,%edx
 804f33a:	f7 da                	neg    %edx
 804f33c:	eb 1c                	jmp    804f35a <strconv__common_parse_int+0x1ac>
 804f33e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804f342:	74 0f                	je     804f353 <strconv__common_parse_int+0x1a5>
 804f344:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f347:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f34a:	f7 d8                	neg    %eax
 804f34c:	83 d2 00             	adc    $0x0,%edx
 804f34f:	f7 da                	neg    %edx
 804f351:	eb 07                	jmp    804f35a <strconv__common_parse_int+0x1ac>
 804f353:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804f356:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f359:	90                   	nop
 804f35a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804f35d:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804f364:	74 05                	je     804f36b <strconv__common_parse_int+0x1bd>
 804f366:	e8 b5 94 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804f36b:	c9                   	leave  
 804f36c:	c3                   	ret    

0804f36d <strconv__parse_int>:
 804f36d:	55                   	push   %ebp
 804f36e:	89 e5                	mov    %esp,%ebp
 804f370:	83 ec 08             	sub    $0x8,%esp
 804f373:	83 ec 04             	sub    $0x4,%esp
 804f376:	6a 01                	push   $0x1
 804f378:	6a 01                	push   $0x1
 804f37a:	ff 75 18             	pushl  0x18(%ebp)
 804f37d:	ff 75 14             	pushl  0x14(%ebp)
 804f380:	ff 75 10             	pushl  0x10(%ebp)
 804f383:	ff 75 0c             	pushl  0xc(%ebp)
 804f386:	ff 75 08             	pushl  0x8(%ebp)
 804f389:	e8 20 fe ff ff       	call   804f1ae <strconv__common_parse_int>
 804f38e:	83 c4 20             	add    $0x20,%esp
 804f391:	c9                   	leave  
 804f392:	c3                   	ret    

0804f393 <strconv__atoi>:
 804f393:	55                   	push   %ebp
 804f394:	89 e5                	mov    %esp,%ebp
 804f396:	81 ec 98 00 00 00    	sub    $0x98,%esp
 804f39c:	8b 45 08             	mov    0x8(%ebp),%eax
 804f39f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 804f3a5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804f3ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804f3ae:	31 c0                	xor    %eax,%eax
 804f3b0:	8b 45 10             	mov    0x10(%ebp),%eax
 804f3b3:	85 c0                	test   %eax,%eax
 804f3b5:	0f 85 8c 00 00 00    	jne    804f447 <strconv__atoi+0xb4>
 804f3bb:	8d 45 94             	lea    -0x6c(%ebp),%eax
 804f3be:	83 ec 08             	sub    $0x8,%esp
 804f3c1:	ff 75 14             	pushl  0x14(%ebp)
 804f3c4:	ff 75 10             	pushl  0x10(%ebp)
 804f3c7:	ff 75 0c             	pushl  0xc(%ebp)
 804f3ca:	6a 02                	push   $0x2
 804f3cc:	68 9c 97 06 08       	push   $0x806979c
 804f3d1:	50                   	push   %eax
 804f3d2:	e8 ed a0 ff ff       	call   80494c4 <_STR>
 804f3d7:	83 c4 1c             	add    $0x1c,%esp
 804f3da:	8d 45 b8             	lea    -0x48(%ebp),%eax
 804f3dd:	ff 75 9c             	pushl  -0x64(%ebp)
 804f3e0:	ff 75 98             	pushl  -0x68(%ebp)
 804f3e3:	ff 75 94             	pushl  -0x6c(%ebp)
 804f3e6:	50                   	push   %eax
 804f3e7:	e8 e6 c5 00 00       	call   805b9d2 <v_error>
 804f3ec:	83 c4 0c             	add    $0xc,%esp
 804f3ef:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804f3f2:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804f3f5:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804f3f8:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804f3fb:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804f3fe:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804f401:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804f404:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804f407:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804f40a:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804f40d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804f410:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804f413:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804f419:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804f41c:	89 10                	mov    %edx,(%eax)
 804f41e:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f421:	89 50 04             	mov    %edx,0x4(%eax)
 804f424:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804f427:	89 50 08             	mov    %edx,0x8(%eax)
 804f42a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804f42d:	89 50 0c             	mov    %edx,0xc(%eax)
 804f430:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804f433:	89 50 10             	mov    %edx,0x10(%eax)
 804f436:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f439:	89 50 14             	mov    %edx,0x14(%eax)
 804f43c:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804f43f:	89 50 18             	mov    %edx,0x18(%eax)
 804f442:	e9 c6 02 00 00       	jmp    804f70d <strconv__atoi+0x37a>
 804f447:	8b 45 10             	mov    0x10(%ebp),%eax
 804f44a:	85 c0                	test   %eax,%eax
 804f44c:	0f 8e 53 02 00 00    	jle    804f6a5 <strconv__atoi+0x312>
 804f452:	8b 45 10             	mov    0x10(%ebp),%eax
 804f455:	83 f8 09             	cmp    $0x9,%eax
 804f458:	0f 8f 47 02 00 00    	jg     804f6a5 <strconv__atoi+0x312>
 804f45e:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%ebp)
 804f465:	00 00 00 
 804f468:	6a 00                	push   $0x0
 804f46a:	ff 75 14             	pushl  0x14(%ebp)
 804f46d:	ff 75 10             	pushl  0x10(%ebp)
 804f470:	ff 75 0c             	pushl  0xc(%ebp)
 804f473:	e8 c2 14 01 00       	call   806093a <string_at>
 804f478:	83 c4 10             	add    $0x10,%esp
 804f47b:	3c 2d                	cmp    $0x2d,%al
 804f47d:	74 1b                	je     804f49a <strconv__atoi+0x107>
 804f47f:	6a 00                	push   $0x0
 804f481:	ff 75 14             	pushl  0x14(%ebp)
 804f484:	ff 75 10             	pushl  0x10(%ebp)
 804f487:	ff 75 0c             	pushl  0xc(%ebp)
 804f48a:	e8 ab 14 01 00       	call   806093a <string_at>
 804f48f:	83 c4 10             	add    $0x10,%esp
 804f492:	3c 2b                	cmp    $0x2b,%al
 804f494:	0f 85 a4 00 00 00    	jne    804f53e <strconv__atoi+0x1ab>
 804f49a:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 804f4a1:	8b 45 10             	mov    0x10(%ebp),%eax
 804f4a4:	2b 85 78 ff ff ff    	sub    -0x88(%ebp),%eax
 804f4aa:	85 c0                	test   %eax,%eax
 804f4ac:	0f 8f 8c 00 00 00    	jg     804f53e <strconv__atoi+0x1ab>
 804f4b2:	8d 45 a0             	lea    -0x60(%ebp),%eax
 804f4b5:	83 ec 08             	sub    $0x8,%esp
 804f4b8:	ff 75 14             	pushl  0x14(%ebp)
 804f4bb:	ff 75 10             	pushl  0x10(%ebp)
 804f4be:	ff 75 0c             	pushl  0xc(%ebp)
 804f4c1:	6a 02                	push   $0x2
 804f4c3:	68 9c 97 06 08       	push   $0x806979c
 804f4c8:	50                   	push   %eax
 804f4c9:	e8 f6 9f ff ff       	call   80494c4 <_STR>
 804f4ce:	83 c4 1c             	add    $0x1c,%esp
 804f4d1:	8d 45 b8             	lea    -0x48(%ebp),%eax
 804f4d4:	ff 75 a8             	pushl  -0x58(%ebp)
 804f4d7:	ff 75 a4             	pushl  -0x5c(%ebp)
 804f4da:	ff 75 a0             	pushl  -0x60(%ebp)
 804f4dd:	50                   	push   %eax
 804f4de:	e8 ef c4 00 00       	call   805b9d2 <v_error>
 804f4e3:	83 c4 0c             	add    $0xc,%esp
 804f4e6:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804f4e9:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804f4ec:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804f4ef:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804f4f2:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804f4f5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804f4f8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804f4fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804f4fe:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804f501:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804f504:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804f507:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804f50a:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804f510:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804f513:	89 10                	mov    %edx,(%eax)
 804f515:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f518:	89 50 04             	mov    %edx,0x4(%eax)
 804f51b:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804f51e:	89 50 08             	mov    %edx,0x8(%eax)
 804f521:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804f524:	89 50 0c             	mov    %edx,0xc(%eax)
 804f527:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804f52a:	89 50 10             	mov    %edx,0x10(%eax)
 804f52d:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f530:	89 50 14             	mov    %edx,0x14(%eax)
 804f533:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804f536:	89 50 18             	mov    %edx,0x18(%eax)
 804f539:	e9 cf 01 00 00       	jmp    804f70d <strconv__atoi+0x37a>
 804f53e:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%ebp)
 804f545:	00 00 00 
 804f548:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 804f54e:	89 45 80             	mov    %eax,-0x80(%ebp)
 804f551:	e9 d3 00 00 00       	jmp    804f629 <strconv__atoi+0x296>
 804f556:	ff 75 80             	pushl  -0x80(%ebp)
 804f559:	ff 75 14             	pushl  0x14(%ebp)
 804f55c:	ff 75 10             	pushl  0x10(%ebp)
 804f55f:	ff 75 0c             	pushl  0xc(%ebp)
 804f562:	e8 d3 13 01 00       	call   806093a <string_at>
 804f567:	83 c4 10             	add    $0x10,%esp
 804f56a:	0f b6 c0             	movzbl %al,%eax
 804f56d:	83 e8 30             	sub    $0x30,%eax
 804f570:	89 45 84             	mov    %eax,-0x7c(%ebp)
 804f573:	83 7d 84 09          	cmpl   $0x9,-0x7c(%ebp)
 804f577:	0f 86 8c 00 00 00    	jbe    804f609 <strconv__atoi+0x276>
 804f57d:	8d 45 ac             	lea    -0x54(%ebp),%eax
 804f580:	83 ec 08             	sub    $0x8,%esp
 804f583:	ff 75 14             	pushl  0x14(%ebp)
 804f586:	ff 75 10             	pushl  0x10(%ebp)
 804f589:	ff 75 0c             	pushl  0xc(%ebp)
 804f58c:	6a 02                	push   $0x2
 804f58e:	68 9c 97 06 08       	push   $0x806979c
 804f593:	50                   	push   %eax
 804f594:	e8 2b 9f ff ff       	call   80494c4 <_STR>
 804f599:	83 c4 1c             	add    $0x1c,%esp
 804f59c:	8d 45 b8             	lea    -0x48(%ebp),%eax
 804f59f:	ff 75 b4             	pushl  -0x4c(%ebp)
 804f5a2:	ff 75 b0             	pushl  -0x50(%ebp)
 804f5a5:	ff 75 ac             	pushl  -0x54(%ebp)
 804f5a8:	50                   	push   %eax
 804f5a9:	e8 24 c4 00 00       	call   805b9d2 <v_error>
 804f5ae:	83 c4 0c             	add    $0xc,%esp
 804f5b1:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804f5b4:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804f5b7:	8b 45 bc             	mov    -0x44(%ebp),%eax
 804f5ba:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804f5bd:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804f5c0:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804f5c3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804f5c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804f5c9:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804f5cc:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804f5cf:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804f5d2:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804f5d5:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804f5db:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804f5de:	89 10                	mov    %edx,(%eax)
 804f5e0:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f5e3:	89 50 04             	mov    %edx,0x4(%eax)
 804f5e6:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804f5e9:	89 50 08             	mov    %edx,0x8(%eax)
 804f5ec:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804f5ef:	89 50 0c             	mov    %edx,0xc(%eax)
 804f5f2:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804f5f5:	89 50 10             	mov    %edx,0x10(%eax)
 804f5f8:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f5fb:	89 50 14             	mov    %edx,0x14(%eax)
 804f5fe:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804f601:	89 50 18             	mov    %edx,0x18(%eax)
 804f604:	e9 04 01 00 00       	jmp    804f70d <strconv__atoi+0x37a>
 804f609:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 804f60f:	89 d0                	mov    %edx,%eax
 804f611:	c1 e0 02             	shl    $0x2,%eax
 804f614:	01 d0                	add    %edx,%eax
 804f616:	01 c0                	add    %eax,%eax
 804f618:	89 c2                	mov    %eax,%edx
 804f61a:	8b 45 84             	mov    -0x7c(%ebp),%eax
 804f61d:	01 d0                	add    %edx,%eax
 804f61f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 804f625:	83 45 80 01          	addl   $0x1,-0x80(%ebp)
 804f629:	8b 45 10             	mov    0x10(%ebp),%eax
 804f62c:	3b 45 80             	cmp    -0x80(%ebp),%eax
 804f62f:	0f 8f 21 ff ff ff    	jg     804f556 <strconv__atoi+0x1c3>
 804f635:	6a 00                	push   $0x0
 804f637:	ff 75 14             	pushl  0x14(%ebp)
 804f63a:	ff 75 10             	pushl  0x10(%ebp)
 804f63d:	ff 75 0c             	pushl  0xc(%ebp)
 804f640:	e8 f5 12 01 00       	call   806093a <string_at>
 804f645:	83 c4 10             	add    $0x10,%esp
 804f648:	3c 2d                	cmp    $0x2d,%al
 804f64a:	75 0a                	jne    804f656 <strconv__atoi+0x2c3>
 804f64c:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804f652:	f7 d8                	neg    %eax
 804f654:	eb 06                	jmp    804f65c <strconv__atoi+0x2c9>
 804f656:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 804f65c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804f65f:	83 ec 04             	sub    $0x4,%esp
 804f662:	6a 04                	push   $0x4
 804f664:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804f667:	50                   	push   %eax
 804f668:	8d 45 d0             	lea    -0x30(%ebp),%eax
 804f66b:	50                   	push   %eax
 804f66c:	e8 22 c2 00 00       	call   805b893 <opt_ok2>
 804f671:	83 c4 10             	add    $0x10,%esp
 804f674:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804f67a:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804f67d:	89 10                	mov    %edx,(%eax)
 804f67f:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f682:	89 50 04             	mov    %edx,0x4(%eax)
 804f685:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804f688:	89 50 08             	mov    %edx,0x8(%eax)
 804f68b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804f68e:	89 50 0c             	mov    %edx,0xc(%eax)
 804f691:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804f694:	89 50 10             	mov    %edx,0x10(%eax)
 804f697:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f69a:	89 50 14             	mov    %edx,0x14(%eax)
 804f69d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804f6a0:	89 50 18             	mov    %edx,0x18(%eax)
 804f6a3:	eb 68                	jmp    804f70d <strconv__atoi+0x37a>
 804f6a5:	83 ec 0c             	sub    $0xc,%esp
 804f6a8:	6a 00                	push   $0x0
 804f6aa:	6a 0a                	push   $0xa
 804f6ac:	ff 75 14             	pushl  0x14(%ebp)
 804f6af:	ff 75 10             	pushl  0x10(%ebp)
 804f6b2:	ff 75 0c             	pushl  0xc(%ebp)
 804f6b5:	e8 b3 fc ff ff       	call   804f36d <strconv__parse_int>
 804f6ba:	83 c4 20             	add    $0x20,%esp
 804f6bd:	89 45 88             	mov    %eax,-0x78(%ebp)
 804f6c0:	89 55 8c             	mov    %edx,-0x74(%ebp)
 804f6c3:	8b 45 88             	mov    -0x78(%ebp),%eax
 804f6c6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804f6c9:	83 ec 04             	sub    $0x4,%esp
 804f6cc:	6a 04                	push   $0x4
 804f6ce:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804f6d1:	50                   	push   %eax
 804f6d2:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 804f6d5:	50                   	push   %eax
 804f6d6:	e8 b8 c1 00 00       	call   805b893 <opt_ok2>
 804f6db:	83 c4 10             	add    $0x10,%esp
 804f6de:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804f6e4:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804f6e7:	89 10                	mov    %edx,(%eax)
 804f6e9:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804f6ec:	89 50 04             	mov    %edx,0x4(%eax)
 804f6ef:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804f6f2:	89 50 08             	mov    %edx,0x8(%eax)
 804f6f5:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804f6f8:	89 50 0c             	mov    %edx,0xc(%eax)
 804f6fb:	8b 55 e8             	mov    -0x18(%ebp),%edx
 804f6fe:	89 50 10             	mov    %edx,0x10(%eax)
 804f701:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804f704:	89 50 14             	mov    %edx,0x14(%eax)
 804f707:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804f70a:	89 50 18             	mov    %edx,0x18(%eax)
 804f70d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 804f713:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804f716:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804f71d:	74 05                	je     804f724 <strconv__atoi+0x391>
 804f71f:	e8 fc 90 ff ff       	call   8048820 <__stack_chk_fail@plt>
 804f724:	c9                   	leave  
 804f725:	c2 04 00             	ret    $0x4

0804f728 <strconv__underscore_ok>:
 804f728:	55                   	push   %ebp
 804f729:	89 e5                	mov    %esp,%ebp
 804f72b:	83 ec 18             	sub    $0x18,%esp
 804f72e:	c7 45 ec 5e 00 00 00 	movl   $0x5e,-0x14(%ebp)
 804f735:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804f73c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804f73f:	85 c0                	test   %eax,%eax
 804f741:	7e 32                	jle    804f775 <strconv__underscore_ok+0x4d>
 804f743:	6a 00                	push   $0x0
 804f745:	ff 75 10             	pushl  0x10(%ebp)
 804f748:	ff 75 0c             	pushl  0xc(%ebp)
 804f74b:	ff 75 08             	pushl  0x8(%ebp)
 804f74e:	e8 e7 11 01 00       	call   806093a <string_at>
 804f753:	83 c4 10             	add    $0x10,%esp
 804f756:	3c 2d                	cmp    $0x2d,%al
 804f758:	74 17                	je     804f771 <strconv__underscore_ok+0x49>
 804f75a:	6a 00                	push   $0x0
 804f75c:	ff 75 10             	pushl  0x10(%ebp)
 804f75f:	ff 75 0c             	pushl  0xc(%ebp)
 804f762:	ff 75 08             	pushl  0x8(%ebp)
 804f765:	e8 d0 11 01 00       	call   806093a <string_at>
 804f76a:	83 c4 10             	add    $0x10,%esp
 804f76d:	3c 2b                	cmp    $0x2b,%al
 804f76f:	75 04                	jne    804f775 <strconv__underscore_ok+0x4d>
 804f771:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804f775:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804f77c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804f77f:	2b 45 f0             	sub    -0x10(%ebp),%eax
 804f782:	83 f8 01             	cmp    $0x1,%eax
 804f785:	0f 8e b6 01 00 00    	jle    804f941 <strconv__underscore_ok+0x219>
 804f78b:	ff 75 f0             	pushl  -0x10(%ebp)
 804f78e:	ff 75 10             	pushl  0x10(%ebp)
 804f791:	ff 75 0c             	pushl  0xc(%ebp)
 804f794:	ff 75 08             	pushl  0x8(%ebp)
 804f797:	e8 9e 11 01 00       	call   806093a <string_at>
 804f79c:	83 c4 10             	add    $0x10,%esp
 804f79f:	3c 30                	cmp    $0x30,%al
 804f7a1:	0f 85 9a 01 00 00    	jne    804f941 <strconv__underscore_ok+0x219>
 804f7a7:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804f7aa:	83 c0 01             	add    $0x1,%eax
 804f7ad:	50                   	push   %eax
 804f7ae:	ff 75 10             	pushl  0x10(%ebp)
 804f7b1:	ff 75 0c             	pushl  0xc(%ebp)
 804f7b4:	ff 75 08             	pushl  0x8(%ebp)
 804f7b7:	e8 7e 11 01 00       	call   806093a <string_at>
 804f7bc:	83 c4 10             	add    $0x10,%esp
 804f7bf:	0f b6 c0             	movzbl %al,%eax
 804f7c2:	83 ec 0c             	sub    $0xc,%esp
 804f7c5:	50                   	push   %eax
 804f7c6:	e8 f8 f4 ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804f7cb:	83 c4 10             	add    $0x10,%esp
 804f7ce:	3c 62                	cmp    $0x62,%al
 804f7d0:	74 5a                	je     804f82c <strconv__underscore_ok+0x104>
 804f7d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804f7d5:	83 c0 01             	add    $0x1,%eax
 804f7d8:	50                   	push   %eax
 804f7d9:	ff 75 10             	pushl  0x10(%ebp)
 804f7dc:	ff 75 0c             	pushl  0xc(%ebp)
 804f7df:	ff 75 08             	pushl  0x8(%ebp)
 804f7e2:	e8 53 11 01 00       	call   806093a <string_at>
 804f7e7:	83 c4 10             	add    $0x10,%esp
 804f7ea:	0f b6 c0             	movzbl %al,%eax
 804f7ed:	83 ec 0c             	sub    $0xc,%esp
 804f7f0:	50                   	push   %eax
 804f7f1:	e8 cd f4 ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804f7f6:	83 c4 10             	add    $0x10,%esp
 804f7f9:	3c 6f                	cmp    $0x6f,%al
 804f7fb:	74 2f                	je     804f82c <strconv__underscore_ok+0x104>
 804f7fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804f800:	83 c0 01             	add    $0x1,%eax
 804f803:	50                   	push   %eax
 804f804:	ff 75 10             	pushl  0x10(%ebp)
 804f807:	ff 75 0c             	pushl  0xc(%ebp)
 804f80a:	ff 75 08             	pushl  0x8(%ebp)
 804f80d:	e8 28 11 01 00       	call   806093a <string_at>
 804f812:	83 c4 10             	add    $0x10,%esp
 804f815:	0f b6 c0             	movzbl %al,%eax
 804f818:	83 ec 0c             	sub    $0xc,%esp
 804f81b:	50                   	push   %eax
 804f81c:	e8 a2 f4 ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804f821:	83 c4 10             	add    $0x10,%esp
 804f824:	3c 78                	cmp    $0x78,%al
 804f826:	0f 85 15 01 00 00    	jne    804f941 <strconv__underscore_ok+0x219>
 804f82c:	c7 45 ec 30 00 00 00 	movl   $0x30,-0x14(%ebp)
 804f833:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804f836:	83 c0 01             	add    $0x1,%eax
 804f839:	50                   	push   %eax
 804f83a:	ff 75 10             	pushl  0x10(%ebp)
 804f83d:	ff 75 0c             	pushl  0xc(%ebp)
 804f840:	ff 75 08             	pushl  0x8(%ebp)
 804f843:	e8 f2 10 01 00       	call   806093a <string_at>
 804f848:	83 c4 10             	add    $0x10,%esp
 804f84b:	0f b6 c0             	movzbl %al,%eax
 804f84e:	83 ec 0c             	sub    $0xc,%esp
 804f851:	50                   	push   %eax
 804f852:	e8 6c f4 ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804f857:	83 c4 10             	add    $0x10,%esp
 804f85a:	3c 78                	cmp    $0x78,%al
 804f85c:	0f 94 c0             	sete   %al
 804f85f:	0f b6 c0             	movzbl %al,%eax
 804f862:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804f865:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
 804f869:	e9 d3 00 00 00       	jmp    804f941 <strconv__underscore_ok+0x219>
 804f86e:	ff 75 f0             	pushl  -0x10(%ebp)
 804f871:	ff 75 10             	pushl  0x10(%ebp)
 804f874:	ff 75 0c             	pushl  0xc(%ebp)
 804f877:	ff 75 08             	pushl  0x8(%ebp)
 804f87a:	e8 bb 10 01 00       	call   806093a <string_at>
 804f87f:	83 c4 10             	add    $0x10,%esp
 804f882:	3c 2f                	cmp    $0x2f,%al
 804f884:	76 18                	jbe    804f89e <strconv__underscore_ok+0x176>
 804f886:	ff 75 f0             	pushl  -0x10(%ebp)
 804f889:	ff 75 10             	pushl  0x10(%ebp)
 804f88c:	ff 75 0c             	pushl  0xc(%ebp)
 804f88f:	ff 75 08             	pushl  0x8(%ebp)
 804f892:	e8 a3 10 01 00       	call   806093a <string_at>
 804f897:	83 c4 10             	add    $0x10,%esp
 804f89a:	3c 39                	cmp    $0x39,%al
 804f89c:	76 54                	jbe    804f8f2 <strconv__underscore_ok+0x1ca>
 804f89e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804f8a2:	74 57                	je     804f8fb <strconv__underscore_ok+0x1d3>
 804f8a4:	ff 75 f0             	pushl  -0x10(%ebp)
 804f8a7:	ff 75 10             	pushl  0x10(%ebp)
 804f8aa:	ff 75 0c             	pushl  0xc(%ebp)
 804f8ad:	ff 75 08             	pushl  0x8(%ebp)
 804f8b0:	e8 85 10 01 00       	call   806093a <string_at>
 804f8b5:	83 c4 10             	add    $0x10,%esp
 804f8b8:	0f b6 c0             	movzbl %al,%eax
 804f8bb:	83 ec 0c             	sub    $0xc,%esp
 804f8be:	50                   	push   %eax
 804f8bf:	e8 ff f3 ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804f8c4:	83 c4 10             	add    $0x10,%esp
 804f8c7:	3c 60                	cmp    $0x60,%al
 804f8c9:	76 30                	jbe    804f8fb <strconv__underscore_ok+0x1d3>
 804f8cb:	ff 75 f0             	pushl  -0x10(%ebp)
 804f8ce:	ff 75 10             	pushl  0x10(%ebp)
 804f8d1:	ff 75 0c             	pushl  0xc(%ebp)
 804f8d4:	ff 75 08             	pushl  0x8(%ebp)
 804f8d7:	e8 5e 10 01 00       	call   806093a <string_at>
 804f8dc:	83 c4 10             	add    $0x10,%esp
 804f8df:	0f b6 c0             	movzbl %al,%eax
 804f8e2:	83 ec 0c             	sub    $0xc,%esp
 804f8e5:	50                   	push   %eax
 804f8e6:	e8 d8 f3 ff ff       	call   804ecc3 <strconv__byte_to_lower>
 804f8eb:	83 c4 10             	add    $0x10,%esp
 804f8ee:	3c 66                	cmp    $0x66,%al
 804f8f0:	77 09                	ja     804f8fb <strconv__underscore_ok+0x1d3>
 804f8f2:	c7 45 ec 30 00 00 00 	movl   $0x30,-0x14(%ebp)
 804f8f9:	eb 42                	jmp    804f93d <strconv__underscore_ok+0x215>
 804f8fb:	ff 75 f0             	pushl  -0x10(%ebp)
 804f8fe:	ff 75 10             	pushl  0x10(%ebp)
 804f901:	ff 75 0c             	pushl  0xc(%ebp)
 804f904:	ff 75 08             	pushl  0x8(%ebp)
 804f907:	e8 2e 10 01 00       	call   806093a <string_at>
 804f90c:	83 c4 10             	add    $0x10,%esp
 804f90f:	3c 5f                	cmp    $0x5f,%al
 804f911:	75 16                	jne    804f929 <strconv__underscore_ok+0x201>
 804f913:	83 7d ec 30          	cmpl   $0x30,-0x14(%ebp)
 804f917:	74 07                	je     804f920 <strconv__underscore_ok+0x1f8>
 804f919:	b8 00 00 00 00       	mov    $0x0,%eax
 804f91e:	eb 37                	jmp    804f957 <strconv__underscore_ok+0x22f>
 804f920:	c7 45 ec 5f 00 00 00 	movl   $0x5f,-0x14(%ebp)
 804f927:	eb 14                	jmp    804f93d <strconv__underscore_ok+0x215>
 804f929:	83 7d ec 5f          	cmpl   $0x5f,-0x14(%ebp)
 804f92d:	75 07                	jne    804f936 <strconv__underscore_ok+0x20e>
 804f92f:	b8 00 00 00 00       	mov    $0x0,%eax
 804f934:	eb 21                	jmp    804f957 <strconv__underscore_ok+0x22f>
 804f936:	c7 45 ec 21 00 00 00 	movl   $0x21,-0x14(%ebp)
 804f93d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804f941:	8b 45 0c             	mov    0xc(%ebp),%eax
 804f944:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804f947:	0f 8f 21 ff ff ff    	jg     804f86e <strconv__underscore_ok+0x146>
 804f94d:	83 7d ec 5f          	cmpl   $0x5f,-0x14(%ebp)
 804f951:	0f 95 c0             	setne  %al
 804f954:	0f b6 c0             	movzbl %al,%eax
 804f957:	c9                   	leave  
 804f958:	c3                   	ret    

0804f959 <strconv__Dec32_get_string_32>:
 804f959:	55                   	push   %ebp
 804f95a:	89 e5                	mov    %esp,%ebp
 804f95c:	83 ec 78             	sub    $0x78,%esp
 804f95f:	8b 45 08             	mov    0x8(%ebp),%eax
 804f962:	89 45 94             	mov    %eax,-0x6c(%ebp)
 804f965:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804f96b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804f96e:	31 c0                	xor    %eax,%eax
 804f970:	8b 45 18             	mov    0x18(%ebp),%eax
 804f973:	83 c0 01             	add    $0x1,%eax
 804f976:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804f979:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804f97c:	83 c0 01             	add    $0x1,%eax
 804f97f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804f982:	8b 45 0c             	mov    0xc(%ebp),%eax
 804f985:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804f988:	83 ec 0c             	sub    $0xc,%esp
 804f98b:	ff 75 a4             	pushl  -0x5c(%ebp)
 804f98e:	e8 87 53 00 00       	call   8054d1a <strconv__decimal_len_32>
 804f993:	83 c4 10             	add    $0x10,%esp
 804f996:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804f999:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804f99c:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804f99f:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 804f9a6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804f9a9:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 804f9ac:	7e 09                	jle    804f9b7 <strconv__Dec32_get_string_32+0x5e>
 804f9ae:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804f9b1:	2b 45 a8             	sub    -0x58(%ebp),%eax
 804f9b4:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804f9b7:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804f9ba:	8d 50 07             	lea    0x7(%eax),%edx
 804f9bd:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804f9c0:	83 ec 0c             	sub    $0xc,%esp
 804f9c3:	6a 00                	push   $0x0
 804f9c5:	6a 01                	push   $0x1
 804f9c7:	6a 00                	push   $0x0
 804f9c9:	52                   	push   %edx
 804f9ca:	50                   	push   %eax
 804f9cb:	e8 99 60 00 00       	call   8055a69 <__new_array_with_default>
 804f9d0:	83 c4 1c             	add    $0x1c,%esp
 804f9d3:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 804f9da:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 804f9de:	74 1e                	je     804f9fe <strconv__Dec32_get_string_32+0xa5>
 804f9e0:	c6 45 e9 2d          	movb   $0x2d,-0x17(%ebp)
 804f9e4:	83 ec 04             	sub    $0x4,%esp
 804f9e7:	8d 45 e9             	lea    -0x17(%ebp),%eax
 804f9ea:	50                   	push   %eax
 804f9eb:	ff 75 b0             	pushl  -0x50(%ebp)
 804f9ee:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804f9f1:	50                   	push   %eax
 804f9f2:	e8 25 6f 00 00       	call   805691c <array_set>
 804f9f7:	83 c4 10             	add    $0x10,%esp
 804f9fa:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804f9fe:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 804fa05:	83 7d a8 01          	cmpl   $0x1,-0x58(%ebp)
 804fa09:	7f 07                	jg     804fa12 <strconv__Dec32_get_string_32+0xb9>
 804fa0b:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)
 804fa12:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804fa15:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 804fa18:	7d 78                	jge    804fa92 <strconv__Dec32_get_string_32+0x139>
 804fa1a:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804fa1d:	2b 45 c0             	sub    -0x40(%ebp),%eax
 804fa20:	83 e8 01             	sub    $0x1,%eax
 804fa23:	83 ec 0c             	sub    $0xc,%esp
 804fa26:	50                   	push   %eax
 804fa27:	ff 35 3c 31 07 08    	pushl  0x807313c
 804fa2d:	ff 35 38 31 07 08    	pushl  0x8073138
 804fa33:	ff 35 34 31 07 08    	pushl  0x8073134
 804fa39:	ff 35 30 31 07 08    	pushl  0x8073130
 804fa3f:	e8 76 68 00 00       	call   80562ba <array_get>
 804fa44:	83 c4 20             	add    $0x20,%esp
 804fa47:	8b 10                	mov    (%eax),%edx
 804fa49:	89 d0                	mov    %edx,%eax
 804fa4b:	c1 e0 02             	shl    $0x2,%eax
 804fa4e:	01 d0                	add    %edx,%eax
 804fa50:	01 45 a4             	add    %eax,-0x5c(%ebp)
 804fa53:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804fa56:	2b 45 c0             	sub    -0x40(%ebp),%eax
 804fa59:	83 ec 0c             	sub    $0xc,%esp
 804fa5c:	50                   	push   %eax
 804fa5d:	ff 35 3c 31 07 08    	pushl  0x807313c
 804fa63:	ff 35 38 31 07 08    	pushl  0x8073138
 804fa69:	ff 35 34 31 07 08    	pushl  0x8073134
 804fa6f:	ff 35 30 31 07 08    	pushl  0x8073130
 804fa75:	e8 40 68 00 00       	call   80562ba <array_get>
 804fa7a:	83 c4 20             	add    $0x20,%esp
 804fa7d:	8b 08                	mov    (%eax),%ecx
 804fa7f:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804fa82:	ba 00 00 00 00       	mov    $0x0,%edx
 804fa87:	f7 f1                	div    %ecx
 804fa89:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804fa8c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804fa8f:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804fa92:	8b 55 b0             	mov    -0x50(%ebp),%edx
 804fa95:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804fa98:	01 d0                	add    %edx,%eax
 804fa9a:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804fa9d:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 804faa4:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804faa7:	2b 45 b4             	sub    -0x4c(%ebp),%eax
 804faaa:	83 e8 01             	sub    $0x1,%eax
 804faad:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 804fab0:	7e 5a                	jle    804fb0c <strconv__Dec32_get_string_32+0x1b3>
 804fab2:	8b 4d a4             	mov    -0x5c(%ebp),%ecx
 804fab5:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804faba:	89 c8                	mov    %ecx,%eax
 804fabc:	f7 e2                	mul    %edx
 804fabe:	c1 ea 03             	shr    $0x3,%edx
 804fac1:	89 d0                	mov    %edx,%eax
 804fac3:	c1 e0 02             	shl    $0x2,%eax
 804fac6:	01 d0                	add    %edx,%eax
 804fac8:	01 c0                	add    %eax,%eax
 804faca:	29 c1                	sub    %eax,%ecx
 804facc:	89 ca                	mov    %ecx,%edx
 804face:	89 d0                	mov    %edx,%eax
 804fad0:	83 c0 30             	add    $0x30,%eax
 804fad3:	88 45 ea             	mov    %al,-0x16(%ebp)
 804fad6:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804fad9:	2b 45 b8             	sub    -0x48(%ebp),%eax
 804fadc:	83 ec 04             	sub    $0x4,%esp
 804fadf:	8d 55 ea             	lea    -0x16(%ebp),%edx
 804fae2:	52                   	push   %edx
 804fae3:	50                   	push   %eax
 804fae4:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fae7:	50                   	push   %eax
 804fae8:	e8 2f 6e 00 00       	call   805691c <array_set>
 804faed:	83 c4 10             	add    $0x10,%esp
 804faf0:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804faf3:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804faf8:	f7 e2                	mul    %edx
 804fafa:	89 d0                	mov    %edx,%eax
 804fafc:	c1 e8 03             	shr    $0x3,%eax
 804faff:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804fb02:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fb06:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 804fb0a:	eb 98                	jmp    804faa4 <strconv__Dec32_get_string_32+0x14b>
 804fb0c:	90                   	nop
 804fb0d:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
 804fb11:	7e 26                	jle    804fb39 <strconv__Dec32_get_string_32+0x1e0>
 804fb13:	c6 45 eb 2e          	movb   $0x2e,-0x15(%ebp)
 804fb17:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804fb1a:	2b 45 b8             	sub    -0x48(%ebp),%eax
 804fb1d:	83 ec 04             	sub    $0x4,%esp
 804fb20:	8d 55 eb             	lea    -0x15(%ebp),%edx
 804fb23:	52                   	push   %edx
 804fb24:	50                   	push   %eax
 804fb25:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fb28:	50                   	push   %eax
 804fb29:	e8 ee 6d 00 00       	call   805691c <array_set>
 804fb2e:	83 c4 10             	add    $0x10,%esp
 804fb31:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 804fb35:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fb39:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804fb3c:	2b 45 b8             	sub    -0x48(%ebp),%eax
 804fb3f:	85 c0                	test   %eax,%eax
 804fb41:	78 42                	js     804fb85 <strconv__Dec32_get_string_32+0x22c>
 804fb43:	8b 4d a4             	mov    -0x5c(%ebp),%ecx
 804fb46:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804fb4b:	89 c8                	mov    %ecx,%eax
 804fb4d:	f7 e2                	mul    %edx
 804fb4f:	c1 ea 03             	shr    $0x3,%edx
 804fb52:	89 d0                	mov    %edx,%eax
 804fb54:	c1 e0 02             	shl    $0x2,%eax
 804fb57:	01 d0                	add    %edx,%eax
 804fb59:	01 c0                	add    %eax,%eax
 804fb5b:	29 c1                	sub    %eax,%ecx
 804fb5d:	89 ca                	mov    %ecx,%edx
 804fb5f:	89 d0                	mov    %edx,%eax
 804fb61:	83 c0 30             	add    $0x30,%eax
 804fb64:	88 45 ec             	mov    %al,-0x14(%ebp)
 804fb67:	8b 45 cc             	mov    -0x34(%ebp),%eax
 804fb6a:	2b 45 b8             	sub    -0x48(%ebp),%eax
 804fb6d:	83 ec 04             	sub    $0x4,%esp
 804fb70:	8d 55 ec             	lea    -0x14(%ebp),%edx
 804fb73:	52                   	push   %edx
 804fb74:	50                   	push   %eax
 804fb75:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fb78:	50                   	push   %eax
 804fb79:	e8 9e 6d 00 00       	call   805691c <array_set>
 804fb7e:	83 c4 10             	add    $0x10,%esp
 804fb81:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fb85:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)
 804fb89:	7e 27                	jle    804fbb2 <strconv__Dec32_get_string_32+0x259>
 804fb8b:	c6 45 ed 30          	movb   $0x30,-0x13(%ebp)
 804fb8f:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804fb92:	8d 50 01             	lea    0x1(%eax),%edx
 804fb95:	89 55 b0             	mov    %edx,-0x50(%ebp)
 804fb98:	83 ec 04             	sub    $0x4,%esp
 804fb9b:	8d 55 ed             	lea    -0x13(%ebp),%edx
 804fb9e:	52                   	push   %edx
 804fb9f:	50                   	push   %eax
 804fba0:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fba3:	50                   	push   %eax
 804fba4:	e8 73 6d 00 00       	call   805691c <array_set>
 804fba9:	83 c4 10             	add    $0x10,%esp
 804fbac:	83 6d ac 01          	subl   $0x1,-0x54(%ebp)
 804fbb0:	eb d3                	jmp    804fb85 <strconv__Dec32_get_string_32+0x22c>
 804fbb2:	90                   	nop
 804fbb3:	c6 45 ee 65          	movb   $0x65,-0x12(%ebp)
 804fbb7:	83 ec 04             	sub    $0x4,%esp
 804fbba:	8d 45 ee             	lea    -0x12(%ebp),%eax
 804fbbd:	50                   	push   %eax
 804fbbe:	ff 75 b0             	pushl  -0x50(%ebp)
 804fbc1:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fbc4:	50                   	push   %eax
 804fbc5:	e8 52 6d 00 00       	call   805691c <array_set>
 804fbca:	83 c4 10             	add    $0x10,%esp
 804fbcd:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fbd1:	8b 55 10             	mov    0x10(%ebp),%edx
 804fbd4:	8b 45 c8             	mov    -0x38(%ebp),%eax
 804fbd7:	01 d0                	add    %edx,%eax
 804fbd9:	83 e8 01             	sub    $0x1,%eax
 804fbdc:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804fbdf:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
 804fbe3:	79 23                	jns    804fc08 <strconv__Dec32_get_string_32+0x2af>
 804fbe5:	c6 45 ef 2d          	movb   $0x2d,-0x11(%ebp)
 804fbe9:	83 ec 04             	sub    $0x4,%esp
 804fbec:	8d 45 ef             	lea    -0x11(%ebp),%eax
 804fbef:	50                   	push   %eax
 804fbf0:	ff 75 b0             	pushl  -0x50(%ebp)
 804fbf3:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fbf6:	50                   	push   %eax
 804fbf7:	e8 20 6d 00 00       	call   805691c <array_set>
 804fbfc:	83 c4 10             	add    $0x10,%esp
 804fbff:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fc03:	f7 5d bc             	negl   -0x44(%ebp)
 804fc06:	eb 1e                	jmp    804fc26 <strconv__Dec32_get_string_32+0x2cd>
 804fc08:	c6 45 f0 2b          	movb   $0x2b,-0x10(%ebp)
 804fc0c:	83 ec 04             	sub    $0x4,%esp
 804fc0f:	8d 45 f0             	lea    -0x10(%ebp),%eax
 804fc12:	50                   	push   %eax
 804fc13:	ff 75 b0             	pushl  -0x50(%ebp)
 804fc16:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fc19:	50                   	push   %eax
 804fc1a:	e8 fd 6c 00 00       	call   805691c <array_set>
 804fc1f:	83 c4 10             	add    $0x10,%esp
 804fc22:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fc26:	8b 4d bc             	mov    -0x44(%ebp),%ecx
 804fc29:	ba 67 66 66 66       	mov    $0x66666667,%edx
 804fc2e:	89 c8                	mov    %ecx,%eax
 804fc30:	f7 ea                	imul   %edx
 804fc32:	c1 fa 02             	sar    $0x2,%edx
 804fc35:	89 c8                	mov    %ecx,%eax
 804fc37:	c1 f8 1f             	sar    $0x1f,%eax
 804fc3a:	29 c2                	sub    %eax,%edx
 804fc3c:	89 d0                	mov    %edx,%eax
 804fc3e:	c1 e0 02             	shl    $0x2,%eax
 804fc41:	01 d0                	add    %edx,%eax
 804fc43:	01 c0                	add    %eax,%eax
 804fc45:	29 c1                	sub    %eax,%ecx
 804fc47:	89 c8                	mov    %ecx,%eax
 804fc49:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804fc4c:	8b 4d bc             	mov    -0x44(%ebp),%ecx
 804fc4f:	ba 67 66 66 66       	mov    $0x66666667,%edx
 804fc54:	89 c8                	mov    %ecx,%eax
 804fc56:	f7 ea                	imul   %edx
 804fc58:	c1 fa 02             	sar    $0x2,%edx
 804fc5b:	89 c8                	mov    %ecx,%eax
 804fc5d:	c1 f8 1f             	sar    $0x1f,%eax
 804fc60:	29 c2                	sub    %eax,%edx
 804fc62:	89 d0                	mov    %edx,%eax
 804fc64:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804fc67:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804fc6a:	83 c0 30             	add    $0x30,%eax
 804fc6d:	88 45 f1             	mov    %al,-0xf(%ebp)
 804fc70:	83 ec 04             	sub    $0x4,%esp
 804fc73:	8d 45 f1             	lea    -0xf(%ebp),%eax
 804fc76:	50                   	push   %eax
 804fc77:	ff 75 b0             	pushl  -0x50(%ebp)
 804fc7a:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fc7d:	50                   	push   %eax
 804fc7e:	e8 99 6c 00 00       	call   805691c <array_set>
 804fc83:	83 c4 10             	add    $0x10,%esp
 804fc86:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fc8a:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804fc8d:	83 c0 30             	add    $0x30,%eax
 804fc90:	88 45 f2             	mov    %al,-0xe(%ebp)
 804fc93:	83 ec 04             	sub    $0x4,%esp
 804fc96:	8d 45 f2             	lea    -0xe(%ebp),%eax
 804fc99:	50                   	push   %eax
 804fc9a:	ff 75 b0             	pushl  -0x50(%ebp)
 804fc9d:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fca0:	50                   	push   %eax
 804fca1:	e8 76 6c 00 00       	call   805691c <array_set>
 804fca6:	83 c4 10             	add    $0x10,%esp
 804fca9:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 804fcad:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
 804fcb1:	83 ec 04             	sub    $0x4,%esp
 804fcb4:	8d 45 f3             	lea    -0xd(%ebp),%eax
 804fcb7:	50                   	push   %eax
 804fcb8:	ff 75 b0             	pushl  -0x50(%ebp)
 804fcbb:	8d 45 d8             	lea    -0x28(%ebp),%eax
 804fcbe:	50                   	push   %eax
 804fcbf:	e8 58 6c 00 00       	call   805691c <array_set>
 804fcc4:	83 c4 10             	add    $0x10,%esp
 804fcc7:	83 ec 0c             	sub    $0xc,%esp
 804fcca:	6a 00                	push   $0x0
 804fccc:	ff 75 e4             	pushl  -0x1c(%ebp)
 804fccf:	ff 75 e0             	pushl  -0x20(%ebp)
 804fcd2:	ff 75 dc             	pushl  -0x24(%ebp)
 804fcd5:	ff 75 d8             	pushl  -0x28(%ebp)
 804fcd8:	e8 dd 65 00 00       	call   80562ba <array_get>
 804fcdd:	83 c4 20             	add    $0x20,%esp
 804fce0:	89 c2                	mov    %eax,%edx
 804fce2:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804fce5:	83 ec 04             	sub    $0x4,%esp
 804fce8:	ff 75 b0             	pushl  -0x50(%ebp)
 804fceb:	52                   	push   %edx
 804fcec:	50                   	push   %eax
 804fced:	e8 08 d6 00 00       	call   805d2fa <tos>
 804fcf2:	83 c4 0c             	add    $0xc,%esp
 804fcf5:	8b 45 94             	mov    -0x6c(%ebp),%eax
 804fcf8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804fcfb:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804fd02:	74 05                	je     804fd09 <strconv__Dec32_get_string_32+0x3b0>
 804fd04:	e8 17 8b ff ff       	call   8048820 <__stack_chk_fail@plt>
 804fd09:	c9                   	leave  
 804fd0a:	c2 04 00             	ret    $0x4

0804fd0d <strconv__f32_to_decimal_exact_int>:
 804fd0d:	55                   	push   %ebp
 804fd0e:	89 e5                	mov    %esp,%ebp
 804fd10:	83 ec 20             	sub    $0x20,%esp
 804fd13:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 804fd1a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804fd21:	8b 45 10             	mov    0x10(%ebp),%eax
 804fd24:	83 e8 7f             	sub    $0x7f,%eax
 804fd27:	89 45 ec             	mov    %eax,-0x14(%ebp)
 804fd2a:	a1 90 32 07 08       	mov    0x8073290,%eax
 804fd2f:	39 45 ec             	cmp    %eax,-0x14(%ebp)
 804fd32:	76 1d                	jbe    804fd51 <strconv__f32_to_decimal_exact_int+0x44>
 804fd34:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804fd37:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804fd3a:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804fd3d:	89 01                	mov    %eax,(%ecx)
 804fd3f:	89 51 04             	mov    %edx,0x4(%ecx)
 804fd42:	8b 45 08             	mov    0x8(%ebp),%eax
 804fd45:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 804fd4c:	e9 a6 00 00 00       	jmp    804fdf7 <strconv__f32_to_decimal_exact_int+0xea>
 804fd51:	a1 90 32 07 08       	mov    0x8073290,%eax
 804fd56:	2b 45 ec             	sub    -0x14(%ebp),%eax
 804fd59:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804fd5c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804fd5f:	0d 00 00 80 00       	or     $0x800000,%eax
 804fd64:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804fd67:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804fd6a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804fd6d:	89 c1                	mov    %eax,%ecx
 804fd6f:	d3 ea                	shr    %cl,%edx
 804fd71:	89 d0                	mov    %edx,%eax
 804fd73:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804fd76:	8b 55 f8             	mov    -0x8(%ebp),%edx
 804fd79:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804fd7c:	89 c1                	mov    %eax,%ecx
 804fd7e:	d3 e2                	shl    %cl,%edx
 804fd80:	89 d0                	mov    %edx,%eax
 804fd82:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804fd85:	74 1a                	je     804fda1 <strconv__f32_to_decimal_exact_int+0x94>
 804fd87:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804fd8a:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804fd8d:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804fd90:	89 01                	mov    %eax,(%ecx)
 804fd92:	89 51 04             	mov    %edx,0x4(%ecx)
 804fd95:	8b 45 08             	mov    0x8(%ebp),%eax
 804fd98:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 804fd9f:	eb 56                	jmp    804fdf7 <strconv__f32_to_decimal_exact_int+0xea>
 804fda1:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 804fda4:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804fda9:	89 c8                	mov    %ecx,%eax
 804fdab:	f7 e2                	mul    %edx
 804fdad:	c1 ea 03             	shr    $0x3,%edx
 804fdb0:	89 d0                	mov    %edx,%eax
 804fdb2:	c1 e0 02             	shl    $0x2,%eax
 804fdb5:	01 d0                	add    %edx,%eax
 804fdb7:	01 c0                	add    %eax,%eax
 804fdb9:	29 c1                	sub    %eax,%ecx
 804fdbb:	89 ca                	mov    %ecx,%edx
 804fdbd:	85 d2                	test   %edx,%edx
 804fdbf:	75 1d                	jne    804fdde <strconv__f32_to_decimal_exact_int+0xd1>
 804fdc1:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804fdc4:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804fdc9:	f7 e2                	mul    %edx
 804fdcb:	89 d0                	mov    %edx,%eax
 804fdcd:	c1 e8 03             	shr    $0x3,%eax
 804fdd0:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804fdd3:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804fdd6:	83 c0 01             	add    $0x1,%eax
 804fdd9:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804fddc:	eb c3                	jmp    804fda1 <strconv__f32_to_decimal_exact_int+0x94>
 804fdde:	90                   	nop
 804fddf:	8b 4d 08             	mov    0x8(%ebp),%ecx
 804fde2:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804fde5:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804fde8:	89 01                	mov    %eax,(%ecx)
 804fdea:	89 51 04             	mov    %edx,0x4(%ecx)
 804fded:	8b 45 08             	mov    0x8(%ebp),%eax
 804fdf0:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 804fdf7:	8b 45 08             	mov    0x8(%ebp),%eax
 804fdfa:	c9                   	leave  
 804fdfb:	c2 04 00             	ret    $0x4

0804fdfe <strconv__f32_to_decimal>:
 804fdfe:	55                   	push   %ebp
 804fdff:	89 e5                	mov    %esp,%ebp
 804fe01:	53                   	push   %ebx
 804fe02:	83 ec 74             	sub    $0x74,%esp
 804fe05:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
 804fe0c:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
 804fe13:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804fe17:	75 19                	jne    804fe32 <strconv__f32_to_decimal+0x34>
 804fe19:	a1 90 32 07 08       	mov    0x8073290,%eax
 804fe1e:	ba 80 ff ff ff       	mov    $0xffffff80,%edx
 804fe23:	29 c2                	sub    %eax,%edx
 804fe25:	89 d0                	mov    %edx,%eax
 804fe27:	89 45 98             	mov    %eax,-0x68(%ebp)
 804fe2a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804fe2d:	89 45 9c             	mov    %eax,-0x64(%ebp)
 804fe30:	eb 2a                	jmp    804fe5c <strconv__f32_to_decimal+0x5e>
 804fe32:	a1 90 32 07 08       	mov    0x8073290,%eax
 804fe37:	8b 55 10             	mov    0x10(%ebp),%edx
 804fe3a:	29 c2                	sub    %eax,%edx
 804fe3c:	89 d0                	mov    %edx,%eax
 804fe3e:	2d 81 00 00 00       	sub    $0x81,%eax
 804fe43:	89 45 98             	mov    %eax,-0x68(%ebp)
 804fe46:	a1 90 32 07 08       	mov    0x8073290,%eax
 804fe4b:	ba 01 00 00 00       	mov    $0x1,%edx
 804fe50:	89 c1                	mov    %eax,%ecx
 804fe52:	d3 e2                	shl    %cl,%edx
 804fe54:	89 d0                	mov    %edx,%eax
 804fe56:	0b 45 0c             	or     0xc(%ebp),%eax
 804fe59:	89 45 9c             	mov    %eax,-0x64(%ebp)
 804fe5c:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804fe5f:	83 e0 01             	and    $0x1,%eax
 804fe62:	85 c0                	test   %eax,%eax
 804fe64:	0f 94 c0             	sete   %al
 804fe67:	0f b6 c0             	movzbl %al,%eax
 804fe6a:	89 45 c0             	mov    %eax,-0x40(%ebp)
 804fe6d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804fe70:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 804fe73:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804fe76:	c1 e0 02             	shl    $0x2,%eax
 804fe79:	89 45 c8             	mov    %eax,-0x38(%ebp)
 804fe7c:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804fe7f:	c1 e0 02             	shl    $0x2,%eax
 804fe82:	83 c0 02             	add    $0x2,%eax
 804fe85:	89 45 cc             	mov    %eax,-0x34(%ebp)
 804fe88:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804fe8c:	75 06                	jne    804fe94 <strconv__f32_to_decimal+0x96>
 804fe8e:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
 804fe92:	77 07                	ja     804fe9b <strconv__f32_to_decimal+0x9d>
 804fe94:	b8 01 00 00 00       	mov    $0x1,%eax
 804fe99:	eb 05                	jmp    804fea0 <strconv__f32_to_decimal+0xa2>
 804fe9b:	b8 00 00 00 00       	mov    $0x0,%eax
 804fea0:	83 ec 0c             	sub    $0xc,%esp
 804fea3:	50                   	push   %eax
 804fea4:	e8 7b 4d 00 00       	call   8054c24 <strconv__bool_to_u32>
 804fea9:	83 c4 10             	add    $0x10,%esp
 804feac:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804feaf:	8b 45 9c             	mov    -0x64(%ebp),%eax
 804feb2:	c1 e0 02             	shl    $0x2,%eax
 804feb5:	2b 45 d0             	sub    -0x30(%ebp),%eax
 804feb8:	83 e8 01             	sub    $0x1,%eax
 804febb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804febe:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 804fec5:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)
 804fecc:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)
 804fed3:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 804feda:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 804fee1:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 804fee8:	c6 45 97 00          	movb   $0x0,-0x69(%ebp)
 804feec:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)
 804fef0:	0f 88 92 01 00 00    	js     8050088 <strconv__f32_to_decimal+0x28a>
 804fef6:	83 ec 0c             	sub    $0xc,%esp
 804fef9:	ff 75 98             	pushl  -0x68(%ebp)
 804fefc:	e8 ec 50 00 00       	call   8054fed <strconv__log10_pow2>
 804ff01:	83 c4 10             	add    $0x10,%esp
 804ff04:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804ff07:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ff0a:	89 45 ac             	mov    %eax,-0x54(%ebp)
 804ff0d:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ff10:	83 ec 0c             	sub    $0xc,%esp
 804ff13:	50                   	push   %eax
 804ff14:	e8 c8 51 00 00       	call   80550e1 <strconv__pow5_bits>
 804ff19:	83 c4 10             	add    $0x10,%esp
 804ff1c:	83 c0 3a             	add    $0x3a,%eax
 804ff1f:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804ff22:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ff25:	2b 45 98             	sub    -0x68(%ebp),%eax
 804ff28:	89 c2                	mov    %eax,%edx
 804ff2a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804ff2d:	01 d0                	add    %edx,%eax
 804ff2f:	89 45 e0             	mov    %eax,-0x20(%ebp)
 804ff32:	83 ec 04             	sub    $0x4,%esp
 804ff35:	ff 75 e0             	pushl  -0x20(%ebp)
 804ff38:	ff 75 d8             	pushl  -0x28(%ebp)
 804ff3b:	ff 75 c8             	pushl  -0x38(%ebp)
 804ff3e:	e8 8f 4f 00 00       	call   8054ed2 <strconv__mul_pow5_invdiv_pow2>
 804ff43:	83 c4 10             	add    $0x10,%esp
 804ff46:	89 45 a0             	mov    %eax,-0x60(%ebp)
 804ff49:	83 ec 04             	sub    $0x4,%esp
 804ff4c:	ff 75 e0             	pushl  -0x20(%ebp)
 804ff4f:	ff 75 d8             	pushl  -0x28(%ebp)
 804ff52:	ff 75 cc             	pushl  -0x34(%ebp)
 804ff55:	e8 78 4f 00 00       	call   8054ed2 <strconv__mul_pow5_invdiv_pow2>
 804ff5a:	83 c4 10             	add    $0x10,%esp
 804ff5d:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 804ff60:	83 ec 04             	sub    $0x4,%esp
 804ff63:	ff 75 e0             	pushl  -0x20(%ebp)
 804ff66:	ff 75 d8             	pushl  -0x28(%ebp)
 804ff69:	ff 75 d4             	pushl  -0x2c(%ebp)
 804ff6c:	e8 61 4f 00 00       	call   8054ed2 <strconv__mul_pow5_invdiv_pow2>
 804ff71:	83 c4 10             	add    $0x10,%esp
 804ff74:	89 45 a8             	mov    %eax,-0x58(%ebp)
 804ff77:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 804ff7b:	0f 84 83 00 00 00    	je     8050004 <strconv__f32_to_decimal+0x206>
 804ff81:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 804ff84:	83 e8 01             	sub    $0x1,%eax
 804ff87:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804ff8c:	f7 e2                	mul    %edx
 804ff8e:	89 d1                	mov    %edx,%ecx
 804ff90:	c1 e9 03             	shr    $0x3,%ecx
 804ff93:	8b 45 a8             	mov    -0x58(%ebp),%eax
 804ff96:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804ff9b:	f7 e2                	mul    %edx
 804ff9d:	89 d0                	mov    %edx,%eax
 804ff9f:	c1 e8 03             	shr    $0x3,%eax
 804ffa2:	39 c1                	cmp    %eax,%ecx
 804ffa4:	77 5e                	ja     8050004 <strconv__f32_to_decimal+0x206>
 804ffa6:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ffa9:	83 e8 01             	sub    $0x1,%eax
 804ffac:	83 ec 0c             	sub    $0xc,%esp
 804ffaf:	50                   	push   %eax
 804ffb0:	e8 2c 51 00 00       	call   80550e1 <strconv__pow5_bits>
 804ffb5:	83 c4 10             	add    $0x10,%esp
 804ffb8:	83 c0 3a             	add    $0x3a,%eax
 804ffbb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 804ffbe:	8b 45 98             	mov    -0x68(%ebp),%eax
 804ffc1:	8b 55 d8             	mov    -0x28(%ebp),%edx
 804ffc4:	29 c2                	sub    %eax,%edx
 804ffc6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804ffc9:	01 d0                	add    %edx,%eax
 804ffcb:	83 e8 01             	sub    $0x1,%eax
 804ffce:	89 c2                	mov    %eax,%edx
 804ffd0:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804ffd3:	83 e8 01             	sub    $0x1,%eax
 804ffd6:	83 ec 04             	sub    $0x4,%esp
 804ffd9:	52                   	push   %edx
 804ffda:	50                   	push   %eax
 804ffdb:	ff 75 c8             	pushl  -0x38(%ebp)
 804ffde:	e8 ef 4e 00 00       	call   8054ed2 <strconv__mul_pow5_invdiv_pow2>
 804ffe3:	83 c4 10             	add    $0x10,%esp
 804ffe6:	89 c1                	mov    %eax,%ecx
 804ffe8:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804ffed:	89 c8                	mov    %ecx,%eax
 804ffef:	f7 e2                	mul    %edx
 804fff1:	c1 ea 03             	shr    $0x3,%edx
 804fff4:	89 d0                	mov    %edx,%eax
 804fff6:	c1 e0 02             	shl    $0x2,%eax
 804fff9:	01 d0                	add    %edx,%eax
 804fffb:	01 c0                	add    %eax,%eax
 804fffd:	29 c1                	sub    %eax,%ecx
 804ffff:	89 ca                	mov    %ecx,%edx
 8050001:	88 55 97             	mov    %dl,-0x69(%ebp)
 8050004:	83 7d d8 09          	cmpl   $0x9,-0x28(%ebp)
 8050008:	0f 87 d8 01 00 00    	ja     80501e6 <strconv__f32_to_decimal+0x3e8>
 805000e:	8b 4d c8             	mov    -0x38(%ebp),%ecx
 8050011:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050016:	89 c8                	mov    %ecx,%eax
 8050018:	f7 e2                	mul    %edx
 805001a:	89 d0                	mov    %edx,%eax
 805001c:	c1 e8 02             	shr    $0x2,%eax
 805001f:	89 c2                	mov    %eax,%edx
 8050021:	c1 e2 02             	shl    $0x2,%edx
 8050024:	01 c2                	add    %eax,%edx
 8050026:	89 c8                	mov    %ecx,%eax
 8050028:	29 d0                	sub    %edx,%eax
 805002a:	85 c0                	test   %eax,%eax
 805002c:	75 19                	jne    8050047 <strconv__f32_to_decimal+0x249>
 805002e:	83 ec 08             	sub    $0x8,%esp
 8050031:	ff 75 d8             	pushl  -0x28(%ebp)
 8050034:	ff 75 c8             	pushl  -0x38(%ebp)
 8050037:	e8 79 4f 00 00       	call   8054fb5 <strconv__multiple_of_power_of_five_32>
 805003c:	83 c4 10             	add    $0x10,%esp
 805003f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8050042:	e9 9f 01 00 00       	jmp    80501e6 <strconv__f32_to_decimal+0x3e8>
 8050047:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 805004b:	74 19                	je     8050066 <strconv__f32_to_decimal+0x268>
 805004d:	83 ec 08             	sub    $0x8,%esp
 8050050:	ff 75 d8             	pushl  -0x28(%ebp)
 8050053:	ff 75 d4             	pushl  -0x2c(%ebp)
 8050056:	e8 5a 4f 00 00       	call   8054fb5 <strconv__multiple_of_power_of_five_32>
 805005b:	83 c4 10             	add    $0x10,%esp
 805005e:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8050061:	e9 80 01 00 00       	jmp    80501e6 <strconv__f32_to_decimal+0x3e8>
 8050066:	83 ec 08             	sub    $0x8,%esp
 8050069:	ff 75 d8             	pushl  -0x28(%ebp)
 805006c:	ff 75 cc             	pushl  -0x34(%ebp)
 805006f:	e8 41 4f 00 00       	call   8054fb5 <strconv__multiple_of_power_of_five_32>
 8050074:	83 c4 10             	add    $0x10,%esp
 8050077:	85 c0                	test   %eax,%eax
 8050079:	0f 84 67 01 00 00    	je     80501e6 <strconv__f32_to_decimal+0x3e8>
 805007f:	83 6d a4 01          	subl   $0x1,-0x5c(%ebp)
 8050083:	e9 5e 01 00 00       	jmp    80501e6 <strconv__f32_to_decimal+0x3e8>
 8050088:	8b 45 98             	mov    -0x68(%ebp),%eax
 805008b:	f7 d8                	neg    %eax
 805008d:	83 ec 0c             	sub    $0xc,%esp
 8050090:	50                   	push   %eax
 8050091:	e8 d1 4f 00 00       	call   8055067 <strconv__log10_pow5>
 8050096:	83 c4 10             	add    $0x10,%esp
 8050099:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805009c:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805009f:	8b 45 98             	mov    -0x68(%ebp),%eax
 80500a2:	01 d0                	add    %edx,%eax
 80500a4:	89 45 ac             	mov    %eax,-0x54(%ebp)
 80500a7:	8b 45 98             	mov    -0x68(%ebp),%eax
 80500aa:	f7 d8                	neg    %eax
 80500ac:	89 c2                	mov    %eax,%edx
 80500ae:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80500b1:	29 c2                	sub    %eax,%edx
 80500b3:	89 d0                	mov    %edx,%eax
 80500b5:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80500b8:	83 ec 0c             	sub    $0xc,%esp
 80500bb:	ff 75 ec             	pushl  -0x14(%ebp)
 80500be:	e8 1e 50 00 00       	call   80550e1 <strconv__pow5_bits>
 80500c3:	83 c4 10             	add    $0x10,%esp
 80500c6:	83 e8 3d             	sub    $0x3d,%eax
 80500c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80500cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80500cf:	2b 45 f0             	sub    -0x10(%ebp),%eax
 80500d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80500d5:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80500d8:	83 ec 04             	sub    $0x4,%esp
 80500db:	ff 75 f4             	pushl  -0xc(%ebp)
 80500de:	50                   	push   %eax
 80500df:	ff 75 c8             	pushl  -0x38(%ebp)
 80500e2:	e8 2f 4e 00 00       	call   8054f16 <strconv__mul_pow5_div_pow2>
 80500e7:	83 c4 10             	add    $0x10,%esp
 80500ea:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80500ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80500f0:	83 ec 04             	sub    $0x4,%esp
 80500f3:	ff 75 f4             	pushl  -0xc(%ebp)
 80500f6:	50                   	push   %eax
 80500f7:	ff 75 cc             	pushl  -0x34(%ebp)
 80500fa:	e8 17 4e 00 00       	call   8054f16 <strconv__mul_pow5_div_pow2>
 80500ff:	83 c4 10             	add    $0x10,%esp
 8050102:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8050105:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8050108:	83 ec 04             	sub    $0x4,%esp
 805010b:	ff 75 f4             	pushl  -0xc(%ebp)
 805010e:	50                   	push   %eax
 805010f:	ff 75 d4             	pushl  -0x2c(%ebp)
 8050112:	e8 ff 4d 00 00       	call   8054f16 <strconv__mul_pow5_div_pow2>
 8050117:	83 c4 10             	add    $0x10,%esp
 805011a:	89 45 a8             	mov    %eax,-0x58(%ebp)
 805011d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 8050121:	74 7d                	je     80501a0 <strconv__f32_to_decimal+0x3a2>
 8050123:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8050126:	83 e8 01             	sub    $0x1,%eax
 8050129:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 805012e:	f7 e2                	mul    %edx
 8050130:	89 d1                	mov    %edx,%ecx
 8050132:	c1 e9 03             	shr    $0x3,%ecx
 8050135:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8050138:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 805013d:	f7 e2                	mul    %edx
 805013f:	89 d0                	mov    %edx,%eax
 8050141:	c1 e8 03             	shr    $0x3,%eax
 8050144:	39 c1                	cmp    %eax,%ecx
 8050146:	77 58                	ja     80501a0 <strconv__f32_to_decimal+0x3a2>
 8050148:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805014b:	8d 58 ff             	lea    -0x1(%eax),%ebx
 805014e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8050151:	83 c0 01             	add    $0x1,%eax
 8050154:	83 ec 0c             	sub    $0xc,%esp
 8050157:	50                   	push   %eax
 8050158:	e8 84 4f 00 00       	call   80550e1 <strconv__pow5_bits>
 805015d:	83 c4 10             	add    $0x10,%esp
 8050160:	83 e8 3d             	sub    $0x3d,%eax
 8050163:	29 c3                	sub    %eax,%ebx
 8050165:	89 d8                	mov    %ebx,%eax
 8050167:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805016a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805016d:	83 c0 01             	add    $0x1,%eax
 8050170:	83 ec 04             	sub    $0x4,%esp
 8050173:	ff 75 f4             	pushl  -0xc(%ebp)
 8050176:	50                   	push   %eax
 8050177:	ff 75 c8             	pushl  -0x38(%ebp)
 805017a:	e8 97 4d 00 00       	call   8054f16 <strconv__mul_pow5_div_pow2>
 805017f:	83 c4 10             	add    $0x10,%esp
 8050182:	89 c1                	mov    %eax,%ecx
 8050184:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050189:	89 c8                	mov    %ecx,%eax
 805018b:	f7 e2                	mul    %edx
 805018d:	c1 ea 03             	shr    $0x3,%edx
 8050190:	89 d0                	mov    %edx,%eax
 8050192:	c1 e0 02             	shl    $0x2,%eax
 8050195:	01 d0                	add    %edx,%eax
 8050197:	01 c0                	add    %eax,%eax
 8050199:	29 c1                	sub    %eax,%ecx
 805019b:	89 ca                	mov    %ecx,%edx
 805019d:	88 55 97             	mov    %dl,-0x69(%ebp)
 80501a0:	83 7d e8 01          	cmpl   $0x1,-0x18(%ebp)
 80501a4:	77 22                	ja     80501c8 <strconv__f32_to_decimal+0x3ca>
 80501a6:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)
 80501ad:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 80501b1:	74 0f                	je     80501c2 <strconv__f32_to_decimal+0x3c4>
 80501b3:	83 7d d0 01          	cmpl   $0x1,-0x30(%ebp)
 80501b7:	0f 94 c0             	sete   %al
 80501ba:	0f b6 c0             	movzbl %al,%eax
 80501bd:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80501c0:	eb 24                	jmp    80501e6 <strconv__f32_to_decimal+0x3e8>
 80501c2:	83 6d a4 01          	subl   $0x1,-0x5c(%ebp)
 80501c6:	eb 1e                	jmp    80501e6 <strconv__f32_to_decimal+0x3e8>
 80501c8:	83 7d e8 1e          	cmpl   $0x1e,-0x18(%ebp)
 80501cc:	77 18                	ja     80501e6 <strconv__f32_to_decimal+0x3e8>
 80501ce:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80501d1:	83 e8 01             	sub    $0x1,%eax
 80501d4:	83 ec 08             	sub    $0x8,%esp
 80501d7:	50                   	push   %eax
 80501d8:	ff 75 c8             	pushl  -0x38(%ebp)
 80501db:	e8 ee 4d 00 00       	call   8054fce <strconv__multiple_of_power_of_two_32>
 80501e0:	83 c4 10             	add    $0x10,%esp
 80501e3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80501e6:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 80501ed:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 80501f4:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
 80501f8:	75 0a                	jne    8050204 <strconv__f32_to_decimal+0x406>
 80501fa:	83 7d b4 00          	cmpl   $0x0,-0x4c(%ebp)
 80501fe:	0f 84 c0 01 00 00    	je     80503c4 <strconv__f32_to_decimal+0x5c6>
 8050204:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8050207:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 805020c:	f7 e2                	mul    %edx
 805020e:	89 d1                	mov    %edx,%ecx
 8050210:	c1 e9 03             	shr    $0x3,%ecx
 8050213:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8050216:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 805021b:	f7 e2                	mul    %edx
 805021d:	89 d0                	mov    %edx,%eax
 805021f:	c1 e8 03             	shr    $0x3,%eax
 8050222:	39 c1                	cmp    %eax,%ecx
 8050224:	0f 86 ae 00 00 00    	jbe    80502d8 <strconv__f32_to_decimal+0x4da>
 805022a:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
 805022e:	74 27                	je     8050257 <strconv__f32_to_decimal+0x459>
 8050230:	8b 4d a8             	mov    -0x58(%ebp),%ecx
 8050233:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050238:	89 c8                	mov    %ecx,%eax
 805023a:	f7 e2                	mul    %edx
 805023c:	c1 ea 03             	shr    $0x3,%edx
 805023f:	89 d0                	mov    %edx,%eax
 8050241:	c1 e0 02             	shl    $0x2,%eax
 8050244:	01 d0                	add    %edx,%eax
 8050246:	01 c0                	add    %eax,%eax
 8050248:	29 c1                	sub    %eax,%ecx
 805024a:	89 ca                	mov    %ecx,%edx
 805024c:	85 d2                	test   %edx,%edx
 805024e:	75 07                	jne    8050257 <strconv__f32_to_decimal+0x459>
 8050250:	b8 01 00 00 00       	mov    $0x1,%eax
 8050255:	eb 05                	jmp    805025c <strconv__f32_to_decimal+0x45e>
 8050257:	b8 00 00 00 00       	mov    $0x0,%eax
 805025c:	89 45 b0             	mov    %eax,-0x50(%ebp)
 805025f:	83 7d b4 00          	cmpl   $0x0,-0x4c(%ebp)
 8050263:	74 0d                	je     8050272 <strconv__f32_to_decimal+0x474>
 8050265:	80 7d 97 00          	cmpb   $0x0,-0x69(%ebp)
 8050269:	75 07                	jne    8050272 <strconv__f32_to_decimal+0x474>
 805026b:	b8 01 00 00 00       	mov    $0x1,%eax
 8050270:	eb 05                	jmp    8050277 <strconv__f32_to_decimal+0x479>
 8050272:	b8 00 00 00 00       	mov    $0x0,%eax
 8050277:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805027a:	8b 4d a0             	mov    -0x60(%ebp),%ecx
 805027d:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050282:	89 c8                	mov    %ecx,%eax
 8050284:	f7 e2                	mul    %edx
 8050286:	c1 ea 03             	shr    $0x3,%edx
 8050289:	89 d0                	mov    %edx,%eax
 805028b:	c1 e0 02             	shl    $0x2,%eax
 805028e:	01 d0                	add    %edx,%eax
 8050290:	01 c0                	add    %eax,%eax
 8050292:	29 c1                	sub    %eax,%ecx
 8050294:	89 ca                	mov    %ecx,%edx
 8050296:	88 55 97             	mov    %dl,-0x69(%ebp)
 8050299:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805029c:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 80502a1:	f7 e2                	mul    %edx
 80502a3:	89 d0                	mov    %edx,%eax
 80502a5:	c1 e8 03             	shr    $0x3,%eax
 80502a8:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80502ab:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80502ae:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 80502b3:	f7 e2                	mul    %edx
 80502b5:	89 d0                	mov    %edx,%eax
 80502b7:	c1 e8 03             	shr    $0x3,%eax
 80502ba:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 80502bd:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80502c0:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 80502c5:	f7 e2                	mul    %edx
 80502c7:	89 d0                	mov    %edx,%eax
 80502c9:	c1 e8 03             	shr    $0x3,%eax
 80502cc:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80502cf:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 80502d3:	e9 2c ff ff ff       	jmp    8050204 <strconv__f32_to_decimal+0x406>
 80502d8:	90                   	nop
 80502d9:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
 80502dd:	0f 84 9a 00 00 00    	je     805037d <strconv__f32_to_decimal+0x57f>
 80502e3:	8b 4d a8             	mov    -0x58(%ebp),%ecx
 80502e6:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 80502eb:	89 c8                	mov    %ecx,%eax
 80502ed:	f7 e2                	mul    %edx
 80502ef:	c1 ea 03             	shr    $0x3,%edx
 80502f2:	89 d0                	mov    %edx,%eax
 80502f4:	c1 e0 02             	shl    $0x2,%eax
 80502f7:	01 d0                	add    %edx,%eax
 80502f9:	01 c0                	add    %eax,%eax
 80502fb:	29 c1                	sub    %eax,%ecx
 80502fd:	89 ca                	mov    %ecx,%edx
 80502ff:	85 d2                	test   %edx,%edx
 8050301:	75 79                	jne    805037c <strconv__f32_to_decimal+0x57e>
 8050303:	83 7d b4 00          	cmpl   $0x0,-0x4c(%ebp)
 8050307:	74 0d                	je     8050316 <strconv__f32_to_decimal+0x518>
 8050309:	80 7d 97 00          	cmpb   $0x0,-0x69(%ebp)
 805030d:	75 07                	jne    8050316 <strconv__f32_to_decimal+0x518>
 805030f:	b8 01 00 00 00       	mov    $0x1,%eax
 8050314:	eb 05                	jmp    805031b <strconv__f32_to_decimal+0x51d>
 8050316:	b8 00 00 00 00       	mov    $0x0,%eax
 805031b:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805031e:	8b 4d a0             	mov    -0x60(%ebp),%ecx
 8050321:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050326:	89 c8                	mov    %ecx,%eax
 8050328:	f7 e2                	mul    %edx
 805032a:	c1 ea 03             	shr    $0x3,%edx
 805032d:	89 d0                	mov    %edx,%eax
 805032f:	c1 e0 02             	shl    $0x2,%eax
 8050332:	01 d0                	add    %edx,%eax
 8050334:	01 c0                	add    %eax,%eax
 8050336:	29 c1                	sub    %eax,%ecx
 8050338:	89 ca                	mov    %ecx,%edx
 805033a:	88 55 97             	mov    %dl,-0x69(%ebp)
 805033d:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8050340:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050345:	f7 e2                	mul    %edx
 8050347:	89 d0                	mov    %edx,%eax
 8050349:	c1 e8 03             	shr    $0x3,%eax
 805034c:	89 45 a0             	mov    %eax,-0x60(%ebp)
 805034f:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8050352:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050357:	f7 e2                	mul    %edx
 8050359:	89 d0                	mov    %edx,%eax
 805035b:	c1 e8 03             	shr    $0x3,%eax
 805035e:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8050361:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8050364:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050369:	f7 e2                	mul    %edx
 805036b:	89 d0                	mov    %edx,%eax
 805036d:	c1 e8 03             	shr    $0x3,%eax
 8050370:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8050373:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 8050377:	e9 67 ff ff ff       	jmp    80502e3 <strconv__f32_to_decimal+0x4e5>
 805037c:	90                   	nop
 805037d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%ebp)
 8050381:	74 14                	je     8050397 <strconv__f32_to_decimal+0x599>
 8050383:	80 7d 97 05          	cmpb   $0x5,-0x69(%ebp)
 8050387:	75 0e                	jne    8050397 <strconv__f32_to_decimal+0x599>
 8050389:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805038c:	83 e0 01             	and    $0x1,%eax
 805038f:	85 c0                	test   %eax,%eax
 8050391:	75 04                	jne    8050397 <strconv__f32_to_decimal+0x599>
 8050393:	c6 45 97 04          	movb   $0x4,-0x69(%ebp)
 8050397:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805039a:	89 45 bc             	mov    %eax,-0x44(%ebp)
 805039d:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80503a0:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 80503a3:	75 0c                	jne    80503b1 <strconv__f32_to_decimal+0x5b3>
 80503a5:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 80503a9:	74 10                	je     80503bb <strconv__f32_to_decimal+0x5bd>
 80503ab:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
 80503af:	74 0a                	je     80503bb <strconv__f32_to_decimal+0x5bd>
 80503b1:	80 7d 97 04          	cmpb   $0x4,-0x69(%ebp)
 80503b5:	0f 86 b9 00 00 00    	jbe    8050474 <strconv__f32_to_decimal+0x676>
 80503bb:	83 45 bc 01          	addl   $0x1,-0x44(%ebp)
 80503bf:	e9 b0 00 00 00       	jmp    8050474 <strconv__f32_to_decimal+0x676>
 80503c4:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80503c7:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 80503cc:	f7 e2                	mul    %edx
 80503ce:	89 d1                	mov    %edx,%ecx
 80503d0:	c1 e9 03             	shr    $0x3,%ecx
 80503d3:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80503d6:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 80503db:	f7 e2                	mul    %edx
 80503dd:	89 d0                	mov    %edx,%eax
 80503df:	c1 e8 03             	shr    $0x3,%eax
 80503e2:	39 c1                	cmp    %eax,%ecx
 80503e4:	76 5b                	jbe    8050441 <strconv__f32_to_decimal+0x643>
 80503e6:	8b 4d a0             	mov    -0x60(%ebp),%ecx
 80503e9:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 80503ee:	89 c8                	mov    %ecx,%eax
 80503f0:	f7 e2                	mul    %edx
 80503f2:	c1 ea 03             	shr    $0x3,%edx
 80503f5:	89 d0                	mov    %edx,%eax
 80503f7:	c1 e0 02             	shl    $0x2,%eax
 80503fa:	01 d0                	add    %edx,%eax
 80503fc:	01 c0                	add    %eax,%eax
 80503fe:	29 c1                	sub    %eax,%ecx
 8050400:	89 ca                	mov    %ecx,%edx
 8050402:	88 55 97             	mov    %dl,-0x69(%ebp)
 8050405:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8050408:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 805040d:	f7 e2                	mul    %edx
 805040f:	89 d0                	mov    %edx,%eax
 8050411:	c1 e8 03             	shr    $0x3,%eax
 8050414:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8050417:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 805041a:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 805041f:	f7 e2                	mul    %edx
 8050421:	89 d0                	mov    %edx,%eax
 8050423:	c1 e8 03             	shr    $0x3,%eax
 8050426:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8050429:	8b 45 a8             	mov    -0x58(%ebp),%eax
 805042c:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8050431:	f7 e2                	mul    %edx
 8050433:	89 d0                	mov    %edx,%eax
 8050435:	c1 e8 03             	shr    $0x3,%eax
 8050438:	89 45 a8             	mov    %eax,-0x58(%ebp)
 805043b:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 805043f:	eb 83                	jmp    80503c4 <strconv__f32_to_decimal+0x5c6>
 8050441:	90                   	nop
 8050442:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8050445:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 8050448:	74 06                	je     8050450 <strconv__f32_to_decimal+0x652>
 805044a:	80 7d 97 04          	cmpb   $0x4,-0x69(%ebp)
 805044e:	76 07                	jbe    8050457 <strconv__f32_to_decimal+0x659>
 8050450:	b8 01 00 00 00       	mov    $0x1,%eax
 8050455:	eb 05                	jmp    805045c <strconv__f32_to_decimal+0x65e>
 8050457:	b8 00 00 00 00       	mov    $0x0,%eax
 805045c:	83 ec 0c             	sub    $0xc,%esp
 805045f:	50                   	push   %eax
 8050460:	e8 bf 47 00 00       	call   8054c24 <strconv__bool_to_u32>
 8050465:	83 c4 10             	add    $0x10,%esp
 8050468:	89 c2                	mov    %eax,%edx
 805046a:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805046d:	01 d0                	add    %edx,%eax
 805046f:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8050472:	eb 01                	jmp    8050475 <strconv__f32_to_decimal+0x677>
 8050474:	90                   	nop
 8050475:	8b 55 ac             	mov    -0x54(%ebp),%edx
 8050478:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805047b:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 805047e:	8b 45 08             	mov    0x8(%ebp),%eax
 8050481:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8050484:	89 10                	mov    %edx,(%eax)
 8050486:	8b 45 08             	mov    0x8(%ebp),%eax
 8050489:	89 48 04             	mov    %ecx,0x4(%eax)
 805048c:	8b 45 08             	mov    0x8(%ebp),%eax
 805048f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8050492:	c9                   	leave  
 8050493:	c2 04 00             	ret    $0x4

08050496 <strconv__f32_to_str>:
 8050496:	55                   	push   %ebp
 8050497:	89 e5                	mov    %esp,%ebp
 8050499:	53                   	push   %ebx
 805049a:	83 ec 44             	sub    $0x44,%esp
 805049d:	8b 45 08             	mov    0x8(%ebp),%eax
 80504a0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 80504a3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80504a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80504ac:	31 c0                	xor    %eax,%eax
 80504ae:	d9 ee                	fldz   
 80504b0:	d9 5d c8             	fstps  -0x38(%ebp)
 80504b3:	d9 45 0c             	flds   0xc(%ebp)
 80504b6:	d9 5d c8             	fstps  -0x38(%ebp)
 80504b9:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80504bc:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80504bf:	8b 15 90 32 07 08    	mov    0x8073290,%edx
 80504c5:	a1 f0 32 07 08       	mov    0x80732f0,%eax
 80504ca:	01 d0                	add    %edx,%eax
 80504cc:	8b 55 cc             	mov    -0x34(%ebp),%edx
 80504cf:	89 c1                	mov    %eax,%ecx
 80504d1:	d3 ea                	shr    %cl,%edx
 80504d3:	89 d0                	mov    %edx,%eax
 80504d5:	85 c0                	test   %eax,%eax
 80504d7:	0f 95 c0             	setne  %al
 80504da:	0f b6 c0             	movzbl %al,%eax
 80504dd:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80504e0:	a1 90 32 07 08       	mov    0x8073290,%eax
 80504e5:	ba 01 00 00 00       	mov    $0x1,%edx
 80504ea:	89 c1                	mov    %eax,%ecx
 80504ec:	d3 e2                	shl    %cl,%edx
 80504ee:	89 d0                	mov    %edx,%eax
 80504f0:	83 e8 01             	sub    $0x1,%eax
 80504f3:	23 45 cc             	and    -0x34(%ebp),%eax
 80504f6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80504f9:	a1 90 32 07 08       	mov    0x8073290,%eax
 80504fe:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8050501:	89 c1                	mov    %eax,%ecx
 8050503:	d3 ea                	shr    %cl,%edx
 8050505:	a1 f0 32 07 08       	mov    0x80732f0,%eax
 805050a:	bb 01 00 00 00       	mov    $0x1,%ebx
 805050f:	89 c1                	mov    %eax,%ecx
 8050511:	d3 e3                	shl    %cl,%ebx
 8050513:	89 d8                	mov    %ebx,%eax
 8050515:	83 e8 01             	sub    $0x1,%eax
 8050518:	21 d0                	and    %edx,%eax
 805051a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805051d:	81 7d d8 ff 00 00 00 	cmpl   $0xff,-0x28(%ebp)
 8050524:	74 0c                	je     8050532 <strconv__f32_to_str+0x9c>
 8050526:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 805052a:	75 2d                	jne    8050559 <strconv__f32_to_str+0xc3>
 805052c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 8050530:	75 27                	jne    8050559 <strconv__f32_to_str+0xc3>
 8050532:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 8050536:	0f 94 c0             	sete   %al
 8050539:	0f b6 c8             	movzbl %al,%ecx
 805053c:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8050540:	0f 94 c0             	sete   %al
 8050543:	0f b6 d0             	movzbl %al,%edx
 8050546:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8050549:	51                   	push   %ecx
 805054a:	52                   	push   %edx
 805054b:	ff 75 d0             	pushl  -0x30(%ebp)
 805054e:	50                   	push   %eax
 805054f:	e8 08 47 00 00       	call   8054c5c <strconv__get_string_special>
 8050554:	83 c4 0c             	add    $0xc,%esp
 8050557:	eb 5f                	jmp    80505b8 <strconv__f32_to_str+0x122>
 8050559:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805055c:	83 ec 04             	sub    $0x4,%esp
 805055f:	ff 75 d8             	pushl  -0x28(%ebp)
 8050562:	ff 75 d4             	pushl  -0x2c(%ebp)
 8050565:	50                   	push   %eax
 8050566:	e8 a2 f7 ff ff       	call   804fd0d <strconv__f32_to_decimal_exact_int>
 805056b:	83 c4 0c             	add    $0xc,%esp
 805056e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8050571:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8050574:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8050577:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 805057a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805057d:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8050580:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 8050584:	75 15                	jne    805059b <strconv__f32_to_str+0x105>
 8050586:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8050589:	83 ec 04             	sub    $0x4,%esp
 805058c:	ff 75 d8             	pushl  -0x28(%ebp)
 805058f:	ff 75 d4             	pushl  -0x2c(%ebp)
 8050592:	50                   	push   %eax
 8050593:	e8 66 f8 ff ff       	call   804fdfe <strconv__f32_to_decimal>
 8050598:	83 c4 0c             	add    $0xc,%esp
 805059b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805059e:	83 ec 08             	sub    $0x8,%esp
 80505a1:	6a 00                	push   $0x0
 80505a3:	ff 75 10             	pushl  0x10(%ebp)
 80505a6:	ff 75 d0             	pushl  -0x30(%ebp)
 80505a9:	ff 75 e4             	pushl  -0x1c(%ebp)
 80505ac:	ff 75 e0             	pushl  -0x20(%ebp)
 80505af:	50                   	push   %eax
 80505b0:	e8 a4 f3 ff ff       	call   804f959 <strconv__Dec32_get_string_32>
 80505b5:	83 c4 1c             	add    $0x1c,%esp
 80505b8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80505bb:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 80505be:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 80505c5:	74 05                	je     80505cc <strconv__f32_to_str+0x136>
 80505c7:	e8 54 82 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80505cc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80505cf:	c9                   	leave  
 80505d0:	c2 04 00             	ret    $0x4

080505d3 <strconv__f32_to_str_pad>:
 80505d3:	55                   	push   %ebp
 80505d4:	89 e5                	mov    %esp,%ebp
 80505d6:	53                   	push   %ebx
 80505d7:	83 ec 44             	sub    $0x44,%esp
 80505da:	8b 45 08             	mov    0x8(%ebp),%eax
 80505dd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 80505e0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80505e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80505e9:	31 c0                	xor    %eax,%eax
 80505eb:	d9 ee                	fldz   
 80505ed:	d9 5d c8             	fstps  -0x38(%ebp)
 80505f0:	d9 45 0c             	flds   0xc(%ebp)
 80505f3:	d9 5d c8             	fstps  -0x38(%ebp)
 80505f6:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80505f9:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80505fc:	8b 15 90 32 07 08    	mov    0x8073290,%edx
 8050602:	a1 f0 32 07 08       	mov    0x80732f0,%eax
 8050607:	01 d0                	add    %edx,%eax
 8050609:	8b 55 cc             	mov    -0x34(%ebp),%edx
 805060c:	89 c1                	mov    %eax,%ecx
 805060e:	d3 ea                	shr    %cl,%edx
 8050610:	89 d0                	mov    %edx,%eax
 8050612:	85 c0                	test   %eax,%eax
 8050614:	0f 95 c0             	setne  %al
 8050617:	0f b6 c0             	movzbl %al,%eax
 805061a:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805061d:	a1 90 32 07 08       	mov    0x8073290,%eax
 8050622:	ba 01 00 00 00       	mov    $0x1,%edx
 8050627:	89 c1                	mov    %eax,%ecx
 8050629:	d3 e2                	shl    %cl,%edx
 805062b:	89 d0                	mov    %edx,%eax
 805062d:	83 e8 01             	sub    $0x1,%eax
 8050630:	23 45 cc             	and    -0x34(%ebp),%eax
 8050633:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8050636:	a1 90 32 07 08       	mov    0x8073290,%eax
 805063b:	8b 55 cc             	mov    -0x34(%ebp),%edx
 805063e:	89 c1                	mov    %eax,%ecx
 8050640:	d3 ea                	shr    %cl,%edx
 8050642:	a1 f0 32 07 08       	mov    0x80732f0,%eax
 8050647:	bb 01 00 00 00       	mov    $0x1,%ebx
 805064c:	89 c1                	mov    %eax,%ecx
 805064e:	d3 e3                	shl    %cl,%ebx
 8050650:	89 d8                	mov    %ebx,%eax
 8050652:	83 e8 01             	sub    $0x1,%eax
 8050655:	21 d0                	and    %edx,%eax
 8050657:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805065a:	81 7d d8 ff 00 00 00 	cmpl   $0xff,-0x28(%ebp)
 8050661:	74 0c                	je     805066f <strconv__f32_to_str_pad+0x9c>
 8050663:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8050667:	75 2d                	jne    8050696 <strconv__f32_to_str_pad+0xc3>
 8050669:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 805066d:	75 27                	jne    8050696 <strconv__f32_to_str_pad+0xc3>
 805066f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 8050673:	0f 94 c0             	sete   %al
 8050676:	0f b6 c8             	movzbl %al,%ecx
 8050679:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 805067d:	0f 94 c0             	sete   %al
 8050680:	0f b6 d0             	movzbl %al,%edx
 8050683:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8050686:	51                   	push   %ecx
 8050687:	52                   	push   %edx
 8050688:	ff 75 d0             	pushl  -0x30(%ebp)
 805068b:	50                   	push   %eax
 805068c:	e8 cb 45 00 00       	call   8054c5c <strconv__get_string_special>
 8050691:	83 c4 0c             	add    $0xc,%esp
 8050694:	eb 60                	jmp    80506f6 <strconv__f32_to_str_pad+0x123>
 8050696:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8050699:	83 ec 04             	sub    $0x4,%esp
 805069c:	ff 75 d8             	pushl  -0x28(%ebp)
 805069f:	ff 75 d4             	pushl  -0x2c(%ebp)
 80506a2:	50                   	push   %eax
 80506a3:	e8 65 f6 ff ff       	call   804fd0d <strconv__f32_to_decimal_exact_int>
 80506a8:	83 c4 0c             	add    $0xc,%esp
 80506ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80506ae:	8b 55 ec             	mov    -0x14(%ebp),%edx
 80506b1:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80506b4:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 80506b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80506ba:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80506bd:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 80506c1:	75 15                	jne    80506d8 <strconv__f32_to_str_pad+0x105>
 80506c3:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80506c6:	83 ec 04             	sub    $0x4,%esp
 80506c9:	ff 75 d8             	pushl  -0x28(%ebp)
 80506cc:	ff 75 d4             	pushl  -0x2c(%ebp)
 80506cf:	50                   	push   %eax
 80506d0:	e8 29 f7 ff ff       	call   804fdfe <strconv__f32_to_decimal>
 80506d5:	83 c4 0c             	add    $0xc,%esp
 80506d8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80506db:	83 ec 08             	sub    $0x8,%esp
 80506de:	ff 75 10             	pushl  0x10(%ebp)
 80506e1:	ff 75 10             	pushl  0x10(%ebp)
 80506e4:	ff 75 d0             	pushl  -0x30(%ebp)
 80506e7:	ff 75 e4             	pushl  -0x1c(%ebp)
 80506ea:	ff 75 e0             	pushl  -0x20(%ebp)
 80506ed:	50                   	push   %eax
 80506ee:	e8 66 f2 ff ff       	call   804f959 <strconv__Dec32_get_string_32>
 80506f3:	83 c4 1c             	add    $0x1c,%esp
 80506f6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80506f9:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 80506fc:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 8050703:	74 05                	je     805070a <strconv__f32_to_str_pad+0x137>
 8050705:	e8 16 81 ff ff       	call   8048820 <__stack_chk_fail@plt>
 805070a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805070d:	c9                   	leave  
 805070e:	c2 04 00             	ret    $0x4

08050711 <strconv__Dec64_get_string_64>:
 8050711:	55                   	push   %ebp
 8050712:	89 e5                	mov    %esp,%ebp
 8050714:	56                   	push   %esi
 8050715:	53                   	push   %ebx
 8050716:	83 ec 70             	sub    $0x70,%esp
 8050719:	8b 45 08             	mov    0x8(%ebp),%eax
 805071c:	89 45 94             	mov    %eax,-0x6c(%ebp)
 805071f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8050725:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8050728:	31 c0                	xor    %eax,%eax
 805072a:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805072d:	83 c0 01             	add    $0x1,%eax
 8050730:	89 45 98             	mov    %eax,-0x68(%ebp)
 8050733:	8b 45 20             	mov    0x20(%ebp),%eax
 8050736:	83 c0 01             	add    $0x1,%eax
 8050739:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805073c:	8b 45 0c             	mov    0xc(%ebp),%eax
 805073f:	8b 55 10             	mov    0x10(%ebp),%edx
 8050742:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8050745:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8050748:	8b 45 14             	mov    0x14(%ebp),%eax
 805074b:	89 45 9c             	mov    %eax,-0x64(%ebp)
 805074e:	83 ec 08             	sub    $0x8,%esp
 8050751:	ff 75 d4             	pushl  -0x2c(%ebp)
 8050754:	ff 75 d0             	pushl  -0x30(%ebp)
 8050757:	e8 02 4a 00 00       	call   805515e <strconv__decimal_len_64>
 805075c:	83 c4 10             	add    $0x10,%esp
 805075f:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8050762:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8050765:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8050768:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)
 805076f:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8050772:	3b 45 a0             	cmp    -0x60(%ebp),%eax
 8050775:	7e 09                	jle    8050780 <strconv__Dec64_get_string_64+0x6f>
 8050777:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805077a:	2b 45 a0             	sub    -0x60(%ebp),%eax
 805077d:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8050780:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8050783:	8d 50 08             	lea    0x8(%eax),%edx
 8050786:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8050789:	01 c2                	add    %eax,%edx
 805078b:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805078e:	83 ec 0c             	sub    $0xc,%esp
 8050791:	6a 00                	push   $0x0
 8050793:	6a 01                	push   $0x1
 8050795:	6a 00                	push   $0x0
 8050797:	52                   	push   %edx
 8050798:	50                   	push   %eax
 8050799:	e8 cb 52 00 00       	call   8055a69 <__new_array_with_default>
 805079e:	83 c4 1c             	add    $0x1c,%esp
 80507a1:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)
 80507a8:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 80507ac:	74 1e                	je     80507cc <strconv__Dec64_get_string_64+0xbb>
 80507ae:	c6 45 e8 2d          	movb   $0x2d,-0x18(%ebp)
 80507b2:	83 ec 04             	sub    $0x4,%esp
 80507b5:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80507b8:	50                   	push   %eax
 80507b9:	ff 75 a8             	pushl  -0x58(%ebp)
 80507bc:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80507bf:	50                   	push   %eax
 80507c0:	e8 57 61 00 00       	call   805691c <array_set>
 80507c5:	83 c4 10             	add    $0x10,%esp
 80507c8:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 80507cc:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 80507d3:	83 7d a0 01          	cmpl   $0x1,-0x60(%ebp)
 80507d7:	7f 07                	jg     80507e0 <strconv__Dec64_get_string_64+0xcf>
 80507d9:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)
 80507e0:	8b 45 98             	mov    -0x68(%ebp),%eax
 80507e3:	3b 45 a0             	cmp    -0x60(%ebp),%eax
 80507e6:	0f 8d ee 00 00 00    	jge    80508da <strconv__Dec64_get_string_64+0x1c9>
 80507ec:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80507ef:	2b 45 98             	sub    -0x68(%ebp),%eax
 80507f2:	83 e8 01             	sub    $0x1,%eax
 80507f5:	83 ec 0c             	sub    $0xc,%esp
 80507f8:	50                   	push   %eax
 80507f9:	ff 35 d4 32 07 08    	pushl  0x80732d4
 80507ff:	ff 35 d0 32 07 08    	pushl  0x80732d0
 8050805:	ff 35 cc 32 07 08    	pushl  0x80732cc
 805080b:	ff 35 c8 32 07 08    	pushl  0x80732c8
 8050811:	e8 a4 5a 00 00       	call   80562ba <array_get>
 8050816:	83 c4 20             	add    $0x20,%esp
 8050819:	8b 50 04             	mov    0x4(%eax),%edx
 805081c:	8b 00                	mov    (%eax),%eax
 805081e:	6b da 05             	imul   $0x5,%edx,%ebx
 8050821:	6b c8 00             	imul   $0x0,%eax,%ecx
 8050824:	01 d9                	add    %ebx,%ecx
 8050826:	bb 05 00 00 00       	mov    $0x5,%ebx
 805082b:	f7 e3                	mul    %ebx
 805082d:	01 d1                	add    %edx,%ecx
 805082f:	89 ca                	mov    %ecx,%edx
 8050831:	01 45 d0             	add    %eax,-0x30(%ebp)
 8050834:	11 55 d4             	adc    %edx,-0x2c(%ebp)
 8050837:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805083a:	2b 45 98             	sub    -0x68(%ebp),%eax
 805083d:	83 ec 0c             	sub    $0xc,%esp
 8050840:	50                   	push   %eax
 8050841:	ff 35 d4 32 07 08    	pushl  0x80732d4
 8050847:	ff 35 d0 32 07 08    	pushl  0x80732d0
 805084d:	ff 35 cc 32 07 08    	pushl  0x80732cc
 8050853:	ff 35 c8 32 07 08    	pushl  0x80732c8
 8050859:	e8 5c 5a 00 00       	call   80562ba <array_get>
 805085e:	83 c4 20             	add    $0x20,%esp
 8050861:	8b 50 04             	mov    0x4(%eax),%edx
 8050864:	8b 00                	mov    (%eax),%eax
 8050866:	52                   	push   %edx
 8050867:	50                   	push   %eax
 8050868:	ff 75 d4             	pushl  -0x2c(%ebp)
 805086b:	ff 75 d0             	pushl  -0x30(%ebp)
 805086e:	e8 7d 8a 01 00       	call   80692f0 <__udivdi3>
 8050873:	83 c4 10             	add    $0x10,%esp
 8050876:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8050879:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 805087c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
 805087f:	8b 75 10             	mov    0x10(%ebp),%esi
 8050882:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8050885:	2b 45 98             	sub    -0x68(%ebp),%eax
 8050888:	83 ec 0c             	sub    $0xc,%esp
 805088b:	50                   	push   %eax
 805088c:	ff 35 d4 32 07 08    	pushl  0x80732d4
 8050892:	ff 35 d0 32 07 08    	pushl  0x80732d0
 8050898:	ff 35 cc 32 07 08    	pushl  0x80732cc
 805089e:	ff 35 c8 32 07 08    	pushl  0x80732c8
 80508a4:	e8 11 5a 00 00       	call   80562ba <array_get>
 80508a9:	83 c4 20             	add    $0x20,%esp
 80508ac:	8b 50 04             	mov    0x4(%eax),%edx
 80508af:	8b 00                	mov    (%eax),%eax
 80508b1:	52                   	push   %edx
 80508b2:	50                   	push   %eax
 80508b3:	56                   	push   %esi
 80508b4:	53                   	push   %ebx
 80508b5:	e8 36 8a 01 00       	call   80692f0 <__udivdi3>
 80508ba:	83 c4 10             	add    $0x10,%esp
 80508bd:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
 80508c0:	77 12                	ja     80508d4 <strconv__Dec64_get_string_64+0x1c3>
 80508c2:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
 80508c5:	72 05                	jb     80508cc <strconv__Dec64_get_string_64+0x1bb>
 80508c7:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 80508ca:	73 08                	jae    80508d4 <strconv__Dec64_get_string_64+0x1c3>
 80508cc:	83 45 9c 01          	addl   $0x1,-0x64(%ebp)
 80508d0:	83 45 98 01          	addl   $0x1,-0x68(%ebp)
 80508d4:	8b 45 98             	mov    -0x68(%ebp),%eax
 80508d7:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80508da:	8b 55 a8             	mov    -0x58(%ebp),%edx
 80508dd:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80508e0:	01 d0                	add    %edx,%eax
 80508e2:	89 45 c0             	mov    %eax,-0x40(%ebp)
 80508e5:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 80508ec:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80508ef:	2b 45 ac             	sub    -0x54(%ebp),%eax
 80508f2:	83 e8 01             	sub    $0x1,%eax
 80508f5:	3b 45 b0             	cmp    -0x50(%ebp),%eax
 80508f8:	7e 58                	jle    8050952 <strconv__Dec64_get_string_64+0x241>
 80508fa:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80508fd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8050900:	6a 00                	push   $0x0
 8050902:	6a 0a                	push   $0xa
 8050904:	52                   	push   %edx
 8050905:	50                   	push   %eax
 8050906:	e8 15 8b 01 00       	call   8069420 <__umoddi3>
 805090b:	83 c4 10             	add    $0x10,%esp
 805090e:	83 c0 30             	add    $0x30,%eax
 8050911:	88 45 e9             	mov    %al,-0x17(%ebp)
 8050914:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050917:	2b 45 b0             	sub    -0x50(%ebp),%eax
 805091a:	83 ec 04             	sub    $0x4,%esp
 805091d:	8d 55 e9             	lea    -0x17(%ebp),%edx
 8050920:	52                   	push   %edx
 8050921:	50                   	push   %eax
 8050922:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050925:	50                   	push   %eax
 8050926:	e8 f1 5f 00 00       	call   805691c <array_set>
 805092b:	83 c4 10             	add    $0x10,%esp
 805092e:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8050931:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8050934:	6a 00                	push   $0x0
 8050936:	6a 0a                	push   $0xa
 8050938:	52                   	push   %edx
 8050939:	50                   	push   %eax
 805093a:	e8 b1 89 01 00       	call   80692f0 <__udivdi3>
 805093f:	83 c4 10             	add    $0x10,%esp
 8050942:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8050945:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8050948:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 805094c:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 8050950:	eb 9a                	jmp    80508ec <strconv__Dec64_get_string_64+0x1db>
 8050952:	90                   	nop
 8050953:	83 7d a0 00          	cmpl   $0x0,-0x60(%ebp)
 8050957:	7e 26                	jle    805097f <strconv__Dec64_get_string_64+0x26e>
 8050959:	c6 45 ea 2e          	movb   $0x2e,-0x16(%ebp)
 805095d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050960:	2b 45 b0             	sub    -0x50(%ebp),%eax
 8050963:	83 ec 04             	sub    $0x4,%esp
 8050966:	8d 55 ea             	lea    -0x16(%ebp),%edx
 8050969:	52                   	push   %edx
 805096a:	50                   	push   %eax
 805096b:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805096e:	50                   	push   %eax
 805096f:	e8 a8 5f 00 00       	call   805691c <array_set>
 8050974:	83 c4 10             	add    $0x10,%esp
 8050977:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 805097b:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 805097f:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050982:	2b 45 b0             	sub    -0x50(%ebp),%eax
 8050985:	85 c0                	test   %eax,%eax
 8050987:	78 38                	js     80509c1 <strconv__Dec64_get_string_64+0x2b0>
 8050989:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805098c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805098f:	6a 00                	push   $0x0
 8050991:	6a 0a                	push   $0xa
 8050993:	52                   	push   %edx
 8050994:	50                   	push   %eax
 8050995:	e8 86 8a 01 00       	call   8069420 <__umoddi3>
 805099a:	83 c4 10             	add    $0x10,%esp
 805099d:	83 c0 30             	add    $0x30,%eax
 80509a0:	88 45 eb             	mov    %al,-0x15(%ebp)
 80509a3:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80509a6:	2b 45 b0             	sub    -0x50(%ebp),%eax
 80509a9:	83 ec 04             	sub    $0x4,%esp
 80509ac:	8d 55 eb             	lea    -0x15(%ebp),%edx
 80509af:	52                   	push   %edx
 80509b0:	50                   	push   %eax
 80509b1:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80509b4:	50                   	push   %eax
 80509b5:	e8 62 5f 00 00       	call   805691c <array_set>
 80509ba:	83 c4 10             	add    $0x10,%esp
 80509bd:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 80509c1:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)
 80509c5:	7e 27                	jle    80509ee <strconv__Dec64_get_string_64+0x2dd>
 80509c7:	c6 45 ec 30          	movb   $0x30,-0x14(%ebp)
 80509cb:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80509ce:	8d 50 01             	lea    0x1(%eax),%edx
 80509d1:	89 55 a8             	mov    %edx,-0x58(%ebp)
 80509d4:	83 ec 04             	sub    $0x4,%esp
 80509d7:	8d 55 ec             	lea    -0x14(%ebp),%edx
 80509da:	52                   	push   %edx
 80509db:	50                   	push   %eax
 80509dc:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80509df:	50                   	push   %eax
 80509e0:	e8 37 5f 00 00       	call   805691c <array_set>
 80509e5:	83 c4 10             	add    $0x10,%esp
 80509e8:	83 6d a4 01          	subl   $0x1,-0x5c(%ebp)
 80509ec:	eb d3                	jmp    80509c1 <strconv__Dec64_get_string_64+0x2b0>
 80509ee:	90                   	nop
 80509ef:	c6 45 ed 65          	movb   $0x65,-0x13(%ebp)
 80509f3:	83 ec 04             	sub    $0x4,%esp
 80509f6:	8d 45 ed             	lea    -0x13(%ebp),%eax
 80509f9:	50                   	push   %eax
 80509fa:	ff 75 a8             	pushl  -0x58(%ebp)
 80509fd:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050a00:	50                   	push   %eax
 8050a01:	e8 16 5f 00 00       	call   805691c <array_set>
 8050a06:	83 c4 10             	add    $0x10,%esp
 8050a09:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 8050a0d:	8b 55 9c             	mov    -0x64(%ebp),%edx
 8050a10:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8050a13:	01 d0                	add    %edx,%eax
 8050a15:	83 e8 01             	sub    $0x1,%eax
 8050a18:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8050a1b:	83 7d b4 00          	cmpl   $0x0,-0x4c(%ebp)
 8050a1f:	79 23                	jns    8050a44 <strconv__Dec64_get_string_64+0x333>
 8050a21:	c6 45 ee 2d          	movb   $0x2d,-0x12(%ebp)
 8050a25:	83 ec 04             	sub    $0x4,%esp
 8050a28:	8d 45 ee             	lea    -0x12(%ebp),%eax
 8050a2b:	50                   	push   %eax
 8050a2c:	ff 75 a8             	pushl  -0x58(%ebp)
 8050a2f:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050a32:	50                   	push   %eax
 8050a33:	e8 e4 5e 00 00       	call   805691c <array_set>
 8050a38:	83 c4 10             	add    $0x10,%esp
 8050a3b:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 8050a3f:	f7 5d b4             	negl   -0x4c(%ebp)
 8050a42:	eb 1e                	jmp    8050a62 <strconv__Dec64_get_string_64+0x351>
 8050a44:	c6 45 ef 2b          	movb   $0x2b,-0x11(%ebp)
 8050a48:	83 ec 04             	sub    $0x4,%esp
 8050a4b:	8d 45 ef             	lea    -0x11(%ebp),%eax
 8050a4e:	50                   	push   %eax
 8050a4f:	ff 75 a8             	pushl  -0x58(%ebp)
 8050a52:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050a55:	50                   	push   %eax
 8050a56:	e8 c1 5e 00 00       	call   805691c <array_set>
 8050a5b:	83 c4 10             	add    $0x10,%esp
 8050a5e:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 8050a62:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
 8050a65:	ba 67 66 66 66       	mov    $0x66666667,%edx
 8050a6a:	89 c8                	mov    %ecx,%eax
 8050a6c:	f7 ea                	imul   %edx
 8050a6e:	c1 fa 02             	sar    $0x2,%edx
 8050a71:	89 c8                	mov    %ecx,%eax
 8050a73:	c1 f8 1f             	sar    $0x1f,%eax
 8050a76:	29 c2                	sub    %eax,%edx
 8050a78:	89 d0                	mov    %edx,%eax
 8050a7a:	c1 e0 02             	shl    $0x2,%eax
 8050a7d:	01 d0                	add    %edx,%eax
 8050a7f:	01 c0                	add    %eax,%eax
 8050a81:	29 c1                	sub    %eax,%ecx
 8050a83:	89 c8                	mov    %ecx,%eax
 8050a85:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8050a88:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
 8050a8b:	ba 67 66 66 66       	mov    $0x66666667,%edx
 8050a90:	89 c8                	mov    %ecx,%eax
 8050a92:	f7 ea                	imul   %edx
 8050a94:	c1 fa 02             	sar    $0x2,%edx
 8050a97:	89 c8                	mov    %ecx,%eax
 8050a99:	c1 f8 1f             	sar    $0x1f,%eax
 8050a9c:	29 c2                	sub    %eax,%edx
 8050a9e:	89 d0                	mov    %edx,%eax
 8050aa0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8050aa3:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
 8050aa6:	ba 67 66 66 66       	mov    $0x66666667,%edx
 8050aab:	89 c8                	mov    %ecx,%eax
 8050aad:	f7 ea                	imul   %edx
 8050aaf:	c1 fa 02             	sar    $0x2,%edx
 8050ab2:	89 c8                	mov    %ecx,%eax
 8050ab4:	c1 f8 1f             	sar    $0x1f,%eax
 8050ab7:	29 c2                	sub    %eax,%edx
 8050ab9:	89 d0                	mov    %edx,%eax
 8050abb:	c1 e0 02             	shl    $0x2,%eax
 8050abe:	01 d0                	add    %edx,%eax
 8050ac0:	01 c0                	add    %eax,%eax
 8050ac2:	29 c1                	sub    %eax,%ecx
 8050ac4:	89 c8                	mov    %ecx,%eax
 8050ac6:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8050ac9:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
 8050acc:	ba 67 66 66 66       	mov    $0x66666667,%edx
 8050ad1:	89 c8                	mov    %ecx,%eax
 8050ad3:	f7 ea                	imul   %edx
 8050ad5:	c1 fa 02             	sar    $0x2,%edx
 8050ad8:	89 c8                	mov    %ecx,%eax
 8050ada:	c1 f8 1f             	sar    $0x1f,%eax
 8050add:	29 c2                	sub    %eax,%edx
 8050adf:	89 d0                	mov    %edx,%eax
 8050ae1:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8050ae4:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
 8050ae8:	7e 23                	jle    8050b0d <strconv__Dec64_get_string_64+0x3fc>
 8050aea:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8050aed:	83 c0 30             	add    $0x30,%eax
 8050af0:	88 45 f0             	mov    %al,-0x10(%ebp)
 8050af3:	83 ec 04             	sub    $0x4,%esp
 8050af6:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8050af9:	50                   	push   %eax
 8050afa:	ff 75 a8             	pushl  -0x58(%ebp)
 8050afd:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050b00:	50                   	push   %eax
 8050b01:	e8 16 5e 00 00       	call   805691c <array_set>
 8050b06:	83 c4 10             	add    $0x10,%esp
 8050b09:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 8050b0d:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8050b10:	83 c0 30             	add    $0x30,%eax
 8050b13:	88 45 f1             	mov    %al,-0xf(%ebp)
 8050b16:	83 ec 04             	sub    $0x4,%esp
 8050b19:	8d 45 f1             	lea    -0xf(%ebp),%eax
 8050b1c:	50                   	push   %eax
 8050b1d:	ff 75 a8             	pushl  -0x58(%ebp)
 8050b20:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050b23:	50                   	push   %eax
 8050b24:	e8 f3 5d 00 00       	call   805691c <array_set>
 8050b29:	83 c4 10             	add    $0x10,%esp
 8050b2c:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 8050b30:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8050b33:	83 c0 30             	add    $0x30,%eax
 8050b36:	88 45 f2             	mov    %al,-0xe(%ebp)
 8050b39:	83 ec 04             	sub    $0x4,%esp
 8050b3c:	8d 45 f2             	lea    -0xe(%ebp),%eax
 8050b3f:	50                   	push   %eax
 8050b40:	ff 75 a8             	pushl  -0x58(%ebp)
 8050b43:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050b46:	50                   	push   %eax
 8050b47:	e8 d0 5d 00 00       	call   805691c <array_set>
 8050b4c:	83 c4 10             	add    $0x10,%esp
 8050b4f:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 8050b53:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
 8050b57:	83 ec 04             	sub    $0x4,%esp
 8050b5a:	8d 45 f3             	lea    -0xd(%ebp),%eax
 8050b5d:	50                   	push   %eax
 8050b5e:	ff 75 a8             	pushl  -0x58(%ebp)
 8050b61:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8050b64:	50                   	push   %eax
 8050b65:	e8 b2 5d 00 00       	call   805691c <array_set>
 8050b6a:	83 c4 10             	add    $0x10,%esp
 8050b6d:	83 ec 0c             	sub    $0xc,%esp
 8050b70:	6a 00                	push   $0x0
 8050b72:	ff 75 e4             	pushl  -0x1c(%ebp)
 8050b75:	ff 75 e0             	pushl  -0x20(%ebp)
 8050b78:	ff 75 dc             	pushl  -0x24(%ebp)
 8050b7b:	ff 75 d8             	pushl  -0x28(%ebp)
 8050b7e:	e8 37 57 00 00       	call   80562ba <array_get>
 8050b83:	83 c4 20             	add    $0x20,%esp
 8050b86:	89 c2                	mov    %eax,%edx
 8050b88:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8050b8b:	83 ec 04             	sub    $0x4,%esp
 8050b8e:	ff 75 a8             	pushl  -0x58(%ebp)
 8050b91:	52                   	push   %edx
 8050b92:	50                   	push   %eax
 8050b93:	e8 62 c7 00 00       	call   805d2fa <tos>
 8050b98:	83 c4 0c             	add    $0xc,%esp
 8050b9b:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8050b9e:	8b 75 f4             	mov    -0xc(%ebp),%esi
 8050ba1:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
 8050ba8:	74 05                	je     8050baf <strconv__Dec64_get_string_64+0x49e>
 8050baa:	e8 71 7c ff ff       	call   8048820 <__stack_chk_fail@plt>
 8050baf:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8050bb2:	5b                   	pop    %ebx
 8050bb3:	5e                   	pop    %esi
 8050bb4:	5d                   	pop    %ebp
 8050bb5:	c2 04 00             	ret    $0x4

08050bb8 <strconv__f64_to_decimal_exact_int>:
 8050bb8:	55                   	push   %ebp
 8050bb9:	89 e5                	mov    %esp,%ebp
 8050bbb:	83 ec 48             	sub    $0x48,%esp
 8050bbe:	8b 45 0c             	mov    0xc(%ebp),%eax
 8050bc1:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8050bc4:	8b 45 10             	mov    0x10(%ebp),%eax
 8050bc7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8050bca:	8b 45 14             	mov    0x14(%ebp),%eax
 8050bcd:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8050bd0:	8b 45 18             	mov    0x18(%ebp),%eax
 8050bd3:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8050bd6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8050bdd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8050be4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8050beb:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8050bee:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8050bf1:	05 01 fc ff ff       	add    $0xfffffc01,%eax
 8050bf6:	83 d2 ff             	adc    $0xffffffff,%edx
 8050bf9:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8050bfc:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8050bff:	a1 38 32 07 08       	mov    0x8073238,%eax
 8050c04:	ba 00 00 00 00       	mov    $0x0,%edx
 8050c09:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
 8050c0c:	77 2d                	ja     8050c3b <strconv__f64_to_decimal_exact_int+0x83>
 8050c0e:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
 8050c11:	72 05                	jb     8050c18 <strconv__f64_to_decimal_exact_int+0x60>
 8050c13:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 8050c16:	73 23                	jae    8050c3b <strconv__f64_to_decimal_exact_int+0x83>
 8050c18:	8b 45 08             	mov    0x8(%ebp),%eax
 8050c1b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8050c1e:	89 10                	mov    %edx,(%eax)
 8050c20:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8050c23:	89 50 04             	mov    %edx,0x4(%eax)
 8050c26:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8050c29:	89 50 08             	mov    %edx,0x8(%eax)
 8050c2c:	8b 45 08             	mov    0x8(%ebp),%eax
 8050c2f:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
 8050c36:	e9 ea 00 00 00       	jmp    8050d25 <strconv__f64_to_decimal_exact_int+0x16d>
 8050c3b:	a1 38 32 07 08       	mov    0x8073238,%eax
 8050c40:	ba 00 00 00 00       	mov    $0x0,%edx
 8050c45:	2b 45 d0             	sub    -0x30(%ebp),%eax
 8050c48:	1b 55 d4             	sbb    -0x2c(%ebp),%edx
 8050c4b:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8050c4e:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8050c51:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050c54:	80 cc 00             	or     $0x0,%ah
 8050c57:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8050c5a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8050c5d:	0d 00 00 10 00       	or     $0x100000,%eax
 8050c62:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8050c65:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 8050c68:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8050c6b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8050c6e:	0f ad d0             	shrd   %cl,%edx,%eax
 8050c71:	d3 ea                	shr    %cl,%edx
 8050c73:	f6 c1 20             	test   $0x20,%cl
 8050c76:	74 04                	je     8050c7c <strconv__f64_to_decimal_exact_int+0xc4>
 8050c78:	89 d0                	mov    %edx,%eax
 8050c7a:	31 d2                	xor    %edx,%edx
 8050c7c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8050c7f:	89 55 f0             	mov    %edx,-0x10(%ebp)
 8050c82:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8050c85:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8050c88:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 8050c8b:	0f a5 c2             	shld   %cl,%eax,%edx
 8050c8e:	d3 e0                	shl    %cl,%eax
 8050c90:	f6 c1 20             	test   $0x20,%cl
 8050c93:	74 04                	je     8050c99 <strconv__f64_to_decimal_exact_int+0xe1>
 8050c95:	89 c2                	mov    %eax,%edx
 8050c97:	31 c0                	xor    %eax,%eax
 8050c99:	89 d1                	mov    %edx,%ecx
 8050c9b:	33 4d e4             	xor    -0x1c(%ebp),%ecx
 8050c9e:	33 45 e0             	xor    -0x20(%ebp),%eax
 8050ca1:	09 c8                	or     %ecx,%eax
 8050ca3:	85 c0                	test   %eax,%eax
 8050ca5:	74 20                	je     8050cc7 <strconv__f64_to_decimal_exact_int+0x10f>
 8050ca7:	8b 45 08             	mov    0x8(%ebp),%eax
 8050caa:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8050cad:	89 10                	mov    %edx,(%eax)
 8050caf:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8050cb2:	89 50 04             	mov    %edx,0x4(%eax)
 8050cb5:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8050cb8:	89 50 08             	mov    %edx,0x8(%eax)
 8050cbb:	8b 45 08             	mov    0x8(%ebp),%eax
 8050cbe:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
 8050cc5:	eb 5e                	jmp    8050d25 <strconv__f64_to_decimal_exact_int+0x16d>
 8050cc7:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8050cca:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8050ccd:	6a 00                	push   $0x0
 8050ccf:	6a 0a                	push   $0xa
 8050cd1:	52                   	push   %edx
 8050cd2:	50                   	push   %eax
 8050cd3:	e8 48 87 01 00       	call   8069420 <__umoddi3>
 8050cd8:	83 c4 10             	add    $0x10,%esp
 8050cdb:	09 d0                	or     %edx,%eax
 8050cdd:	85 c0                	test   %eax,%eax
 8050cdf:	75 25                	jne    8050d06 <strconv__f64_to_decimal_exact_int+0x14e>
 8050ce1:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8050ce4:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8050ce7:	6a 00                	push   $0x0
 8050ce9:	6a 0a                	push   $0xa
 8050ceb:	52                   	push   %edx
 8050cec:	50                   	push   %eax
 8050ced:	e8 fe 85 01 00       	call   80692f0 <__udivdi3>
 8050cf2:	83 c4 10             	add    $0x10,%esp
 8050cf5:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8050cf8:	89 55 f0             	mov    %edx,-0x10(%ebp)
 8050cfb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8050cfe:	83 c0 01             	add    $0x1,%eax
 8050d01:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8050d04:	eb c1                	jmp    8050cc7 <strconv__f64_to_decimal_exact_int+0x10f>
 8050d06:	90                   	nop
 8050d07:	8b 45 08             	mov    0x8(%ebp),%eax
 8050d0a:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8050d0d:	89 10                	mov    %edx,(%eax)
 8050d0f:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8050d12:	89 50 04             	mov    %edx,0x4(%eax)
 8050d15:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8050d18:	89 50 08             	mov    %edx,0x8(%eax)
 8050d1b:	8b 45 08             	mov    0x8(%ebp),%eax
 8050d1e:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
 8050d25:	8b 45 08             	mov    0x8(%ebp),%eax
 8050d28:	c9                   	leave  
 8050d29:	c2 04 00             	ret    $0x4

08050d2c <strconv__f64_to_decimal>:
 8050d2c:	55                   	push   %ebp
 8050d2d:	89 e5                	mov    %esp,%ebp
 8050d2f:	57                   	push   %edi
 8050d30:	56                   	push   %esi
 8050d31:	53                   	push   %ebx
 8050d32:	81 ec 0c 01 00 00    	sub    $0x10c,%esp
 8050d38:	8b 45 0c             	mov    0xc(%ebp),%eax
 8050d3b:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 8050d41:	8b 45 10             	mov    0x10(%ebp),%eax
 8050d44:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 8050d4a:	8b 45 14             	mov    0x14(%ebp),%eax
 8050d4d:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 8050d53:	8b 45 18             	mov    0x18(%ebp),%eax
 8050d56:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 8050d5c:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%ebp)
 8050d63:	00 00 00 
 8050d66:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%ebp)
 8050d6d:	00 00 00 
 8050d70:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%ebp)
 8050d77:	00 00 00 
 8050d7a:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 8050d80:	0b 85 f8 fe ff ff    	or     -0x108(%ebp),%eax
 8050d86:	85 c0                	test   %eax,%eax
 8050d88:	75 2e                	jne    8050db8 <strconv__f64_to_decimal+0x8c>
 8050d8a:	a1 38 32 07 08       	mov    0x8073238,%eax
 8050d8f:	89 c2                	mov    %eax,%edx
 8050d91:	b8 00 fc ff ff       	mov    $0xfffffc00,%eax
 8050d96:	29 d0                	sub    %edx,%eax
 8050d98:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 8050d9e:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 8050da4:	8b 95 04 ff ff ff    	mov    -0xfc(%ebp),%edx
 8050daa:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 8050db0:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)
 8050db6:	eb 54                	jmp    8050e0c <strconv__f64_to_decimal+0xe0>
 8050db8:	8b 95 f8 fe ff ff    	mov    -0x108(%ebp),%edx
 8050dbe:	a1 38 32 07 08       	mov    0x8073238,%eax
 8050dc3:	29 c2                	sub    %eax,%edx
 8050dc5:	89 d0                	mov    %edx,%eax
 8050dc7:	2d 01 04 00 00       	sub    $0x401,%eax
 8050dcc:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 8050dd2:	8b 0d 38 32 07 08    	mov    0x8073238,%ecx
 8050dd8:	b8 01 00 00 00       	mov    $0x1,%eax
 8050ddd:	ba 00 00 00 00       	mov    $0x0,%edx
 8050de2:	0f a5 c2             	shld   %cl,%eax,%edx
 8050de5:	d3 e0                	shl    %cl,%eax
 8050de7:	f6 c1 20             	test   $0x20,%cl
 8050dea:	74 04                	je     8050df0 <strconv__f64_to_decimal+0xc4>
 8050dec:	89 c2                	mov    %eax,%edx
 8050dee:	31 c0                	xor    %eax,%eax
 8050df0:	89 c1                	mov    %eax,%ecx
 8050df2:	0b 8d 00 ff ff ff    	or     -0x100(%ebp),%ecx
 8050df8:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%ebp)
 8050dfe:	89 d0                	mov    %edx,%eax
 8050e00:	0b 85 04 ff ff ff    	or     -0xfc(%ebp),%eax
 8050e06:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 8050e0c:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8050e12:	83 e0 01             	and    $0x1,%eax
 8050e15:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8050e1b:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8050e21:	83 e0 00             	and    $0x0,%eax
 8050e24:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8050e2a:	8b 8d f0 fe ff ff    	mov    -0x110(%ebp),%ecx
 8050e30:	8b 9d f4 fe ff ff    	mov    -0x10c(%ebp),%ebx
 8050e36:	89 c8                	mov    %ecx,%eax
 8050e38:	09 d8                	or     %ebx,%eax
 8050e3a:	85 c0                	test   %eax,%eax
 8050e3c:	0f 94 c0             	sete   %al
 8050e3f:	0f b6 c0             	movzbl %al,%eax
 8050e42:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 8050e48:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 8050e4e:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 8050e54:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8050e5a:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 8050e60:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 8050e64:	c1 e0 02             	shl    $0x2,%eax
 8050e67:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8050e6d:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
 8050e73:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 8050e79:	0b 85 00 ff ff ff    	or     -0x100(%ebp),%eax
 8050e7f:	85 c0                	test   %eax,%eax
 8050e81:	75 1b                	jne    8050e9e <strconv__f64_to_decimal+0x172>
 8050e83:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%ebp)
 8050e8a:	77 19                	ja     8050ea5 <strconv__f64_to_decimal+0x179>
 8050e8c:	83 bd fc fe ff ff 00 	cmpl   $0x0,-0x104(%ebp)
 8050e93:	72 09                	jb     8050e9e <strconv__f64_to_decimal+0x172>
 8050e95:	83 bd f8 fe ff ff 01 	cmpl   $0x1,-0x108(%ebp)
 8050e9c:	77 07                	ja     8050ea5 <strconv__f64_to_decimal+0x179>
 8050e9e:	b8 01 00 00 00       	mov    $0x1,%eax
 8050ea3:	eb 05                	jmp    8050eaa <strconv__f64_to_decimal+0x17e>
 8050ea5:	b8 00 00 00 00       	mov    $0x0,%eax
 8050eaa:	83 ec 0c             	sub    $0xc,%esp
 8050ead:	50                   	push   %eax
 8050eae:	e8 88 3d 00 00       	call   8054c3b <strconv__bool_to_u64>
 8050eb3:	83 c4 10             	add    $0x10,%esp
 8050eb6:	89 45 80             	mov    %eax,-0x80(%ebp)
 8050eb9:	89 55 84             	mov    %edx,-0x7c(%ebp)
 8050ebc:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%ebp)
 8050ec3:	00 00 00 
 8050ec6:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%ebp)
 8050ecd:	00 00 00 
 8050ed0:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%ebp)
 8050ed7:	00 00 00 
 8050eda:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 8050ee1:	00 00 00 
 8050ee4:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%ebp)
 8050eeb:	00 00 00 
 8050eee:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%ebp)
 8050ef5:	00 00 00 
 8050ef8:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)
 8050eff:	00 00 00 
 8050f02:	c7 85 1c ff ff ff 00 	movl   $0x0,-0xe4(%ebp)
 8050f09:	00 00 00 
 8050f0c:	c7 85 20 ff ff ff 00 	movl   $0x0,-0xe0(%ebp)
 8050f13:	00 00 00 
 8050f16:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%ebp)
 8050f1d:	0f 88 5a 02 00 00    	js     805117d <strconv__f64_to_decimal+0x451>
 8050f23:	83 ec 0c             	sub    $0xc,%esp
 8050f26:	ff b5 14 ff ff ff    	pushl  -0xec(%ebp)
 8050f2c:	e8 bc 40 00 00       	call   8054fed <strconv__log10_pow2>
 8050f31:	83 c4 10             	add    $0x10,%esp
 8050f34:	89 c3                	mov    %eax,%ebx
 8050f36:	83 bd 14 ff ff ff 03 	cmpl   $0x3,-0xec(%ebp)
 8050f3d:	0f 9f c0             	setg   %al
 8050f40:	0f b6 c0             	movzbl %al,%eax
 8050f43:	83 ec 0c             	sub    $0xc,%esp
 8050f46:	50                   	push   %eax
 8050f47:	e8 d8 3c 00 00       	call   8054c24 <strconv__bool_to_u32>
 8050f4c:	83 c4 10             	add    $0x10,%esp
 8050f4f:	29 c3                	sub    %eax,%ebx
 8050f51:	89 d8                	mov    %ebx,%eax
 8050f53:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 8050f59:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 8050f5f:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 8050f65:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 8050f6b:	83 ec 0c             	sub    $0xc,%esp
 8050f6e:	50                   	push   %eax
 8050f6f:	e8 6d 41 00 00       	call   80550e1 <strconv__pow5_bits>
 8050f74:	83 c4 10             	add    $0x10,%esp
 8050f77:	83 c0 79             	add    $0x79,%eax
 8050f7a:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 8050f80:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 8050f86:	2b 85 14 ff ff ff    	sub    -0xec(%ebp),%eax
 8050f8c:	89 c2                	mov    %eax,%edx
 8050f8e:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 8050f94:	01 d0                	add    %edx,%eax
 8050f96:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 8050f9c:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 8050fa2:	83 ec 0c             	sub    $0xc,%esp
 8050fa5:	50                   	push   %eax
 8050fa6:	ff 35 2c 31 07 08    	pushl  0x807312c
 8050fac:	ff 35 28 31 07 08    	pushl  0x8073128
 8050fb2:	ff 35 24 31 07 08    	pushl  0x8073124
 8050fb8:	ff 35 20 31 07 08    	pushl  0x8073120
 8050fbe:	e8 f7 52 00 00       	call   80562ba <array_get>
 8050fc3:	83 c4 20             	add    $0x20,%esp
 8050fc6:	8b 10                	mov    (%eax),%edx
 8050fc8:	89 55 d8             	mov    %edx,-0x28(%ebp)
 8050fcb:	8b 50 04             	mov    0x4(%eax),%edx
 8050fce:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8050fd1:	8b 50 08             	mov    0x8(%eax),%edx
 8050fd4:	89 55 e0             	mov    %edx,-0x20(%ebp)
 8050fd7:	8b 40 0c             	mov    0xc(%eax),%eax
 8050fda:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8050fdd:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8050fe3:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 8050fe9:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 8050fed:	c1 e0 02             	shl    $0x2,%eax
 8050ff0:	83 ec 04             	sub    $0x4,%esp
 8050ff3:	ff b5 3c ff ff ff    	pushl  -0xc4(%ebp)
 8050ff9:	ff 75 e4             	pushl  -0x1c(%ebp)
 8050ffc:	ff 75 e0             	pushl  -0x20(%ebp)
 8050fff:	ff 75 dc             	pushl  -0x24(%ebp)
 8051002:	ff 75 d8             	pushl  -0x28(%ebp)
 8051005:	52                   	push   %edx
 8051006:	50                   	push   %eax
 8051007:	e8 7b 42 00 00       	call   8055287 <strconv__mul_shift_64>
 805100c:	83 c4 20             	add    $0x20,%esp
 805100f:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 8051015:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 805101b:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8051021:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 8051027:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 805102b:	c1 e0 02             	shl    $0x2,%eax
 805102e:	83 c0 02             	add    $0x2,%eax
 8051031:	83 d2 00             	adc    $0x0,%edx
 8051034:	83 ec 04             	sub    $0x4,%esp
 8051037:	ff b5 3c ff ff ff    	pushl  -0xc4(%ebp)
 805103d:	ff 75 e4             	pushl  -0x1c(%ebp)
 8051040:	ff 75 e0             	pushl  -0x20(%ebp)
 8051043:	ff 75 dc             	pushl  -0x24(%ebp)
 8051046:	ff 75 d8             	pushl  -0x28(%ebp)
 8051049:	52                   	push   %edx
 805104a:	50                   	push   %eax
 805104b:	e8 37 42 00 00       	call   8055287 <strconv__mul_shift_64>
 8051050:	83 c4 20             	add    $0x20,%esp
 8051053:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 8051059:	89 95 64 ff ff ff    	mov    %edx,-0x9c(%ebp)
 805105f:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8051065:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 805106b:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 805106f:	c1 e0 02             	shl    $0x2,%eax
 8051072:	2b 45 80             	sub    -0x80(%ebp),%eax
 8051075:	1b 55 84             	sbb    -0x7c(%ebp),%edx
 8051078:	83 c0 ff             	add    $0xffffffff,%eax
 805107b:	83 d2 ff             	adc    $0xffffffff,%edx
 805107e:	83 ec 04             	sub    $0x4,%esp
 8051081:	ff b5 3c ff ff ff    	pushl  -0xc4(%ebp)
 8051087:	ff 75 e4             	pushl  -0x1c(%ebp)
 805108a:	ff 75 e0             	pushl  -0x20(%ebp)
 805108d:	ff 75 dc             	pushl  -0x24(%ebp)
 8051090:	ff 75 d8             	pushl  -0x28(%ebp)
 8051093:	52                   	push   %edx
 8051094:	50                   	push   %eax
 8051095:	e8 ed 41 00 00       	call   8055287 <strconv__mul_shift_64>
 805109a:	83 c4 20             	add    $0x20,%esp
 805109d:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 80510a3:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
 80510a9:	83 bd 34 ff ff ff 15 	cmpl   $0x15,-0xcc(%ebp)
 80510b0:	0f 87 fe 02 00 00    	ja     80513b4 <strconv__f64_to_decimal+0x688>
 80510b6:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80510bc:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 80510c2:	6a 00                	push   $0x0
 80510c4:	6a 05                	push   $0x5
 80510c6:	52                   	push   %edx
 80510c7:	50                   	push   %eax
 80510c8:	e8 53 83 01 00       	call   8069420 <__umoddi3>
 80510cd:	83 c4 10             	add    $0x10,%esp
 80510d0:	09 d0                	or     %edx,%eax
 80510d2:	85 c0                	test   %eax,%eax
 80510d4:	75 28                	jne    80510fe <strconv__f64_to_decimal+0x3d2>
 80510d6:	83 ec 04             	sub    $0x4,%esp
 80510d9:	ff b5 34 ff ff ff    	pushl  -0xcc(%ebp)
 80510df:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 80510e5:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 80510eb:	e8 0c 43 00 00       	call   80553fc <strconv__multiple_of_power_of_five_64>
 80510f0:	83 c4 10             	add    $0x10,%esp
 80510f3:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 80510f9:	e9 b6 02 00 00       	jmp    80513b4 <strconv__f64_to_decimal+0x688>
 80510fe:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%ebp)
 8051105:	74 36                	je     805113d <strconv__f64_to_decimal+0x411>
 8051107:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 805110d:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 8051113:	2b 45 80             	sub    -0x80(%ebp),%eax
 8051116:	1b 55 84             	sbb    -0x7c(%ebp),%edx
 8051119:	83 c0 ff             	add    $0xffffffff,%eax
 805111c:	83 d2 ff             	adc    $0xffffffff,%edx
 805111f:	83 ec 04             	sub    $0x4,%esp
 8051122:	ff b5 34 ff ff ff    	pushl  -0xcc(%ebp)
 8051128:	52                   	push   %edx
 8051129:	50                   	push   %eax
 805112a:	e8 cd 42 00 00       	call   80553fc <strconv__multiple_of_power_of_five_64>
 805112f:	83 c4 10             	add    $0x10,%esp
 8051132:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 8051138:	e9 77 02 00 00       	jmp    80513b4 <strconv__f64_to_decimal+0x688>
 805113d:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8051143:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 8051149:	83 c0 02             	add    $0x2,%eax
 805114c:	83 d2 00             	adc    $0x0,%edx
 805114f:	83 ec 04             	sub    $0x4,%esp
 8051152:	ff b5 34 ff ff ff    	pushl  -0xcc(%ebp)
 8051158:	52                   	push   %edx
 8051159:	50                   	push   %eax
 805115a:	e8 9d 42 00 00       	call   80553fc <strconv__multiple_of_power_of_five_64>
 805115f:	83 c4 10             	add    $0x10,%esp
 8051162:	85 c0                	test   %eax,%eax
 8051164:	0f 84 4a 02 00 00    	je     80513b4 <strconv__f64_to_decimal+0x688>
 805116a:	83 85 60 ff ff ff ff 	addl   $0xffffffff,-0xa0(%ebp)
 8051171:	83 95 64 ff ff ff ff 	adcl   $0xffffffff,-0x9c(%ebp)
 8051178:	e9 37 02 00 00       	jmp    80513b4 <strconv__f64_to_decimal+0x688>
 805117d:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8051183:	f7 d8                	neg    %eax
 8051185:	83 ec 0c             	sub    $0xc,%esp
 8051188:	50                   	push   %eax
 8051189:	e8 d9 3e 00 00       	call   8055067 <strconv__log10_pow5>
 805118e:	83 c4 10             	add    $0x10,%esp
 8051191:	89 c3                	mov    %eax,%ebx
 8051193:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8051199:	f7 d8                	neg    %eax
 805119b:	83 f8 01             	cmp    $0x1,%eax
 805119e:	0f 9f c0             	setg   %al
 80511a1:	0f b6 c0             	movzbl %al,%eax
 80511a4:	83 ec 0c             	sub    $0xc,%esp
 80511a7:	50                   	push   %eax
 80511a8:	e8 77 3a 00 00       	call   8054c24 <strconv__bool_to_u32>
 80511ad:	83 c4 10             	add    $0x10,%esp
 80511b0:	29 c3                	sub    %eax,%ebx
 80511b2:	89 d8                	mov    %ebx,%eax
 80511b4:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 80511ba:	8b 95 40 ff ff ff    	mov    -0xc0(%ebp),%edx
 80511c0:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80511c6:	01 d0                	add    %edx,%eax
 80511c8:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 80511ce:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80511d4:	f7 d8                	neg    %eax
 80511d6:	89 c2                	mov    %eax,%edx
 80511d8:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 80511de:	29 c2                	sub    %eax,%edx
 80511e0:	89 d0                	mov    %edx,%eax
 80511e2:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 80511e8:	83 ec 0c             	sub    $0xc,%esp
 80511eb:	ff b5 44 ff ff ff    	pushl  -0xbc(%ebp)
 80511f1:	e8 eb 3e 00 00       	call   80550e1 <strconv__pow5_bits>
 80511f6:	83 c4 10             	add    $0x10,%esp
 80511f9:	83 e8 79             	sub    $0x79,%eax
 80511fc:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
 8051202:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8051208:	2b 85 48 ff ff ff    	sub    -0xb8(%ebp),%eax
 805120e:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 8051214:	83 ec 0c             	sub    $0xc,%esp
 8051217:	ff b5 44 ff ff ff    	pushl  -0xbc(%ebp)
 805121d:	ff 35 34 32 07 08    	pushl  0x8073234
 8051223:	ff 35 30 32 07 08    	pushl  0x8073230
 8051229:	ff 35 2c 32 07 08    	pushl  0x807322c
 805122f:	ff 35 28 32 07 08    	pushl  0x8073228
 8051235:	e8 80 50 00 00       	call   80562ba <array_get>
 805123a:	83 c4 20             	add    $0x20,%esp
 805123d:	8b 10                	mov    (%eax),%edx
 805123f:	89 55 d8             	mov    %edx,-0x28(%ebp)
 8051242:	8b 50 04             	mov    0x4(%eax),%edx
 8051245:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8051248:	8b 50 08             	mov    0x8(%eax),%edx
 805124b:	89 55 e0             	mov    %edx,-0x20(%ebp)
 805124e:	8b 40 0c             	mov    0xc(%eax),%eax
 8051251:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8051254:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 805125a:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 8051260:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 8051264:	c1 e0 02             	shl    $0x2,%eax
 8051267:	83 ec 04             	sub    $0x4,%esp
 805126a:	ff b5 4c ff ff ff    	pushl  -0xb4(%ebp)
 8051270:	ff 75 e4             	pushl  -0x1c(%ebp)
 8051273:	ff 75 e0             	pushl  -0x20(%ebp)
 8051276:	ff 75 dc             	pushl  -0x24(%ebp)
 8051279:	ff 75 d8             	pushl  -0x28(%ebp)
 805127c:	52                   	push   %edx
 805127d:	50                   	push   %eax
 805127e:	e8 04 40 00 00       	call   8055287 <strconv__mul_shift_64>
 8051283:	83 c4 20             	add    $0x20,%esp
 8051286:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 805128c:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 8051292:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8051298:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 805129e:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 80512a2:	c1 e0 02             	shl    $0x2,%eax
 80512a5:	83 c0 02             	add    $0x2,%eax
 80512a8:	83 d2 00             	adc    $0x0,%edx
 80512ab:	83 ec 04             	sub    $0x4,%esp
 80512ae:	ff b5 4c ff ff ff    	pushl  -0xb4(%ebp)
 80512b4:	ff 75 e4             	pushl  -0x1c(%ebp)
 80512b7:	ff 75 e0             	pushl  -0x20(%ebp)
 80512ba:	ff 75 dc             	pushl  -0x24(%ebp)
 80512bd:	ff 75 d8             	pushl  -0x28(%ebp)
 80512c0:	52                   	push   %edx
 80512c1:	50                   	push   %eax
 80512c2:	e8 c0 3f 00 00       	call   8055287 <strconv__mul_shift_64>
 80512c7:	83 c4 20             	add    $0x20,%esp
 80512ca:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 80512d0:	89 95 64 ff ff ff    	mov    %edx,-0x9c(%ebp)
 80512d6:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 80512dc:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 80512e2:	0f a4 c2 02          	shld   $0x2,%eax,%edx
 80512e6:	c1 e0 02             	shl    $0x2,%eax
 80512e9:	2b 45 80             	sub    -0x80(%ebp),%eax
 80512ec:	1b 55 84             	sbb    -0x7c(%ebp),%edx
 80512ef:	83 c0 ff             	add    $0xffffffff,%eax
 80512f2:	83 d2 ff             	adc    $0xffffffff,%edx
 80512f5:	83 ec 04             	sub    $0x4,%esp
 80512f8:	ff b5 4c ff ff ff    	pushl  -0xb4(%ebp)
 80512fe:	ff 75 e4             	pushl  -0x1c(%ebp)
 8051301:	ff 75 e0             	pushl  -0x20(%ebp)
 8051304:	ff 75 dc             	pushl  -0x24(%ebp)
 8051307:	ff 75 d8             	pushl  -0x28(%ebp)
 805130a:	52                   	push   %edx
 805130b:	50                   	push   %eax
 805130c:	e8 76 3f 00 00       	call   8055287 <strconv__mul_shift_64>
 8051311:	83 c4 20             	add    $0x20,%esp
 8051314:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 805131a:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
 8051320:	83 bd 40 ff ff ff 01 	cmpl   $0x1,-0xc0(%ebp)
 8051327:	77 5b                	ja     8051384 <strconv__f64_to_decimal+0x658>
 8051329:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%ebp)
 8051330:	00 00 00 
 8051333:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%ebp)
 805133a:	74 38                	je     8051374 <strconv__f64_to_decimal+0x648>
 805133c:	8b 45 80             	mov    -0x80(%ebp),%eax
 805133f:	83 f0 01             	xor    $0x1,%eax
 8051342:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 8051348:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805134b:	80 f4 00             	xor    $0x0,%ah
 805134e:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8051354:	8b 8d e8 fe ff ff    	mov    -0x118(%ebp),%ecx
 805135a:	8b 9d ec fe ff ff    	mov    -0x114(%ebp),%ebx
 8051360:	89 c8                	mov    %ecx,%eax
 8051362:	09 d8                	or     %ebx,%eax
 8051364:	85 c0                	test   %eax,%eax
 8051366:	0f 94 c0             	sete   %al
 8051369:	0f b6 c0             	movzbl %al,%eax
 805136c:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 8051372:	eb 40                	jmp    80513b4 <strconv__f64_to_decimal+0x688>
 8051374:	83 85 60 ff ff ff ff 	addl   $0xffffffff,-0xa0(%ebp)
 805137b:	83 95 64 ff ff ff ff 	adcl   $0xffffffff,-0x9c(%ebp)
 8051382:	eb 30                	jmp    80513b4 <strconv__f64_to_decimal+0x688>
 8051384:	83 bd 40 ff ff ff 3e 	cmpl   $0x3e,-0xc0(%ebp)
 805138b:	77 27                	ja     80513b4 <strconv__f64_to_decimal+0x688>
 805138d:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8051393:	83 e8 01             	sub    $0x1,%eax
 8051396:	83 ec 04             	sub    $0x4,%esp
 8051399:	50                   	push   %eax
 805139a:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 80513a0:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 80513a6:	e8 7f 40 00 00       	call   805542a <strconv__multiple_of_power_of_two_64>
 80513ab:	83 c4 10             	add    $0x10,%esp
 80513ae:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 80513b4:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%ebp)
 80513bb:	00 00 00 
 80513be:	c6 85 13 ff ff ff 00 	movb   $0x0,-0xed(%ebp)
 80513c5:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%ebp)
 80513cc:	00 00 00 
 80513cf:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%ebp)
 80513d6:	00 00 00 
 80513d9:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%ebp)
 80513e0:	75 0d                	jne    80513ef <strconv__f64_to_decimal+0x6c3>
 80513e2:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%ebp)
 80513e9:	0f 84 1e 03 00 00    	je     805170d <strconv__f64_to_decimal+0x9e1>
 80513ef:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 80513f5:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 80513fb:	6a 00                	push   $0x0
 80513fd:	6a 0a                	push   $0xa
 80513ff:	52                   	push   %edx
 8051400:	50                   	push   %eax
 8051401:	e8 ea 7e 01 00       	call   80692f0 <__udivdi3>
 8051406:	83 c4 10             	add    $0x10,%esp
 8051409:	89 45 88             	mov    %eax,-0x78(%ebp)
 805140c:	89 55 8c             	mov    %edx,-0x74(%ebp)
 805140f:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8051415:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 805141b:	6a 00                	push   $0x0
 805141d:	6a 0a                	push   $0xa
 805141f:	52                   	push   %edx
 8051420:	50                   	push   %eax
 8051421:	e8 ca 7e 01 00       	call   80692f0 <__udivdi3>
 8051426:	83 c4 10             	add    $0x10,%esp
 8051429:	89 45 90             	mov    %eax,-0x70(%ebp)
 805142c:	89 55 94             	mov    %edx,-0x6c(%ebp)
 805142f:	8b 45 88             	mov    -0x78(%ebp),%eax
 8051432:	8b 55 8c             	mov    -0x74(%ebp),%edx
 8051435:	3b 55 94             	cmp    -0x6c(%ebp),%edx
 8051438:	77 12                	ja     805144c <strconv__f64_to_decimal+0x720>
 805143a:	3b 55 94             	cmp    -0x6c(%ebp),%edx
 805143d:	0f 82 fd 00 00 00    	jb     8051540 <strconv__f64_to_decimal+0x814>
 8051443:	3b 45 90             	cmp    -0x70(%ebp),%eax
 8051446:	0f 86 f4 00 00 00    	jbe    8051540 <strconv__f64_to_decimal+0x814>
 805144c:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8051452:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 8051458:	6a 00                	push   $0x0
 805145a:	6a 0a                	push   $0xa
 805145c:	52                   	push   %edx
 805145d:	50                   	push   %eax
 805145e:	e8 bd 7f 01 00       	call   8069420 <__umoddi3>
 8051463:	83 c4 10             	add    $0x10,%esp
 8051466:	89 45 98             	mov    %eax,-0x68(%ebp)
 8051469:	89 55 9c             	mov    %edx,-0x64(%ebp)
 805146c:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8051472:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 8051478:	6a 00                	push   $0x0
 805147a:	6a 0a                	push   $0xa
 805147c:	52                   	push   %edx
 805147d:	50                   	push   %eax
 805147e:	e8 6d 7e 01 00       	call   80692f0 <__udivdi3>
 8051483:	83 c4 10             	add    $0x10,%esp
 8051486:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8051489:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 805148c:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8051492:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 8051498:	6a 00                	push   $0x0
 805149a:	6a 0a                	push   $0xa
 805149c:	52                   	push   %edx
 805149d:	50                   	push   %eax
 805149e:	e8 7d 7f 01 00       	call   8069420 <__umoddi3>
 80514a3:	83 c4 10             	add    $0x10,%esp
 80514a6:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80514a9:	89 55 ac             	mov    %edx,-0x54(%ebp)
 80514ac:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%ebp)
 80514b3:	74 11                	je     80514c6 <strconv__f64_to_decimal+0x79a>
 80514b5:	8b 45 9c             	mov    -0x64(%ebp),%eax
 80514b8:	0b 45 98             	or     -0x68(%ebp),%eax
 80514bb:	85 c0                	test   %eax,%eax
 80514bd:	75 07                	jne    80514c6 <strconv__f64_to_decimal+0x79a>
 80514bf:	b8 01 00 00 00       	mov    $0x1,%eax
 80514c4:	eb 05                	jmp    80514cb <strconv__f64_to_decimal+0x79f>
 80514c6:	b8 00 00 00 00       	mov    $0x0,%eax
 80514cb:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 80514d1:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%ebp)
 80514d8:	74 10                	je     80514ea <strconv__f64_to_decimal+0x7be>
 80514da:	80 bd 13 ff ff ff 00 	cmpb   $0x0,-0xed(%ebp)
 80514e1:	75 07                	jne    80514ea <strconv__f64_to_decimal+0x7be>
 80514e3:	b8 01 00 00 00       	mov    $0x1,%eax
 80514e8:	eb 05                	jmp    80514ef <strconv__f64_to_decimal+0x7c3>
 80514ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80514ef:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 80514f5:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80514f8:	88 85 13 ff ff ff    	mov    %al,-0xed(%ebp)
 80514fe:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8051501:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 8051504:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 805150a:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 8051510:	8b 45 88             	mov    -0x78(%ebp),%eax
 8051513:	8b 55 8c             	mov    -0x74(%ebp),%edx
 8051516:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 805151c:	89 95 64 ff ff ff    	mov    %edx,-0x9c(%ebp)
 8051522:	8b 45 90             	mov    -0x70(%ebp),%eax
 8051525:	8b 55 94             	mov    -0x6c(%ebp),%edx
 8051528:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 805152e:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
 8051534:	83 85 24 ff ff ff 01 	addl   $0x1,-0xdc(%ebp)
 805153b:	e9 af fe ff ff       	jmp    80513ef <strconv__f64_to_decimal+0x6c3>
 8051540:	90                   	nop
 8051541:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%ebp)
 8051548:	0f 84 1e 01 00 00    	je     805166c <strconv__f64_to_decimal+0x940>
 805154e:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8051554:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 805155a:	6a 00                	push   $0x0
 805155c:	6a 0a                	push   $0xa
 805155e:	52                   	push   %edx
 805155f:	50                   	push   %eax
 8051560:	e8 8b 7d 01 00       	call   80692f0 <__udivdi3>
 8051565:	83 c4 10             	add    $0x10,%esp
 8051568:	89 45 b0             	mov    %eax,-0x50(%ebp)
 805156b:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 805156e:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8051574:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 805157a:	6a 00                	push   $0x0
 805157c:	6a 0a                	push   $0xa
 805157e:	52                   	push   %edx
 805157f:	50                   	push   %eax
 8051580:	e8 9b 7e 01 00       	call   8069420 <__umoddi3>
 8051585:	83 c4 10             	add    $0x10,%esp
 8051588:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805158b:	89 55 bc             	mov    %edx,-0x44(%ebp)
 805158e:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8051591:	0b 45 b8             	or     -0x48(%ebp),%eax
 8051594:	85 c0                	test   %eax,%eax
 8051596:	0f 85 cf 00 00 00    	jne    805166b <strconv__f64_to_decimal+0x93f>
 805159c:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 80515a2:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 80515a8:	6a 00                	push   $0x0
 80515aa:	6a 0a                	push   $0xa
 80515ac:	52                   	push   %edx
 80515ad:	50                   	push   %eax
 80515ae:	e8 3d 7d 01 00       	call   80692f0 <__udivdi3>
 80515b3:	83 c4 10             	add    $0x10,%esp
 80515b6:	89 45 c0             	mov    %eax,-0x40(%ebp)
 80515b9:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 80515bc:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80515c2:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 80515c8:	6a 00                	push   $0x0
 80515ca:	6a 0a                	push   $0xa
 80515cc:	52                   	push   %edx
 80515cd:	50                   	push   %eax
 80515ce:	e8 1d 7d 01 00       	call   80692f0 <__udivdi3>
 80515d3:	83 c4 10             	add    $0x10,%esp
 80515d6:	89 45 c8             	mov    %eax,-0x38(%ebp)
 80515d9:	89 55 cc             	mov    %edx,-0x34(%ebp)
 80515dc:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80515e2:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 80515e8:	6a 00                	push   $0x0
 80515ea:	6a 0a                	push   $0xa
 80515ec:	52                   	push   %edx
 80515ed:	50                   	push   %eax
 80515ee:	e8 2d 7e 01 00       	call   8069420 <__umoddi3>
 80515f3:	83 c4 10             	add    $0x10,%esp
 80515f6:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80515f9:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 80515fc:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%ebp)
 8051603:	74 10                	je     8051615 <strconv__f64_to_decimal+0x8e9>
 8051605:	80 bd 13 ff ff ff 00 	cmpb   $0x0,-0xed(%ebp)
 805160c:	75 07                	jne    8051615 <strconv__f64_to_decimal+0x8e9>
 805160e:	b8 01 00 00 00       	mov    $0x1,%eax
 8051613:	eb 05                	jmp    805161a <strconv__f64_to_decimal+0x8ee>
 8051615:	b8 00 00 00 00       	mov    $0x0,%eax
 805161a:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 8051620:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8051623:	88 85 13 ff ff ff    	mov    %al,-0xed(%ebp)
 8051629:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805162c:	8b 55 cc             	mov    -0x34(%ebp),%edx
 805162f:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 8051635:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 805163b:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805163e:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8051641:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 8051647:	89 95 64 ff ff ff    	mov    %edx,-0x9c(%ebp)
 805164d:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8051650:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8051653:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8051659:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
 805165f:	83 85 24 ff ff ff 01 	addl   $0x1,-0xdc(%ebp)
 8051666:	e9 e3 fe ff ff       	jmp    805154e <strconv__f64_to_decimal+0x822>
 805166b:	90                   	nop
 805166c:	83 bd 20 ff ff ff 00 	cmpl   $0x0,-0xe0(%ebp)
 8051673:	74 2e                	je     80516a3 <strconv__f64_to_decimal+0x977>
 8051675:	80 bd 13 ff ff ff 05 	cmpb   $0x5,-0xed(%ebp)
 805167c:	75 25                	jne    80516a3 <strconv__f64_to_decimal+0x977>
 805167e:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8051684:	83 e0 01             	and    $0x1,%eax
 8051687:	89 c6                	mov    %eax,%esi
 8051689:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 805168f:	83 e0 00             	and    $0x0,%eax
 8051692:	89 c7                	mov    %eax,%edi
 8051694:	89 f8                	mov    %edi,%eax
 8051696:	09 f0                	or     %esi,%eax
 8051698:	85 c0                	test   %eax,%eax
 805169a:	75 07                	jne    80516a3 <strconv__f64_to_decimal+0x977>
 805169c:	c6 85 13 ff ff ff 04 	movb   $0x4,-0xed(%ebp)
 80516a3:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80516a9:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 80516af:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 80516b5:	89 95 74 ff ff ff    	mov    %edx,-0x8c(%ebp)
 80516bb:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80516c1:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 80516c7:	89 d1                	mov    %edx,%ecx
 80516c9:	33 8d 6c ff ff ff    	xor    -0x94(%ebp),%ecx
 80516cf:	33 85 68 ff ff ff    	xor    -0x98(%ebp),%eax
 80516d5:	09 c8                	or     %ecx,%eax
 80516d7:	85 c0                	test   %eax,%eax
 80516d9:	75 12                	jne    80516ed <strconv__f64_to_decimal+0x9c1>
 80516db:	83 bd 30 ff ff ff 00 	cmpl   $0x0,-0xd0(%ebp)
 80516e2:	74 16                	je     80516fa <strconv__f64_to_decimal+0x9ce>
 80516e4:	83 bd 1c ff ff ff 00 	cmpl   $0x0,-0xe4(%ebp)
 80516eb:	74 0d                	je     80516fa <strconv__f64_to_decimal+0x9ce>
 80516ed:	80 bd 13 ff ff ff 04 	cmpb   $0x4,-0xed(%ebp)
 80516f4:	0f 86 8e 02 00 00    	jbe    8051988 <strconv__f64_to_decimal+0xc5c>
 80516fa:	83 85 70 ff ff ff 01 	addl   $0x1,-0x90(%ebp)
 8051701:	83 95 74 ff ff ff 00 	adcl   $0x0,-0x8c(%ebp)
 8051708:	e9 7b 02 00 00       	jmp    8051988 <strconv__f64_to_decimal+0xc5c>
 805170d:	c7 85 28 ff ff ff 00 	movl   $0x0,-0xd8(%ebp)
 8051714:	00 00 00 
 8051717:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 805171d:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8051723:	6a 00                	push   $0x0
 8051725:	6a 64                	push   $0x64
 8051727:	52                   	push   %edx
 8051728:	50                   	push   %eax
 8051729:	e8 c2 7b 01 00       	call   80692f0 <__udivdi3>
 805172e:	83 c4 10             	add    $0x10,%esp
 8051731:	89 c3                	mov    %eax,%ebx
 8051733:	89 d6                	mov    %edx,%esi
 8051735:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 805173b:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 8051741:	6a 00                	push   $0x0
 8051743:	6a 64                	push   $0x64
 8051745:	52                   	push   %edx
 8051746:	50                   	push   %eax
 8051747:	e8 a4 7b 01 00       	call   80692f0 <__udivdi3>
 805174c:	83 c4 10             	add    $0x10,%esp
 805174f:	39 d6                	cmp    %edx,%esi
 8051751:	77 11                	ja     8051764 <strconv__f64_to_decimal+0xa38>
 8051753:	39 d6                	cmp    %edx,%esi
 8051755:	0f 82 c3 00 00 00    	jb     805181e <strconv__f64_to_decimal+0xaf2>
 805175b:	39 c3                	cmp    %eax,%ebx
 805175d:	77 05                	ja     8051764 <strconv__f64_to_decimal+0xa38>
 805175f:	e9 ba 00 00 00       	jmp    805181e <strconv__f64_to_decimal+0xaf2>
 8051764:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 805176a:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 8051770:	6a 00                	push   $0x0
 8051772:	6a 64                	push   $0x64
 8051774:	52                   	push   %edx
 8051775:	50                   	push   %eax
 8051776:	e8 a5 7c 01 00       	call   8069420 <__umoddi3>
 805177b:	83 c4 10             	add    $0x10,%esp
 805177e:	b9 01 00 00 00       	mov    $0x1,%ecx
 8051783:	83 fa 00             	cmp    $0x0,%edx
 8051786:	77 0f                	ja     8051797 <strconv__f64_to_decimal+0xa6b>
 8051788:	83 fa 00             	cmp    $0x0,%edx
 805178b:	72 05                	jb     8051792 <strconv__f64_to_decimal+0xa66>
 805178d:	83 f8 31             	cmp    $0x31,%eax
 8051790:	77 05                	ja     8051797 <strconv__f64_to_decimal+0xa6b>
 8051792:	b9 00 00 00 00       	mov    $0x0,%ecx
 8051797:	0f b6 c1             	movzbl %cl,%eax
 805179a:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 80517a0:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80517a6:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 80517ac:	6a 00                	push   $0x0
 80517ae:	6a 64                	push   $0x64
 80517b0:	52                   	push   %edx
 80517b1:	50                   	push   %eax
 80517b2:	e8 39 7b 01 00       	call   80692f0 <__udivdi3>
 80517b7:	83 c4 10             	add    $0x10,%esp
 80517ba:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 80517c0:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 80517c6:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 80517cc:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 80517d2:	6a 00                	push   $0x0
 80517d4:	6a 64                	push   $0x64
 80517d6:	52                   	push   %edx
 80517d7:	50                   	push   %eax
 80517d8:	e8 13 7b 01 00       	call   80692f0 <__udivdi3>
 80517dd:	83 c4 10             	add    $0x10,%esp
 80517e0:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 80517e6:	89 95 64 ff ff ff    	mov    %edx,-0x9c(%ebp)
 80517ec:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80517f2:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 80517f8:	6a 00                	push   $0x0
 80517fa:	6a 64                	push   $0x64
 80517fc:	52                   	push   %edx
 80517fd:	50                   	push   %eax
 80517fe:	e8 ed 7a 01 00       	call   80692f0 <__udivdi3>
 8051803:	83 c4 10             	add    $0x10,%esp
 8051806:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 805180c:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
 8051812:	83 85 24 ff ff ff 02 	addl   $0x2,-0xdc(%ebp)
 8051819:	e9 f9 fe ff ff       	jmp    8051717 <strconv__f64_to_decimal+0x9eb>
 805181e:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8051824:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 805182a:	6a 00                	push   $0x0
 805182c:	6a 0a                	push   $0xa
 805182e:	52                   	push   %edx
 805182f:	50                   	push   %eax
 8051830:	e8 bb 7a 01 00       	call   80692f0 <__udivdi3>
 8051835:	83 c4 10             	add    $0x10,%esp
 8051838:	89 c3                	mov    %eax,%ebx
 805183a:	89 d6                	mov    %edx,%esi
 805183c:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8051842:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 8051848:	6a 00                	push   $0x0
 805184a:	6a 0a                	push   $0xa
 805184c:	52                   	push   %edx
 805184d:	50                   	push   %eax
 805184e:	e8 9d 7a 01 00       	call   80692f0 <__udivdi3>
 8051853:	83 c4 10             	add    $0x10,%esp
 8051856:	39 d6                	cmp    %edx,%esi
 8051858:	77 10                	ja     805186a <strconv__f64_to_decimal+0xb3e>
 805185a:	39 d6                	cmp    %edx,%esi
 805185c:	0f 82 c2 00 00 00    	jb     8051924 <strconv__f64_to_decimal+0xbf8>
 8051862:	39 c3                	cmp    %eax,%ebx
 8051864:	0f 86 ba 00 00 00    	jbe    8051924 <strconv__f64_to_decimal+0xbf8>
 805186a:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8051870:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 8051876:	6a 00                	push   $0x0
 8051878:	6a 0a                	push   $0xa
 805187a:	52                   	push   %edx
 805187b:	50                   	push   %eax
 805187c:	e8 9f 7b 01 00       	call   8069420 <__umoddi3>
 8051881:	83 c4 10             	add    $0x10,%esp
 8051884:	b9 01 00 00 00       	mov    $0x1,%ecx
 8051889:	83 fa 00             	cmp    $0x0,%edx
 805188c:	77 0f                	ja     805189d <strconv__f64_to_decimal+0xb71>
 805188e:	83 fa 00             	cmp    $0x0,%edx
 8051891:	72 05                	jb     8051898 <strconv__f64_to_decimal+0xb6c>
 8051893:	83 f8 04             	cmp    $0x4,%eax
 8051896:	77 05                	ja     805189d <strconv__f64_to_decimal+0xb71>
 8051898:	b9 00 00 00 00       	mov    $0x0,%ecx
 805189d:	0f b6 c1             	movzbl %cl,%eax
 80518a0:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 80518a6:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80518ac:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 80518b2:	6a 00                	push   $0x0
 80518b4:	6a 0a                	push   $0xa
 80518b6:	52                   	push   %edx
 80518b7:	50                   	push   %eax
 80518b8:	e8 33 7a 01 00       	call   80692f0 <__udivdi3>
 80518bd:	83 c4 10             	add    $0x10,%esp
 80518c0:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 80518c6:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 80518cc:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 80518d2:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 80518d8:	6a 00                	push   $0x0
 80518da:	6a 0a                	push   $0xa
 80518dc:	52                   	push   %edx
 80518dd:	50                   	push   %eax
 80518de:	e8 0d 7a 01 00       	call   80692f0 <__udivdi3>
 80518e3:	83 c4 10             	add    $0x10,%esp
 80518e6:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 80518ec:	89 95 64 ff ff ff    	mov    %edx,-0x9c(%ebp)
 80518f2:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80518f8:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 80518fe:	6a 00                	push   $0x0
 8051900:	6a 0a                	push   $0xa
 8051902:	52                   	push   %edx
 8051903:	50                   	push   %eax
 8051904:	e8 e7 79 01 00       	call   80692f0 <__udivdi3>
 8051909:	83 c4 10             	add    $0x10,%esp
 805190c:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8051912:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
 8051918:	83 85 24 ff ff ff 01 	addl   $0x1,-0xdc(%ebp)
 805191f:	e9 fa fe ff ff       	jmp    805181e <strconv__f64_to_decimal+0xaf2>
 8051924:	90                   	nop
 8051925:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 805192b:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 8051931:	89 d1                	mov    %edx,%ecx
 8051933:	33 8d 6c ff ff ff    	xor    -0x94(%ebp),%ecx
 8051939:	33 85 68 ff ff ff    	xor    -0x98(%ebp),%eax
 805193f:	09 c8                	or     %ecx,%eax
 8051941:	85 c0                	test   %eax,%eax
 8051943:	74 09                	je     805194e <strconv__f64_to_decimal+0xc22>
 8051945:	83 bd 28 ff ff ff 00 	cmpl   $0x0,-0xd8(%ebp)
 805194c:	74 07                	je     8051955 <strconv__f64_to_decimal+0xc29>
 805194e:	b8 01 00 00 00       	mov    $0x1,%eax
 8051953:	eb 05                	jmp    805195a <strconv__f64_to_decimal+0xc2e>
 8051955:	b8 00 00 00 00       	mov    $0x0,%eax
 805195a:	83 ec 0c             	sub    $0xc,%esp
 805195d:	50                   	push   %eax
 805195e:	e8 d8 32 00 00       	call   8054c3b <strconv__bool_to_u64>
 8051963:	83 c4 10             	add    $0x10,%esp
 8051966:	89 c1                	mov    %eax,%ecx
 8051968:	89 d3                	mov    %edx,%ebx
 805196a:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8051970:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 8051976:	01 c8                	add    %ecx,%eax
 8051978:	11 da                	adc    %ebx,%edx
 805197a:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 8051980:	89 95 74 ff ff ff    	mov    %edx,-0x8c(%ebp)
 8051986:	eb 01                	jmp    8051989 <strconv__f64_to_decimal+0xc5d>
 8051988:	90                   	nop
 8051989:	8b 95 18 ff ff ff    	mov    -0xe8(%ebp),%edx
 805198f:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 8051995:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 8051998:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805199b:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 80519a1:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
 80519a7:	89 01                	mov    %eax,(%ecx)
 80519a9:	89 51 04             	mov    %edx,0x4(%ecx)
 80519ac:	8b 45 08             	mov    0x8(%ebp),%eax
 80519af:	89 58 08             	mov    %ebx,0x8(%eax)
 80519b2:	8b 45 08             	mov    0x8(%ebp),%eax
 80519b5:	8d 65 f4             	lea    -0xc(%ebp),%esp
 80519b8:	5b                   	pop    %ebx
 80519b9:	5e                   	pop    %esi
 80519ba:	5f                   	pop    %edi
 80519bb:	5d                   	pop    %ebp
 80519bc:	c2 04 00             	ret    $0x4

080519bf <strconv__f64_to_str>:
 80519bf:	55                   	push   %ebp
 80519c0:	89 e5                	mov    %esp,%ebp
 80519c2:	57                   	push   %edi
 80519c3:	56                   	push   %esi
 80519c4:	53                   	push   %ebx
 80519c5:	83 ec 6c             	sub    $0x6c,%esp
 80519c8:	8b 45 08             	mov    0x8(%ebp),%eax
 80519cb:	89 45 94             	mov    %eax,-0x6c(%ebp)
 80519ce:	8b 45 0c             	mov    0xc(%ebp),%eax
 80519d1:	89 45 88             	mov    %eax,-0x78(%ebp)
 80519d4:	8b 45 10             	mov    0x10(%ebp),%eax
 80519d7:	89 45 8c             	mov    %eax,-0x74(%ebp)
 80519da:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80519e0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80519e3:	31 c0                	xor    %eax,%eax
 80519e5:	d9 ee                	fldz   
 80519e7:	dd 5d a8             	fstpl  -0x58(%ebp)
 80519ea:	dd 45 88             	fldl   -0x78(%ebp)
 80519ed:	dd 5d a8             	fstpl  -0x58(%ebp)
 80519f0:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80519f3:	8b 55 ac             	mov    -0x54(%ebp),%edx
 80519f6:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80519f9:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 80519fc:	8b 15 38 32 07 08    	mov    0x8073238,%edx
 8051a02:	a1 68 31 07 08       	mov    0x8073168,%eax
 8051a07:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8051a0a:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8051a0d:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8051a10:	0f ad d0             	shrd   %cl,%edx,%eax
 8051a13:	d3 ea                	shr    %cl,%edx
 8051a15:	f6 c1 20             	test   $0x20,%cl
 8051a18:	74 04                	je     8051a1e <strconv__f64_to_str+0x5f>
 8051a1a:	89 d0                	mov    %edx,%eax
 8051a1c:	31 d2                	xor    %edx,%edx
 8051a1e:	09 d0                	or     %edx,%eax
 8051a20:	85 c0                	test   %eax,%eax
 8051a22:	0f 95 c0             	setne  %al
 8051a25:	0f b6 c0             	movzbl %al,%eax
 8051a28:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8051a2b:	8b 0d 38 32 07 08    	mov    0x8073238,%ecx
 8051a31:	b8 01 00 00 00       	mov    $0x1,%eax
 8051a36:	ba 00 00 00 00       	mov    $0x0,%edx
 8051a3b:	0f a5 c2             	shld   %cl,%eax,%edx
 8051a3e:	d3 e0                	shl    %cl,%eax
 8051a40:	f6 c1 20             	test   $0x20,%cl
 8051a43:	74 04                	je     8051a49 <strconv__f64_to_str+0x8a>
 8051a45:	89 c2                	mov    %eax,%edx
 8051a47:	31 c0                	xor    %eax,%eax
 8051a49:	83 c0 ff             	add    $0xffffffff,%eax
 8051a4c:	83 d2 ff             	adc    $0xffffffff,%edx
 8051a4f:	89 c1                	mov    %eax,%ecx
 8051a51:	23 4d b0             	and    -0x50(%ebp),%ecx
 8051a54:	89 4d b8             	mov    %ecx,-0x48(%ebp)
 8051a57:	89 d0                	mov    %edx,%eax
 8051a59:	23 45 b4             	and    -0x4c(%ebp),%eax
 8051a5c:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8051a5f:	8b 0d 38 32 07 08    	mov    0x8073238,%ecx
 8051a65:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8051a68:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8051a6b:	0f ad d0             	shrd   %cl,%edx,%eax
 8051a6e:	d3 ea                	shr    %cl,%edx
 8051a70:	f6 c1 20             	test   $0x20,%cl
 8051a73:	74 04                	je     8051a79 <strconv__f64_to_str+0xba>
 8051a75:	89 d0                	mov    %edx,%eax
 8051a77:	31 d2                	xor    %edx,%edx
 8051a79:	8b 3d 68 31 07 08    	mov    0x8073168,%edi
 8051a7f:	bb 01 00 00 00       	mov    $0x1,%ebx
 8051a84:	be 00 00 00 00       	mov    $0x0,%esi
 8051a89:	89 f9                	mov    %edi,%ecx
 8051a8b:	0f a5 de             	shld   %cl,%ebx,%esi
 8051a8e:	d3 e3                	shl    %cl,%ebx
 8051a90:	f6 c1 20             	test   $0x20,%cl
 8051a93:	74 04                	je     8051a99 <strconv__f64_to_str+0xda>
 8051a95:	89 de                	mov    %ebx,%esi
 8051a97:	31 db                	xor    %ebx,%ebx
 8051a99:	89 d9                	mov    %ebx,%ecx
 8051a9b:	89 f3                	mov    %esi,%ebx
 8051a9d:	83 c1 ff             	add    $0xffffffff,%ecx
 8051aa0:	83 d3 ff             	adc    $0xffffffff,%ebx
 8051aa3:	89 c6                	mov    %eax,%esi
 8051aa5:	21 ce                	and    %ecx,%esi
 8051aa7:	89 75 c0             	mov    %esi,-0x40(%ebp)
 8051aaa:	89 d0                	mov    %edx,%eax
 8051aac:	21 d8                	and    %ebx,%eax
 8051aae:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8051ab1:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8051ab4:	35 ff 07 00 00       	xor    $0x7ff,%eax
 8051ab9:	0b 45 c4             	or     -0x3c(%ebp),%eax
 8051abc:	85 c0                	test   %eax,%eax
 8051abe:	74 14                	je     8051ad4 <strconv__f64_to_str+0x115>
 8051ac0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8051ac3:	0b 45 c0             	or     -0x40(%ebp),%eax
 8051ac6:	85 c0                	test   %eax,%eax
 8051ac8:	75 39                	jne    8051b03 <strconv__f64_to_str+0x144>
 8051aca:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8051acd:	0b 45 b8             	or     -0x48(%ebp),%eax
 8051ad0:	85 c0                	test   %eax,%eax
 8051ad2:	75 2f                	jne    8051b03 <strconv__f64_to_str+0x144>
 8051ad4:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8051ad7:	0b 45 bc             	or     -0x44(%ebp),%eax
 8051ada:	85 c0                	test   %eax,%eax
 8051adc:	0f 94 c0             	sete   %al
 8051adf:	0f b6 c8             	movzbl %al,%ecx
 8051ae2:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8051ae5:	0b 45 c4             	or     -0x3c(%ebp),%eax
 8051ae8:	85 c0                	test   %eax,%eax
 8051aea:	0f 94 c0             	sete   %al
 8051aed:	0f b6 d0             	movzbl %al,%edx
 8051af0:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8051af3:	51                   	push   %ecx
 8051af4:	52                   	push   %edx
 8051af5:	ff 75 a0             	pushl  -0x60(%ebp)
 8051af8:	50                   	push   %eax
 8051af9:	e8 5e 31 00 00       	call   8054c5c <strconv__get_string_special>
 8051afe:	83 c4 0c             	add    $0xc,%esp
 8051b01:	eb 74                	jmp    8051b77 <strconv__f64_to_str+0x1b8>
 8051b03:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 8051b06:	83 ec 0c             	sub    $0xc,%esp
 8051b09:	ff 75 c4             	pushl  -0x3c(%ebp)
 8051b0c:	ff 75 c0             	pushl  -0x40(%ebp)
 8051b0f:	ff 75 bc             	pushl  -0x44(%ebp)
 8051b12:	ff 75 b8             	pushl  -0x48(%ebp)
 8051b15:	50                   	push   %eax
 8051b16:	e8 9d f0 ff ff       	call   8050bb8 <strconv__f64_to_decimal_exact_int>
 8051b1b:	83 c4 1c             	add    $0x1c,%esp
 8051b1e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8051b21:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8051b24:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8051b27:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8051b2a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8051b2d:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8051b30:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8051b33:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8051b36:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)
 8051b3a:	75 1b                	jne    8051b57 <strconv__f64_to_str+0x198>
 8051b3c:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8051b3f:	83 ec 0c             	sub    $0xc,%esp
 8051b42:	ff 75 c4             	pushl  -0x3c(%ebp)
 8051b45:	ff 75 c0             	pushl  -0x40(%ebp)
 8051b48:	ff 75 bc             	pushl  -0x44(%ebp)
 8051b4b:	ff 75 b8             	pushl  -0x48(%ebp)
 8051b4e:	50                   	push   %eax
 8051b4f:	e8 d8 f1 ff ff       	call   8050d2c <strconv__f64_to_decimal>
 8051b54:	83 c4 1c             	add    $0x1c,%esp
 8051b57:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8051b5a:	83 ec 04             	sub    $0x4,%esp
 8051b5d:	6a 00                	push   $0x0
 8051b5f:	ff 75 14             	pushl  0x14(%ebp)
 8051b62:	ff 75 a0             	pushl  -0x60(%ebp)
 8051b65:	ff 75 d0             	pushl  -0x30(%ebp)
 8051b68:	ff 75 cc             	pushl  -0x34(%ebp)
 8051b6b:	ff 75 c8             	pushl  -0x38(%ebp)
 8051b6e:	50                   	push   %eax
 8051b6f:	e8 9d eb ff ff       	call   8050711 <strconv__Dec64_get_string_64>
 8051b74:	83 c4 1c             	add    $0x1c,%esp
 8051b77:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8051b7a:	8b 7d e4             	mov    -0x1c(%ebp),%edi
 8051b7d:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8051b84:	74 05                	je     8051b8b <strconv__f64_to_str+0x1cc>
 8051b86:	e8 95 6c ff ff       	call   8048820 <__stack_chk_fail@plt>
 8051b8b:	8d 65 f4             	lea    -0xc(%ebp),%esp
 8051b8e:	5b                   	pop    %ebx
 8051b8f:	5e                   	pop    %esi
 8051b90:	5f                   	pop    %edi
 8051b91:	5d                   	pop    %ebp
 8051b92:	c2 04 00             	ret    $0x4

08051b95 <strconv__f64_to_str_pad>:
 8051b95:	55                   	push   %ebp
 8051b96:	89 e5                	mov    %esp,%ebp
 8051b98:	57                   	push   %edi
 8051b99:	56                   	push   %esi
 8051b9a:	53                   	push   %ebx
 8051b9b:	83 ec 6c             	sub    $0x6c,%esp
 8051b9e:	8b 45 08             	mov    0x8(%ebp),%eax
 8051ba1:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8051ba4:	8b 45 0c             	mov    0xc(%ebp),%eax
 8051ba7:	89 45 88             	mov    %eax,-0x78(%ebp)
 8051baa:	8b 45 10             	mov    0x10(%ebp),%eax
 8051bad:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8051bb0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8051bb6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8051bb9:	31 c0                	xor    %eax,%eax
 8051bbb:	d9 ee                	fldz   
 8051bbd:	dd 5d a8             	fstpl  -0x58(%ebp)
 8051bc0:	dd 45 88             	fldl   -0x78(%ebp)
 8051bc3:	dd 5d a8             	fstpl  -0x58(%ebp)
 8051bc6:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8051bc9:	8b 55 ac             	mov    -0x54(%ebp),%edx
 8051bcc:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8051bcf:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 8051bd2:	8b 15 38 32 07 08    	mov    0x8073238,%edx
 8051bd8:	a1 68 31 07 08       	mov    0x8073168,%eax
 8051bdd:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8051be0:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8051be3:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8051be6:	0f ad d0             	shrd   %cl,%edx,%eax
 8051be9:	d3 ea                	shr    %cl,%edx
 8051beb:	f6 c1 20             	test   $0x20,%cl
 8051bee:	74 04                	je     8051bf4 <strconv__f64_to_str_pad+0x5f>
 8051bf0:	89 d0                	mov    %edx,%eax
 8051bf2:	31 d2                	xor    %edx,%edx
 8051bf4:	09 d0                	or     %edx,%eax
 8051bf6:	85 c0                	test   %eax,%eax
 8051bf8:	0f 95 c0             	setne  %al
 8051bfb:	0f b6 c0             	movzbl %al,%eax
 8051bfe:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8051c01:	8b 0d 38 32 07 08    	mov    0x8073238,%ecx
 8051c07:	b8 01 00 00 00       	mov    $0x1,%eax
 8051c0c:	ba 00 00 00 00       	mov    $0x0,%edx
 8051c11:	0f a5 c2             	shld   %cl,%eax,%edx
 8051c14:	d3 e0                	shl    %cl,%eax
 8051c16:	f6 c1 20             	test   $0x20,%cl
 8051c19:	74 04                	je     8051c1f <strconv__f64_to_str_pad+0x8a>
 8051c1b:	89 c2                	mov    %eax,%edx
 8051c1d:	31 c0                	xor    %eax,%eax
 8051c1f:	83 c0 ff             	add    $0xffffffff,%eax
 8051c22:	83 d2 ff             	adc    $0xffffffff,%edx
 8051c25:	89 c1                	mov    %eax,%ecx
 8051c27:	23 4d b0             	and    -0x50(%ebp),%ecx
 8051c2a:	89 4d b8             	mov    %ecx,-0x48(%ebp)
 8051c2d:	89 d0                	mov    %edx,%eax
 8051c2f:	23 45 b4             	and    -0x4c(%ebp),%eax
 8051c32:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8051c35:	8b 0d 38 32 07 08    	mov    0x8073238,%ecx
 8051c3b:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8051c3e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8051c41:	0f ad d0             	shrd   %cl,%edx,%eax
 8051c44:	d3 ea                	shr    %cl,%edx
 8051c46:	f6 c1 20             	test   $0x20,%cl
 8051c49:	74 04                	je     8051c4f <strconv__f64_to_str_pad+0xba>
 8051c4b:	89 d0                	mov    %edx,%eax
 8051c4d:	31 d2                	xor    %edx,%edx
 8051c4f:	8b 3d 68 31 07 08    	mov    0x8073168,%edi
 8051c55:	bb 01 00 00 00       	mov    $0x1,%ebx
 8051c5a:	be 00 00 00 00       	mov    $0x0,%esi
 8051c5f:	89 f9                	mov    %edi,%ecx
 8051c61:	0f a5 de             	shld   %cl,%ebx,%esi
 8051c64:	d3 e3                	shl    %cl,%ebx
 8051c66:	f6 c1 20             	test   $0x20,%cl
 8051c69:	74 04                	je     8051c6f <strconv__f64_to_str_pad+0xda>
 8051c6b:	89 de                	mov    %ebx,%esi
 8051c6d:	31 db                	xor    %ebx,%ebx
 8051c6f:	89 d9                	mov    %ebx,%ecx
 8051c71:	89 f3                	mov    %esi,%ebx
 8051c73:	83 c1 ff             	add    $0xffffffff,%ecx
 8051c76:	83 d3 ff             	adc    $0xffffffff,%ebx
 8051c79:	89 c6                	mov    %eax,%esi
 8051c7b:	21 ce                	and    %ecx,%esi
 8051c7d:	89 75 c0             	mov    %esi,-0x40(%ebp)
 8051c80:	89 d0                	mov    %edx,%eax
 8051c82:	21 d8                	and    %ebx,%eax
 8051c84:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8051c87:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8051c8a:	35 ff 07 00 00       	xor    $0x7ff,%eax
 8051c8f:	0b 45 c4             	or     -0x3c(%ebp),%eax
 8051c92:	85 c0                	test   %eax,%eax
 8051c94:	74 14                	je     8051caa <strconv__f64_to_str_pad+0x115>
 8051c96:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8051c99:	0b 45 c0             	or     -0x40(%ebp),%eax
 8051c9c:	85 c0                	test   %eax,%eax
 8051c9e:	75 39                	jne    8051cd9 <strconv__f64_to_str_pad+0x144>
 8051ca0:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8051ca3:	0b 45 b8             	or     -0x48(%ebp),%eax
 8051ca6:	85 c0                	test   %eax,%eax
 8051ca8:	75 2f                	jne    8051cd9 <strconv__f64_to_str_pad+0x144>
 8051caa:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8051cad:	0b 45 bc             	or     -0x44(%ebp),%eax
 8051cb0:	85 c0                	test   %eax,%eax
 8051cb2:	0f 94 c0             	sete   %al
 8051cb5:	0f b6 c8             	movzbl %al,%ecx
 8051cb8:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8051cbb:	0b 45 c4             	or     -0x3c(%ebp),%eax
 8051cbe:	85 c0                	test   %eax,%eax
 8051cc0:	0f 94 c0             	sete   %al
 8051cc3:	0f b6 d0             	movzbl %al,%edx
 8051cc6:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8051cc9:	51                   	push   %ecx
 8051cca:	52                   	push   %edx
 8051ccb:	ff 75 a0             	pushl  -0x60(%ebp)
 8051cce:	50                   	push   %eax
 8051ccf:	e8 88 2f 00 00       	call   8054c5c <strconv__get_string_special>
 8051cd4:	83 c4 0c             	add    $0xc,%esp
 8051cd7:	eb 75                	jmp    8051d4e <strconv__f64_to_str_pad+0x1b9>
 8051cd9:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 8051cdc:	83 ec 0c             	sub    $0xc,%esp
 8051cdf:	ff 75 c4             	pushl  -0x3c(%ebp)
 8051ce2:	ff 75 c0             	pushl  -0x40(%ebp)
 8051ce5:	ff 75 bc             	pushl  -0x44(%ebp)
 8051ce8:	ff 75 b8             	pushl  -0x48(%ebp)
 8051ceb:	50                   	push   %eax
 8051cec:	e8 c7 ee ff ff       	call   8050bb8 <strconv__f64_to_decimal_exact_int>
 8051cf1:	83 c4 1c             	add    $0x1c,%esp
 8051cf4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8051cf7:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8051cfa:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8051cfd:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8051d00:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8051d03:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8051d06:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8051d09:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8051d0c:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)
 8051d10:	75 1b                	jne    8051d2d <strconv__f64_to_str_pad+0x198>
 8051d12:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8051d15:	83 ec 0c             	sub    $0xc,%esp
 8051d18:	ff 75 c4             	pushl  -0x3c(%ebp)
 8051d1b:	ff 75 c0             	pushl  -0x40(%ebp)
 8051d1e:	ff 75 bc             	pushl  -0x44(%ebp)
 8051d21:	ff 75 b8             	pushl  -0x48(%ebp)
 8051d24:	50                   	push   %eax
 8051d25:	e8 02 f0 ff ff       	call   8050d2c <strconv__f64_to_decimal>
 8051d2a:	83 c4 1c             	add    $0x1c,%esp
 8051d2d:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8051d30:	83 ec 04             	sub    $0x4,%esp
 8051d33:	ff 75 14             	pushl  0x14(%ebp)
 8051d36:	ff 75 14             	pushl  0x14(%ebp)
 8051d39:	ff 75 a0             	pushl  -0x60(%ebp)
 8051d3c:	ff 75 d0             	pushl  -0x30(%ebp)
 8051d3f:	ff 75 cc             	pushl  -0x34(%ebp)
 8051d42:	ff 75 c8             	pushl  -0x38(%ebp)
 8051d45:	50                   	push   %eax
 8051d46:	e8 c6 e9 ff ff       	call   8050711 <strconv__Dec64_get_string_64>
 8051d4b:	83 c4 1c             	add    $0x1c,%esp
 8051d4e:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8051d51:	8b 7d e4             	mov    -0x1c(%ebp),%edi
 8051d54:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8051d5b:	74 05                	je     8051d62 <strconv__f64_to_str_pad+0x1cd>
 8051d5d:	e8 be 6a ff ff       	call   8048820 <__stack_chk_fail@plt>
 8051d62:	8d 65 f4             	lea    -0xc(%ebp),%esp
 8051d65:	5b                   	pop    %ebx
 8051d66:	5e                   	pop    %esi
 8051d67:	5f                   	pop    %edi
 8051d68:	5d                   	pop    %ebp
 8051d69:	c2 04 00             	ret    $0x4

08051d6c <strconv__f64_to_str_lnd>:
 8051d6c:	55                   	push   %ebp
 8051d6d:	89 e5                	mov    %esp,%ebp
 8051d6f:	53                   	push   %ebx
 8051d70:	81 ec b4 00 00 00    	sub    $0xb4,%esp
 8051d76:	8b 45 08             	mov    0x8(%ebp),%eax
 8051d79:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 8051d7f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8051d82:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
 8051d88:	8b 45 10             	mov    0x10(%ebp),%eax
 8051d8b:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 8051d91:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8051d97:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8051d9a:	31 c0                	xor    %eax,%eax
 8051d9c:	83 ec 0c             	sub    $0xc,%esp
 8051d9f:	ff 75 14             	pushl  0x14(%ebp)
 8051da2:	ff 35 f8 31 07 08    	pushl  0x80731f8
 8051da8:	ff 35 f4 31 07 08    	pushl  0x80731f4
 8051dae:	ff 35 f0 31 07 08    	pushl  0x80731f0
 8051db4:	ff 35 ec 31 07 08    	pushl  0x80731ec
 8051dba:	e8 fb 44 00 00       	call   80562ba <array_get>
 8051dbf:	83 c4 20             	add    $0x20,%esp
 8051dc2:	dd 00                	fldl   (%eax)
 8051dc4:	dc 85 48 ff ff ff    	faddl  -0xb8(%ebp)
 8051dca:	8d 45 98             	lea    -0x68(%ebp),%eax
 8051dcd:	6a 12                	push   $0x12
 8051dcf:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 8051dd3:	dd 1c 24             	fstpl  (%esp)
 8051dd6:	50                   	push   %eax
 8051dd7:	e8 e3 fb ff ff       	call   80519bf <strconv__f64_to_str>
 8051ddc:	83 c4 0c             	add    $0xc,%esp
 8051ddf:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8051de2:	83 f8 02             	cmp    $0x2,%eax
 8051de5:	7e 4a                	jle    8051e31 <strconv__f64_to_str_lnd+0xc5>
 8051de7:	6a 00                	push   $0x0
 8051de9:	ff 75 a0             	pushl  -0x60(%ebp)
 8051dec:	ff 75 9c             	pushl  -0x64(%ebp)
 8051def:	ff 75 98             	pushl  -0x68(%ebp)
 8051df2:	e8 43 eb 00 00       	call   806093a <string_at>
 8051df7:	83 c4 10             	add    $0x10,%esp
 8051dfa:	3c 6e                	cmp    $0x6e,%al
 8051dfc:	74 17                	je     8051e15 <strconv__f64_to_str_lnd+0xa9>
 8051dfe:	6a 01                	push   $0x1
 8051e00:	ff 75 a0             	pushl  -0x60(%ebp)
 8051e03:	ff 75 9c             	pushl  -0x64(%ebp)
 8051e06:	ff 75 98             	pushl  -0x68(%ebp)
 8051e09:	e8 2c eb 00 00       	call   806093a <string_at>
 8051e0e:	83 c4 10             	add    $0x10,%esp
 8051e11:	3c 69                	cmp    $0x69,%al
 8051e13:	75 1c                	jne    8051e31 <strconv__f64_to_str_lnd+0xc5>
 8051e15:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8051e1b:	8b 55 98             	mov    -0x68(%ebp),%edx
 8051e1e:	89 10                	mov    %edx,(%eax)
 8051e20:	8b 55 9c             	mov    -0x64(%ebp),%edx
 8051e23:	89 50 04             	mov    %edx,0x4(%eax)
 8051e26:	8b 55 a0             	mov    -0x60(%ebp),%edx
 8051e29:	89 50 08             	mov    %edx,0x8(%eax)
 8051e2c:	e9 af 05 00 00       	jmp    80523e0 <strconv__f64_to_str_lnd+0x674>
 8051e31:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
 8051e38:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%ebp)
 8051e3f:	00 00 00 
 8051e42:	8d 45 da             	lea    -0x26(%ebp),%eax
 8051e45:	b9 1a 00 00 00       	mov    $0x1a,%ecx
 8051e4a:	bb 00 00 00 00       	mov    $0x0,%ebx
 8051e4f:	89 18                	mov    %ebx,(%eax)
 8051e51:	89 5c 08 fc          	mov    %ebx,-0x4(%eax,%ecx,1)
 8051e55:	8d 50 04             	lea    0x4(%eax),%edx
 8051e58:	83 e2 fc             	and    $0xfffffffc,%edx
 8051e5b:	29 d0                	sub    %edx,%eax
 8051e5d:	01 c1                	add    %eax,%ecx
 8051e5f:	83 e1 fc             	and    $0xfffffffc,%ecx
 8051e62:	83 e1 fc             	and    $0xfffffffc,%ecx
 8051e65:	b8 00 00 00 00       	mov    $0x0,%eax
 8051e6a:	89 1c 02             	mov    %ebx,(%edx,%eax,1)
 8051e6d:	83 c0 04             	add    $0x4,%eax
 8051e70:	39 c8                	cmp    %ecx,%eax
 8051e72:	72 f6                	jb     8051e6a <strconv__f64_to_str_lnd+0xfe>
 8051e74:	01 c2                	add    %eax,%edx
 8051e76:	c7 85 68 ff ff ff 01 	movl   $0x1,-0x98(%ebp)
 8051e7d:	00 00 00 
 8051e80:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%ebp)
 8051e87:	00 00 00 
 8051e8a:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%ebp)
 8051e91:	00 00 00 
 8051e94:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%ebp)
 8051e9b:	00 00 00 
 8051e9e:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%ebp)
 8051ea5:	00 00 00 
 8051ea8:	c7 85 7c ff ff ff ff 	movl   $0xffffffff,-0x84(%ebp)
 8051eaf:	ff ff ff 
 8051eb2:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
 8051eb9:	e9 fd 00 00 00       	jmp    8051fbb <strconv__f64_to_str_lnd+0x24f>
 8051ebe:	8b 55 98             	mov    -0x68(%ebp),%edx
 8051ec1:	8b 45 80             	mov    -0x80(%ebp),%eax
 8051ec4:	01 d0                	add    %edx,%eax
 8051ec6:	0f b6 00             	movzbl (%eax),%eax
 8051ec9:	88 85 62 ff ff ff    	mov    %al,-0x9e(%ebp)
 8051ecf:	80 bd 62 ff ff ff 2d 	cmpb   $0x2d,-0x9e(%ebp)
 8051ed6:	75 16                	jne    8051eee <strconv__f64_to_str_lnd+0x182>
 8051ed8:	c7 85 64 ff ff ff ff 	movl   $0xffffffff,-0x9c(%ebp)
 8051edf:	ff ff ff 
 8051ee2:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 8051ee9:	e9 c9 00 00 00       	jmp    8051fb7 <strconv__f64_to_str_lnd+0x24b>
 8051eee:	80 bd 62 ff ff ff 2b 	cmpb   $0x2b,-0x9e(%ebp)
 8051ef5:	75 16                	jne    8051f0d <strconv__f64_to_str_lnd+0x1a1>
 8051ef7:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%ebp)
 8051efe:	00 00 00 
 8051f01:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 8051f08:	e9 aa 00 00 00       	jmp    8051fb7 <strconv__f64_to_str_lnd+0x24b>
 8051f0d:	80 bd 62 ff ff ff 2f 	cmpb   $0x2f,-0x9e(%ebp)
 8051f14:	76 2c                	jbe    8051f42 <strconv__f64_to_str_lnd+0x1d6>
 8051f16:	80 bd 62 ff ff ff 39 	cmpb   $0x39,-0x9e(%ebp)
 8051f1d:	77 23                	ja     8051f42 <strconv__f64_to_str_lnd+0x1d6>
 8051f1f:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8051f25:	8d 50 01             	lea    0x1(%eax),%edx
 8051f28:	89 95 70 ff ff ff    	mov    %edx,-0x90(%ebp)
 8051f2e:	0f b6 95 62 ff ff ff 	movzbl -0x9e(%ebp),%edx
 8051f35:	88 54 05 da          	mov    %dl,-0x26(%ebp,%eax,1)
 8051f39:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 8051f40:	eb 75                	jmp    8051fb7 <strconv__f64_to_str_lnd+0x24b>
 8051f42:	80 bd 62 ff ff ff 2e 	cmpb   $0x2e,-0x9e(%ebp)
 8051f49:	75 2f                	jne    8051f7a <strconv__f64_to_str_lnd+0x20e>
 8051f4b:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%ebp)
 8051f52:	7e 0e                	jle    8051f62 <strconv__f64_to_str_lnd+0x1f6>
 8051f54:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8051f5a:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8051f60:	eb 0f                	jmp    8051f71 <strconv__f64_to_str_lnd+0x205>
 8051f62:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8051f68:	83 e8 01             	sub    $0x1,%eax
 8051f6b:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8051f71:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 8051f78:	eb 3d                	jmp    8051fb7 <strconv__f64_to_str_lnd+0x24b>
 8051f7a:	80 bd 62 ff ff ff 65 	cmpb   $0x65,-0x9e(%ebp)
 8051f81:	75 09                	jne    8051f8c <strconv__f64_to_str_lnd+0x220>
 8051f83:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 8051f8a:	eb 3b                	jmp    8051fc7 <strconv__f64_to_str_lnd+0x25b>
 8051f8c:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8051f92:	c7 00 cb 97 06 08    	movl   $0x80697cb,(%eax)
 8051f98:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8051f9e:	c7 40 04 1a 00 00 00 	movl   $0x1a,0x4(%eax)
 8051fa5:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8051fab:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8051fb2:	e9 29 04 00 00       	jmp    80523e0 <strconv__f64_to_str_lnd+0x674>
 8051fb7:	83 45 80 01          	addl   $0x1,-0x80(%ebp)
 8051fbb:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8051fbe:	3b 45 80             	cmp    -0x80(%ebp),%eax
 8051fc1:	0f 8f f7 fe ff ff    	jg     8051ebe <strconv__f64_to_str_lnd+0x152>
 8051fc7:	8d 55 da             	lea    -0x26(%ebp),%edx
 8051fca:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8051fd0:	01 d0                	add    %edx,%eax
 8051fd2:	c6 00 00             	movb   $0x0,(%eax)
 8051fd5:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 8051fdb:	ff 75 a0             	pushl  -0x60(%ebp)
 8051fde:	ff 75 9c             	pushl  -0x64(%ebp)
 8051fe1:	ff 75 98             	pushl  -0x68(%ebp)
 8051fe4:	e8 51 e9 00 00       	call   806093a <string_at>
 8051fe9:	83 c4 10             	add    $0x10,%esp
 8051fec:	3c 2d                	cmp    $0x2d,%al
 8051fee:	75 13                	jne    8052003 <strconv__f64_to_str_lnd+0x297>
 8051ff0:	c7 85 78 ff ff ff ff 	movl   $0xffffffff,-0x88(%ebp)
 8051ff7:	ff ff ff 
 8051ffa:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 8052001:	eb 2c                	jmp    805202f <strconv__f64_to_str_lnd+0x2c3>
 8052003:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 8052009:	ff 75 a0             	pushl  -0x60(%ebp)
 805200c:	ff 75 9c             	pushl  -0x64(%ebp)
 805200f:	ff 75 98             	pushl  -0x68(%ebp)
 8052012:	e8 23 e9 00 00       	call   806093a <string_at>
 8052017:	83 c4 10             	add    $0x10,%esp
 805201a:	3c 2b                	cmp    $0x2b,%al
 805201c:	75 11                	jne    805202f <strconv__f64_to_str_lnd+0x2c3>
 805201e:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%ebp)
 8052025:	00 00 00 
 8052028:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 805202f:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
 8052036:	eb 5a                	jmp    8052092 <strconv__f64_to_str_lnd+0x326>
 8052038:	8b 55 9c             	mov    -0x64(%ebp),%edx
 805203b:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 805203e:	83 ec 08             	sub    $0x8,%esp
 8052041:	52                   	push   %edx
 8052042:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 8052048:	ff 75 a0             	pushl  -0x60(%ebp)
 805204b:	ff 75 9c             	pushl  -0x64(%ebp)
 805204e:	ff 75 98             	pushl  -0x68(%ebp)
 8052051:	50                   	push   %eax
 8052052:	e8 6a c8 00 00       	call   805e8c1 <string_substr>
 8052057:	83 c4 1c             	add    $0x1c,%esp
 805205a:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 805205d:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8052060:	01 d0                	add    %edx,%eax
 8052062:	0f b6 00             	movzbl (%eax),%eax
 8052065:	88 85 63 ff ff ff    	mov    %al,-0x9d(%ebp)
 805206b:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
 8052071:	89 d0                	mov    %edx,%eax
 8052073:	c1 e0 02             	shl    $0x2,%eax
 8052076:	01 d0                	add    %edx,%eax
 8052078:	01 c0                	add    %eax,%eax
 805207a:	89 c2                	mov    %eax,%edx
 805207c:	0f b6 85 63 ff ff ff 	movzbl -0x9d(%ebp),%eax
 8052083:	83 e8 30             	sub    $0x30,%eax
 8052086:	01 d0                	add    %edx,%eax
 8052088:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 805208e:	83 45 84 01          	addl   $0x1,-0x7c(%ebp)
 8052092:	8b 55 9c             	mov    -0x64(%ebp),%edx
 8052095:	8d 45 b0             	lea    -0x50(%ebp),%eax
 8052098:	83 ec 08             	sub    $0x8,%esp
 805209b:	52                   	push   %edx
 805209c:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 80520a2:	ff 75 a0             	pushl  -0x60(%ebp)
 80520a5:	ff 75 9c             	pushl  -0x64(%ebp)
 80520a8:	ff 75 98             	pushl  -0x68(%ebp)
 80520ab:	50                   	push   %eax
 80520ac:	e8 10 c8 00 00       	call   805e8c1 <string_substr>
 80520b1:	83 c4 1c             	add    $0x1c,%esp
 80520b4:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80520b7:	3b 45 84             	cmp    -0x7c(%ebp),%eax
 80520ba:	0f 8f 78 ff ff ff    	jg     8052038 <strconv__f64_to_str_lnd+0x2cc>
 80520c0:	c6 45 cd 00          	movb   $0x0,-0x33(%ebp)
 80520c4:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80520ca:	8d 48 20             	lea    0x20(%eax),%ecx
 80520cd:	8d 45 bc             	lea    -0x44(%ebp),%eax
 80520d0:	83 ec 0c             	sub    $0xc,%esp
 80520d3:	8d 55 cd             	lea    -0x33(%ebp),%edx
 80520d6:	52                   	push   %edx
 80520d7:	6a 01                	push   $0x1
 80520d9:	6a 00                	push   $0x0
 80520db:	51                   	push   %ecx
 80520dc:	50                   	push   %eax
 80520dd:	e8 87 39 00 00       	call   8055a69 <__new_array_with_default>
 80520e2:	83 c4 1c             	add    $0x1c,%esp
 80520e5:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
 80520ec:	83 bd 64 ff ff ff 01 	cmpl   $0x1,-0x9c(%ebp)
 80520f3:	75 29                	jne    805211e <strconv__f64_to_str_lnd+0x3b2>
 80520f5:	83 7d 94 00          	cmpl   $0x0,-0x6c(%ebp)
 80520f9:	74 44                	je     805213f <strconv__f64_to_str_lnd+0x3d3>
 80520fb:	c6 45 ce 2b          	movb   $0x2b,-0x32(%ebp)
 80520ff:	8b 45 88             	mov    -0x78(%ebp),%eax
 8052102:	8d 50 01             	lea    0x1(%eax),%edx
 8052105:	89 55 88             	mov    %edx,-0x78(%ebp)
 8052108:	83 ec 04             	sub    $0x4,%esp
 805210b:	8d 55 ce             	lea    -0x32(%ebp),%edx
 805210e:	52                   	push   %edx
 805210f:	50                   	push   %eax
 8052110:	8d 45 bc             	lea    -0x44(%ebp),%eax
 8052113:	50                   	push   %eax
 8052114:	e8 03 48 00 00       	call   805691c <array_set>
 8052119:	83 c4 10             	add    $0x10,%esp
 805211c:	eb 21                	jmp    805213f <strconv__f64_to_str_lnd+0x3d3>
 805211e:	c6 45 cf 2d          	movb   $0x2d,-0x31(%ebp)
 8052122:	8b 45 88             	mov    -0x78(%ebp),%eax
 8052125:	8d 50 01             	lea    0x1(%eax),%edx
 8052128:	89 55 88             	mov    %edx,-0x78(%ebp)
 805212b:	83 ec 04             	sub    $0x4,%esp
 805212e:	8d 55 cf             	lea    -0x31(%ebp),%edx
 8052131:	52                   	push   %edx
 8052132:	50                   	push   %eax
 8052133:	8d 45 bc             	lea    -0x44(%ebp),%eax
 8052136:	50                   	push   %eax
 8052137:	e8 e0 47 00 00       	call   805691c <array_set>
 805213c:	83 c4 10             	add    $0x10,%esp
 805213f:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%ebp)
 8052146:	00 00 00 
 8052149:	83 bd 78 ff ff ff 00 	cmpl   $0x0,-0x88(%ebp)
 8052150:	0f 88 d9 00 00 00    	js     805222f <strconv__f64_to_str_lnd+0x4c3>
 8052156:	8d 55 da             	lea    -0x26(%ebp),%edx
 8052159:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 805215f:	01 d0                	add    %edx,%eax
 8052161:	0f b6 00             	movzbl (%eax),%eax
 8052164:	84 c0                	test   %al,%al
 8052166:	75 05                	jne    805216d <strconv__f64_to_str_lnd+0x401>
 8052168:	e9 8b 00 00 00       	jmp    80521f8 <strconv__f64_to_str_lnd+0x48c>
 805216d:	8d 55 da             	lea    -0x26(%ebp),%edx
 8052170:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8052176:	01 d0                	add    %edx,%eax
 8052178:	0f b6 00             	movzbl (%eax),%eax
 805217b:	88 45 d0             	mov    %al,-0x30(%ebp)
 805217e:	8b 45 88             	mov    -0x78(%ebp),%eax
 8052181:	8d 50 01             	lea    0x1(%eax),%edx
 8052184:	89 55 88             	mov    %edx,-0x78(%ebp)
 8052187:	83 ec 04             	sub    $0x4,%esp
 805218a:	8d 55 d0             	lea    -0x30(%ebp),%edx
 805218d:	52                   	push   %edx
 805218e:	50                   	push   %eax
 805218f:	8d 45 bc             	lea    -0x44(%ebp),%eax
 8052192:	50                   	push   %eax
 8052193:	e8 84 47 00 00       	call   805691c <array_set>
 8052198:	83 c4 10             	add    $0x10,%esp
 805219b:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 80521a2:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80521a8:	3b 85 68 ff ff ff    	cmp    -0x98(%ebp),%eax
 80521ae:	7c a6                	jl     8052156 <strconv__f64_to_str_lnd+0x3ea>
 80521b0:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%ebp)
 80521b7:	78 9d                	js     8052156 <strconv__f64_to_str_lnd+0x3ea>
 80521b9:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%ebp)
 80521c0:	75 2a                	jne    80521ec <strconv__f64_to_str_lnd+0x480>
 80521c2:	8b 45 88             	mov    -0x78(%ebp),%eax
 80521c5:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 80521cb:	c6 45 d1 2e          	movb   $0x2e,-0x2f(%ebp)
 80521cf:	8b 45 88             	mov    -0x78(%ebp),%eax
 80521d2:	8d 50 01             	lea    0x1(%eax),%edx
 80521d5:	89 55 88             	mov    %edx,-0x78(%ebp)
 80521d8:	83 ec 04             	sub    $0x4,%esp
 80521db:	8d 55 d1             	lea    -0x2f(%ebp),%edx
 80521de:	52                   	push   %edx
 80521df:	50                   	push   %eax
 80521e0:	8d 45 bc             	lea    -0x44(%ebp),%eax
 80521e3:	50                   	push   %eax
 80521e4:	e8 33 47 00 00       	call   805691c <array_set>
 80521e9:	83 c4 10             	add    $0x10,%esp
 80521ec:	83 ad 74 ff ff ff 01 	subl   $0x1,-0x8c(%ebp)
 80521f3:	e9 5e ff ff ff       	jmp    8052156 <strconv__f64_to_str_lnd+0x3ea>
 80521f8:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%ebp)
 80521ff:	0f 88 e6 00 00 00    	js     80522eb <strconv__f64_to_str_lnd+0x57f>
 8052205:	c6 45 d2 30          	movb   $0x30,-0x2e(%ebp)
 8052209:	8b 45 88             	mov    -0x78(%ebp),%eax
 805220c:	8d 50 01             	lea    0x1(%eax),%edx
 805220f:	89 55 88             	mov    %edx,-0x78(%ebp)
 8052212:	83 ec 04             	sub    $0x4,%esp
 8052215:	8d 55 d2             	lea    -0x2e(%ebp),%edx
 8052218:	52                   	push   %edx
 8052219:	50                   	push   %eax
 805221a:	8d 45 bc             	lea    -0x44(%ebp),%eax
 805221d:	50                   	push   %eax
 805221e:	e8 f9 46 00 00       	call   805691c <array_set>
 8052223:	83 c4 10             	add    $0x10,%esp
 8052226:	83 ad 74 ff ff ff 01 	subl   $0x1,-0x8c(%ebp)
 805222d:	eb c9                	jmp    80521f8 <strconv__f64_to_str_lnd+0x48c>
 805222f:	c7 45 8c 01 00 00 00 	movl   $0x1,-0x74(%ebp)
 8052236:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%ebp)
 805223d:	7f 02                	jg     8052241 <strconv__f64_to_str_lnd+0x4d5>
 805223f:	eb 61                	jmp    80522a2 <strconv__f64_to_str_lnd+0x536>
 8052241:	c6 45 d3 30          	movb   $0x30,-0x2d(%ebp)
 8052245:	8b 45 88             	mov    -0x78(%ebp),%eax
 8052248:	8d 50 01             	lea    0x1(%eax),%edx
 805224b:	89 55 88             	mov    %edx,-0x78(%ebp)
 805224e:	83 ec 04             	sub    $0x4,%esp
 8052251:	8d 55 d3             	lea    -0x2d(%ebp),%edx
 8052254:	52                   	push   %edx
 8052255:	50                   	push   %eax
 8052256:	8d 45 bc             	lea    -0x44(%ebp),%eax
 8052259:	50                   	push   %eax
 805225a:	e8 bd 46 00 00       	call   805691c <array_set>
 805225f:	83 c4 10             	add    $0x10,%esp
 8052262:	83 ad 74 ff ff ff 01 	subl   $0x1,-0x8c(%ebp)
 8052269:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)
 805226d:	74 c7                	je     8052236 <strconv__f64_to_str_lnd+0x4ca>
 805226f:	8b 45 88             	mov    -0x78(%ebp),%eax
 8052272:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8052278:	c6 45 d4 2e          	movb   $0x2e,-0x2c(%ebp)
 805227c:	8b 45 88             	mov    -0x78(%ebp),%eax
 805227f:	8d 50 01             	lea    0x1(%eax),%edx
 8052282:	89 55 88             	mov    %edx,-0x78(%ebp)
 8052285:	83 ec 04             	sub    $0x4,%esp
 8052288:	8d 55 d4             	lea    -0x2c(%ebp),%edx
 805228b:	52                   	push   %edx
 805228c:	50                   	push   %eax
 805228d:	8d 45 bc             	lea    -0x44(%ebp),%eax
 8052290:	50                   	push   %eax
 8052291:	e8 86 46 00 00       	call   805691c <array_set>
 8052296:	83 c4 10             	add    $0x10,%esp
 8052299:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
 80522a0:	eb 94                	jmp    8052236 <strconv__f64_to_str_lnd+0x4ca>
 80522a2:	8d 55 da             	lea    -0x26(%ebp),%edx
 80522a5:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80522ab:	01 d0                	add    %edx,%eax
 80522ad:	0f b6 00             	movzbl (%eax),%eax
 80522b0:	84 c0                	test   %al,%al
 80522b2:	74 3a                	je     80522ee <strconv__f64_to_str_lnd+0x582>
 80522b4:	8d 55 da             	lea    -0x26(%ebp),%edx
 80522b7:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80522bd:	01 d0                	add    %edx,%eax
 80522bf:	0f b6 00             	movzbl (%eax),%eax
 80522c2:	88 45 d5             	mov    %al,-0x2b(%ebp)
 80522c5:	8b 45 88             	mov    -0x78(%ebp),%eax
 80522c8:	8d 50 01             	lea    0x1(%eax),%edx
 80522cb:	89 55 88             	mov    %edx,-0x78(%ebp)
 80522ce:	83 ec 04             	sub    $0x4,%esp
 80522d1:	8d 55 d5             	lea    -0x2b(%ebp),%edx
 80522d4:	52                   	push   %edx
 80522d5:	50                   	push   %eax
 80522d6:	8d 45 bc             	lea    -0x44(%ebp),%eax
 80522d9:	50                   	push   %eax
 80522da:	e8 3d 46 00 00       	call   805691c <array_set>
 80522df:	83 c4 10             	add    $0x10,%esp
 80522e2:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%ebp)
 80522e9:	eb b7                	jmp    80522a2 <strconv__f64_to_str_lnd+0x536>
 80522eb:	90                   	nop
 80522ec:	eb 01                	jmp    80522ef <strconv__f64_to_str_lnd+0x583>
 80522ee:	90                   	nop
 80522ef:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%ebp)
 80522f6:	78 57                	js     805234f <strconv__f64_to_str_lnd+0x5e3>
 80522f8:	8b 45 88             	mov    -0x78(%ebp),%eax
 80522fb:	2b 85 7c ff ff ff    	sub    -0x84(%ebp),%eax
 8052301:	3b 45 14             	cmp    0x14(%ebp),%eax
 8052304:	7e 11                	jle    8052317 <strconv__f64_to_str_lnd+0x5ab>
 8052306:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 805230c:	8b 45 14             	mov    0x14(%ebp),%eax
 805230f:	01 d0                	add    %edx,%eax
 8052311:	83 c0 01             	add    $0x1,%eax
 8052314:	89 45 88             	mov    %eax,-0x78(%ebp)
 8052317:	c6 45 d6 00          	movb   $0x0,-0x2a(%ebp)
 805231b:	83 ec 04             	sub    $0x4,%esp
 805231e:	8d 45 d6             	lea    -0x2a(%ebp),%eax
 8052321:	50                   	push   %eax
 8052322:	ff 75 88             	pushl  -0x78(%ebp)
 8052325:	8d 45 bc             	lea    -0x44(%ebp),%eax
 8052328:	50                   	push   %eax
 8052329:	e8 ee 45 00 00       	call   805691c <array_set>
 805232e:	83 c4 10             	add    $0x10,%esp
 8052331:	8b 55 c0             	mov    -0x40(%ebp),%edx
 8052334:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 805233a:	83 ec 04             	sub    $0x4,%esp
 805233d:	ff 75 88             	pushl  -0x78(%ebp)
 8052340:	52                   	push   %edx
 8052341:	50                   	push   %eax
 8052342:	e8 b3 af 00 00       	call   805d2fa <tos>
 8052347:	83 c4 0c             	add    $0xc,%esp
 805234a:	e9 91 00 00 00       	jmp    80523e0 <strconv__f64_to_str_lnd+0x674>
 805234f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 8052353:	7e 72                	jle    80523c7 <strconv__f64_to_str_lnd+0x65b>
 8052355:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
 805235c:	c6 45 d7 2e          	movb   $0x2e,-0x29(%ebp)
 8052360:	8b 45 88             	mov    -0x78(%ebp),%eax
 8052363:	8d 50 01             	lea    0x1(%eax),%edx
 8052366:	89 55 88             	mov    %edx,-0x78(%ebp)
 8052369:	83 ec 04             	sub    $0x4,%esp
 805236c:	8d 55 d7             	lea    -0x29(%ebp),%edx
 805236f:	52                   	push   %edx
 8052370:	50                   	push   %eax
 8052371:	8d 45 bc             	lea    -0x44(%ebp),%eax
 8052374:	50                   	push   %eax
 8052375:	e8 a2 45 00 00       	call   805691c <array_set>
 805237a:	83 c4 10             	add    $0x10,%esp
 805237d:	8b 45 90             	mov    -0x70(%ebp),%eax
 8052380:	3b 45 14             	cmp    0x14(%ebp),%eax
 8052383:	7d 27                	jge    80523ac <strconv__f64_to_str_lnd+0x640>
 8052385:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)
 8052389:	8b 45 88             	mov    -0x78(%ebp),%eax
 805238c:	8d 50 01             	lea    0x1(%eax),%edx
 805238f:	89 55 88             	mov    %edx,-0x78(%ebp)
 8052392:	83 ec 04             	sub    $0x4,%esp
 8052395:	8d 55 d8             	lea    -0x28(%ebp),%edx
 8052398:	52                   	push   %edx
 8052399:	50                   	push   %eax
 805239a:	8d 45 bc             	lea    -0x44(%ebp),%eax
 805239d:	50                   	push   %eax
 805239e:	e8 79 45 00 00       	call   805691c <array_set>
 80523a3:	83 c4 10             	add    $0x10,%esp
 80523a6:	83 45 90 01          	addl   $0x1,-0x70(%ebp)
 80523aa:	eb d1                	jmp    805237d <strconv__f64_to_str_lnd+0x611>
 80523ac:	90                   	nop
 80523ad:	c6 45 d9 00          	movb   $0x0,-0x27(%ebp)
 80523b1:	83 ec 04             	sub    $0x4,%esp
 80523b4:	8d 45 d9             	lea    -0x27(%ebp),%eax
 80523b7:	50                   	push   %eax
 80523b8:	ff 75 88             	pushl  -0x78(%ebp)
 80523bb:	8d 45 bc             	lea    -0x44(%ebp),%eax
 80523be:	50                   	push   %eax
 80523bf:	e8 58 45 00 00       	call   805691c <array_set>
 80523c4:	83 c4 10             	add    $0x10,%esp
 80523c7:	8b 55 c0             	mov    -0x40(%ebp),%edx
 80523ca:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80523d0:	83 ec 04             	sub    $0x4,%esp
 80523d3:	ff 75 88             	pushl  -0x78(%ebp)
 80523d6:	52                   	push   %edx
 80523d7:	50                   	push   %eax
 80523d8:	e8 1d af 00 00       	call   805d2fa <tos>
 80523dd:	83 c4 0c             	add    $0xc,%esp
 80523e0:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80523e6:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 80523e9:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 80523f0:	74 05                	je     80523f7 <strconv__f64_to_str_lnd+0x68b>
 80523f2:	e8 29 64 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80523f7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80523fa:	c9                   	leave  
 80523fb:	c2 04 00             	ret    $0x4

080523fe <strconv__format_str>:
 80523fe:	55                   	push   %ebp
 80523ff:	89 e5                	mov    %esp,%ebp
 8052401:	83 ec 48             	sub    $0x48,%esp
 8052404:	8b 45 08             	mov    0x8(%ebp),%eax
 8052407:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805240a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8052410:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8052413:	31 c0                	xor    %eax,%eax
 8052415:	8b 55 1c             	mov    0x1c(%ebp),%edx
 8052418:	8b 45 10             	mov    0x10(%ebp),%eax
 805241b:	29 c2                	sub    %eax,%edx
 805241d:	89 d0                	mov    %edx,%eax
 805241f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8052422:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 8052426:	7f 19                	jg     8052441 <strconv__format_str+0x43>
 8052428:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805242b:	8b 55 0c             	mov    0xc(%ebp),%edx
 805242e:	89 10                	mov    %edx,(%eax)
 8052430:	8b 55 10             	mov    0x10(%ebp),%edx
 8052433:	89 50 04             	mov    %edx,0x4(%eax)
 8052436:	8b 55 14             	mov    0x14(%ebp),%edx
 8052439:	89 50 08             	mov    %edx,0x8(%eax)
 805243c:	e9 a7 00 00 00       	jmp    80524e8 <strconv__format_str+0xea>
 8052441:	8b 55 10             	mov    0x10(%ebp),%edx
 8052444:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8052447:	01 c2                	add    %eax,%edx
 8052449:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805244c:	83 ec 08             	sub    $0x8,%esp
 805244f:	52                   	push   %edx
 8052450:	50                   	push   %eax
 8052451:	e8 dc 74 ff ff       	call   8049932 <strings__new_builder>
 8052456:	83 c4 0c             	add    $0xc,%esp
 8052459:	8b 45 2c             	mov    0x2c(%ebp),%eax
 805245c:	85 c0                	test   %eax,%eax
 805245e:	75 2c                	jne    805248c <strconv__format_str+0x8e>
 8052460:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 8052467:	eb 1b                	jmp    8052484 <strconv__format_str+0x86>
 8052469:	0f b6 45 18          	movzbl 0x18(%ebp),%eax
 805246d:	0f b6 c0             	movzbl %al,%eax
 8052470:	83 ec 08             	sub    $0x8,%esp
 8052473:	50                   	push   %eax
 8052474:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052477:	50                   	push   %eax
 8052478:	e8 62 75 ff ff       	call   80499df <strings__Builder_write_b>
 805247d:	83 c4 10             	add    $0x10,%esp
 8052480:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 8052484:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8052487:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 805248a:	7c dd                	jl     8052469 <strconv__format_str+0x6b>
 805248c:	ff 75 14             	pushl  0x14(%ebp)
 805248f:	ff 75 10             	pushl  0x10(%ebp)
 8052492:	ff 75 0c             	pushl  0xc(%ebp)
 8052495:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052498:	50                   	push   %eax
 8052499:	e8 9b 75 ff ff       	call   8049a39 <strings__Builder_write>
 805249e:	83 c4 10             	add    $0x10,%esp
 80524a1:	8b 45 2c             	mov    0x2c(%ebp),%eax
 80524a4:	83 f8 01             	cmp    $0x1,%eax
 80524a7:	75 2c                	jne    80524d5 <strconv__format_str+0xd7>
 80524a9:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 80524b0:	eb 1b                	jmp    80524cd <strconv__format_str+0xcf>
 80524b2:	0f b6 45 18          	movzbl 0x18(%ebp),%eax
 80524b6:	0f b6 c0             	movzbl %al,%eax
 80524b9:	83 ec 08             	sub    $0x8,%esp
 80524bc:	50                   	push   %eax
 80524bd:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80524c0:	50                   	push   %eax
 80524c1:	e8 19 75 ff ff       	call   80499df <strings__Builder_write_b>
 80524c6:	83 c4 10             	add    $0x10,%esp
 80524c9:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 80524cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80524d0:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 80524d3:	7c dd                	jl     80524b2 <strconv__format_str+0xb4>
 80524d5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80524d8:	83 ec 08             	sub    $0x8,%esp
 80524db:	8d 55 d8             	lea    -0x28(%ebp),%edx
 80524de:	52                   	push   %edx
 80524df:	50                   	push   %eax
 80524e0:	e8 e2 78 ff ff       	call   8049dc7 <strings__Builder_str>
 80524e5:	83 c4 0c             	add    $0xc,%esp
 80524e8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80524eb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80524ee:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80524f5:	74 05                	je     80524fc <strconv__format_str+0xfe>
 80524f7:	e8 24 63 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80524fc:	c9                   	leave  
 80524fd:	c2 04 00             	ret    $0x4

08052500 <strconv__format_dec>:
 8052500:	55                   	push   %ebp
 8052501:	89 e5                	mov    %esp,%ebp
 8052503:	81 ec 98 00 00 00    	sub    $0x98,%esp
 8052509:	8b 45 08             	mov    0x8(%ebp),%eax
 805250c:	89 45 84             	mov    %eax,-0x7c(%ebp)
 805250f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8052512:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8052518:	8b 45 10             	mov    0x10(%ebp),%eax
 805251b:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8052521:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8052527:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805252a:	31 c0                	xor    %eax,%eax
 805252c:	c7 45 9c 34 97 06 08 	movl   $0x8069734,-0x64(%ebp)
 8052533:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 805253a:	c7 45 a4 01 00 00 00 	movl   $0x1,-0x5c(%ebp)
 8052541:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052544:	83 ec 08             	sub    $0x8,%esp
 8052547:	6a 14                	push   $0x14
 8052549:	50                   	push   %eax
 805254a:	e8 e3 73 ff ff       	call   8049932 <strings__new_builder>
 805254f:	83 c4 0c             	add    $0xc,%esp
 8052552:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
 8052559:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 805255d:	3c 30                	cmp    $0x30,%al
 805255f:	75 60                	jne    80525c1 <strconv__format_dec+0xc1>
 8052561:	8b 45 20             	mov    0x20(%ebp),%eax
 8052564:	85 c0                	test   %eax,%eax
 8052566:	74 21                	je     8052589 <strconv__format_dec+0x89>
 8052568:	8b 45 24             	mov    0x24(%ebp),%eax
 805256b:	85 c0                	test   %eax,%eax
 805256d:	74 32                	je     80525a1 <strconv__format_dec+0xa1>
 805256f:	83 ec 08             	sub    $0x8,%esp
 8052572:	6a 2b                	push   $0x2b
 8052574:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052577:	50                   	push   %eax
 8052578:	e8 62 74 ff ff       	call   80499df <strings__Builder_write_b>
 805257d:	83 c4 10             	add    $0x10,%esp
 8052580:	c7 45 8c ff ff ff ff 	movl   $0xffffffff,-0x74(%ebp)
 8052587:	eb 18                	jmp    80525a1 <strconv__format_dec+0xa1>
 8052589:	83 ec 08             	sub    $0x8,%esp
 805258c:	6a 2d                	push   $0x2d
 805258e:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052591:	50                   	push   %eax
 8052592:	e8 48 74 ff ff       	call   80499df <strings__Builder_write_b>
 8052597:	83 c4 10             	add    $0x10,%esp
 805259a:	c7 45 8c ff ff ff ff 	movl   $0xffffffff,-0x74(%ebp)
 80525a1:	8d 45 9c             	lea    -0x64(%ebp),%eax
 80525a4:	83 ec 04             	sub    $0x4,%esp
 80525a7:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 80525ad:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 80525b3:	50                   	push   %eax
 80525b4:	e8 dc 6b 00 00       	call   8059195 <u64_str>
 80525b9:	83 c4 0c             	add    $0xc,%esp
 80525bc:	e9 30 01 00 00       	jmp    80526f1 <strconv__format_dec+0x1f1>
 80525c1:	8b 45 20             	mov    0x20(%ebp),%eax
 80525c4:	85 c0                	test   %eax,%eax
 80525c6:	0f 84 b6 00 00 00    	je     8052682 <strconv__format_dec+0x182>
 80525cc:	8b 45 24             	mov    0x24(%ebp),%eax
 80525cf:	85 c0                	test   %eax,%eax
 80525d1:	74 74                	je     8052647 <strconv__format_dec+0x147>
 80525d3:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80525d6:	83 ec 04             	sub    $0x4,%esp
 80525d9:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 80525df:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 80525e5:	50                   	push   %eax
 80525e6:	e8 aa 6b 00 00       	call   8059195 <u64_str>
 80525eb:	83 c4 0c             	add    $0xc,%esp
 80525ee:	c7 45 a8 e6 97 06 08 	movl   $0x80697e6,-0x58(%ebp)
 80525f5:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)
 80525fc:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
 8052603:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 8052609:	83 ec 04             	sub    $0x4,%esp
 805260c:	ff 75 c8             	pushl  -0x38(%ebp)
 805260f:	ff 75 c4             	pushl  -0x3c(%ebp)
 8052612:	ff 75 c0             	pushl  -0x40(%ebp)
 8052615:	ff 75 b0             	pushl  -0x50(%ebp)
 8052618:	ff 75 ac             	pushl  -0x54(%ebp)
 805261b:	ff 75 a8             	pushl  -0x58(%ebp)
 805261e:	50                   	push   %eax
 805261f:	e8 20 bc 00 00       	call   805e244 <string_add>
 8052624:	83 c4 1c             	add    $0x1c,%esp
 8052627:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 805262d:	89 45 9c             	mov    %eax,-0x64(%ebp)
 8052630:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8052636:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8052639:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 805263f:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8052642:	e9 aa 00 00 00       	jmp    80526f1 <strconv__format_dec+0x1f1>
 8052647:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 805264d:	83 ec 04             	sub    $0x4,%esp
 8052650:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 8052656:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 805265c:	50                   	push   %eax
 805265d:	e8 33 6b 00 00       	call   8059195 <u64_str>
 8052662:	83 c4 0c             	add    $0xc,%esp
 8052665:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 805266b:	89 45 9c             	mov    %eax,-0x64(%ebp)
 805266e:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8052674:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8052677:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 805267d:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8052680:	eb 6f                	jmp    80526f1 <strconv__format_dec+0x1f1>
 8052682:	8d 45 cc             	lea    -0x34(%ebp),%eax
 8052685:	83 ec 04             	sub    $0x4,%esp
 8052688:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 805268e:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 8052694:	50                   	push   %eax
 8052695:	e8 fb 6a 00 00       	call   8059195 <u64_str>
 805269a:	83 c4 0c             	add    $0xc,%esp
 805269d:	c7 45 b4 e8 97 06 08 	movl   $0x80697e8,-0x4c(%ebp)
 80526a4:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%ebp)
 80526ab:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
 80526b2:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 80526b8:	83 ec 04             	sub    $0x4,%esp
 80526bb:	ff 75 d4             	pushl  -0x2c(%ebp)
 80526be:	ff 75 d0             	pushl  -0x30(%ebp)
 80526c1:	ff 75 cc             	pushl  -0x34(%ebp)
 80526c4:	ff 75 bc             	pushl  -0x44(%ebp)
 80526c7:	ff 75 b8             	pushl  -0x48(%ebp)
 80526ca:	ff 75 b4             	pushl  -0x4c(%ebp)
 80526cd:	50                   	push   %eax
 80526ce:	e8 71 bb 00 00       	call   805e244 <string_add>
 80526d3:	83 c4 1c             	add    $0x1c,%esp
 80526d6:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80526dc:	89 45 9c             	mov    %eax,-0x64(%ebp)
 80526df:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80526e5:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80526e8:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 80526ee:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 80526f1:	8b 55 18             	mov    0x18(%ebp),%edx
 80526f4:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80526f7:	29 c2                	sub    %eax,%edx
 80526f9:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80526fc:	01 d0                	add    %edx,%eax
 80526fe:	89 45 98             	mov    %eax,-0x68(%ebp)
 8052701:	8b 45 28             	mov    0x28(%ebp),%eax
 8052704:	85 c0                	test   %eax,%eax
 8052706:	75 2c                	jne    8052734 <strconv__format_dec+0x234>
 8052708:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
 805270f:	eb 1b                	jmp    805272c <strconv__format_dec+0x22c>
 8052711:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 8052715:	0f b6 c0             	movzbl %al,%eax
 8052718:	83 ec 08             	sub    $0x8,%esp
 805271b:	50                   	push   %eax
 805271c:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805271f:	50                   	push   %eax
 8052720:	e8 ba 72 ff ff       	call   80499df <strings__Builder_write_b>
 8052725:	83 c4 10             	add    $0x10,%esp
 8052728:	83 45 90 01          	addl   $0x1,-0x70(%ebp)
 805272c:	8b 45 90             	mov    -0x70(%ebp),%eax
 805272f:	3b 45 98             	cmp    -0x68(%ebp),%eax
 8052732:	7c dd                	jl     8052711 <strconv__format_dec+0x211>
 8052734:	ff 75 a4             	pushl  -0x5c(%ebp)
 8052737:	ff 75 a0             	pushl  -0x60(%ebp)
 805273a:	ff 75 9c             	pushl  -0x64(%ebp)
 805273d:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052740:	50                   	push   %eax
 8052741:	e8 f3 72 ff ff       	call   8049a39 <strings__Builder_write>
 8052746:	83 c4 10             	add    $0x10,%esp
 8052749:	8b 45 28             	mov    0x28(%ebp),%eax
 805274c:	83 f8 01             	cmp    $0x1,%eax
 805274f:	75 2c                	jne    805277d <strconv__format_dec+0x27d>
 8052751:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
 8052758:	eb 1b                	jmp    8052775 <strconv__format_dec+0x275>
 805275a:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 805275e:	0f b6 c0             	movzbl %al,%eax
 8052761:	83 ec 08             	sub    $0x8,%esp
 8052764:	50                   	push   %eax
 8052765:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052768:	50                   	push   %eax
 8052769:	e8 71 72 ff ff       	call   80499df <strings__Builder_write_b>
 805276e:	83 c4 10             	add    $0x10,%esp
 8052771:	83 45 94 01          	addl   $0x1,-0x6c(%ebp)
 8052775:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052778:	3b 45 98             	cmp    -0x68(%ebp),%eax
 805277b:	7c dd                	jl     805275a <strconv__format_dec+0x25a>
 805277d:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8052780:	83 ec 08             	sub    $0x8,%esp
 8052783:	8d 55 d8             	lea    -0x28(%ebp),%edx
 8052786:	52                   	push   %edx
 8052787:	50                   	push   %eax
 8052788:	e8 3a 76 ff ff       	call   8049dc7 <strings__Builder_str>
 805278d:	83 c4 0c             	add    $0xc,%esp
 8052790:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8052793:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8052796:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805279d:	74 05                	je     80527a4 <strconv__format_dec+0x2a4>
 805279f:	e8 7c 60 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80527a4:	c9                   	leave  
 80527a5:	c2 04 00             	ret    $0x4

080527a8 <strconv__format_fl>:
 80527a8:	55                   	push   %ebp
 80527a9:	89 e5                	mov    %esp,%ebp
 80527ab:	81 ec 88 00 00 00    	sub    $0x88,%esp
 80527b1:	8b 45 08             	mov    0x8(%ebp),%eax
 80527b4:	89 45 94             	mov    %eax,-0x6c(%ebp)
 80527b7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80527ba:	89 45 88             	mov    %eax,-0x78(%ebp)
 80527bd:	8b 45 10             	mov    0x10(%ebp),%eax
 80527c0:	89 45 8c             	mov    %eax,-0x74(%ebp)
 80527c3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80527c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80527cc:	31 c0                	xor    %eax,%eax
 80527ce:	c7 45 a8 34 97 06 08 	movl   $0x8069734,-0x58(%ebp)
 80527d5:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 80527dc:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
 80527e3:	8b 55 1c             	mov    0x1c(%ebp),%edx
 80527e6:	dd 45 88             	fldl   -0x78(%ebp)
 80527e9:	d9 ee                	fldz   
 80527eb:	d9 c9                	fxch   %st(1)
 80527ed:	df e9                	fucomip %st(1),%st
 80527ef:	dd d8                	fstp   %st(0)
 80527f1:	72 05                	jb     80527f8 <strconv__format_fl+0x50>
 80527f3:	dd 45 88             	fldl   -0x78(%ebp)
 80527f6:	eb 05                	jmp    80527fd <strconv__format_fl+0x55>
 80527f8:	dd 45 88             	fldl   -0x78(%ebp)
 80527fb:	d9 e0                	fchs   
 80527fd:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 8052800:	52                   	push   %edx
 8052801:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 8052805:	dd 1c 24             	fstpl  (%esp)
 8052808:	50                   	push   %eax
 8052809:	e8 5e f5 ff ff       	call   8051d6c <strconv__f64_to_str_lnd>
 805280e:	83 c4 0c             	add    $0xc,%esp
 8052811:	6a 00                	push   $0x0
 8052813:	ff 75 bc             	pushl  -0x44(%ebp)
 8052816:	ff 75 b8             	pushl  -0x48(%ebp)
 8052819:	ff 75 b4             	pushl  -0x4c(%ebp)
 805281c:	e8 19 e1 00 00       	call   806093a <string_at>
 8052821:	83 c4 10             	add    $0x10,%esp
 8052824:	3c 5b                	cmp    $0x5b,%al
 8052826:	75 19                	jne    8052841 <strconv__format_fl+0x99>
 8052828:	8b 45 94             	mov    -0x6c(%ebp),%eax
 805282b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 805282e:	89 10                	mov    %edx,(%eax)
 8052830:	8b 55 b8             	mov    -0x48(%ebp),%edx
 8052833:	89 50 04             	mov    %edx,0x4(%eax)
 8052836:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8052839:	89 50 08             	mov    %edx,0x8(%eax)
 805283c:	e9 02 02 00 00       	jmp    8052a43 <strconv__format_fl+0x29b>
 8052841:	8b 45 2c             	mov    0x2c(%ebp),%eax
 8052844:	85 c0                	test   %eax,%eax
 8052846:	74 30                	je     8052878 <strconv__format_fl+0xd0>
 8052848:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 805284e:	ff 75 bc             	pushl  -0x44(%ebp)
 8052851:	ff 75 b8             	pushl  -0x48(%ebp)
 8052854:	ff 75 b4             	pushl  -0x4c(%ebp)
 8052857:	50                   	push   %eax
 8052858:	e8 81 04 00 00       	call   8052cde <strconv__remove_tail_zeros>
 805285d:	83 c4 0c             	add    $0xc,%esp
 8052860:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8052866:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8052869:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 805286f:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8052872:	8b 45 80             	mov    -0x80(%ebp),%eax
 8052875:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8052878:	8b 55 b8             	mov    -0x48(%ebp),%edx
 805287b:	8b 45 18             	mov    0x18(%ebp),%eax
 805287e:	39 c2                	cmp    %eax,%edx
 8052880:	0f 4c d0             	cmovl  %eax,%edx
 8052883:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052886:	83 ec 08             	sub    $0x8,%esp
 8052889:	52                   	push   %edx
 805288a:	50                   	push   %eax
 805288b:	e8 a2 70 ff ff       	call   8049932 <strings__new_builder>
 8052890:	83 c4 0c             	add    $0xc,%esp
 8052893:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
 805289a:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 805289e:	3c 30                	cmp    $0x30,%al
 80528a0:	75 57                	jne    80528f9 <strconv__format_fl+0x151>
 80528a2:	8b 45 20             	mov    0x20(%ebp),%eax
 80528a5:	85 c0                	test   %eax,%eax
 80528a7:	74 21                	je     80528ca <strconv__format_fl+0x122>
 80528a9:	8b 45 24             	mov    0x24(%ebp),%eax
 80528ac:	85 c0                	test   %eax,%eax
 80528ae:	74 32                	je     80528e2 <strconv__format_fl+0x13a>
 80528b0:	83 ec 08             	sub    $0x8,%esp
 80528b3:	6a 2b                	push   $0x2b
 80528b5:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80528b8:	50                   	push   %eax
 80528b9:	e8 21 71 ff ff       	call   80499df <strings__Builder_write_b>
 80528be:	83 c4 10             	add    $0x10,%esp
 80528c1:	c7 45 98 ff ff ff ff 	movl   $0xffffffff,-0x68(%ebp)
 80528c8:	eb 18                	jmp    80528e2 <strconv__format_fl+0x13a>
 80528ca:	83 ec 08             	sub    $0x8,%esp
 80528cd:	6a 2d                	push   $0x2d
 80528cf:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80528d2:	50                   	push   %eax
 80528d3:	e8 07 71 ff ff       	call   80499df <strings__Builder_write_b>
 80528d8:	83 c4 10             	add    $0x10,%esp
 80528db:	c7 45 98 ff ff ff ff 	movl   $0xffffffff,-0x68(%ebp)
 80528e2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80528e5:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80528e8:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80528eb:	89 45 ac             	mov    %eax,-0x54(%ebp)
 80528ee:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80528f1:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80528f4:	e9 ab 00 00 00       	jmp    80529a4 <strconv__format_fl+0x1fc>
 80528f9:	8b 45 20             	mov    0x20(%ebp),%eax
 80528fc:	85 c0                	test   %eax,%eax
 80528fe:	74 53                	je     8052953 <strconv__format_fl+0x1ab>
 8052900:	8b 45 24             	mov    0x24(%ebp),%eax
 8052903:	85 c0                	test   %eax,%eax
 8052905:	74 38                	je     805293f <strconv__format_fl+0x197>
 8052907:	c7 45 c0 e6 97 06 08 	movl   $0x80697e6,-0x40(%ebp)
 805290e:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)
 8052915:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 805291c:	8d 45 a8             	lea    -0x58(%ebp),%eax
 805291f:	83 ec 04             	sub    $0x4,%esp
 8052922:	ff 75 bc             	pushl  -0x44(%ebp)
 8052925:	ff 75 b8             	pushl  -0x48(%ebp)
 8052928:	ff 75 b4             	pushl  -0x4c(%ebp)
 805292b:	ff 75 c8             	pushl  -0x38(%ebp)
 805292e:	ff 75 c4             	pushl  -0x3c(%ebp)
 8052931:	ff 75 c0             	pushl  -0x40(%ebp)
 8052934:	50                   	push   %eax
 8052935:	e8 0a b9 00 00       	call   805e244 <string_add>
 805293a:	83 c4 1c             	add    $0x1c,%esp
 805293d:	eb 65                	jmp    80529a4 <strconv__format_fl+0x1fc>
 805293f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8052942:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8052945:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8052948:	89 45 ac             	mov    %eax,-0x54(%ebp)
 805294b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805294e:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8052951:	eb 51                	jmp    80529a4 <strconv__format_fl+0x1fc>
 8052953:	c7 45 cc e8 97 06 08 	movl   $0x80697e8,-0x34(%ebp)
 805295a:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
 8052961:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 8052968:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 805296e:	83 ec 04             	sub    $0x4,%esp
 8052971:	ff 75 bc             	pushl  -0x44(%ebp)
 8052974:	ff 75 b8             	pushl  -0x48(%ebp)
 8052977:	ff 75 b4             	pushl  -0x4c(%ebp)
 805297a:	ff 75 d4             	pushl  -0x2c(%ebp)
 805297d:	ff 75 d0             	pushl  -0x30(%ebp)
 8052980:	ff 75 cc             	pushl  -0x34(%ebp)
 8052983:	50                   	push   %eax
 8052984:	e8 bb b8 00 00       	call   805e244 <string_add>
 8052989:	83 c4 1c             	add    $0x1c,%esp
 805298c:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8052992:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8052995:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 805299b:	89 45 ac             	mov    %eax,-0x54(%ebp)
 805299e:	8b 45 80             	mov    -0x80(%ebp),%eax
 80529a1:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80529a4:	8b 55 18             	mov    0x18(%ebp),%edx
 80529a7:	8b 45 ac             	mov    -0x54(%ebp),%eax
 80529aa:	29 c2                	sub    %eax,%edx
 80529ac:	8b 45 98             	mov    -0x68(%ebp),%eax
 80529af:	01 d0                	add    %edx,%eax
 80529b1:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 80529b4:	8b 45 28             	mov    0x28(%ebp),%eax
 80529b7:	85 c0                	test   %eax,%eax
 80529b9:	75 2c                	jne    80529e7 <strconv__format_fl+0x23f>
 80529bb:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
 80529c2:	eb 1b                	jmp    80529df <strconv__format_fl+0x237>
 80529c4:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 80529c8:	0f b6 c0             	movzbl %al,%eax
 80529cb:	83 ec 08             	sub    $0x8,%esp
 80529ce:	50                   	push   %eax
 80529cf:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80529d2:	50                   	push   %eax
 80529d3:	e8 07 70 ff ff       	call   80499df <strings__Builder_write_b>
 80529d8:	83 c4 10             	add    $0x10,%esp
 80529db:	83 45 9c 01          	addl   $0x1,-0x64(%ebp)
 80529df:	8b 45 9c             	mov    -0x64(%ebp),%eax
 80529e2:	3b 45 a4             	cmp    -0x5c(%ebp),%eax
 80529e5:	7c dd                	jl     80529c4 <strconv__format_fl+0x21c>
 80529e7:	ff 75 b0             	pushl  -0x50(%ebp)
 80529ea:	ff 75 ac             	pushl  -0x54(%ebp)
 80529ed:	ff 75 a8             	pushl  -0x58(%ebp)
 80529f0:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80529f3:	50                   	push   %eax
 80529f4:	e8 40 70 ff ff       	call   8049a39 <strings__Builder_write>
 80529f9:	83 c4 10             	add    $0x10,%esp
 80529fc:	8b 45 28             	mov    0x28(%ebp),%eax
 80529ff:	83 f8 01             	cmp    $0x1,%eax
 8052a02:	75 2c                	jne    8052a30 <strconv__format_fl+0x288>
 8052a04:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 8052a0b:	eb 1b                	jmp    8052a28 <strconv__format_fl+0x280>
 8052a0d:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 8052a11:	0f b6 c0             	movzbl %al,%eax
 8052a14:	83 ec 08             	sub    $0x8,%esp
 8052a17:	50                   	push   %eax
 8052a18:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052a1b:	50                   	push   %eax
 8052a1c:	e8 be 6f ff ff       	call   80499df <strings__Builder_write_b>
 8052a21:	83 c4 10             	add    $0x10,%esp
 8052a24:	83 45 a0 01          	addl   $0x1,-0x60(%ebp)
 8052a28:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8052a2b:	3b 45 a4             	cmp    -0x5c(%ebp),%eax
 8052a2e:	7c dd                	jl     8052a0d <strconv__format_fl+0x265>
 8052a30:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052a33:	83 ec 08             	sub    $0x8,%esp
 8052a36:	8d 55 d8             	lea    -0x28(%ebp),%edx
 8052a39:	52                   	push   %edx
 8052a3a:	50                   	push   %eax
 8052a3b:	e8 87 73 ff ff       	call   8049dc7 <strings__Builder_str>
 8052a40:	83 c4 0c             	add    $0xc,%esp
 8052a43:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052a46:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8052a49:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8052a50:	74 05                	je     8052a57 <strconv__format_fl+0x2af>
 8052a52:	e8 c9 5d ff ff       	call   8048820 <__stack_chk_fail@plt>
 8052a57:	c9                   	leave  
 8052a58:	c2 04 00             	ret    $0x4

08052a5b <strconv__format_es>:
 8052a5b:	55                   	push   %ebp
 8052a5c:	89 e5                	mov    %esp,%ebp
 8052a5e:	81 ec 88 00 00 00    	sub    $0x88,%esp
 8052a64:	8b 45 08             	mov    0x8(%ebp),%eax
 8052a67:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8052a6a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8052a6d:	89 45 88             	mov    %eax,-0x78(%ebp)
 8052a70:	8b 45 10             	mov    0x10(%ebp),%eax
 8052a73:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8052a76:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8052a7c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8052a7f:	31 c0                	xor    %eax,%eax
 8052a81:	c7 45 a8 34 97 06 08 	movl   $0x8069734,-0x58(%ebp)
 8052a88:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 8052a8f:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
 8052a96:	8b 55 1c             	mov    0x1c(%ebp),%edx
 8052a99:	dd 45 88             	fldl   -0x78(%ebp)
 8052a9c:	d9 ee                	fldz   
 8052a9e:	d9 c9                	fxch   %st(1)
 8052aa0:	df e9                	fucomip %st(1),%st
 8052aa2:	dd d8                	fstp   %st(0)
 8052aa4:	76 05                	jbe    8052aab <strconv__format_es+0x50>
 8052aa6:	dd 45 88             	fldl   -0x78(%ebp)
 8052aa9:	eb 05                	jmp    8052ab0 <strconv__format_es+0x55>
 8052aab:	dd 45 88             	fldl   -0x78(%ebp)
 8052aae:	d9 e0                	fchs   
 8052ab0:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 8052ab3:	52                   	push   %edx
 8052ab4:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 8052ab8:	dd 1c 24             	fstpl  (%esp)
 8052abb:	50                   	push   %eax
 8052abc:	e8 d4 f0 ff ff       	call   8051b95 <strconv__f64_to_str_pad>
 8052ac1:	83 c4 0c             	add    $0xc,%esp
 8052ac4:	8b 45 2c             	mov    0x2c(%ebp),%eax
 8052ac7:	85 c0                	test   %eax,%eax
 8052ac9:	74 30                	je     8052afb <strconv__format_es+0xa0>
 8052acb:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 8052ad1:	ff 75 bc             	pushl  -0x44(%ebp)
 8052ad4:	ff 75 b8             	pushl  -0x48(%ebp)
 8052ad7:	ff 75 b4             	pushl  -0x4c(%ebp)
 8052ada:	50                   	push   %eax
 8052adb:	e8 fe 01 00 00       	call   8052cde <strconv__remove_tail_zeros>
 8052ae0:	83 c4 0c             	add    $0xc,%esp
 8052ae3:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8052ae9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8052aec:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8052af2:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8052af5:	8b 45 80             	mov    -0x80(%ebp),%eax
 8052af8:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8052afb:	8b 55 b8             	mov    -0x48(%ebp),%edx
 8052afe:	8b 45 18             	mov    0x18(%ebp),%eax
 8052b01:	39 c2                	cmp    %eax,%edx
 8052b03:	0f 4c d0             	cmovl  %eax,%edx
 8052b06:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052b09:	83 ec 08             	sub    $0x8,%esp
 8052b0c:	52                   	push   %edx
 8052b0d:	50                   	push   %eax
 8052b0e:	e8 1f 6e ff ff       	call   8049932 <strings__new_builder>
 8052b13:	83 c4 0c             	add    $0xc,%esp
 8052b16:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
 8052b1d:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 8052b21:	3c 30                	cmp    $0x30,%al
 8052b23:	75 57                	jne    8052b7c <strconv__format_es+0x121>
 8052b25:	8b 45 20             	mov    0x20(%ebp),%eax
 8052b28:	85 c0                	test   %eax,%eax
 8052b2a:	74 21                	je     8052b4d <strconv__format_es+0xf2>
 8052b2c:	8b 45 24             	mov    0x24(%ebp),%eax
 8052b2f:	85 c0                	test   %eax,%eax
 8052b31:	74 32                	je     8052b65 <strconv__format_es+0x10a>
 8052b33:	83 ec 08             	sub    $0x8,%esp
 8052b36:	6a 2b                	push   $0x2b
 8052b38:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052b3b:	50                   	push   %eax
 8052b3c:	e8 9e 6e ff ff       	call   80499df <strings__Builder_write_b>
 8052b41:	83 c4 10             	add    $0x10,%esp
 8052b44:	c7 45 98 ff ff ff ff 	movl   $0xffffffff,-0x68(%ebp)
 8052b4b:	eb 18                	jmp    8052b65 <strconv__format_es+0x10a>
 8052b4d:	83 ec 08             	sub    $0x8,%esp
 8052b50:	6a 2d                	push   $0x2d
 8052b52:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052b55:	50                   	push   %eax
 8052b56:	e8 84 6e ff ff       	call   80499df <strings__Builder_write_b>
 8052b5b:	83 c4 10             	add    $0x10,%esp
 8052b5e:	c7 45 98 ff ff ff ff 	movl   $0xffffffff,-0x68(%ebp)
 8052b65:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8052b68:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8052b6b:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8052b6e:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8052b71:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8052b74:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8052b77:	e9 ab 00 00 00       	jmp    8052c27 <strconv__format_es+0x1cc>
 8052b7c:	8b 45 20             	mov    0x20(%ebp),%eax
 8052b7f:	85 c0                	test   %eax,%eax
 8052b81:	74 53                	je     8052bd6 <strconv__format_es+0x17b>
 8052b83:	8b 45 24             	mov    0x24(%ebp),%eax
 8052b86:	85 c0                	test   %eax,%eax
 8052b88:	74 38                	je     8052bc2 <strconv__format_es+0x167>
 8052b8a:	c7 45 c0 e6 97 06 08 	movl   $0x80697e6,-0x40(%ebp)
 8052b91:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)
 8052b98:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 8052b9f:	8d 45 a8             	lea    -0x58(%ebp),%eax
 8052ba2:	83 ec 04             	sub    $0x4,%esp
 8052ba5:	ff 75 bc             	pushl  -0x44(%ebp)
 8052ba8:	ff 75 b8             	pushl  -0x48(%ebp)
 8052bab:	ff 75 b4             	pushl  -0x4c(%ebp)
 8052bae:	ff 75 c8             	pushl  -0x38(%ebp)
 8052bb1:	ff 75 c4             	pushl  -0x3c(%ebp)
 8052bb4:	ff 75 c0             	pushl  -0x40(%ebp)
 8052bb7:	50                   	push   %eax
 8052bb8:	e8 87 b6 00 00       	call   805e244 <string_add>
 8052bbd:	83 c4 1c             	add    $0x1c,%esp
 8052bc0:	eb 65                	jmp    8052c27 <strconv__format_es+0x1cc>
 8052bc2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8052bc5:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8052bc8:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8052bcb:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8052bce:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8052bd1:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8052bd4:	eb 51                	jmp    8052c27 <strconv__format_es+0x1cc>
 8052bd6:	c7 45 cc e8 97 06 08 	movl   $0x80697e8,-0x34(%ebp)
 8052bdd:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
 8052be4:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 8052beb:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 8052bf1:	83 ec 04             	sub    $0x4,%esp
 8052bf4:	ff 75 bc             	pushl  -0x44(%ebp)
 8052bf7:	ff 75 b8             	pushl  -0x48(%ebp)
 8052bfa:	ff 75 b4             	pushl  -0x4c(%ebp)
 8052bfd:	ff 75 d4             	pushl  -0x2c(%ebp)
 8052c00:	ff 75 d0             	pushl  -0x30(%ebp)
 8052c03:	ff 75 cc             	pushl  -0x34(%ebp)
 8052c06:	50                   	push   %eax
 8052c07:	e8 38 b6 00 00       	call   805e244 <string_add>
 8052c0c:	83 c4 1c             	add    $0x1c,%esp
 8052c0f:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8052c15:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8052c18:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8052c1e:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8052c21:	8b 45 80             	mov    -0x80(%ebp),%eax
 8052c24:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8052c27:	8b 55 18             	mov    0x18(%ebp),%edx
 8052c2a:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8052c2d:	29 c2                	sub    %eax,%edx
 8052c2f:	8b 45 98             	mov    -0x68(%ebp),%eax
 8052c32:	01 d0                	add    %edx,%eax
 8052c34:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8052c37:	8b 45 28             	mov    0x28(%ebp),%eax
 8052c3a:	85 c0                	test   %eax,%eax
 8052c3c:	75 2c                	jne    8052c6a <strconv__format_es+0x20f>
 8052c3e:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
 8052c45:	eb 1b                	jmp    8052c62 <strconv__format_es+0x207>
 8052c47:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 8052c4b:	0f b6 c0             	movzbl %al,%eax
 8052c4e:	83 ec 08             	sub    $0x8,%esp
 8052c51:	50                   	push   %eax
 8052c52:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052c55:	50                   	push   %eax
 8052c56:	e8 84 6d ff ff       	call   80499df <strings__Builder_write_b>
 8052c5b:	83 c4 10             	add    $0x10,%esp
 8052c5e:	83 45 9c 01          	addl   $0x1,-0x64(%ebp)
 8052c62:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8052c65:	3b 45 a4             	cmp    -0x5c(%ebp),%eax
 8052c68:	7c dd                	jl     8052c47 <strconv__format_es+0x1ec>
 8052c6a:	ff 75 b0             	pushl  -0x50(%ebp)
 8052c6d:	ff 75 ac             	pushl  -0x54(%ebp)
 8052c70:	ff 75 a8             	pushl  -0x58(%ebp)
 8052c73:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052c76:	50                   	push   %eax
 8052c77:	e8 bd 6d ff ff       	call   8049a39 <strings__Builder_write>
 8052c7c:	83 c4 10             	add    $0x10,%esp
 8052c7f:	8b 45 28             	mov    0x28(%ebp),%eax
 8052c82:	83 f8 01             	cmp    $0x1,%eax
 8052c85:	75 2c                	jne    8052cb3 <strconv__format_es+0x258>
 8052c87:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 8052c8e:	eb 1b                	jmp    8052cab <strconv__format_es+0x250>
 8052c90:	0f b6 45 14          	movzbl 0x14(%ebp),%eax
 8052c94:	0f b6 c0             	movzbl %al,%eax
 8052c97:	83 ec 08             	sub    $0x8,%esp
 8052c9a:	50                   	push   %eax
 8052c9b:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8052c9e:	50                   	push   %eax
 8052c9f:	e8 3b 6d ff ff       	call   80499df <strings__Builder_write_b>
 8052ca4:	83 c4 10             	add    $0x10,%esp
 8052ca7:	83 45 a0 01          	addl   $0x1,-0x60(%ebp)
 8052cab:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8052cae:	3b 45 a4             	cmp    -0x5c(%ebp),%eax
 8052cb1:	7c dd                	jl     8052c90 <strconv__format_es+0x235>
 8052cb3:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052cb6:	83 ec 08             	sub    $0x8,%esp
 8052cb9:	8d 55 d8             	lea    -0x28(%ebp),%edx
 8052cbc:	52                   	push   %edx
 8052cbd:	50                   	push   %eax
 8052cbe:	e8 04 71 ff ff       	call   8049dc7 <strings__Builder_str>
 8052cc3:	83 c4 0c             	add    $0xc,%esp
 8052cc6:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052cc9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8052ccc:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8052cd3:	74 05                	je     8052cda <strconv__format_es+0x27f>
 8052cd5:	e8 46 5b ff ff       	call   8048820 <__stack_chk_fail@plt>
 8052cda:	c9                   	leave  
 8052cdb:	c2 04 00             	ret    $0x4

08052cde <strconv__remove_tail_zeros>:
 8052cde:	55                   	push   %ebp
 8052cdf:	89 e5                	mov    %esp,%ebp
 8052ce1:	81 ec 88 00 00 00    	sub    $0x88,%esp
 8052ce7:	8b 45 08             	mov    0x8(%ebp),%eax
 8052cea:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8052ced:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8052cf3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8052cf6:	31 c0                	xor    %eax,%eax
 8052cf8:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)
 8052cff:	c7 45 ac ff ff ff ff 	movl   $0xffffffff,-0x54(%ebp)
 8052d06:	c7 45 b0 ff ff ff ff 	movl   $0xffffffff,-0x50(%ebp)
 8052d0d:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 8052d14:	c6 45 a6 00          	movb   $0x0,-0x5a(%ebp)
 8052d18:	8b 45 10             	mov    0x10(%ebp),%eax
 8052d1b:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 8052d1e:	7e 65                	jle    8052d85 <strconv__remove_tail_zeros+0xa7>
 8052d20:	8b 55 0c             	mov    0xc(%ebp),%edx
 8052d23:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8052d26:	01 d0                	add    %edx,%eax
 8052d28:	0f b6 00             	movzbl (%eax),%eax
 8052d2b:	88 45 a7             	mov    %al,-0x59(%ebp)
 8052d2e:	80 7d a7 2e          	cmpb   $0x2e,-0x59(%ebp)
 8052d32:	75 0f                	jne    8052d43 <strconv__remove_tail_zeros+0x65>
 8052d34:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)
 8052d3b:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8052d3e:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8052d41:	eb 35                	jmp    8052d78 <strconv__remove_tail_zeros+0x9a>
 8052d43:	83 7d b4 00          	cmpl   $0x0,-0x4c(%ebp)
 8052d47:	74 2f                	je     8052d78 <strconv__remove_tail_zeros+0x9a>
 8052d49:	80 7d a7 30          	cmpb   $0x30,-0x59(%ebp)
 8052d4d:	75 0e                	jne    8052d5d <strconv__remove_tail_zeros+0x7f>
 8052d4f:	80 7d a6 30          	cmpb   $0x30,-0x5a(%ebp)
 8052d53:	74 08                	je     8052d5d <strconv__remove_tail_zeros+0x7f>
 8052d55:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8052d58:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8052d5b:	eb 1b                	jmp    8052d78 <strconv__remove_tail_zeros+0x9a>
 8052d5d:	80 7d a7 30          	cmpb   $0x30,-0x59(%ebp)
 8052d61:	76 0f                	jbe    8052d72 <strconv__remove_tail_zeros+0x94>
 8052d63:	80 7d a7 39          	cmpb   $0x39,-0x59(%ebp)
 8052d67:	77 09                	ja     8052d72 <strconv__remove_tail_zeros+0x94>
 8052d69:	c7 45 ac ff ff ff ff 	movl   $0xffffffff,-0x54(%ebp)
 8052d70:	eb 06                	jmp    8052d78 <strconv__remove_tail_zeros+0x9a>
 8052d72:	80 7d a7 65          	cmpb   $0x65,-0x59(%ebp)
 8052d76:	74 10                	je     8052d88 <strconv__remove_tail_zeros+0xaa>
 8052d78:	0f b6 45 a7          	movzbl -0x59(%ebp),%eax
 8052d7c:	88 45 a6             	mov    %al,-0x5a(%ebp)
 8052d7f:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 8052d83:	eb 93                	jmp    8052d18 <strconv__remove_tail_zeros+0x3a>
 8052d85:	90                   	nop
 8052d86:	eb 01                	jmp    8052d89 <strconv__remove_tail_zeros+0xab>
 8052d88:	90                   	nop
 8052d89:	c7 45 b8 34 97 06 08 	movl   $0x8069734,-0x48(%ebp)
 8052d90:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 8052d97:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)
 8052d9e:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)
 8052da2:	0f 8e e7 00 00 00    	jle    8052e8f <strconv__remove_tail_zeros+0x1b1>
 8052da8:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8052dab:	83 c0 01             	add    $0x1,%eax
 8052dae:	3b 45 ac             	cmp    -0x54(%ebp),%eax
 8052db1:	75 62                	jne    8052e15 <strconv__remove_tail_zeros+0x137>
 8052db3:	8b 55 10             	mov    0x10(%ebp),%edx
 8052db6:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 8052db9:	83 ec 08             	sub    $0x8,%esp
 8052dbc:	52                   	push   %edx
 8052dbd:	ff 75 a8             	pushl  -0x58(%ebp)
 8052dc0:	ff 75 14             	pushl  0x14(%ebp)
 8052dc3:	ff 75 10             	pushl  0x10(%ebp)
 8052dc6:	ff 75 0c             	pushl  0xc(%ebp)
 8052dc9:	50                   	push   %eax
 8052dca:	e8 f2 ba 00 00       	call   805e8c1 <string_substr>
 8052dcf:	83 c4 1c             	add    $0x1c,%esp
 8052dd2:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8052dd5:	83 ec 08             	sub    $0x8,%esp
 8052dd8:	ff 75 b0             	pushl  -0x50(%ebp)
 8052ddb:	6a 00                	push   $0x0
 8052ddd:	ff 75 14             	pushl  0x14(%ebp)
 8052de0:	ff 75 10             	pushl  0x10(%ebp)
 8052de3:	ff 75 0c             	pushl  0xc(%ebp)
 8052de6:	50                   	push   %eax
 8052de7:	e8 d5 ba 00 00       	call   805e8c1 <string_substr>
 8052dec:	83 c4 1c             	add    $0x1c,%esp
 8052def:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8052df2:	83 ec 04             	sub    $0x4,%esp
 8052df5:	ff 75 cc             	pushl  -0x34(%ebp)
 8052df8:	ff 75 c8             	pushl  -0x38(%ebp)
 8052dfb:	ff 75 c4             	pushl  -0x3c(%ebp)
 8052dfe:	ff 75 d8             	pushl  -0x28(%ebp)
 8052e01:	ff 75 d4             	pushl  -0x2c(%ebp)
 8052e04:	ff 75 d0             	pushl  -0x30(%ebp)
 8052e07:	50                   	push   %eax
 8052e08:	e8 37 b4 00 00       	call   805e244 <string_add>
 8052e0d:	83 c4 1c             	add    $0x1c,%esp
 8052e10:	e9 8c 00 00 00       	jmp    8052ea1 <strconv__remove_tail_zeros+0x1c3>
 8052e15:	8b 55 10             	mov    0x10(%ebp),%edx
 8052e18:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8052e1b:	83 ec 08             	sub    $0x8,%esp
 8052e1e:	52                   	push   %edx
 8052e1f:	ff 75 a8             	pushl  -0x58(%ebp)
 8052e22:	ff 75 14             	pushl  0x14(%ebp)
 8052e25:	ff 75 10             	pushl  0x10(%ebp)
 8052e28:	ff 75 0c             	pushl  0xc(%ebp)
 8052e2b:	50                   	push   %eax
 8052e2c:	e8 90 ba 00 00       	call   805e8c1 <string_substr>
 8052e31:	83 c4 1c             	add    $0x1c,%esp
 8052e34:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8052e37:	83 ec 08             	sub    $0x8,%esp
 8052e3a:	ff 75 ac             	pushl  -0x54(%ebp)
 8052e3d:	6a 00                	push   $0x0
 8052e3f:	ff 75 14             	pushl  0x14(%ebp)
 8052e42:	ff 75 10             	pushl  0x10(%ebp)
 8052e45:	ff 75 0c             	pushl  0xc(%ebp)
 8052e48:	50                   	push   %eax
 8052e49:	e8 73 ba 00 00       	call   805e8c1 <string_substr>
 8052e4e:	83 c4 1c             	add    $0x1c,%esp
 8052e51:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 8052e57:	83 ec 04             	sub    $0x4,%esp
 8052e5a:	ff 75 e4             	pushl  -0x1c(%ebp)
 8052e5d:	ff 75 e0             	pushl  -0x20(%ebp)
 8052e60:	ff 75 dc             	pushl  -0x24(%ebp)
 8052e63:	ff 75 f0             	pushl  -0x10(%ebp)
 8052e66:	ff 75 ec             	pushl  -0x14(%ebp)
 8052e69:	ff 75 e8             	pushl  -0x18(%ebp)
 8052e6c:	50                   	push   %eax
 8052e6d:	e8 d2 b3 00 00       	call   805e244 <string_add>
 8052e72:	83 c4 1c             	add    $0x1c,%esp
 8052e75:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8052e7b:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8052e7e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8052e84:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8052e87:	8b 45 80             	mov    -0x80(%ebp),%eax
 8052e8a:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8052e8d:	eb 12                	jmp    8052ea1 <strconv__remove_tail_zeros+0x1c3>
 8052e8f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8052e92:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8052e95:	8b 45 10             	mov    0x10(%ebp),%eax
 8052e98:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8052e9b:	8b 45 14             	mov    0x14(%ebp),%eax
 8052e9e:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8052ea1:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8052ea4:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8052ea7:	83 ea 01             	sub    $0x1,%edx
 8052eaa:	01 d0                	add    %edx,%eax
 8052eac:	0f b6 00             	movzbl (%eax),%eax
 8052eaf:	3c 2e                	cmp    $0x2e,%al
 8052eb1:	75 23                	jne    8052ed6 <strconv__remove_tail_zeros+0x1f8>
 8052eb3:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8052eb6:	8d 50 ff             	lea    -0x1(%eax),%edx
 8052eb9:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052ebc:	83 ec 08             	sub    $0x8,%esp
 8052ebf:	52                   	push   %edx
 8052ec0:	6a 00                	push   $0x0
 8052ec2:	ff 75 c0             	pushl  -0x40(%ebp)
 8052ec5:	ff 75 bc             	pushl  -0x44(%ebp)
 8052ec8:	ff 75 b8             	pushl  -0x48(%ebp)
 8052ecb:	50                   	push   %eax
 8052ecc:	e8 f0 b9 00 00       	call   805e8c1 <string_substr>
 8052ed1:	83 c4 1c             	add    $0x1c,%esp
 8052ed4:	eb 14                	jmp    8052eea <strconv__remove_tail_zeros+0x20c>
 8052ed6:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052ed9:	8b 55 b8             	mov    -0x48(%ebp),%edx
 8052edc:	89 10                	mov    %edx,(%eax)
 8052ede:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8052ee1:	89 50 04             	mov    %edx,0x4(%eax)
 8052ee4:	8b 55 c0             	mov    -0x40(%ebp),%edx
 8052ee7:	89 50 08             	mov    %edx,0x8(%eax)
 8052eea:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8052eed:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8052ef0:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8052ef7:	74 05                	je     8052efe <strconv__remove_tail_zeros+0x220>
 8052ef9:	e8 22 59 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8052efe:	c9                   	leave  
 8052eff:	c2 04 00             	ret    $0x4

08052f02 <strconv__v_printf>:
 8052f02:	55                   	push   %ebp
 8052f03:	89 e5                	mov    %esp,%ebp
 8052f05:	83 ec 38             	sub    $0x38,%esp
 8052f08:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8052f0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8052f11:	31 c0                	xor    %eax,%eax
 8052f13:	8d 45 14             	lea    0x14(%ebp),%eax
 8052f16:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8052f19:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8052f1c:	83 ec 0c             	sub    $0xc,%esp
 8052f1f:	8d 55 f0             	lea    -0x10(%ebp),%edx
 8052f22:	52                   	push   %edx
 8052f23:	6a 04                	push   $0x4
 8052f25:	6a 01                	push   $0x1
 8052f27:	6a 01                	push   $0x1
 8052f29:	50                   	push   %eax
 8052f2a:	e8 aa 2c 00 00       	call   8055bd9 <new_array_from_c_array>
 8052f2f:	83 c4 1c             	add    $0x1c,%esp
 8052f32:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 8052f35:	ff 75 ec             	pushl  -0x14(%ebp)
 8052f38:	ff 75 e8             	pushl  -0x18(%ebp)
 8052f3b:	ff 75 e4             	pushl  -0x1c(%ebp)
 8052f3e:	ff 75 e0             	pushl  -0x20(%ebp)
 8052f41:	ff 75 10             	pushl  0x10(%ebp)
 8052f44:	ff 75 0c             	pushl  0xc(%ebp)
 8052f47:	ff 75 08             	pushl  0x8(%ebp)
 8052f4a:	50                   	push   %eax
 8052f4b:	e8 2b 00 00 00       	call   8052f7b <strconv__v_sprintf>
 8052f50:	83 c4 1c             	add    $0x1c,%esp
 8052f53:	83 ec 04             	sub    $0x4,%esp
 8052f56:	ff 75 dc             	pushl  -0x24(%ebp)
 8052f59:	ff 75 d8             	pushl  -0x28(%ebp)
 8052f5c:	ff 75 d4             	pushl  -0x2c(%ebp)
 8052f5f:	e8 82 49 00 00       	call   80578e6 <print>
 8052f64:	83 c4 10             	add    $0x10,%esp
 8052f67:	90                   	nop
 8052f68:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8052f6b:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8052f72:	74 05                	je     8052f79 <strconv__v_printf+0x77>
 8052f74:	e8 a7 58 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8052f79:	c9                   	leave  
 8052f7a:	c3                   	ret    

08052f7b <strconv__v_sprintf>:
 8052f7b:	55                   	push   %ebp
 8052f7c:	89 e5                	mov    %esp,%ebp
 8052f7e:	81 ec 48 02 00 00    	sub    $0x248,%esp
 8052f84:	8b 45 08             	mov    0x8(%ebp),%eax
 8052f87:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 8052f8d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8052f93:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8052f96:	31 c0                	xor    %eax,%eax
 8052f98:	8b 45 20             	mov    0x20(%ebp),%eax
 8052f9b:	c1 e0 04             	shl    $0x4,%eax
 8052f9e:	89 c2                	mov    %eax,%edx
 8052fa0:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8052fa6:	83 ec 08             	sub    $0x8,%esp
 8052fa9:	52                   	push   %edx
 8052faa:	50                   	push   %eax
 8052fab:	e8 82 69 ff ff       	call   8049932 <strings__new_builder>
 8052fb0:	83 c4 0c             	add    $0xc,%esp
 8052fb3:	c7 85 e4 fd ff ff 00 	movl   $0x0,-0x21c(%ebp)
 8052fba:	00 00 00 
 8052fbd:	c7 85 e8 fd ff ff 00 	movl   $0x0,-0x218(%ebp)
 8052fc4:	00 00 00 
 8052fc7:	c7 85 ec fd ff ff 00 	movl   $0x0,-0x214(%ebp)
 8052fce:	00 00 00 
 8052fd1:	c7 85 f0 fd ff ff 00 	movl   $0x0,-0x210(%ebp)
 8052fd8:	00 00 00 
 8052fdb:	c7 85 f4 fd ff ff ff 	movl   $0xffffffff,-0x20c(%ebp)
 8052fe2:	ff ff ff 
 8052fe5:	c7 85 f8 fd ff ff ff 	movl   $0xffffffff,-0x208(%ebp)
 8052fec:	ff ff ff 
 8052fef:	c7 85 14 fe ff ff 06 	movl   $0x6,-0x1ec(%ebp)
 8052ff6:	00 00 00 
 8052ff9:	c6 85 db fd ff ff 20 	movb   $0x20,-0x225(%ebp)
 8053000:	c7 85 fc fd ff ff 30 	movl   $0x30,-0x204(%ebp)
 8053007:	00 00 00 
 805300a:	c7 85 00 fe ff ff 30 	movl   $0x30,-0x200(%ebp)
 8053011:	00 00 00 
 8053014:	c7 85 04 fe ff ff 01 	movl   $0x1,-0x1fc(%ebp)
 805301b:	00 00 00 
 805301e:	8b 45 10             	mov    0x10(%ebp),%eax
 8053021:	3b 85 e4 fd ff ff    	cmp    -0x21c(%ebp),%eax
 8053027:	0f 8e 5b 16 00 00    	jle    8054688 <strconv__v_sprintf+0x170d>
 805302d:	83 bd 04 fe ff ff 09 	cmpl   $0x9,-0x1fc(%ebp)
 8053034:	75 52                	jne    8053088 <strconv__v_sprintf+0x10d>
 8053036:	c7 85 ec fd ff ff 00 	movl   $0x0,-0x214(%ebp)
 805303d:	00 00 00 
 8053040:	c7 85 f0 fd ff ff 00 	movl   $0x0,-0x210(%ebp)
 8053047:	00 00 00 
 805304a:	c7 85 f4 fd ff ff ff 	movl   $0xffffffff,-0x20c(%ebp)
 8053051:	ff ff ff 
 8053054:	c7 85 f8 fd ff ff ff 	movl   $0xffffffff,-0x208(%ebp)
 805305b:	ff ff ff 
 805305e:	c6 85 db fd ff ff 20 	movb   $0x20,-0x225(%ebp)
 8053065:	c7 85 04 fe ff ff 01 	movl   $0x1,-0x1fc(%ebp)
 805306c:	00 00 00 
 805306f:	c7 85 fc fd ff ff 30 	movl   $0x30,-0x204(%ebp)
 8053076:	00 00 00 
 8053079:	c7 85 00 fe ff ff 30 	movl   $0x30,-0x200(%ebp)
 8053080:	00 00 00 
 8053083:	e9 fb 15 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053088:	ff b5 e4 fd ff ff    	pushl  -0x21c(%ebp)
 805308e:	ff 75 14             	pushl  0x14(%ebp)
 8053091:	ff 75 10             	pushl  0x10(%ebp)
 8053094:	ff 75 0c             	pushl  0xc(%ebp)
 8053097:	e8 9e d8 00 00       	call   806093a <string_at>
 805309c:	83 c4 10             	add    $0x10,%esp
 805309f:	88 85 dc fd ff ff    	mov    %al,-0x224(%ebp)
 80530a5:	80 bd dc fd ff ff 25 	cmpb   $0x25,-0x224(%ebp)
 80530ac:	74 2f                	je     80530dd <strconv__v_sprintf+0x162>
 80530ae:	83 bd 04 fe ff ff 01 	cmpl   $0x1,-0x1fc(%ebp)
 80530b5:	75 26                	jne    80530dd <strconv__v_sprintf+0x162>
 80530b7:	0f b6 85 dc fd ff ff 	movzbl -0x224(%ebp),%eax
 80530be:	83 ec 08             	sub    $0x8,%esp
 80530c1:	50                   	push   %eax
 80530c2:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 80530c8:	50                   	push   %eax
 80530c9:	e8 11 69 ff ff       	call   80499df <strings__Builder_write_b>
 80530ce:	83 c4 10             	add    $0x10,%esp
 80530d1:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 80530d8:	e9 a6 15 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80530dd:	80 bd dc fd ff ff 25 	cmpb   $0x25,-0x224(%ebp)
 80530e4:	75 1f                	jne    8053105 <strconv__v_sprintf+0x18a>
 80530e6:	83 bd 04 fe ff ff 01 	cmpl   $0x1,-0x1fc(%ebp)
 80530ed:	75 16                	jne    8053105 <strconv__v_sprintf+0x18a>
 80530ef:	c7 85 04 fe ff ff 02 	movl   $0x2,-0x1fc(%ebp)
 80530f6:	00 00 00 
 80530f9:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053100:	e9 7e 15 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053105:	80 bd dc fd ff ff 63 	cmpb   $0x63,-0x224(%ebp)
 805310c:	75 7d                	jne    805318b <strconv__v_sprintf+0x210>
 805310e:	83 bd 04 fe ff ff 02 	cmpl   $0x2,-0x1fc(%ebp)
 8053115:	75 74                	jne    805318b <strconv__v_sprintf+0x210>
 8053117:	8b 45 20             	mov    0x20(%ebp),%eax
 805311a:	83 ec 08             	sub    $0x8,%esp
 805311d:	50                   	push   %eax
 805311e:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053124:	e8 df 15 00 00       	call   8054708 <strconv__v_sprintf_panic>
 8053129:	83 c4 10             	add    $0x10,%esp
 805312c:	83 ec 0c             	sub    $0xc,%esp
 805312f:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053135:	ff 75 24             	pushl  0x24(%ebp)
 8053138:	ff 75 20             	pushl  0x20(%ebp)
 805313b:	ff 75 1c             	pushl  0x1c(%ebp)
 805313e:	ff 75 18             	pushl  0x18(%ebp)
 8053141:	e8 74 31 00 00       	call   80562ba <array_get>
 8053146:	83 c4 20             	add    $0x20,%esp
 8053149:	8b 00                	mov    (%eax),%eax
 805314b:	0f b6 00             	movzbl (%eax),%eax
 805314e:	88 85 dd fd ff ff    	mov    %al,-0x223(%ebp)
 8053154:	0f b6 85 dd fd ff ff 	movzbl -0x223(%ebp),%eax
 805315b:	83 ec 08             	sub    $0x8,%esp
 805315e:	50                   	push   %eax
 805315f:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8053165:	50                   	push   %eax
 8053166:	e8 74 68 ff ff       	call   80499df <strings__Builder_write_b>
 805316b:	83 c4 10             	add    $0x10,%esp
 805316e:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8053175:	00 00 00 
 8053178:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 805317f:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053186:	e9 f8 14 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 805318b:	80 bd dc fd ff ff 70 	cmpb   $0x70,-0x224(%ebp)
 8053192:	0f 85 d1 00 00 00    	jne    8053269 <strconv__v_sprintf+0x2ee>
 8053198:	83 bd 04 fe ff ff 02 	cmpl   $0x2,-0x1fc(%ebp)
 805319f:	0f 85 c4 00 00 00    	jne    8053269 <strconv__v_sprintf+0x2ee>
 80531a5:	8b 45 20             	mov    0x20(%ebp),%eax
 80531a8:	83 ec 08             	sub    $0x8,%esp
 80531ab:	50                   	push   %eax
 80531ac:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80531b2:	e8 51 15 00 00       	call   8054708 <strconv__v_sprintf_panic>
 80531b7:	83 c4 10             	add    $0x10,%esp
 80531ba:	c7 85 80 fe ff ff ea 	movl   $0x80697ea,-0x180(%ebp)
 80531c1:	97 06 08 
 80531c4:	c7 85 84 fe ff ff 02 	movl   $0x2,-0x17c(%ebp)
 80531cb:	00 00 00 
 80531ce:	c7 85 88 fe ff ff 01 	movl   $0x1,-0x178(%ebp)
 80531d5:	00 00 00 
 80531d8:	ff b5 88 fe ff ff    	pushl  -0x178(%ebp)
 80531de:	ff b5 84 fe ff ff    	pushl  -0x17c(%ebp)
 80531e4:	ff b5 80 fe ff ff    	pushl  -0x180(%ebp)
 80531ea:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 80531f0:	50                   	push   %eax
 80531f1:	e8 43 68 ff ff       	call   8049a39 <strings__Builder_write>
 80531f6:	83 c4 10             	add    $0x10,%esp
 80531f9:	83 ec 0c             	sub    $0xc,%esp
 80531fc:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053202:	ff 75 24             	pushl  0x24(%ebp)
 8053205:	ff 75 20             	pushl  0x20(%ebp)
 8053208:	ff 75 1c             	pushl  0x1c(%ebp)
 805320b:	ff 75 18             	pushl  0x18(%ebp)
 805320e:	e8 a7 30 00 00       	call   80562ba <array_get>
 8053213:	83 c4 20             	add    $0x20,%esp
 8053216:	8b 10                	mov    (%eax),%edx
 8053218:	8d 85 8c fe ff ff    	lea    -0x174(%ebp),%eax
 805321e:	83 ec 08             	sub    $0x8,%esp
 8053221:	52                   	push   %edx
 8053222:	50                   	push   %eax
 8053223:	e8 29 58 00 00       	call   8058a51 <ptr_str>
 8053228:	83 c4 0c             	add    $0xc,%esp
 805322b:	ff b5 94 fe ff ff    	pushl  -0x16c(%ebp)
 8053231:	ff b5 90 fe ff ff    	pushl  -0x170(%ebp)
 8053237:	ff b5 8c fe ff ff    	pushl  -0x174(%ebp)
 805323d:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8053243:	50                   	push   %eax
 8053244:	e8 f0 67 ff ff       	call   8049a39 <strings__Builder_write>
 8053249:	83 c4 10             	add    $0x10,%esp
 805324c:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8053253:	00 00 00 
 8053256:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 805325d:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053264:	e9 1a 14 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053269:	83 bd 04 fe ff ff 02 	cmpl   $0x2,-0x1fc(%ebp)
 8053270:	0f 85 65 02 00 00    	jne    80534db <strconv__v_sprintf+0x560>
 8053276:	c7 85 08 fe ff ff 30 	movl   $0x30,-0x1f8(%ebp)
 805327d:	00 00 00 
 8053280:	c7 85 0c fe ff ff 30 	movl   $0x30,-0x1f4(%ebp)
 8053287:	00 00 00 
 805328a:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 8053290:	8d 50 01             	lea    0x1(%eax),%edx
 8053293:	8b 45 10             	mov    0x10(%ebp),%eax
 8053296:	39 c2                	cmp    %eax,%edx
 8053298:	7d 58                	jge    80532f2 <strconv__v_sprintf+0x377>
 805329a:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80532a0:	83 c0 01             	add    $0x1,%eax
 80532a3:	50                   	push   %eax
 80532a4:	ff 75 14             	pushl  0x14(%ebp)
 80532a7:	ff 75 10             	pushl  0x10(%ebp)
 80532aa:	ff 75 0c             	pushl  0xc(%ebp)
 80532ad:	e8 88 d6 00 00       	call   806093a <string_at>
 80532b2:	83 c4 10             	add    $0x10,%esp
 80532b5:	0f b6 c0             	movzbl %al,%eax
 80532b8:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 80532be:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80532c4:	8d 50 02             	lea    0x2(%eax),%edx
 80532c7:	8b 45 10             	mov    0x10(%ebp),%eax
 80532ca:	39 c2                	cmp    %eax,%edx
 80532cc:	7d 24                	jge    80532f2 <strconv__v_sprintf+0x377>
 80532ce:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80532d4:	83 c0 02             	add    $0x2,%eax
 80532d7:	50                   	push   %eax
 80532d8:	ff 75 14             	pushl  0x14(%ebp)
 80532db:	ff 75 10             	pushl  0x10(%ebp)
 80532de:	ff 75 0c             	pushl  0xc(%ebp)
 80532e1:	e8 54 d6 00 00       	call   806093a <string_at>
 80532e6:	83 c4 10             	add    $0x10,%esp
 80532e9:	0f b6 c0             	movzbl %al,%eax
 80532ec:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%ebp)
 80532f2:	80 bd dc fd ff ff 2b 	cmpb   $0x2b,-0x224(%ebp)
 80532f9:	75 16                	jne    8053311 <strconv__v_sprintf+0x396>
 80532fb:	c7 85 ec fd ff ff 01 	movl   $0x1,-0x214(%ebp)
 8053302:	00 00 00 
 8053305:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 805330c:	e9 72 13 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053311:	80 bd dc fd ff ff 2d 	cmpb   $0x2d,-0x224(%ebp)
 8053318:	75 16                	jne    8053330 <strconv__v_sprintf+0x3b5>
 805331a:	c7 85 f0 fd ff ff 01 	movl   $0x1,-0x210(%ebp)
 8053321:	00 00 00 
 8053324:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 805332b:	e9 53 13 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053330:	80 bd dc fd ff ff 30 	cmpb   $0x30,-0x224(%ebp)
 8053337:	74 09                	je     8053342 <strconv__v_sprintf+0x3c7>
 8053339:	80 bd dc fd ff ff 20 	cmpb   $0x20,-0x224(%ebp)
 8053340:	75 22                	jne    8053364 <strconv__v_sprintf+0x3e9>
 8053342:	83 bd f0 fd ff ff 00 	cmpl   $0x0,-0x210(%ebp)
 8053349:	75 0d                	jne    8053358 <strconv__v_sprintf+0x3dd>
 805334b:	0f b6 85 dc fd ff ff 	movzbl -0x224(%ebp),%eax
 8053352:	88 85 db fd ff ff    	mov    %al,-0x225(%ebp)
 8053358:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 805335f:	e9 1f 13 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053364:	80 bd dc fd ff ff 27 	cmpb   $0x27,-0x224(%ebp)
 805336b:	75 0c                	jne    8053379 <strconv__v_sprintf+0x3fe>
 805336d:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053374:	e9 0a 13 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053379:	80 bd dc fd ff ff 2e 	cmpb   $0x2e,-0x224(%ebp)
 8053380:	75 28                	jne    80533aa <strconv__v_sprintf+0x42f>
 8053382:	83 bd 08 fe ff ff 30 	cmpl   $0x30,-0x1f8(%ebp)
 8053389:	76 1f                	jbe    80533aa <strconv__v_sprintf+0x42f>
 805338b:	83 bd 08 fe ff ff 39 	cmpl   $0x39,-0x1f8(%ebp)
 8053392:	77 16                	ja     80533aa <strconv__v_sprintf+0x42f>
 8053394:	c7 85 04 fe ff ff 07 	movl   $0x7,-0x1fc(%ebp)
 805339b:	00 00 00 
 805339e:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 80533a5:	e9 d9 12 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80533aa:	80 bd dc fd ff ff 2e 	cmpb   $0x2e,-0x224(%ebp)
 80533b1:	0f 85 15 01 00 00    	jne    80534cc <strconv__v_sprintf+0x551>
 80533b7:	83 bd 08 fe ff ff 2a 	cmpl   $0x2a,-0x1f8(%ebp)
 80533be:	0f 85 08 01 00 00    	jne    80534cc <strconv__v_sprintf+0x551>
 80533c4:	83 bd 0c fe ff ff 73 	cmpl   $0x73,-0x1f4(%ebp)
 80533cb:	0f 85 fb 00 00 00    	jne    80534cc <strconv__v_sprintf+0x551>
 80533d1:	8b 45 20             	mov    0x20(%ebp),%eax
 80533d4:	83 ec 08             	sub    $0x8,%esp
 80533d7:	50                   	push   %eax
 80533d8:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80533de:	e8 25 13 00 00       	call   8054708 <strconv__v_sprintf_panic>
 80533e3:	83 c4 10             	add    $0x10,%esp
 80533e6:	83 ec 0c             	sub    $0xc,%esp
 80533e9:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80533ef:	ff 75 24             	pushl  0x24(%ebp)
 80533f2:	ff 75 20             	pushl  0x20(%ebp)
 80533f5:	ff 75 1c             	pushl  0x1c(%ebp)
 80533f8:	ff 75 18             	pushl  0x18(%ebp)
 80533fb:	e8 ba 2e 00 00       	call   80562ba <array_get>
 8053400:	83 c4 20             	add    $0x20,%esp
 8053403:	8b 00                	mov    (%eax),%eax
 8053405:	8b 00                	mov    (%eax),%eax
 8053407:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 805340d:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 8053414:	8b 45 20             	mov    0x20(%ebp),%eax
 8053417:	83 ec 08             	sub    $0x8,%esp
 805341a:	50                   	push   %eax
 805341b:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053421:	e8 e2 12 00 00       	call   8054708 <strconv__v_sprintf_panic>
 8053426:	83 c4 10             	add    $0x10,%esp
 8053429:	83 ec 0c             	sub    $0xc,%esp
 805342c:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053432:	ff 75 24             	pushl  0x24(%ebp)
 8053435:	ff 75 20             	pushl  0x20(%ebp)
 8053438:	ff 75 1c             	pushl  0x1c(%ebp)
 805343b:	ff 75 18             	pushl  0x18(%ebp)
 805343e:	e8 77 2e 00 00       	call   80562ba <array_get>
 8053443:	83 c4 20             	add    $0x20,%esp
 8053446:	8b 00                	mov    (%eax),%eax
 8053448:	8b 10                	mov    (%eax),%edx
 805344a:	89 95 ec fe ff ff    	mov    %edx,-0x114(%ebp)
 8053450:	8b 50 04             	mov    0x4(%eax),%edx
 8053453:	89 95 f0 fe ff ff    	mov    %edx,-0x110(%ebp)
 8053459:	8b 40 08             	mov    0x8(%eax),%eax
 805345c:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8053462:	8d 85 ec fe ff ff    	lea    -0x114(%ebp),%eax
 8053468:	83 ec 08             	sub    $0x8,%esp
 805346b:	ff b5 18 fe ff ff    	pushl  -0x1e8(%ebp)
 8053471:	6a 00                	push   $0x0
 8053473:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 8053479:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 805347f:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 8053485:	50                   	push   %eax
 8053486:	e8 36 b4 00 00       	call   805e8c1 <string_substr>
 805348b:	83 c4 1c             	add    $0x1c,%esp
 805348e:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 8053495:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 805349b:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 80534a1:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 80534a7:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 80534ad:	50                   	push   %eax
 80534ae:	e8 86 65 ff ff       	call   8049a39 <strings__Builder_write>
 80534b3:	83 c4 10             	add    $0x10,%esp
 80534b6:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 80534bd:	00 00 00 
 80534c0:	83 85 e4 fd ff ff 03 	addl   $0x3,-0x21c(%ebp)
 80534c7:	e9 52 fb ff ff       	jmp    805301e <strconv__v_sprintf+0xa3>
 80534cc:	c7 85 04 fe ff ff 04 	movl   $0x4,-0x1fc(%ebp)
 80534d3:	00 00 00 
 80534d6:	e9 a8 11 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80534db:	83 bd 04 fe ff ff 04 	cmpl   $0x4,-0x1fc(%ebp)
 80534e2:	75 66                	jne    805354a <strconv__v_sprintf+0x5cf>
 80534e4:	80 bd dc fd ff ff 30 	cmpb   $0x30,-0x224(%ebp)
 80534eb:	76 2f                	jbe    805351c <strconv__v_sprintf+0x5a1>
 80534ed:	80 bd dc fd ff ff 39 	cmpb   $0x39,-0x224(%ebp)
 80534f4:	77 26                	ja     805351c <strconv__v_sprintf+0x5a1>
 80534f6:	0f b6 85 dc fd ff ff 	movzbl -0x224(%ebp),%eax
 80534fd:	83 e8 30             	sub    $0x30,%eax
 8053500:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 8053506:	c7 85 04 fe ff ff 05 	movl   $0x5,-0x1fc(%ebp)
 805350d:	00 00 00 
 8053510:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053517:	e9 67 11 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 805351c:	80 bd dc fd ff ff 2e 	cmpb   $0x2e,-0x224(%ebp)
 8053523:	75 16                	jne    805353b <strconv__v_sprintf+0x5c0>
 8053525:	c7 85 04 fe ff ff 07 	movl   $0x7,-0x1fc(%ebp)
 805352c:	00 00 00 
 805352f:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053536:	e9 48 11 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 805353b:	c7 85 04 fe ff ff 06 	movl   $0x6,-0x1fc(%ebp)
 8053542:	00 00 00 
 8053545:	e9 39 11 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 805354a:	83 bd 04 fe ff ff 05 	cmpl   $0x5,-0x1fc(%ebp)
 8053551:	75 71                	jne    80535c4 <strconv__v_sprintf+0x649>
 8053553:	80 bd dc fd ff ff 2f 	cmpb   $0x2f,-0x224(%ebp)
 805355a:	76 3a                	jbe    8053596 <strconv__v_sprintf+0x61b>
 805355c:	80 bd dc fd ff ff 39 	cmpb   $0x39,-0x224(%ebp)
 8053563:	77 31                	ja     8053596 <strconv__v_sprintf+0x61b>
 8053565:	8b 95 f4 fd ff ff    	mov    -0x20c(%ebp),%edx
 805356b:	89 d0                	mov    %edx,%eax
 805356d:	c1 e0 02             	shl    $0x2,%eax
 8053570:	01 d0                	add    %edx,%eax
 8053572:	01 c0                	add    %eax,%eax
 8053574:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 805357a:	0f b6 85 dc fd ff ff 	movzbl -0x224(%ebp),%eax
 8053581:	83 e8 30             	sub    $0x30,%eax
 8053584:	01 85 f4 fd ff ff    	add    %eax,-0x20c(%ebp)
 805358a:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053591:	e9 ed 10 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053596:	80 bd dc fd ff ff 2e 	cmpb   $0x2e,-0x224(%ebp)
 805359d:	75 16                	jne    80535b5 <strconv__v_sprintf+0x63a>
 805359f:	c7 85 04 fe ff ff 07 	movl   $0x7,-0x1fc(%ebp)
 80535a6:	00 00 00 
 80535a9:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 80535b0:	e9 ce 10 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80535b5:	c7 85 04 fe ff ff 06 	movl   $0x6,-0x1fc(%ebp)
 80535bc:	00 00 00 
 80535bf:	e9 bf 10 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80535c4:	83 bd 04 fe ff ff 07 	cmpl   $0x7,-0x1fc(%ebp)
 80535cb:	75 47                	jne    8053614 <strconv__v_sprintf+0x699>
 80535cd:	80 bd dc fd ff ff 2f 	cmpb   $0x2f,-0x224(%ebp)
 80535d4:	76 2f                	jbe    8053605 <strconv__v_sprintf+0x68a>
 80535d6:	80 bd dc fd ff ff 39 	cmpb   $0x39,-0x224(%ebp)
 80535dd:	77 26                	ja     8053605 <strconv__v_sprintf+0x68a>
 80535df:	0f b6 85 dc fd ff ff 	movzbl -0x224(%ebp),%eax
 80535e6:	83 e8 30             	sub    $0x30,%eax
 80535e9:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 80535ef:	c7 85 04 fe ff ff 08 	movl   $0x8,-0x1fc(%ebp)
 80535f6:	00 00 00 
 80535f9:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053600:	e9 7e 10 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053605:	c7 85 04 fe ff ff 06 	movl   $0x6,-0x1fc(%ebp)
 805360c:	00 00 00 
 805360f:	e9 6f 10 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053614:	83 bd 04 fe ff ff 08 	cmpl   $0x8,-0x1fc(%ebp)
 805361b:	75 52                	jne    805366f <strconv__v_sprintf+0x6f4>
 805361d:	80 bd dc fd ff ff 2f 	cmpb   $0x2f,-0x224(%ebp)
 8053624:	76 3a                	jbe    8053660 <strconv__v_sprintf+0x6e5>
 8053626:	80 bd dc fd ff ff 39 	cmpb   $0x39,-0x224(%ebp)
 805362d:	77 31                	ja     8053660 <strconv__v_sprintf+0x6e5>
 805362f:	8b 95 f8 fd ff ff    	mov    -0x208(%ebp),%edx
 8053635:	89 d0                	mov    %edx,%eax
 8053637:	c1 e0 02             	shl    $0x2,%eax
 805363a:	01 d0                	add    %edx,%eax
 805363c:	01 c0                	add    %eax,%eax
 805363e:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 8053644:	0f b6 85 dc fd ff ff 	movzbl -0x224(%ebp),%eax
 805364b:	83 e8 30             	sub    $0x30,%eax
 805364e:	01 85 f8 fd ff ff    	add    %eax,-0x208(%ebp)
 8053654:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 805365b:	e9 23 10 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053660:	c7 85 04 fe ff ff 06 	movl   $0x6,-0x1fc(%ebp)
 8053667:	00 00 00 
 805366a:	e9 14 10 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 805366f:	83 bd 04 fe ff ff 06 	cmpl   $0x6,-0x1fc(%ebp)
 8053676:	0f 85 ef 0f 00 00    	jne    805466b <strconv__v_sprintf+0x16f0>
 805367c:	80 bd dc fd ff ff 6c 	cmpb   $0x6c,-0x224(%ebp)
 8053683:	75 35                	jne    80536ba <strconv__v_sprintf+0x73f>
 8053685:	83 bd fc fd ff ff 30 	cmpl   $0x30,-0x204(%ebp)
 805368c:	75 16                	jne    80536a4 <strconv__v_sprintf+0x729>
 805368e:	c7 85 fc fd ff ff 6c 	movl   $0x6c,-0x204(%ebp)
 8053695:	00 00 00 
 8053698:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 805369f:	e9 df 0f 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80536a4:	c7 85 00 fe ff ff 6c 	movl   $0x6c,-0x200(%ebp)
 80536ab:	00 00 00 
 80536ae:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 80536b5:	e9 c9 0f 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80536ba:	80 bd dc fd ff ff 68 	cmpb   $0x68,-0x224(%ebp)
 80536c1:	75 35                	jne    80536f8 <strconv__v_sprintf+0x77d>
 80536c3:	83 bd fc fd ff ff 30 	cmpl   $0x30,-0x204(%ebp)
 80536ca:	75 16                	jne    80536e2 <strconv__v_sprintf+0x767>
 80536cc:	c7 85 fc fd ff ff 68 	movl   $0x68,-0x204(%ebp)
 80536d3:	00 00 00 
 80536d6:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 80536dd:	e9 a1 0f 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80536e2:	c7 85 00 fe ff ff 68 	movl   $0x68,-0x200(%ebp)
 80536e9:	00 00 00 
 80536ec:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 80536f3:	e9 8b 0f 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 80536f8:	80 bd dc fd ff ff 64 	cmpb   $0x64,-0x224(%ebp)
 80536ff:	74 0d                	je     805370e <strconv__v_sprintf+0x793>
 8053701:	80 bd dc fd ff ff 69 	cmpb   $0x69,-0x224(%ebp)
 8053708:	0f 85 31 03 00 00    	jne    8053a3f <strconv__v_sprintf+0xac4>
 805370e:	c7 85 40 fe ff ff 00 	movl   $0x0,-0x1c0(%ebp)
 8053715:	00 00 00 
 8053718:	c7 85 44 fe ff ff 00 	movl   $0x0,-0x1bc(%ebp)
 805371f:	00 00 00 
 8053722:	c7 85 10 fe ff ff 01 	movl   $0x1,-0x1f0(%ebp)
 8053729:	00 00 00 
 805372c:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 8053732:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 8053738:	83 bd 38 fe ff ff 68 	cmpl   $0x68,-0x1c8(%ebp)
 805373f:	0f 85 fa 00 00 00    	jne    805383f <strconv__v_sprintf+0x8c4>
 8053745:	83 bd 00 fe ff ff 68 	cmpl   $0x68,-0x200(%ebp)
 805374c:	0f 85 80 00 00 00    	jne    80537d2 <strconv__v_sprintf+0x857>
 8053752:	8b 45 20             	mov    0x20(%ebp),%eax
 8053755:	83 ec 08             	sub    $0x8,%esp
 8053758:	50                   	push   %eax
 8053759:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 805375f:	e8 a4 0f 00 00       	call   8054708 <strconv__v_sprintf_panic>
 8053764:	83 c4 10             	add    $0x10,%esp
 8053767:	83 ec 0c             	sub    $0xc,%esp
 805376a:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053770:	ff 75 24             	pushl  0x24(%ebp)
 8053773:	ff 75 20             	pushl  0x20(%ebp)
 8053776:	ff 75 1c             	pushl  0x1c(%ebp)
 8053779:	ff 75 18             	pushl  0x18(%ebp)
 805377c:	e8 39 2b 00 00       	call   80562ba <array_get>
 8053781:	83 c4 20             	add    $0x20,%esp
 8053784:	8b 00                	mov    (%eax),%eax
 8053786:	0f b6 00             	movzbl (%eax),%eax
 8053789:	88 85 df fd ff ff    	mov    %al,-0x221(%ebp)
 805378f:	0f b6 85 df fd ff ff 	movzbl -0x221(%ebp),%eax
 8053796:	f7 d0                	not    %eax
 8053798:	c0 e8 07             	shr    $0x7,%al
 805379b:	0f b6 c0             	movzbl %al,%eax
 805379e:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 80537a4:	83 bd 10 fe ff ff 00 	cmpl   $0x0,-0x1f0(%ebp)
 80537ab:	74 0a                	je     80537b7 <strconv__v_sprintf+0x83c>
 80537ad:	0f be 85 df fd ff ff 	movsbl -0x221(%ebp),%eax
 80537b4:	99                   	cltd   
 80537b5:	eb 0a                	jmp    80537c1 <strconv__v_sprintf+0x846>
 80537b7:	0f be 85 df fd ff ff 	movsbl -0x221(%ebp),%eax
 80537be:	f7 d8                	neg    %eax
 80537c0:	99                   	cltd   
 80537c1:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 80537c7:	89 95 44 fe ff ff    	mov    %edx,-0x1bc(%ebp)
 80537cd:	e9 82 01 00 00       	jmp    8053954 <strconv__v_sprintf+0x9d9>
 80537d2:	83 ec 0c             	sub    $0xc,%esp
 80537d5:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80537db:	ff 75 24             	pushl  0x24(%ebp)
 80537de:	ff 75 20             	pushl  0x20(%ebp)
 80537e1:	ff 75 1c             	pushl  0x1c(%ebp)
 80537e4:	ff 75 18             	pushl  0x18(%ebp)
 80537e7:	e8 ce 2a 00 00       	call   80562ba <array_get>
 80537ec:	83 c4 20             	add    $0x20,%esp
 80537ef:	8b 00                	mov    (%eax),%eax
 80537f1:	0f b7 00             	movzwl (%eax),%eax
 80537f4:	66 89 85 e2 fd ff ff 	mov    %ax,-0x21e(%ebp)
 80537fb:	0f b7 85 e2 fd ff ff 	movzwl -0x21e(%ebp),%eax
 8053802:	f7 d0                	not    %eax
 8053804:	66 c1 e8 0f          	shr    $0xf,%ax
 8053808:	0f b6 c0             	movzbl %al,%eax
 805380b:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 8053811:	83 bd 10 fe ff ff 00 	cmpl   $0x0,-0x1f0(%ebp)
 8053818:	74 0a                	je     8053824 <strconv__v_sprintf+0x8a9>
 805381a:	0f bf 85 e2 fd ff ff 	movswl -0x21e(%ebp),%eax
 8053821:	99                   	cltd   
 8053822:	eb 0a                	jmp    805382e <strconv__v_sprintf+0x8b3>
 8053824:	0f bf 85 e2 fd ff ff 	movswl -0x21e(%ebp),%eax
 805382b:	f7 d8                	neg    %eax
 805382d:	99                   	cltd   
 805382e:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 8053834:	89 95 44 fe ff ff    	mov    %edx,-0x1bc(%ebp)
 805383a:	e9 15 01 00 00       	jmp    8053954 <strconv__v_sprintf+0x9d9>
 805383f:	83 bd 38 fe ff ff 6c 	cmpl   $0x6c,-0x1c8(%ebp)
 8053846:	0f 85 91 00 00 00    	jne    80538dd <strconv__v_sprintf+0x962>
 805384c:	8b 45 20             	mov    0x20(%ebp),%eax
 805384f:	83 ec 08             	sub    $0x8,%esp
 8053852:	50                   	push   %eax
 8053853:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053859:	e8 aa 0e 00 00       	call   8054708 <strconv__v_sprintf_panic>
 805385e:	83 c4 10             	add    $0x10,%esp
 8053861:	83 ec 0c             	sub    $0xc,%esp
 8053864:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 805386a:	ff 75 24             	pushl  0x24(%ebp)
 805386d:	ff 75 20             	pushl  0x20(%ebp)
 8053870:	ff 75 1c             	pushl  0x1c(%ebp)
 8053873:	ff 75 18             	pushl  0x18(%ebp)
 8053876:	e8 3f 2a 00 00       	call   80562ba <array_get>
 805387b:	83 c4 20             	add    $0x20,%esp
 805387e:	8b 00                	mov    (%eax),%eax
 8053880:	8b 50 04             	mov    0x4(%eax),%edx
 8053883:	8b 00                	mov    (%eax),%eax
 8053885:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 805388b:	89 95 7c fe ff ff    	mov    %edx,-0x184(%ebp)
 8053891:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8053897:	f7 d0                	not    %eax
 8053899:	c1 e8 1f             	shr    $0x1f,%eax
 805389c:	0f b6 c0             	movzbl %al,%eax
 805389f:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 80538a5:	83 bd 10 fe ff ff 00 	cmpl   $0x0,-0x1f0(%ebp)
 80538ac:	75 15                	jne    80538c3 <strconv__v_sprintf+0x948>
 80538ae:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 80538b4:	8b 95 7c fe ff ff    	mov    -0x184(%ebp),%edx
 80538ba:	f7 d8                	neg    %eax
 80538bc:	83 d2 00             	adc    $0x0,%edx
 80538bf:	f7 da                	neg    %edx
 80538c1:	eb 0c                	jmp    80538cf <strconv__v_sprintf+0x954>
 80538c3:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 80538c9:	8b 95 7c fe ff ff    	mov    -0x184(%ebp),%edx
 80538cf:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 80538d5:	89 95 44 fe ff ff    	mov    %edx,-0x1bc(%ebp)
 80538db:	eb 77                	jmp    8053954 <strconv__v_sprintf+0x9d9>
 80538dd:	8b 45 20             	mov    0x20(%ebp),%eax
 80538e0:	83 ec 08             	sub    $0x8,%esp
 80538e3:	50                   	push   %eax
 80538e4:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80538ea:	e8 19 0e 00 00       	call   8054708 <strconv__v_sprintf_panic>
 80538ef:	83 c4 10             	add    $0x10,%esp
 80538f2:	83 ec 0c             	sub    $0xc,%esp
 80538f5:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80538fb:	ff 75 24             	pushl  0x24(%ebp)
 80538fe:	ff 75 20             	pushl  0x20(%ebp)
 8053901:	ff 75 1c             	pushl  0x1c(%ebp)
 8053904:	ff 75 18             	pushl  0x18(%ebp)
 8053907:	e8 ae 29 00 00       	call   80562ba <array_get>
 805390c:	83 c4 20             	add    $0x20,%esp
 805390f:	8b 00                	mov    (%eax),%eax
 8053911:	8b 00                	mov    (%eax),%eax
 8053913:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 8053919:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 805391f:	f7 d0                	not    %eax
 8053921:	c1 e8 1f             	shr    $0x1f,%eax
 8053924:	0f b6 c0             	movzbl %al,%eax
 8053927:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 805392d:	83 bd 10 fe ff ff 00 	cmpl   $0x0,-0x1f0(%ebp)
 8053934:	74 09                	je     805393f <strconv__v_sprintf+0x9c4>
 8053936:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 805393c:	99                   	cltd   
 805393d:	eb 09                	jmp    8053948 <strconv__v_sprintf+0x9cd>
 805393f:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 8053945:	f7 d8                	neg    %eax
 8053947:	99                   	cltd   
 8053948:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 805394e:	89 95 44 fe ff ff    	mov    %edx,-0x1bc(%ebp)
 8053954:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 805395b:	88 85 14 ff ff ff    	mov    %al,-0xec(%ebp)
 8053961:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 8053967:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 805396d:	c7 85 1c ff ff ff 00 	movl   $0x0,-0xe4(%ebp)
 8053974:	00 00 00 
 8053977:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 805397d:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 8053983:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 8053989:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 805398f:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 8053995:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 805399b:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%ebp)
 80539a2:	00 00 00 
 80539a5:	8d 85 98 fe ff ff    	lea    -0x168(%ebp),%eax
 80539ab:	83 ec 08             	sub    $0x8,%esp
 80539ae:	ff b5 2c ff ff ff    	pushl  -0xd4(%ebp)
 80539b4:	ff b5 28 ff ff ff    	pushl  -0xd8(%ebp)
 80539ba:	ff b5 24 ff ff ff    	pushl  -0xdc(%ebp)
 80539c0:	ff b5 20 ff ff ff    	pushl  -0xe0(%ebp)
 80539c6:	ff b5 1c ff ff ff    	pushl  -0xe4(%ebp)
 80539cc:	ff b5 18 ff ff ff    	pushl  -0xe8(%ebp)
 80539d2:	ff b5 14 ff ff ff    	pushl  -0xec(%ebp)
 80539d8:	ff b5 44 fe ff ff    	pushl  -0x1bc(%ebp)
 80539de:	ff b5 40 fe ff ff    	pushl  -0x1c0(%ebp)
 80539e4:	50                   	push   %eax
 80539e5:	e8 16 eb ff ff       	call   8052500 <strconv__format_dec>
 80539ea:	83 c4 2c             	add    $0x2c,%esp
 80539ed:	ff b5 a0 fe ff ff    	pushl  -0x160(%ebp)
 80539f3:	ff b5 9c fe ff ff    	pushl  -0x164(%ebp)
 80539f9:	ff b5 98 fe ff ff    	pushl  -0x168(%ebp)
 80539ff:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8053a05:	50                   	push   %eax
 8053a06:	e8 2e 60 ff ff       	call   8049a39 <strings__Builder_write>
 8053a0b:	83 c4 10             	add    $0x10,%esp
 8053a0e:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8053a15:	00 00 00 
 8053a18:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 8053a1f:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053a26:	c7 85 fc fd ff ff 30 	movl   $0x30,-0x204(%ebp)
 8053a2d:	00 00 00 
 8053a30:	c7 85 00 fe ff ff 30 	movl   $0x30,-0x200(%ebp)
 8053a37:	00 00 00 
 8053a3a:	e9 44 0c 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053a3f:	80 bd dc fd ff ff 75 	cmpb   $0x75,-0x224(%ebp)
 8053a46:	0f 85 05 02 00 00    	jne    8053c51 <strconv__v_sprintf+0xcd6>
 8053a4c:	c7 85 48 fe ff ff 00 	movl   $0x0,-0x1b8(%ebp)
 8053a53:	00 00 00 
 8053a56:	c7 85 4c fe ff ff 00 	movl   $0x0,-0x1b4(%ebp)
 8053a5d:	00 00 00 
 8053a60:	c7 85 1c fe ff ff 01 	movl   $0x1,-0x1e4(%ebp)
 8053a67:	00 00 00 
 8053a6a:	8b 45 20             	mov    0x20(%ebp),%eax
 8053a6d:	83 ec 08             	sub    $0x8,%esp
 8053a70:	50                   	push   %eax
 8053a71:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053a77:	e8 8c 0c 00 00       	call   8054708 <strconv__v_sprintf_panic>
 8053a7c:	83 c4 10             	add    $0x10,%esp
 8053a7f:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 8053a85:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 8053a8b:	83 bd 20 fe ff ff 68 	cmpl   $0x68,-0x1e0(%ebp)
 8053a92:	75 7a                	jne    8053b0e <strconv__v_sprintf+0xb93>
 8053a94:	83 bd 00 fe ff ff 68 	cmpl   $0x68,-0x200(%ebp)
 8053a9b:	75 3a                	jne    8053ad7 <strconv__v_sprintf+0xb5c>
 8053a9d:	83 ec 0c             	sub    $0xc,%esp
 8053aa0:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053aa6:	ff 75 24             	pushl  0x24(%ebp)
 8053aa9:	ff 75 20             	pushl  0x20(%ebp)
 8053aac:	ff 75 1c             	pushl  0x1c(%ebp)
 8053aaf:	ff 75 18             	pushl  0x18(%ebp)
 8053ab2:	e8 03 28 00 00       	call   80562ba <array_get>
 8053ab7:	83 c4 20             	add    $0x20,%esp
 8053aba:	8b 00                	mov    (%eax),%eax
 8053abc:	0f b6 00             	movzbl (%eax),%eax
 8053abf:	0f b6 c0             	movzbl %al,%eax
 8053ac2:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 8053ac8:	c7 85 4c fe ff ff 00 	movl   $0x0,-0x1b4(%ebp)
 8053acf:	00 00 00 
 8053ad2:	e9 a3 00 00 00       	jmp    8053b7a <strconv__v_sprintf+0xbff>
 8053ad7:	83 ec 0c             	sub    $0xc,%esp
 8053ada:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053ae0:	ff 75 24             	pushl  0x24(%ebp)
 8053ae3:	ff 75 20             	pushl  0x20(%ebp)
 8053ae6:	ff 75 1c             	pushl  0x1c(%ebp)
 8053ae9:	ff 75 18             	pushl  0x18(%ebp)
 8053aec:	e8 c9 27 00 00       	call   80562ba <array_get>
 8053af1:	83 c4 20             	add    $0x20,%esp
 8053af4:	8b 00                	mov    (%eax),%eax
 8053af6:	0f b7 00             	movzwl (%eax),%eax
 8053af9:	0f b7 c0             	movzwl %ax,%eax
 8053afc:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 8053b02:	c7 85 4c fe ff ff 00 	movl   $0x0,-0x1b4(%ebp)
 8053b09:	00 00 00 
 8053b0c:	eb 6c                	jmp    8053b7a <strconv__v_sprintf+0xbff>
 8053b0e:	83 bd 20 fe ff ff 6c 	cmpl   $0x6c,-0x1e0(%ebp)
 8053b15:	75 32                	jne    8053b49 <strconv__v_sprintf+0xbce>
 8053b17:	83 ec 0c             	sub    $0xc,%esp
 8053b1a:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053b20:	ff 75 24             	pushl  0x24(%ebp)
 8053b23:	ff 75 20             	pushl  0x20(%ebp)
 8053b26:	ff 75 1c             	pushl  0x1c(%ebp)
 8053b29:	ff 75 18             	pushl  0x18(%ebp)
 8053b2c:	e8 89 27 00 00       	call   80562ba <array_get>
 8053b31:	83 c4 20             	add    $0x20,%esp
 8053b34:	8b 00                	mov    (%eax),%eax
 8053b36:	8b 50 04             	mov    0x4(%eax),%edx
 8053b39:	8b 00                	mov    (%eax),%eax
 8053b3b:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 8053b41:	89 95 4c fe ff ff    	mov    %edx,-0x1b4(%ebp)
 8053b47:	eb 31                	jmp    8053b7a <strconv__v_sprintf+0xbff>
 8053b49:	83 ec 0c             	sub    $0xc,%esp
 8053b4c:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053b52:	ff 75 24             	pushl  0x24(%ebp)
 8053b55:	ff 75 20             	pushl  0x20(%ebp)
 8053b58:	ff 75 1c             	pushl  0x1c(%ebp)
 8053b5b:	ff 75 18             	pushl  0x18(%ebp)
 8053b5e:	e8 57 27 00 00       	call   80562ba <array_get>
 8053b63:	83 c4 20             	add    $0x20,%esp
 8053b66:	8b 00                	mov    (%eax),%eax
 8053b68:	8b 00                	mov    (%eax),%eax
 8053b6a:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 8053b70:	c7 85 4c fe ff ff 00 	movl   $0x0,-0x1b4(%ebp)
 8053b77:	00 00 00 
 8053b7a:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 8053b81:	88 85 30 ff ff ff    	mov    %al,-0xd0(%ebp)
 8053b87:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 8053b8d:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 8053b93:	c7 85 38 ff ff ff 00 	movl   $0x0,-0xc8(%ebp)
 8053b9a:	00 00 00 
 8053b9d:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 8053ba3:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 8053ba9:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 8053baf:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 8053bb5:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 8053bbb:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 8053bc1:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 8053bc8:	00 00 00 
 8053bcb:	8d 85 a4 fe ff ff    	lea    -0x15c(%ebp),%eax
 8053bd1:	83 ec 08             	sub    $0x8,%esp
 8053bd4:	ff b5 48 ff ff ff    	pushl  -0xb8(%ebp)
 8053bda:	ff b5 44 ff ff ff    	pushl  -0xbc(%ebp)
 8053be0:	ff b5 40 ff ff ff    	pushl  -0xc0(%ebp)
 8053be6:	ff b5 3c ff ff ff    	pushl  -0xc4(%ebp)
 8053bec:	ff b5 38 ff ff ff    	pushl  -0xc8(%ebp)
 8053bf2:	ff b5 34 ff ff ff    	pushl  -0xcc(%ebp)
 8053bf8:	ff b5 30 ff ff ff    	pushl  -0xd0(%ebp)
 8053bfe:	ff b5 4c fe ff ff    	pushl  -0x1b4(%ebp)
 8053c04:	ff b5 48 fe ff ff    	pushl  -0x1b8(%ebp)
 8053c0a:	50                   	push   %eax
 8053c0b:	e8 f0 e8 ff ff       	call   8052500 <strconv__format_dec>
 8053c10:	83 c4 2c             	add    $0x2c,%esp
 8053c13:	ff b5 ac fe ff ff    	pushl  -0x154(%ebp)
 8053c19:	ff b5 a8 fe ff ff    	pushl  -0x158(%ebp)
 8053c1f:	ff b5 a4 fe ff ff    	pushl  -0x15c(%ebp)
 8053c25:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8053c2b:	50                   	push   %eax
 8053c2c:	e8 08 5e ff ff       	call   8049a39 <strings__Builder_write>
 8053c31:	83 c4 10             	add    $0x10,%esp
 8053c34:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8053c3b:	00 00 00 
 8053c3e:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 8053c45:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053c4c:	e9 32 0a 00 00       	jmp    8054683 <strconv__v_sprintf+0x1708>
 8053c51:	80 bd dc fd ff ff 78 	cmpb   $0x78,-0x224(%ebp)
 8053c58:	74 0d                	je     8053c67 <strconv__v_sprintf+0xcec>
 8053c5a:	80 bd dc fd ff ff 58 	cmpb   $0x58,-0x224(%ebp)
 8053c61:	0f 85 0f 03 00 00    	jne    8053f76 <strconv__v_sprintf+0xffb>
 8053c67:	8b 45 20             	mov    0x20(%ebp),%eax
 8053c6a:	83 ec 08             	sub    $0x8,%esp
 8053c6d:	50                   	push   %eax
 8053c6e:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053c74:	e8 8f 0a 00 00       	call   8054708 <strconv__v_sprintf_panic>
 8053c79:	83 c4 10             	add    $0x10,%esp
 8053c7c:	c7 85 ec fe ff ff 34 	movl   $0x8069734,-0x114(%ebp)
 8053c83:	97 06 08 
 8053c86:	c7 85 f0 fe ff ff 00 	movl   $0x0,-0x110(%ebp)
 8053c8d:	00 00 00 
 8053c90:	c7 85 f4 fe ff ff 01 	movl   $0x1,-0x10c(%ebp)
 8053c97:	00 00 00 
 8053c9a:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 8053ca0:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 8053ca6:	83 bd 30 fe ff ff 68 	cmpl   $0x68,-0x1d0(%ebp)
 8053cad:	0f 85 bc 00 00 00    	jne    8053d6f <strconv__v_sprintf+0xdf4>
 8053cb3:	83 bd 00 fe ff ff 68 	cmpl   $0x68,-0x200(%ebp)
 8053cba:	75 47                	jne    8053d03 <strconv__v_sprintf+0xd88>
 8053cbc:	83 ec 0c             	sub    $0xc,%esp
 8053cbf:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053cc5:	ff 75 24             	pushl  0x24(%ebp)
 8053cc8:	ff 75 20             	pushl  0x20(%ebp)
 8053ccb:	ff 75 1c             	pushl  0x1c(%ebp)
 8053cce:	ff 75 18             	pushl  0x18(%ebp)
 8053cd1:	e8 e4 25 00 00       	call   80562ba <array_get>
 8053cd6:	83 c4 20             	add    $0x20,%esp
 8053cd9:	8b 00                	mov    (%eax),%eax
 8053cdb:	0f b6 00             	movzbl (%eax),%eax
 8053cde:	88 85 de fd ff ff    	mov    %al,-0x222(%ebp)
 8053ce4:	0f be 95 de fd ff ff 	movsbl -0x222(%ebp),%edx
 8053ceb:	8d 85 ec fe ff ff    	lea    -0x114(%ebp),%eax
 8053cf1:	83 ec 08             	sub    $0x8,%esp
 8053cf4:	52                   	push   %edx
 8053cf5:	50                   	push   %eax
 8053cf6:	e8 79 5a 00 00       	call   8059774 <i8_hex>
 8053cfb:	83 c4 0c             	add    $0xc,%esp
 8053cfe:	e9 4c 01 00 00       	jmp    8053e4f <strconv__v_sprintf+0xed4>
 8053d03:	83 ec 0c             	sub    $0xc,%esp
 8053d06:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053d0c:	ff 75 24             	pushl  0x24(%ebp)
 8053d0f:	ff 75 20             	pushl  0x20(%ebp)
 8053d12:	ff 75 1c             	pushl  0x1c(%ebp)
 8053d15:	ff 75 18             	pushl  0x18(%ebp)
 8053d18:	e8 9d 25 00 00       	call   80562ba <array_get>
 8053d1d:	83 c4 20             	add    $0x20,%esp
 8053d20:	8b 00                	mov    (%eax),%eax
 8053d22:	0f b7 00             	movzwl (%eax),%eax
 8053d25:	66 89 85 e0 fd ff ff 	mov    %ax,-0x220(%ebp)
 8053d2c:	0f bf 95 e0 fd ff ff 	movswl -0x220(%ebp),%edx
 8053d33:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 8053d39:	83 ec 08             	sub    $0x8,%esp
 8053d3c:	52                   	push   %edx
 8053d3d:	50                   	push   %eax
 8053d3e:	e8 f2 5a 00 00       	call   8059835 <i16_hex>
 8053d43:	83 c4 0c             	add    $0xc,%esp
 8053d46:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8053d4c:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8053d52:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8053d58:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8053d5e:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8053d64:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8053d6a:	e9 e0 00 00 00       	jmp    8053e4f <strconv__v_sprintf+0xed4>
 8053d6f:	83 bd 30 fe ff ff 6c 	cmpl   $0x6c,-0x1d0(%ebp)
 8053d76:	75 74                	jne    8053dec <strconv__v_sprintf+0xe71>
 8053d78:	83 ec 0c             	sub    $0xc,%esp
 8053d7b:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053d81:	ff 75 24             	pushl  0x24(%ebp)
 8053d84:	ff 75 20             	pushl  0x20(%ebp)
 8053d87:	ff 75 1c             	pushl  0x1c(%ebp)
 8053d8a:	ff 75 18             	pushl  0x18(%ebp)
 8053d8d:	e8 28 25 00 00       	call   80562ba <array_get>
 8053d92:	83 c4 20             	add    $0x20,%esp
 8053d95:	8b 00                	mov    (%eax),%eax
 8053d97:	8b 50 04             	mov    0x4(%eax),%edx
 8053d9a:	8b 00                	mov    (%eax),%eax
 8053d9c:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 8053da2:	89 95 74 fe ff ff    	mov    %edx,-0x18c(%ebp)
 8053da8:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 8053dae:	83 ec 04             	sub    $0x4,%esp
 8053db1:	ff b5 74 fe ff ff    	pushl  -0x18c(%ebp)
 8053db7:	ff b5 70 fe ff ff    	pushl  -0x190(%ebp)
 8053dbd:	50                   	push   %eax
 8053dbe:	e8 5c 5c 00 00       	call   8059a1f <i64_hex>
 8053dc3:	83 c4 0c             	add    $0xc,%esp
 8053dc6:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8053dcc:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8053dd2:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8053dd8:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8053dde:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8053de4:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8053dea:	eb 63                	jmp    8053e4f <strconv__v_sprintf+0xed4>
 8053dec:	83 ec 0c             	sub    $0xc,%esp
 8053def:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053df5:	ff 75 24             	pushl  0x24(%ebp)
 8053df8:	ff 75 20             	pushl  0x20(%ebp)
 8053dfb:	ff 75 1c             	pushl  0x1c(%ebp)
 8053dfe:	ff 75 18             	pushl  0x18(%ebp)
 8053e01:	e8 b4 24 00 00       	call   80562ba <array_get>
 8053e06:	83 c4 20             	add    $0x20,%esp
 8053e09:	8b 00                	mov    (%eax),%eax
 8053e0b:	8b 00                	mov    (%eax),%eax
 8053e0d:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 8053e13:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 8053e19:	83 ec 08             	sub    $0x8,%esp
 8053e1c:	ff b5 34 fe ff ff    	pushl  -0x1cc(%ebp)
 8053e22:	50                   	push   %eax
 8053e23:	e8 c6 5a 00 00       	call   80598ee <int_hex>
 8053e28:	83 c4 0c             	add    $0xc,%esp
 8053e2b:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8053e31:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8053e37:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8053e3d:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8053e43:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8053e49:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8053e4f:	80 bd dc fd ff ff 58 	cmpb   $0x58,-0x224(%ebp)
 8053e56:	75 45                	jne    8053e9d <strconv__v_sprintf+0xf22>
 8053e58:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 8053e5e:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 8053e64:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 8053e6a:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 8053e70:	50                   	push   %eax
 8053e71:	e8 57 b5 00 00       	call   805f3cd <string_to_upper>
 8053e76:	83 c4 0c             	add    $0xc,%esp
 8053e79:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8053e7f:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8053e85:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8053e8b:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8053e91:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8053e97:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8053e9d:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 8053ea4:	88 85 4c ff ff ff    	mov    %al,-0xb4(%ebp)
 8053eaa:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 8053eb0:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 8053eb6:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%ebp)
 8053ebd:	00 00 00 
 8053ec0:	c7 85 58 ff ff ff 01 	movl   $0x1,-0xa8(%ebp)
 8053ec7:	00 00 00 
 8053eca:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%ebp)
 8053ed1:	00 00 00 
 8053ed4:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 8053eda:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 8053ee0:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 8053ee7:	00 00 00 
 8053eea:	8d 85 b0 fe ff ff    	lea    -0x150(%ebp),%eax
 8053ef0:	83 ec 04             	sub    $0x4,%esp
 8053ef3:	ff b5 64 ff ff ff    	pushl  -0x9c(%ebp)
 8053ef9:	ff b5 60 ff ff ff    	pushl  -0xa0(%ebp)
 8053eff:	ff b5 5c ff ff ff    	pushl  -0xa4(%ebp)
 8053f05:	ff b5 58 ff ff ff    	pushl  -0xa8(%ebp)
 8053f0b:	ff b5 54 ff ff ff    	pushl  -0xac(%ebp)
 8053f11:	ff b5 50 ff ff ff    	pushl  -0xb0(%ebp)
 8053f17:	ff b5 4c ff ff ff    	pushl  -0xb4(%ebp)
 8053f1d:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 8053f23:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 8053f29:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 8053f2f:	50                   	push   %eax
 8053f30:	e8 c9 e4 ff ff       	call   80523fe <strconv__format_str>
 8053f35:	83 c4 2c             	add    $0x2c,%esp
 8053f38:	ff b5 b8 fe ff ff    	pushl  -0x148(%ebp)
 8053f3e:	ff b5 b4 fe ff ff    	pushl  -0x14c(%ebp)
 8053f44:	ff b5 b0 fe ff ff    	pushl  -0x150(%ebp)
 8053f4a:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8053f50:	50                   	push   %eax
 8053f51:	e8 e3 5a ff ff       	call   8049a39 <strings__Builder_write>
 8053f56:	83 c4 10             	add    $0x10,%esp
 8053f59:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8053f60:	00 00 00 
 8053f63:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 8053f6a:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8053f71:	e9 a8 f0 ff ff       	jmp    805301e <strconv__v_sprintf+0xa3>
 8053f76:	80 bd dc fd ff ff 66 	cmpb   $0x66,-0x224(%ebp)
 8053f7d:	74 0d                	je     8053f8c <strconv__v_sprintf+0x1011>
 8053f7f:	80 bd dc fd ff ff 46 	cmpb   $0x46,-0x224(%ebp)
 8053f86:	0f 85 96 01 00 00    	jne    8054122 <strconv__v_sprintf+0x11a7>
 8053f8c:	8b 45 20             	mov    0x20(%ebp),%eax
 8053f8f:	83 ec 08             	sub    $0x8,%esp
 8053f92:	50                   	push   %eax
 8053f93:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053f99:	e8 6a 07 00 00       	call   8054708 <strconv__v_sprintf_panic>
 8053f9e:	83 c4 10             	add    $0x10,%esp
 8053fa1:	83 ec 0c             	sub    $0xc,%esp
 8053fa4:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8053faa:	ff 75 24             	pushl  0x24(%ebp)
 8053fad:	ff 75 20             	pushl  0x20(%ebp)
 8053fb0:	ff 75 1c             	pushl  0x1c(%ebp)
 8053fb3:	ff 75 18             	pushl  0x18(%ebp)
 8053fb6:	e8 ff 22 00 00       	call   80562ba <array_get>
 8053fbb:	83 c4 20             	add    $0x20,%esp
 8053fbe:	8b 00                	mov    (%eax),%eax
 8053fc0:	dd 00                	fldl   (%eax)
 8053fc2:	dd 9d 68 fe ff ff    	fstpl  -0x198(%ebp)
 8053fc8:	dd 85 68 fe ff ff    	fldl   -0x198(%ebp)
 8053fce:	d9 ee                	fldz   
 8053fd0:	d9 c9                	fxch   %st(1)
 8053fd2:	df e9                	fucomip %st(1),%st
 8053fd4:	dd d8                	fstp   %st(0)
 8053fd6:	0f 93 c0             	setae  %al
 8053fd9:	0f b6 c0             	movzbl %al,%eax
 8053fdc:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 8053fe2:	83 bd f8 fd ff ff 00 	cmpl   $0x0,-0x208(%ebp)
 8053fe9:	78 08                	js     8053ff3 <strconv__v_sprintf+0x1078>
 8053feb:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8053ff1:	eb 06                	jmp    8053ff9 <strconv__v_sprintf+0x107e>
 8053ff3:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 8053ff9:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 8053fff:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 8054006:	88 85 68 ff ff ff    	mov    %al,-0x98(%ebp)
 805400c:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 8054012:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 8054018:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 805401e:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 8054024:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 805402a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 8054030:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 8054036:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 805403c:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 8054042:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8054048:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
 805404f:	8d 85 ec fe ff ff    	lea    -0x114(%ebp),%eax
 8054055:	83 ec 08             	sub    $0x8,%esp
 8054058:	ff 75 80             	pushl  -0x80(%ebp)
 805405b:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 8054061:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 8054067:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 805406d:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 8054073:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 8054079:	ff b5 68 ff ff ff    	pushl  -0x98(%ebp)
 805407f:	ff b5 6c fe ff ff    	pushl  -0x194(%ebp)
 8054085:	ff b5 68 fe ff ff    	pushl  -0x198(%ebp)
 805408b:	50                   	push   %eax
 805408c:	e8 17 e7 ff ff       	call   80527a8 <strconv__format_fl>
 8054091:	83 c4 2c             	add    $0x2c,%esp
 8054094:	80 bd dc fd ff ff 46 	cmpb   $0x46,-0x224(%ebp)
 805409b:	75 23                	jne    80540c0 <strconv__v_sprintf+0x1145>
 805409d:	8d 85 bc fe ff ff    	lea    -0x144(%ebp),%eax
 80540a3:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 80540a9:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 80540af:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 80540b5:	50                   	push   %eax
 80540b6:	e8 12 b3 00 00       	call   805f3cd <string_to_upper>
 80540bb:	83 c4 0c             	add    $0xc,%esp
 80540be:	eb 24                	jmp    80540e4 <strconv__v_sprintf+0x1169>
 80540c0:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 80540c6:	89 85 bc fe ff ff    	mov    %eax,-0x144(%ebp)
 80540cc:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 80540d2:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 80540d8:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 80540de:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 80540e4:	ff b5 c4 fe ff ff    	pushl  -0x13c(%ebp)
 80540ea:	ff b5 c0 fe ff ff    	pushl  -0x140(%ebp)
 80540f0:	ff b5 bc fe ff ff    	pushl  -0x144(%ebp)
 80540f6:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 80540fc:	50                   	push   %eax
 80540fd:	e8 37 59 ff ff       	call   8049a39 <strings__Builder_write>
 8054102:	83 c4 10             	add    $0x10,%esp
 8054105:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 805410c:	00 00 00 
 805410f:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 8054116:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 805411d:	e9 fc ee ff ff       	jmp    805301e <strconv__v_sprintf+0xa3>
 8054122:	80 bd dc fd ff ff 65 	cmpb   $0x65,-0x224(%ebp)
 8054129:	74 0d                	je     8054138 <strconv__v_sprintf+0x11bd>
 805412b:	80 bd dc fd ff ff 45 	cmpb   $0x45,-0x224(%ebp)
 8054132:	0f 85 72 01 00 00    	jne    80542aa <strconv__v_sprintf+0x132f>
 8054138:	8b 45 20             	mov    0x20(%ebp),%eax
 805413b:	83 ec 08             	sub    $0x8,%esp
 805413e:	50                   	push   %eax
 805413f:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8054145:	e8 be 05 00 00       	call   8054708 <strconv__v_sprintf_panic>
 805414a:	83 c4 10             	add    $0x10,%esp
 805414d:	83 ec 0c             	sub    $0xc,%esp
 8054150:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8054156:	ff 75 24             	pushl  0x24(%ebp)
 8054159:	ff 75 20             	pushl  0x20(%ebp)
 805415c:	ff 75 1c             	pushl  0x1c(%ebp)
 805415f:	ff 75 18             	pushl  0x18(%ebp)
 8054162:	e8 53 21 00 00       	call   80562ba <array_get>
 8054167:	83 c4 20             	add    $0x20,%esp
 805416a:	8b 00                	mov    (%eax),%eax
 805416c:	dd 00                	fldl   (%eax)
 805416e:	dd 9d 60 fe ff ff    	fstpl  -0x1a0(%ebp)
 8054174:	dd 85 60 fe ff ff    	fldl   -0x1a0(%ebp)
 805417a:	d9 ee                	fldz   
 805417c:	d9 c9                	fxch   %st(1)
 805417e:	df e9                	fucomip %st(1),%st
 8054180:	dd d8                	fstp   %st(0)
 8054182:	0f 93 c0             	setae  %al
 8054185:	0f b6 c0             	movzbl %al,%eax
 8054188:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 805418e:	83 bd f8 fd ff ff 00 	cmpl   $0x0,-0x208(%ebp)
 8054195:	78 08                	js     805419f <strconv__v_sprintf+0x1224>
 8054197:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 805419d:	eb 06                	jmp    80541a5 <strconv__v_sprintf+0x122a>
 805419f:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 80541a5:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 80541ab:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 80541b2:	88 45 84             	mov    %al,-0x7c(%ebp)
 80541b5:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 80541bb:	89 45 88             	mov    %eax,-0x78(%ebp)
 80541be:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 80541c4:	89 45 8c             	mov    %eax,-0x74(%ebp)
 80541c7:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 80541cd:	89 45 90             	mov    %eax,-0x70(%ebp)
 80541d0:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 80541d6:	89 45 94             	mov    %eax,-0x6c(%ebp)
 80541d9:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 80541df:	89 45 98             	mov    %eax,-0x68(%ebp)
 80541e2:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
 80541e9:	8d 85 ec fe ff ff    	lea    -0x114(%ebp),%eax
 80541ef:	83 ec 08             	sub    $0x8,%esp
 80541f2:	ff 75 9c             	pushl  -0x64(%ebp)
 80541f5:	ff 75 98             	pushl  -0x68(%ebp)
 80541f8:	ff 75 94             	pushl  -0x6c(%ebp)
 80541fb:	ff 75 90             	pushl  -0x70(%ebp)
 80541fe:	ff 75 8c             	pushl  -0x74(%ebp)
 8054201:	ff 75 88             	pushl  -0x78(%ebp)
 8054204:	ff 75 84             	pushl  -0x7c(%ebp)
 8054207:	ff b5 64 fe ff ff    	pushl  -0x19c(%ebp)
 805420d:	ff b5 60 fe ff ff    	pushl  -0x1a0(%ebp)
 8054213:	50                   	push   %eax
 8054214:	e8 42 e8 ff ff       	call   8052a5b <strconv__format_es>
 8054219:	83 c4 2c             	add    $0x2c,%esp
 805421c:	80 bd dc fd ff ff 45 	cmpb   $0x45,-0x224(%ebp)
 8054223:	75 23                	jne    8054248 <strconv__v_sprintf+0x12cd>
 8054225:	8d 85 c8 fe ff ff    	lea    -0x138(%ebp),%eax
 805422b:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 8054231:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 8054237:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 805423d:	50                   	push   %eax
 805423e:	e8 8a b1 00 00       	call   805f3cd <string_to_upper>
 8054243:	83 c4 0c             	add    $0xc,%esp
 8054246:	eb 24                	jmp    805426c <strconv__v_sprintf+0x12f1>
 8054248:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 805424e:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%ebp)
 8054254:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 805425a:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 8054260:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 8054266:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 805426c:	ff b5 d0 fe ff ff    	pushl  -0x130(%ebp)
 8054272:	ff b5 cc fe ff ff    	pushl  -0x134(%ebp)
 8054278:	ff b5 c8 fe ff ff    	pushl  -0x138(%ebp)
 805427e:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8054284:	50                   	push   %eax
 8054285:	e8 af 57 ff ff       	call   8049a39 <strings__Builder_write>
 805428a:	83 c4 10             	add    $0x10,%esp
 805428d:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8054294:	00 00 00 
 8054297:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 805429e:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 80542a5:	e9 74 ed ff ff       	jmp    805301e <strconv__v_sprintf+0xa3>
 80542aa:	80 bd dc fd ff ff 67 	cmpb   $0x67,-0x224(%ebp)
 80542b1:	74 0d                	je     80542c0 <strconv__v_sprintf+0x1345>
 80542b3:	80 bd dc fd ff ff 47 	cmpb   $0x47,-0x224(%ebp)
 80542ba:	0f 85 9a 02 00 00    	jne    805455a <strconv__v_sprintf+0x15df>
 80542c0:	8b 45 20             	mov    0x20(%ebp),%eax
 80542c3:	83 ec 08             	sub    $0x8,%esp
 80542c6:	50                   	push   %eax
 80542c7:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80542cd:	e8 36 04 00 00       	call   8054708 <strconv__v_sprintf_panic>
 80542d2:	83 c4 10             	add    $0x10,%esp
 80542d5:	83 ec 0c             	sub    $0xc,%esp
 80542d8:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80542de:	ff 75 24             	pushl  0x24(%ebp)
 80542e1:	ff 75 20             	pushl  0x20(%ebp)
 80542e4:	ff 75 1c             	pushl  0x1c(%ebp)
 80542e7:	ff 75 18             	pushl  0x18(%ebp)
 80542ea:	e8 cb 1f 00 00       	call   80562ba <array_get>
 80542ef:	83 c4 20             	add    $0x20,%esp
 80542f2:	8b 00                	mov    (%eax),%eax
 80542f4:	dd 00                	fldl   (%eax)
 80542f6:	dd 9d 50 fe ff ff    	fstpl  -0x1b0(%ebp)
 80542fc:	dd 85 50 fe ff ff    	fldl   -0x1b0(%ebp)
 8054302:	d9 ee                	fldz   
 8054304:	d9 c9                	fxch   %st(1)
 8054306:	df e9                	fucomip %st(1),%st
 8054308:	dd d8                	fstp   %st(0)
 805430a:	0f 93 c0             	setae  %al
 805430d:	0f b6 c0             	movzbl %al,%eax
 8054310:	89 85 24 fe ff ff    	mov    %eax,-0x1dc(%ebp)
 8054316:	c7 85 ec fe ff ff 34 	movl   $0x8069734,-0x114(%ebp)
 805431d:	97 06 08 
 8054320:	c7 85 f0 fe ff ff 00 	movl   $0x0,-0x110(%ebp)
 8054327:	00 00 00 
 805432a:	c7 85 f4 fe ff ff 01 	movl   $0x1,-0x10c(%ebp)
 8054331:	00 00 00 
 8054334:	83 ec 08             	sub    $0x8,%esp
 8054337:	ff b5 54 fe ff ff    	pushl  -0x1ac(%ebp)
 805433d:	ff b5 50 fe ff ff    	pushl  -0x1b0(%ebp)
 8054343:	e8 21 04 00 00       	call   8054769 <strconv__fabs>
 8054348:	83 c4 10             	add    $0x10,%esp
 805434b:	dd 9d 58 fe ff ff    	fstpl  -0x1a8(%ebp)
 8054351:	dd 05 d8 bc 06 08    	fldl   0x806bcd8
 8054357:	dd 85 58 fe ff ff    	fldl   -0x1a8(%ebp)
 805435d:	d9 c9                	fxch   %st(1)
 805435f:	df e9                	fucomip %st(1),%st
 8054361:	dd d8                	fstp   %st(0)
 8054363:	0f 86 ae 00 00 00    	jbe    8054417 <strconv__v_sprintf+0x149c>
 8054369:	dd 85 58 fe ff ff    	fldl   -0x1a8(%ebp)
 805436f:	dd 05 e0 bc 06 08    	fldl   0x806bce0
 8054375:	d9 c9                	fxch   %st(1)
 8054377:	df e9                	fucomip %st(1),%st
 8054379:	dd d8                	fstp   %st(0)
 805437b:	0f 82 96 00 00 00    	jb     8054417 <strconv__v_sprintf+0x149c>
 8054381:	83 bd f8 fd ff ff 00 	cmpl   $0x0,-0x208(%ebp)
 8054388:	78 0b                	js     8054395 <strconv__v_sprintf+0x141a>
 805438a:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8054390:	83 c0 01             	add    $0x1,%eax
 8054393:	eb 06                	jmp    805439b <strconv__v_sprintf+0x1420>
 8054395:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 805439b:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 80543a1:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 80543a8:	88 45 a0             	mov    %al,-0x60(%ebp)
 80543ab:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 80543b1:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 80543b4:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 80543ba:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80543bd:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 80543c3:	89 45 ac             	mov    %eax,-0x54(%ebp)
 80543c6:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 80543cc:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80543cf:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 80543d5:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80543d8:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%ebp)
 80543df:	8d 85 ec fe ff ff    	lea    -0x114(%ebp),%eax
 80543e5:	83 ec 08             	sub    $0x8,%esp
 80543e8:	ff 75 b8             	pushl  -0x48(%ebp)
 80543eb:	ff 75 b4             	pushl  -0x4c(%ebp)
 80543ee:	ff 75 b0             	pushl  -0x50(%ebp)
 80543f1:	ff 75 ac             	pushl  -0x54(%ebp)
 80543f4:	ff 75 a8             	pushl  -0x58(%ebp)
 80543f7:	ff 75 a4             	pushl  -0x5c(%ebp)
 80543fa:	ff 75 a0             	pushl  -0x60(%ebp)
 80543fd:	ff b5 54 fe ff ff    	pushl  -0x1ac(%ebp)
 8054403:	ff b5 50 fe ff ff    	pushl  -0x1b0(%ebp)
 8054409:	50                   	push   %eax
 805440a:	e8 99 e3 ff ff       	call   80527a8 <strconv__format_fl>
 805440f:	83 c4 2c             	add    $0x2c,%esp
 8054412:	e9 b5 00 00 00       	jmp    80544cc <strconv__v_sprintf+0x1551>
 8054417:	83 bd f8 fd ff ff 00 	cmpl   $0x0,-0x208(%ebp)
 805441e:	78 0b                	js     805442b <strconv__v_sprintf+0x14b0>
 8054420:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8054426:	83 c0 01             	add    $0x1,%eax
 8054429:	eb 06                	jmp    8054431 <strconv__v_sprintf+0x14b6>
 805442b:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 8054431:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 8054437:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 805443e:	88 45 bc             	mov    %al,-0x44(%ebp)
 8054441:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 8054447:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805444a:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8054450:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8054453:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 8054459:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805445c:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 8054462:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8054465:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 805446b:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805446e:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 8054475:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 805447b:	83 ec 08             	sub    $0x8,%esp
 805447e:	ff 75 d4             	pushl  -0x2c(%ebp)
 8054481:	ff 75 d0             	pushl  -0x30(%ebp)
 8054484:	ff 75 cc             	pushl  -0x34(%ebp)
 8054487:	ff 75 c8             	pushl  -0x38(%ebp)
 805448a:	ff 75 c4             	pushl  -0x3c(%ebp)
 805448d:	ff 75 c0             	pushl  -0x40(%ebp)
 8054490:	ff 75 bc             	pushl  -0x44(%ebp)
 8054493:	ff b5 54 fe ff ff    	pushl  -0x1ac(%ebp)
 8054499:	ff b5 50 fe ff ff    	pushl  -0x1b0(%ebp)
 805449f:	50                   	push   %eax
 80544a0:	e8 b6 e5 ff ff       	call   8052a5b <strconv__format_es>
 80544a5:	83 c4 2c             	add    $0x2c,%esp
 80544a8:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 80544ae:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 80544b4:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 80544ba:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 80544c0:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 80544c6:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 80544cc:	80 bd dc fd ff ff 47 	cmpb   $0x47,-0x224(%ebp)
 80544d3:	75 23                	jne    80544f8 <strconv__v_sprintf+0x157d>
 80544d5:	8d 85 d4 fe ff ff    	lea    -0x12c(%ebp),%eax
 80544db:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 80544e1:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 80544e7:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 80544ed:	50                   	push   %eax
 80544ee:	e8 da ae 00 00       	call   805f3cd <string_to_upper>
 80544f3:	83 c4 0c             	add    $0xc,%esp
 80544f6:	eb 24                	jmp    805451c <strconv__v_sprintf+0x15a1>
 80544f8:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 80544fe:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 8054504:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 805450a:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)
 8054510:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 8054516:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 805451c:	ff b5 dc fe ff ff    	pushl  -0x124(%ebp)
 8054522:	ff b5 d8 fe ff ff    	pushl  -0x128(%ebp)
 8054528:	ff b5 d4 fe ff ff    	pushl  -0x12c(%ebp)
 805452e:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8054534:	50                   	push   %eax
 8054535:	e8 ff 54 ff ff       	call   8049a39 <strings__Builder_write>
 805453a:	83 c4 10             	add    $0x10,%esp
 805453d:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8054544:	00 00 00 
 8054547:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 805454e:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8054555:	e9 c4 ea ff ff       	jmp    805301e <strconv__v_sprintf+0xa3>
 805455a:	80 bd dc fd ff ff 73 	cmpb   $0x73,-0x224(%ebp)
 8054561:	0f 85 04 01 00 00    	jne    805466b <strconv__v_sprintf+0x16f0>
 8054567:	8b 45 20             	mov    0x20(%ebp),%eax
 805456a:	83 ec 08             	sub    $0x8,%esp
 805456d:	50                   	push   %eax
 805456e:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8054574:	e8 8f 01 00 00       	call   8054708 <strconv__v_sprintf_panic>
 8054579:	83 c4 10             	add    $0x10,%esp
 805457c:	83 ec 0c             	sub    $0xc,%esp
 805457f:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 8054585:	ff 75 24             	pushl  0x24(%ebp)
 8054588:	ff 75 20             	pushl  0x20(%ebp)
 805458b:	ff 75 1c             	pushl  0x1c(%ebp)
 805458e:	ff 75 18             	pushl  0x18(%ebp)
 8054591:	e8 24 1d 00 00       	call   80562ba <array_get>
 8054596:	83 c4 20             	add    $0x20,%esp
 8054599:	8b 00                	mov    (%eax),%eax
 805459b:	8b 10                	mov    (%eax),%edx
 805459d:	89 95 ec fe ff ff    	mov    %edx,-0x114(%ebp)
 80545a3:	8b 50 04             	mov    0x4(%eax),%edx
 80545a6:	89 95 f0 fe ff ff    	mov    %edx,-0x110(%ebp)
 80545ac:	8b 40 08             	mov    0x8(%eax),%eax
 80545af:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 80545b5:	c6 85 db fd ff ff 20 	movb   $0x20,-0x225(%ebp)
 80545bc:	0f b6 85 db fd ff ff 	movzbl -0x225(%ebp),%eax
 80545c3:	88 45 d8             	mov    %al,-0x28(%ebp)
 80545c6:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 80545cc:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80545cf:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 80545d6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 80545dd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 80545e4:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 80545ea:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80545ed:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80545f4:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
 80545fa:	83 ec 04             	sub    $0x4,%esp
 80545fd:	ff 75 f0             	pushl  -0x10(%ebp)
 8054600:	ff 75 ec             	pushl  -0x14(%ebp)
 8054603:	ff 75 e8             	pushl  -0x18(%ebp)
 8054606:	ff 75 e4             	pushl  -0x1c(%ebp)
 8054609:	ff 75 e0             	pushl  -0x20(%ebp)
 805460c:	ff 75 dc             	pushl  -0x24(%ebp)
 805460f:	ff 75 d8             	pushl  -0x28(%ebp)
 8054612:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 8054618:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 805461e:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 8054624:	50                   	push   %eax
 8054625:	e8 d4 dd ff ff       	call   80523fe <strconv__format_str>
 805462a:	83 c4 2c             	add    $0x2c,%esp
 805462d:	ff b5 e8 fe ff ff    	pushl  -0x118(%ebp)
 8054633:	ff b5 e4 fe ff ff    	pushl  -0x11c(%ebp)
 8054639:	ff b5 e0 fe ff ff    	pushl  -0x120(%ebp)
 805463f:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 8054645:	50                   	push   %eax
 8054646:	e8 ee 53 ff ff       	call   8049a39 <strings__Builder_write>
 805464b:	83 c4 10             	add    $0x10,%esp
 805464e:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8054655:	00 00 00 
 8054658:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 805465f:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8054666:	e9 b3 e9 ff ff       	jmp    805301e <strconv__v_sprintf+0xa3>
 805466b:	c7 85 04 fe ff ff 09 	movl   $0x9,-0x1fc(%ebp)
 8054672:	00 00 00 
 8054675:	83 85 e8 fd ff ff 01 	addl   $0x1,-0x218(%ebp)
 805467c:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%ebp)
 8054683:	e9 96 e9 ff ff       	jmp    805301e <strconv__v_sprintf+0xa3>
 8054688:	90                   	nop
 8054689:	8b 45 20             	mov    0x20(%ebp),%eax
 805468c:	3b 85 e8 fd ff ff    	cmp    -0x218(%ebp),%eax
 8054692:	74 40                	je     80546d4 <strconv__v_sprintf+0x1759>
 8054694:	8b 55 20             	mov    0x20(%ebp),%edx
 8054697:	8d 85 ec fe ff ff    	lea    -0x114(%ebp),%eax
 805469d:	83 ec 0c             	sub    $0xc,%esp
 80546a0:	52                   	push   %edx
 80546a1:	ff b5 e8 fd ff ff    	pushl  -0x218(%ebp)
 80546a7:	6a 03                	push   $0x3
 80546a9:	68 f0 97 06 08       	push   $0x80697f0
 80546ae:	50                   	push   %eax
 80546af:	e8 10 4e ff ff       	call   80494c4 <_STR>
 80546b4:	83 c4 1c             	add    $0x1c,%esp
 80546b7:	83 ec 04             	sub    $0x4,%esp
 80546ba:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)
 80546c0:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)
 80546c6:	ff b5 ec fe ff ff    	pushl  -0x114(%ebp)
 80546cc:	e8 c6 30 00 00       	call   8057797 <v_panic>
 80546d1:	83 c4 10             	add    $0x10,%esp
 80546d4:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 80546da:	83 ec 08             	sub    $0x8,%esp
 80546dd:	8d 95 f8 fe ff ff    	lea    -0x108(%ebp),%edx
 80546e3:	52                   	push   %edx
 80546e4:	50                   	push   %eax
 80546e5:	e8 dd 56 ff ff       	call   8049dc7 <strings__Builder_str>
 80546ea:	83 c4 0c             	add    $0xc,%esp
 80546ed:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 80546f3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80546f6:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80546fd:	74 05                	je     8054704 <strconv__v_sprintf+0x1789>
 80546ff:	e8 1c 41 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8054704:	c9                   	leave  
 8054705:	c2 04 00             	ret    $0x4

08054708 <strconv__v_sprintf_panic>:
 8054708:	55                   	push   %ebp
 8054709:	89 e5                	mov    %esp,%ebp
 805470b:	83 ec 18             	sub    $0x18,%esp
 805470e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8054714:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8054717:	31 c0                	xor    %eax,%eax
 8054719:	8b 45 08             	mov    0x8(%ebp),%eax
 805471c:	3b 45 0c             	cmp    0xc(%ebp),%eax
 805471f:	7c 34                	jl     8054755 <strconv__v_sprintf_panic+0x4d>
 8054721:	8b 45 08             	mov    0x8(%ebp),%eax
 8054724:	8d 50 01             	lea    0x1(%eax),%edx
 8054727:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805472a:	83 ec 0c             	sub    $0xc,%esp
 805472d:	ff 75 0c             	pushl  0xc(%ebp)
 8054730:	52                   	push   %edx
 8054731:	6a 03                	push   $0x3
 8054733:	68 24 98 06 08       	push   $0x8069824
 8054738:	50                   	push   %eax
 8054739:	e8 86 4d ff ff       	call   80494c4 <_STR>
 805473e:	83 c4 1c             	add    $0x1c,%esp
 8054741:	83 ec 04             	sub    $0x4,%esp
 8054744:	ff 75 f0             	pushl  -0x10(%ebp)
 8054747:	ff 75 ec             	pushl  -0x14(%ebp)
 805474a:	ff 75 e8             	pushl  -0x18(%ebp)
 805474d:	e8 45 30 00 00       	call   8057797 <v_panic>
 8054752:	83 c4 10             	add    $0x10,%esp
 8054755:	90                   	nop
 8054756:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8054759:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8054760:	74 05                	je     8054767 <strconv__v_sprintf_panic+0x5f>
 8054762:	e8 b9 40 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8054767:	c9                   	leave  
 8054768:	c3                   	ret    

08054769 <strconv__fabs>:
 8054769:	55                   	push   %ebp
 805476a:	89 e5                	mov    %esp,%ebp
 805476c:	83 ec 08             	sub    $0x8,%esp
 805476f:	8b 45 08             	mov    0x8(%ebp),%eax
 8054772:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8054775:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054778:	89 45 fc             	mov    %eax,-0x4(%ebp)
 805477b:	d9 ee                	fldz   
 805477d:	dd 45 f8             	fldl   -0x8(%ebp)
 8054780:	d9 c9                	fxch   %st(1)
 8054782:	df e9                	fucomip %st(1),%st
 8054784:	dd d8                	fstp   %st(0)
 8054786:	76 07                	jbe    805478f <strconv__fabs+0x26>
 8054788:	dd 45 f8             	fldl   -0x8(%ebp)
 805478b:	d9 e0                	fchs   
 805478d:	eb 03                	jmp    8054792 <strconv__fabs+0x29>
 805478f:	dd 45 f8             	fldl   -0x8(%ebp)
 8054792:	c9                   	leave  
 8054793:	c3                   	ret    

08054794 <strconv__ftoa_64>:
 8054794:	55                   	push   %ebp
 8054795:	89 e5                	mov    %esp,%ebp
 8054797:	83 ec 28             	sub    $0x28,%esp
 805479a:	8b 45 08             	mov    0x8(%ebp),%eax
 805479d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80547a0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80547a3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80547a6:	8b 45 10             	mov    0x10(%ebp),%eax
 80547a9:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80547ac:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80547b2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80547b5:	31 c0                	xor    %eax,%eax
 80547b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80547ba:	6a 11                	push   $0x11
 80547bc:	ff 75 dc             	pushl  -0x24(%ebp)
 80547bf:	ff 75 d8             	pushl  -0x28(%ebp)
 80547c2:	50                   	push   %eax
 80547c3:	e8 f7 d1 ff ff       	call   80519bf <strconv__f64_to_str>
 80547c8:	83 c4 0c             	add    $0xc,%esp
 80547cb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80547ce:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80547d1:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80547d8:	74 05                	je     80547df <strconv__ftoa_64+0x4b>
 80547da:	e8 41 40 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80547df:	c9                   	leave  
 80547e0:	c2 04 00             	ret    $0x4

080547e3 <strconv__ftoa_long_64>:
 80547e3:	55                   	push   %ebp
 80547e4:	89 e5                	mov    %esp,%ebp
 80547e6:	83 ec 28             	sub    $0x28,%esp
 80547e9:	8b 45 08             	mov    0x8(%ebp),%eax
 80547ec:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80547ef:	8b 45 0c             	mov    0xc(%ebp),%eax
 80547f2:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80547f5:	8b 45 10             	mov    0x10(%ebp),%eax
 80547f8:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80547fb:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8054801:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8054804:	31 c0                	xor    %eax,%eax
 8054806:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8054809:	83 ec 04             	sub    $0x4,%esp
 805480c:	ff 75 dc             	pushl  -0x24(%ebp)
 805480f:	ff 75 d8             	pushl  -0x28(%ebp)
 8054812:	50                   	push   %eax
 8054813:	e8 9a 0c 00 00       	call   80554b2 <strconv__f64_to_str_l>
 8054818:	83 c4 0c             	add    $0xc,%esp
 805481b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805481e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8054821:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8054828:	74 05                	je     805482f <strconv__ftoa_long_64+0x4c>
 805482a:	e8 f1 3f ff ff       	call   8048820 <__stack_chk_fail@plt>
 805482f:	c9                   	leave  
 8054830:	c2 04 00             	ret    $0x4

08054833 <strconv__ftoa_32>:
 8054833:	55                   	push   %ebp
 8054834:	89 e5                	mov    %esp,%ebp
 8054836:	83 ec 28             	sub    $0x28,%esp
 8054839:	8b 45 08             	mov    0x8(%ebp),%eax
 805483c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805483f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8054845:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8054848:	31 c0                	xor    %eax,%eax
 805484a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805484d:	83 ec 04             	sub    $0x4,%esp
 8054850:	6a 08                	push   $0x8
 8054852:	ff 75 0c             	pushl  0xc(%ebp)
 8054855:	50                   	push   %eax
 8054856:	e8 3b bc ff ff       	call   8050496 <strconv__f32_to_str>
 805485b:	83 c4 0c             	add    $0xc,%esp
 805485e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8054861:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8054864:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805486b:	74 05                	je     8054872 <strconv__ftoa_32+0x3f>
 805486d:	e8 ae 3f ff ff       	call   8048820 <__stack_chk_fail@plt>
 8054872:	c9                   	leave  
 8054873:	c2 04 00             	ret    $0x4

08054876 <strconv__ftoa_long_32>:
 8054876:	55                   	push   %ebp
 8054877:	89 e5                	mov    %esp,%ebp
 8054879:	83 ec 28             	sub    $0x28,%esp
 805487c:	8b 45 08             	mov    0x8(%ebp),%eax
 805487f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8054882:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8054888:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805488b:	31 c0                	xor    %eax,%eax
 805488d:	d9 45 0c             	flds   0xc(%ebp)
 8054890:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8054893:	83 ec 04             	sub    $0x4,%esp
 8054896:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 805489a:	dd 1c 24             	fstpl  (%esp)
 805489d:	50                   	push   %eax
 805489e:	e8 b5 0b 00 00       	call   8055458 <strconv__f32_to_str_l>
 80548a3:	83 c4 0c             	add    $0xc,%esp
 80548a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80548a9:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80548ac:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80548b3:	74 05                	je     80548ba <strconv__ftoa_long_32+0x44>
 80548b5:	e8 66 3f ff ff       	call   8048820 <__stack_chk_fail@plt>
 80548ba:	c9                   	leave  
 80548bb:	c2 04 00             	ret    $0x4

080548be <strconv__format_int>:
 80548be:	55                   	push   %ebp
 80548bf:	89 e5                	mov    %esp,%ebp
 80548c1:	53                   	push   %ebx
 80548c2:	83 ec 54             	sub    $0x54,%esp
 80548c5:	8b 45 08             	mov    0x8(%ebp),%eax
 80548c8:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80548cb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80548ce:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80548d1:	8b 45 10             	mov    0x10(%ebp),%eax
 80548d4:	89 45 ac             	mov    %eax,-0x54(%ebp)
 80548d7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80548dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80548e0:	31 c0                	xor    %eax,%eax
 80548e2:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
 80548e6:	7e 06                	jle    80548ee <strconv__format_int+0x30>
 80548e8:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
 80548ec:	7e 2a                	jle    8054918 <strconv__format_int+0x5a>
 80548ee:	8d 45 dc             	lea    -0x24(%ebp),%eax
 80548f1:	ff 75 14             	pushl  0x14(%ebp)
 80548f4:	6a 02                	push   $0x2
 80548f6:	68 5c 98 06 08       	push   $0x806985c
 80548fb:	50                   	push   %eax
 80548fc:	e8 c3 4b ff ff       	call   80494c4 <_STR>
 8054901:	83 c4 0c             	add    $0xc,%esp
 8054904:	83 ec 04             	sub    $0x4,%esp
 8054907:	ff 75 e4             	pushl  -0x1c(%ebp)
 805490a:	ff 75 e0             	pushl  -0x20(%ebp)
 805490d:	ff 75 dc             	pushl  -0x24(%ebp)
 8054910:	e8 82 2e 00 00       	call   8057797 <v_panic>
 8054915:	83 c4 10             	add    $0x10,%esp
 8054918:	8b 45 ac             	mov    -0x54(%ebp),%eax
 805491b:	0b 45 a8             	or     -0x58(%ebp),%eax
 805491e:	85 c0                	test   %eax,%eax
 8054920:	75 22                	jne    8054944 <strconv__format_int+0x86>
 8054922:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054925:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 805492b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805492e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 8054935:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054938:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805493f:	e9 1c 01 00 00       	jmp    8054a60 <strconv__format_int+0x1a2>
 8054944:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8054947:	8b 55 ac             	mov    -0x54(%ebp),%edx
 805494a:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805494d:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8054950:	c7 45 c4 34 97 06 08 	movl   $0x8069734,-0x3c(%ebp)
 8054957:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 805495e:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 8054965:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)
 8054969:	79 1f                	jns    805498a <strconv__format_int+0xcc>
 805496b:	c7 45 c4 e8 97 06 08 	movl   $0x80697e8,-0x3c(%ebp)
 8054972:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 8054979:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 8054980:	f7 5d b8             	negl   -0x48(%ebp)
 8054983:	83 55 bc 00          	adcl   $0x0,-0x44(%ebp)
 8054987:	f7 5d bc             	negl   -0x44(%ebp)
 805498a:	c7 45 d0 34 97 06 08 	movl   $0x8069734,-0x30(%ebp)
 8054991:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 8054998:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 805499f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80549a2:	0b 45 b8             	or     -0x48(%ebp),%eax
 80549a5:	85 c0                	test   %eax,%eax
 80549a7:	0f 84 8a 00 00 00    	je     8054a37 <strconv__format_int+0x179>
 80549ad:	8b 45 14             	mov    0x14(%ebp),%eax
 80549b0:	89 c1                	mov    %eax,%ecx
 80549b2:	89 c3                	mov    %eax,%ebx
 80549b4:	c1 fb 1f             	sar    $0x1f,%ebx
 80549b7:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80549ba:	8b 55 bc             	mov    -0x44(%ebp),%edx
 80549bd:	53                   	push   %ebx
 80549be:	51                   	push   %ecx
 80549bf:	52                   	push   %edx
 80549c0:	50                   	push   %eax
 80549c1:	e8 6a 47 01 00       	call   8069130 <__moddi3>
 80549c6:	83 c4 10             	add    $0x10,%esp
 80549c9:	50                   	push   %eax
 80549ca:	ff 35 44 32 07 08    	pushl  0x8073244
 80549d0:	ff 35 40 32 07 08    	pushl  0x8073240
 80549d6:	ff 35 3c 32 07 08    	pushl  0x807323c
 80549dc:	e8 59 bf 00 00       	call   806093a <string_at>
 80549e1:	83 c4 10             	add    $0x10,%esp
 80549e4:	0f b6 d0             	movzbl %al,%edx
 80549e7:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80549ea:	83 ec 08             	sub    $0x8,%esp
 80549ed:	52                   	push   %edx
 80549ee:	50                   	push   %eax
 80549ef:	e8 fd 51 00 00       	call   8059bf1 <byte_ascii_str>
 80549f4:	83 c4 0c             	add    $0xc,%esp
 80549f7:	8d 45 d0             	lea    -0x30(%ebp),%eax
 80549fa:	83 ec 04             	sub    $0x4,%esp
 80549fd:	ff 75 d8             	pushl  -0x28(%ebp)
 8054a00:	ff 75 d4             	pushl  -0x2c(%ebp)
 8054a03:	ff 75 d0             	pushl  -0x30(%ebp)
 8054a06:	ff 75 f0             	pushl  -0x10(%ebp)
 8054a09:	ff 75 ec             	pushl  -0x14(%ebp)
 8054a0c:	ff 75 e8             	pushl  -0x18(%ebp)
 8054a0f:	50                   	push   %eax
 8054a10:	e8 2f 98 00 00       	call   805e244 <string_add>
 8054a15:	83 c4 1c             	add    $0x1c,%esp
 8054a18:	8b 45 14             	mov    0x14(%ebp),%eax
 8054a1b:	99                   	cltd   
 8054a1c:	52                   	push   %edx
 8054a1d:	50                   	push   %eax
 8054a1e:	ff 75 bc             	pushl  -0x44(%ebp)
 8054a21:	ff 75 b8             	pushl  -0x48(%ebp)
 8054a24:	e8 97 45 01 00       	call   8068fc0 <__divdi3>
 8054a29:	83 c4 10             	add    $0x10,%esp
 8054a2c:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8054a2f:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8054a32:	e9 68 ff ff ff       	jmp    805499f <strconv__format_int+0xe1>
 8054a37:	90                   	nop
 8054a38:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054a3b:	83 ec 0c             	sub    $0xc,%esp
 8054a3e:	ff 75 d8             	pushl  -0x28(%ebp)
 8054a41:	ff 75 d4             	pushl  -0x2c(%ebp)
 8054a44:	ff 75 d0             	pushl  -0x30(%ebp)
 8054a47:	ff 75 cc             	pushl  -0x34(%ebp)
 8054a4a:	ff 75 c8             	pushl  -0x38(%ebp)
 8054a4d:	ff 75 c4             	pushl  -0x3c(%ebp)
 8054a50:	6a 02                	push   $0x2
 8054a52:	68 8f 98 06 08       	push   $0x806988f
 8054a57:	50                   	push   %eax
 8054a58:	e8 67 4a ff ff       	call   80494c4 <_STR>
 8054a5d:	83 c4 2c             	add    $0x2c,%esp
 8054a60:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054a63:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8054a66:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 8054a6d:	74 05                	je     8054a74 <strconv__format_int+0x1b6>
 8054a6f:	e8 ac 3d ff ff       	call   8048820 <__stack_chk_fail@plt>
 8054a74:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8054a77:	c9                   	leave  
 8054a78:	c2 04 00             	ret    $0x4

08054a7b <strconv__format_uint>:
 8054a7b:	55                   	push   %ebp
 8054a7c:	89 e5                	mov    %esp,%ebp
 8054a7e:	83 ec 58             	sub    $0x58,%esp
 8054a81:	8b 45 08             	mov    0x8(%ebp),%eax
 8054a84:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8054a87:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054a8a:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8054a8d:	8b 45 10             	mov    0x10(%ebp),%eax
 8054a90:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8054a93:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8054a99:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8054a9c:	31 c0                	xor    %eax,%eax
 8054a9e:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
 8054aa2:	7e 06                	jle    8054aaa <strconv__format_uint+0x2f>
 8054aa4:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
 8054aa8:	7e 2a                	jle    8054ad4 <strconv__format_uint+0x59>
 8054aaa:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8054aad:	ff 75 14             	pushl  0x14(%ebp)
 8054ab0:	6a 02                	push   $0x2
 8054ab2:	68 5c 98 06 08       	push   $0x806985c
 8054ab7:	50                   	push   %eax
 8054ab8:	e8 07 4a ff ff       	call   80494c4 <_STR>
 8054abd:	83 c4 0c             	add    $0xc,%esp
 8054ac0:	83 ec 04             	sub    $0x4,%esp
 8054ac3:	ff 75 e4             	pushl  -0x1c(%ebp)
 8054ac6:	ff 75 e0             	pushl  -0x20(%ebp)
 8054ac9:	ff 75 dc             	pushl  -0x24(%ebp)
 8054acc:	e8 c6 2c 00 00       	call   8057797 <v_panic>
 8054ad1:	83 c4 10             	add    $0x10,%esp
 8054ad4:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8054ad7:	0b 45 a8             	or     -0x58(%ebp),%eax
 8054ada:	85 c0                	test   %eax,%eax
 8054adc:	75 22                	jne    8054b00 <strconv__format_uint+0x85>
 8054ade:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054ae1:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 8054ae7:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054aea:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 8054af1:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054af4:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8054afb:	e9 d2 00 00 00       	jmp    8054bd2 <strconv__format_uint+0x157>
 8054b00:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8054b03:	8b 55 ac             	mov    -0x54(%ebp),%edx
 8054b06:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8054b09:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 8054b0c:	c7 45 d0 34 97 06 08 	movl   $0x8069734,-0x30(%ebp)
 8054b13:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 8054b1a:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8054b21:	8b 45 14             	mov    0x14(%ebp),%eax
 8054b24:	99                   	cltd   
 8054b25:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8054b28:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8054b2b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8054b2e:	0b 45 c0             	or     -0x40(%ebp),%eax
 8054b31:	85 c0                	test   %eax,%eax
 8054b33:	0f 84 84 00 00 00    	je     8054bbd <strconv__format_uint+0x142>
 8054b39:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8054b3c:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8054b3f:	ff 75 cc             	pushl  -0x34(%ebp)
 8054b42:	ff 75 c8             	pushl  -0x38(%ebp)
 8054b45:	52                   	push   %edx
 8054b46:	50                   	push   %eax
 8054b47:	e8 d4 48 01 00       	call   8069420 <__umoddi3>
 8054b4c:	83 c4 10             	add    $0x10,%esp
 8054b4f:	50                   	push   %eax
 8054b50:	ff 35 44 32 07 08    	pushl  0x8073244
 8054b56:	ff 35 40 32 07 08    	pushl  0x8073240
 8054b5c:	ff 35 3c 32 07 08    	pushl  0x807323c
 8054b62:	e8 d3 bd 00 00       	call   806093a <string_at>
 8054b67:	83 c4 10             	add    $0x10,%esp
 8054b6a:	0f b6 d0             	movzbl %al,%edx
 8054b6d:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8054b70:	83 ec 08             	sub    $0x8,%esp
 8054b73:	52                   	push   %edx
 8054b74:	50                   	push   %eax
 8054b75:	e8 77 50 00 00       	call   8059bf1 <byte_ascii_str>
 8054b7a:	83 c4 0c             	add    $0xc,%esp
 8054b7d:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8054b80:	83 ec 04             	sub    $0x4,%esp
 8054b83:	ff 75 d8             	pushl  -0x28(%ebp)
 8054b86:	ff 75 d4             	pushl  -0x2c(%ebp)
 8054b89:	ff 75 d0             	pushl  -0x30(%ebp)
 8054b8c:	ff 75 f0             	pushl  -0x10(%ebp)
 8054b8f:	ff 75 ec             	pushl  -0x14(%ebp)
 8054b92:	ff 75 e8             	pushl  -0x18(%ebp)
 8054b95:	50                   	push   %eax
 8054b96:	e8 a9 96 00 00       	call   805e244 <string_add>
 8054b9b:	83 c4 1c             	add    $0x1c,%esp
 8054b9e:	ff 75 cc             	pushl  -0x34(%ebp)
 8054ba1:	ff 75 c8             	pushl  -0x38(%ebp)
 8054ba4:	ff 75 c4             	pushl  -0x3c(%ebp)
 8054ba7:	ff 75 c0             	pushl  -0x40(%ebp)
 8054baa:	e8 41 47 01 00       	call   80692f0 <__udivdi3>
 8054baf:	83 c4 10             	add    $0x10,%esp
 8054bb2:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8054bb5:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 8054bb8:	e9 6e ff ff ff       	jmp    8054b2b <strconv__format_uint+0xb0>
 8054bbd:	90                   	nop
 8054bbe:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054bc1:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8054bc4:	89 10                	mov    %edx,(%eax)
 8054bc6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8054bc9:	89 50 04             	mov    %edx,0x4(%eax)
 8054bcc:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8054bcf:	89 50 08             	mov    %edx,0x8(%eax)
 8054bd2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8054bd5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8054bd8:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8054bdf:	74 05                	je     8054be6 <strconv__format_uint+0x16b>
 8054be1:	e8 3a 3c ff ff       	call   8048820 <__stack_chk_fail@plt>
 8054be6:	c9                   	leave  
 8054be7:	c2 04 00             	ret    $0x4

08054bea <strconv__assert1>:
 8054bea:	55                   	push   %ebp
 8054beb:	89 e5                	mov    %esp,%ebp
 8054bed:	83 ec 08             	sub    $0x8,%esp
 8054bf0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8054bf4:	75 14                	jne    8054c0a <strconv__assert1+0x20>
 8054bf6:	83 ec 04             	sub    $0x4,%esp
 8054bf9:	ff 75 14             	pushl  0x14(%ebp)
 8054bfc:	ff 75 10             	pushl  0x10(%ebp)
 8054bff:	ff 75 0c             	pushl  0xc(%ebp)
 8054c02:	e8 90 2b 00 00       	call   8057797 <v_panic>
 8054c07:	83 c4 10             	add    $0x10,%esp
 8054c0a:	90                   	nop
 8054c0b:	c9                   	leave  
 8054c0c:	c3                   	ret    

08054c0d <strconv__bool_to_int>:
 8054c0d:	55                   	push   %ebp
 8054c0e:	89 e5                	mov    %esp,%ebp
 8054c10:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8054c14:	74 07                	je     8054c1d <strconv__bool_to_int+0x10>
 8054c16:	b8 01 00 00 00       	mov    $0x1,%eax
 8054c1b:	eb 05                	jmp    8054c22 <strconv__bool_to_int+0x15>
 8054c1d:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c22:	5d                   	pop    %ebp
 8054c23:	c3                   	ret    

08054c24 <strconv__bool_to_u32>:
 8054c24:	55                   	push   %ebp
 8054c25:	89 e5                	mov    %esp,%ebp
 8054c27:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8054c2b:	74 07                	je     8054c34 <strconv__bool_to_u32+0x10>
 8054c2d:	b8 01 00 00 00       	mov    $0x1,%eax
 8054c32:	eb 05                	jmp    8054c39 <strconv__bool_to_u32+0x15>
 8054c34:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c39:	5d                   	pop    %ebp
 8054c3a:	c3                   	ret    

08054c3b <strconv__bool_to_u64>:
 8054c3b:	55                   	push   %ebp
 8054c3c:	89 e5                	mov    %esp,%ebp
 8054c3e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8054c42:	74 0c                	je     8054c50 <strconv__bool_to_u64+0x15>
 8054c44:	b8 01 00 00 00       	mov    $0x1,%eax
 8054c49:	ba 00 00 00 00       	mov    $0x0,%edx
 8054c4e:	eb 0a                	jmp    8054c5a <strconv__bool_to_u64+0x1f>
 8054c50:	b8 00 00 00 00       	mov    $0x0,%eax
 8054c55:	ba 00 00 00 00       	mov    $0x0,%edx
 8054c5a:	5d                   	pop    %ebp
 8054c5b:	c3                   	ret    

08054c5c <strconv__get_string_special>:
 8054c5c:	55                   	push   %ebp
 8054c5d:	89 e5                	mov    %esp,%ebp
 8054c5f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 8054c63:	75 22                	jne    8054c87 <strconv__get_string_special+0x2b>
 8054c65:	8b 45 08             	mov    0x8(%ebp),%eax
 8054c68:	c7 00 99 98 06 08    	movl   $0x8069899,(%eax)
 8054c6e:	8b 45 08             	mov    0x8(%ebp),%eax
 8054c71:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%eax)
 8054c78:	8b 45 08             	mov    0x8(%ebp),%eax
 8054c7b:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8054c82:	e9 8c 00 00 00       	jmp    8054d13 <strconv__get_string_special+0xb7>
 8054c87:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8054c8b:	75 44                	jne    8054cd1 <strconv__get_string_special+0x75>
 8054c8d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8054c91:	74 1f                	je     8054cb2 <strconv__get_string_special+0x56>
 8054c93:	8b 45 08             	mov    0x8(%ebp),%eax
 8054c96:	c7 00 9d 98 06 08    	movl   $0x806989d,(%eax)
 8054c9c:	8b 45 08             	mov    0x8(%ebp),%eax
 8054c9f:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%eax)
 8054ca6:	8b 45 08             	mov    0x8(%ebp),%eax
 8054ca9:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8054cb0:	eb 61                	jmp    8054d13 <strconv__get_string_special+0xb7>
 8054cb2:	8b 45 08             	mov    0x8(%ebp),%eax
 8054cb5:	c7 00 a2 98 06 08    	movl   $0x80698a2,(%eax)
 8054cbb:	8b 45 08             	mov    0x8(%ebp),%eax
 8054cbe:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%eax)
 8054cc5:	8b 45 08             	mov    0x8(%ebp),%eax
 8054cc8:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8054ccf:	eb 42                	jmp    8054d13 <strconv__get_string_special+0xb7>
 8054cd1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8054cd5:	74 1f                	je     8054cf6 <strconv__get_string_special+0x9a>
 8054cd7:	8b 45 08             	mov    0x8(%ebp),%eax
 8054cda:	c7 00 a7 98 06 08    	movl   $0x80698a7,(%eax)
 8054ce0:	8b 45 08             	mov    0x8(%ebp),%eax
 8054ce3:	c7 40 04 06 00 00 00 	movl   $0x6,0x4(%eax)
 8054cea:	8b 45 08             	mov    0x8(%ebp),%eax
 8054ced:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8054cf4:	eb 1d                	jmp    8054d13 <strconv__get_string_special+0xb7>
 8054cf6:	8b 45 08             	mov    0x8(%ebp),%eax
 8054cf9:	c7 00 ae 98 06 08    	movl   $0x80698ae,(%eax)
 8054cff:	8b 45 08             	mov    0x8(%ebp),%eax
 8054d02:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
 8054d09:	8b 45 08             	mov    0x8(%ebp),%eax
 8054d0c:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8054d13:	8b 45 08             	mov    0x8(%ebp),%eax
 8054d16:	5d                   	pop    %ebp
 8054d17:	c2 04 00             	ret    $0x4

08054d1a <strconv__decimal_len_32>:
 8054d1a:	55                   	push   %ebp
 8054d1b:	89 e5                	mov    %esp,%ebp
 8054d1d:	83 ec 18             	sub    $0x18,%esp
 8054d20:	c7 45 ec b4 98 06 08 	movl   $0x80698b4,-0x14(%ebp)
 8054d27:	c7 45 f0 07 00 00 00 	movl   $0x7,-0x10(%ebp)
 8054d2e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 8054d35:	81 7d 08 ff c9 9a 3b 	cmpl   $0x3b9ac9ff,0x8(%ebp)
 8054d3c:	0f 96 c0             	setbe  %al
 8054d3f:	0f b6 c0             	movzbl %al,%eax
 8054d42:	ff 75 f4             	pushl  -0xc(%ebp)
 8054d45:	ff 75 f0             	pushl  -0x10(%ebp)
 8054d48:	ff 75 ec             	pushl  -0x14(%ebp)
 8054d4b:	50                   	push   %eax
 8054d4c:	e8 99 fe ff ff       	call   8054bea <strconv__assert1>
 8054d51:	83 c4 10             	add    $0x10,%esp
 8054d54:	81 7d 08 ff e0 f5 05 	cmpl   $0x5f5e0ff,0x8(%ebp)
 8054d5b:	76 07                	jbe    8054d64 <strconv__decimal_len_32+0x4a>
 8054d5d:	b8 09 00 00 00       	mov    $0x9,%eax
 8054d62:	eb 6f                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054d64:	81 7d 08 7f 96 98 00 	cmpl   $0x98967f,0x8(%ebp)
 8054d6b:	76 07                	jbe    8054d74 <strconv__decimal_len_32+0x5a>
 8054d6d:	b8 08 00 00 00       	mov    $0x8,%eax
 8054d72:	eb 5f                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054d74:	81 7d 08 3f 42 0f 00 	cmpl   $0xf423f,0x8(%ebp)
 8054d7b:	76 07                	jbe    8054d84 <strconv__decimal_len_32+0x6a>
 8054d7d:	b8 07 00 00 00       	mov    $0x7,%eax
 8054d82:	eb 4f                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054d84:	81 7d 08 9f 86 01 00 	cmpl   $0x1869f,0x8(%ebp)
 8054d8b:	76 07                	jbe    8054d94 <strconv__decimal_len_32+0x7a>
 8054d8d:	b8 06 00 00 00       	mov    $0x6,%eax
 8054d92:	eb 3f                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054d94:	81 7d 08 0f 27 00 00 	cmpl   $0x270f,0x8(%ebp)
 8054d9b:	76 07                	jbe    8054da4 <strconv__decimal_len_32+0x8a>
 8054d9d:	b8 05 00 00 00       	mov    $0x5,%eax
 8054da2:	eb 2f                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054da4:	81 7d 08 e7 03 00 00 	cmpl   $0x3e7,0x8(%ebp)
 8054dab:	76 07                	jbe    8054db4 <strconv__decimal_len_32+0x9a>
 8054dad:	b8 04 00 00 00       	mov    $0x4,%eax
 8054db2:	eb 1f                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054db4:	83 7d 08 63          	cmpl   $0x63,0x8(%ebp)
 8054db8:	76 07                	jbe    8054dc1 <strconv__decimal_len_32+0xa7>
 8054dba:	b8 03 00 00 00       	mov    $0x3,%eax
 8054dbf:	eb 12                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054dc1:	83 7d 08 09          	cmpl   $0x9,0x8(%ebp)
 8054dc5:	76 07                	jbe    8054dce <strconv__decimal_len_32+0xb4>
 8054dc7:	b8 02 00 00 00       	mov    $0x2,%eax
 8054dcc:	eb 05                	jmp    8054dd3 <strconv__decimal_len_32+0xb9>
 8054dce:	b8 01 00 00 00       	mov    $0x1,%eax
 8054dd3:	c9                   	leave  
 8054dd4:	c3                   	ret    

08054dd5 <strconv__mul_shift_32>:
 8054dd5:	55                   	push   %ebp
 8054dd6:	89 e5                	mov    %esp,%ebp
 8054dd8:	56                   	push   %esi
 8054dd9:	53                   	push   %ebx
 8054dda:	83 ec 50             	sub    $0x50,%esp
 8054ddd:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054de0:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8054de3:	8b 45 10             	mov    0x10(%ebp),%eax
 8054de6:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8054de9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8054def:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8054df2:	31 c0                	xor    %eax,%eax
 8054df4:	8b 45 08             	mov    0x8(%ebp),%eax
 8054df7:	ba 00 00 00 00       	mov    $0x0,%edx
 8054dfc:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
 8054dff:	83 ec 04             	sub    $0x4,%esp
 8054e02:	ff 75 b4             	pushl  -0x4c(%ebp)
 8054e05:	ff 75 b0             	pushl  -0x50(%ebp)
 8054e08:	52                   	push   %edx
 8054e09:	50                   	push   %eax
 8054e0a:	51                   	push   %ecx
 8054e0b:	e8 f4 80 ff ff       	call   804cf04 <math__bits__mul_64>
 8054e10:	83 c4 14             	add    $0x14,%esp
 8054e13:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8054e16:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8054e19:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8054e1c:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 8054e1f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8054e22:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8054e25:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8054e28:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8054e2b:	8b 4d 14             	mov    0x14(%ebp),%ecx
 8054e2e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8054e31:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8054e34:	0f ad d0             	shrd   %cl,%edx,%eax
 8054e37:	d3 ea                	shr    %cl,%edx
 8054e39:	f6 c1 20             	test   $0x20,%cl
 8054e3c:	74 04                	je     8054e42 <strconv__mul_shift_32+0x6d>
 8054e3e:	89 d0                	mov    %edx,%eax
 8054e40:	31 d2                	xor    %edx,%edx
 8054e42:	89 c3                	mov    %eax,%ebx
 8054e44:	89 d6                	mov    %edx,%esi
 8054e46:	b8 40 00 00 00       	mov    $0x40,%eax
 8054e4b:	2b 45 14             	sub    0x14(%ebp),%eax
 8054e4e:	89 c1                	mov    %eax,%ecx
 8054e50:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8054e53:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8054e56:	0f a5 c2             	shld   %cl,%eax,%edx
 8054e59:	d3 e0                	shl    %cl,%eax
 8054e5b:	f6 c1 20             	test   $0x20,%cl
 8054e5e:	74 04                	je     8054e64 <strconv__mul_shift_32+0x8f>
 8054e60:	89 c2                	mov    %eax,%edx
 8054e62:	31 c0                	xor    %eax,%eax
 8054e64:	01 d8                	add    %ebx,%eax
 8054e66:	11 f2                	adc    %esi,%edx
 8054e68:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8054e6b:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8054e6e:	c7 45 d8 bc 98 06 08 	movl   $0x80698bc,-0x28(%ebp)
 8054e75:	c7 45 dc 1a 00 00 00 	movl   $0x1a,-0x24(%ebp)
 8054e7c:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 8054e83:	b8 01 00 00 00       	mov    $0x1,%eax
 8054e88:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 8054e8c:	72 14                	jb     8054ea2 <strconv__mul_shift_32+0xcd>
 8054e8e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 8054e92:	77 09                	ja     8054e9d <strconv__mul_shift_32+0xc8>
 8054e94:	81 7d d0 ff ff ff 7f 	cmpl   $0x7fffffff,-0x30(%ebp)
 8054e9b:	76 05                	jbe    8054ea2 <strconv__mul_shift_32+0xcd>
 8054e9d:	b8 00 00 00 00       	mov    $0x0,%eax
 8054ea2:	0f b6 c0             	movzbl %al,%eax
 8054ea5:	ff 75 e0             	pushl  -0x20(%ebp)
 8054ea8:	ff 75 dc             	pushl  -0x24(%ebp)
 8054eab:	ff 75 d8             	pushl  -0x28(%ebp)
 8054eae:	50                   	push   %eax
 8054eaf:	e8 36 fd ff ff       	call   8054bea <strconv__assert1>
 8054eb4:	83 c4 10             	add    $0x10,%esp
 8054eb7:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8054eba:	8b 75 f4             	mov    -0xc(%ebp),%esi
 8054ebd:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
 8054ec4:	74 05                	je     8054ecb <strconv__mul_shift_32+0xf6>
 8054ec6:	e8 55 39 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8054ecb:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8054ece:	5b                   	pop    %ebx
 8054ecf:	5e                   	pop    %esi
 8054ed0:	5d                   	pop    %ebp
 8054ed1:	c3                   	ret    

08054ed2 <strconv__mul_pow5_invdiv_pow2>:
 8054ed2:	55                   	push   %ebp
 8054ed3:	89 e5                	mov    %esp,%ebp
 8054ed5:	83 ec 08             	sub    $0x8,%esp
 8054ed8:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054edb:	83 ec 0c             	sub    $0xc,%esp
 8054ede:	50                   	push   %eax
 8054edf:	ff 35 e8 30 07 08    	pushl  0x80730e8
 8054ee5:	ff 35 e4 30 07 08    	pushl  0x80730e4
 8054eeb:	ff 35 e0 30 07 08    	pushl  0x80730e0
 8054ef1:	ff 35 dc 30 07 08    	pushl  0x80730dc
 8054ef7:	e8 be 13 00 00       	call   80562ba <array_get>
 8054efc:	83 c4 20             	add    $0x20,%esp
 8054eff:	8b 50 04             	mov    0x4(%eax),%edx
 8054f02:	8b 00                	mov    (%eax),%eax
 8054f04:	ff 75 10             	pushl  0x10(%ebp)
 8054f07:	52                   	push   %edx
 8054f08:	50                   	push   %eax
 8054f09:	ff 75 08             	pushl  0x8(%ebp)
 8054f0c:	e8 c4 fe ff ff       	call   8054dd5 <strconv__mul_shift_32>
 8054f11:	83 c4 10             	add    $0x10,%esp
 8054f14:	c9                   	leave  
 8054f15:	c3                   	ret    

08054f16 <strconv__mul_pow5_div_pow2>:
 8054f16:	55                   	push   %ebp
 8054f17:	89 e5                	mov    %esp,%ebp
 8054f19:	83 ec 08             	sub    $0x8,%esp
 8054f1c:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054f1f:	83 ec 0c             	sub    $0xc,%esp
 8054f22:	50                   	push   %eax
 8054f23:	ff 35 1c 32 07 08    	pushl  0x807321c
 8054f29:	ff 35 18 32 07 08    	pushl  0x8073218
 8054f2f:	ff 35 14 32 07 08    	pushl  0x8073214
 8054f35:	ff 35 10 32 07 08    	pushl  0x8073210
 8054f3b:	e8 7a 13 00 00       	call   80562ba <array_get>
 8054f40:	83 c4 20             	add    $0x20,%esp
 8054f43:	8b 50 04             	mov    0x4(%eax),%edx
 8054f46:	8b 00                	mov    (%eax),%eax
 8054f48:	ff 75 10             	pushl  0x10(%ebp)
 8054f4b:	52                   	push   %edx
 8054f4c:	50                   	push   %eax
 8054f4d:	ff 75 08             	pushl  0x8(%ebp)
 8054f50:	e8 80 fe ff ff       	call   8054dd5 <strconv__mul_shift_32>
 8054f55:	83 c4 10             	add    $0x10,%esp
 8054f58:	c9                   	leave  
 8054f59:	c3                   	ret    

08054f5a <strconv__pow5_factor_32>:
 8054f5a:	55                   	push   %ebp
 8054f5b:	89 e5                	mov    %esp,%ebp
 8054f5d:	83 ec 10             	sub    $0x10,%esp
 8054f60:	8b 45 08             	mov    0x8(%ebp),%eax
 8054f63:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8054f66:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8054f6d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8054f70:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8054f75:	f7 e2                	mul    %edx
 8054f77:	89 d0                	mov    %edx,%eax
 8054f79:	c1 e8 02             	shr    $0x2,%eax
 8054f7c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8054f7f:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8054f82:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 8054f87:	89 c8                	mov    %ecx,%eax
 8054f89:	f7 e2                	mul    %edx
 8054f8b:	c1 ea 02             	shr    $0x2,%edx
 8054f8e:	89 d0                	mov    %edx,%eax
 8054f90:	c1 e0 02             	shl    $0x2,%eax
 8054f93:	01 d0                	add    %edx,%eax
 8054f95:	29 c1                	sub    %eax,%ecx
 8054f97:	89 c8                	mov    %ecx,%eax
 8054f99:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8054f9c:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 8054fa0:	74 05                	je     8054fa7 <strconv__pow5_factor_32+0x4d>
 8054fa2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8054fa5:	eb 0c                	jmp    8054fb3 <strconv__pow5_factor_32+0x59>
 8054fa7:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8054faa:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8054fad:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8054fb1:	eb ba                	jmp    8054f6d <strconv__pow5_factor_32+0x13>
 8054fb3:	c9                   	leave  
 8054fb4:	c3                   	ret    

08054fb5 <strconv__multiple_of_power_of_five_32>:
 8054fb5:	55                   	push   %ebp
 8054fb6:	89 e5                	mov    %esp,%ebp
 8054fb8:	ff 75 08             	pushl  0x8(%ebp)
 8054fbb:	e8 9a ff ff ff       	call   8054f5a <strconv__pow5_factor_32>
 8054fc0:	83 c4 04             	add    $0x4,%esp
 8054fc3:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8054fc6:	0f 93 c0             	setae  %al
 8054fc9:	0f b6 c0             	movzbl %al,%eax
 8054fcc:	c9                   	leave  
 8054fcd:	c3                   	ret    

08054fce <strconv__multiple_of_power_of_two_32>:
 8054fce:	55                   	push   %ebp
 8054fcf:	89 e5                	mov    %esp,%ebp
 8054fd1:	83 ec 08             	sub    $0x8,%esp
 8054fd4:	83 ec 0c             	sub    $0xc,%esp
 8054fd7:	ff 75 08             	pushl  0x8(%ebp)
 8054fda:	e8 ac 6c ff ff       	call   804bc8b <math__bits__trailing_zeros_32>
 8054fdf:	83 c4 10             	add    $0x10,%esp
 8054fe2:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8054fe5:	0f 93 c0             	setae  %al
 8054fe8:	0f b6 c0             	movzbl %al,%eax
 8054feb:	c9                   	leave  
 8054fec:	c3                   	ret    

08054fed <strconv__log10_pow2>:
 8054fed:	55                   	push   %ebp
 8054fee:	89 e5                	mov    %esp,%ebp
 8054ff0:	83 ec 28             	sub    $0x28,%esp
 8054ff3:	c7 45 e0 d7 98 06 08 	movl   $0x80698d7,-0x20(%ebp)
 8054ffa:	c7 45 e4 06 00 00 00 	movl   $0x6,-0x1c(%ebp)
 8055001:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 8055008:	8b 45 08             	mov    0x8(%ebp),%eax
 805500b:	f7 d0                	not    %eax
 805500d:	c1 e8 1f             	shr    $0x1f,%eax
 8055010:	0f b6 c0             	movzbl %al,%eax
 8055013:	ff 75 e8             	pushl  -0x18(%ebp)
 8055016:	ff 75 e4             	pushl  -0x1c(%ebp)
 8055019:	ff 75 e0             	pushl  -0x20(%ebp)
 805501c:	50                   	push   %eax
 805501d:	e8 c8 fb ff ff       	call   8054bea <strconv__assert1>
 8055022:	83 c4 10             	add    $0x10,%esp
 8055025:	c7 45 ec de 98 06 08 	movl   $0x80698de,-0x14(%ebp)
 805502c:	c7 45 f0 09 00 00 00 	movl   $0x9,-0x10(%ebp)
 8055033:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805503a:	81 7d 08 72 06 00 00 	cmpl   $0x672,0x8(%ebp)
 8055041:	0f 9e c0             	setle  %al
 8055044:	0f b6 c0             	movzbl %al,%eax
 8055047:	ff 75 f4             	pushl  -0xc(%ebp)
 805504a:	ff 75 f0             	pushl  -0x10(%ebp)
 805504d:	ff 75 ec             	pushl  -0x14(%ebp)
 8055050:	50                   	push   %eax
 8055051:	e8 94 fb ff ff       	call   8054bea <strconv__assert1>
 8055056:	83 c4 10             	add    $0x10,%esp
 8055059:	8b 45 08             	mov    0x8(%ebp),%eax
 805505c:	69 c0 41 34 01 00    	imul   $0x13441,%eax,%eax
 8055062:	c1 e8 12             	shr    $0x12,%eax
 8055065:	c9                   	leave  
 8055066:	c3                   	ret    

08055067 <strconv__log10_pow5>:
 8055067:	55                   	push   %ebp
 8055068:	89 e5                	mov    %esp,%ebp
 805506a:	83 ec 28             	sub    $0x28,%esp
 805506d:	c7 45 e0 d7 98 06 08 	movl   $0x80698d7,-0x20(%ebp)
 8055074:	c7 45 e4 06 00 00 00 	movl   $0x6,-0x1c(%ebp)
 805507b:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 8055082:	8b 45 08             	mov    0x8(%ebp),%eax
 8055085:	f7 d0                	not    %eax
 8055087:	c1 e8 1f             	shr    $0x1f,%eax
 805508a:	0f b6 c0             	movzbl %al,%eax
 805508d:	ff 75 e8             	pushl  -0x18(%ebp)
 8055090:	ff 75 e4             	pushl  -0x1c(%ebp)
 8055093:	ff 75 e0             	pushl  -0x20(%ebp)
 8055096:	50                   	push   %eax
 8055097:	e8 4e fb ff ff       	call   8054bea <strconv__assert1>
 805509c:	83 c4 10             	add    $0x10,%esp
 805509f:	c7 45 ec e8 98 06 08 	movl   $0x80698e8,-0x14(%ebp)
 80550a6:	c7 45 f0 09 00 00 00 	movl   $0x9,-0x10(%ebp)
 80550ad:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 80550b4:	81 7d 08 3c 0a 00 00 	cmpl   $0xa3c,0x8(%ebp)
 80550bb:	0f 9e c0             	setle  %al
 80550be:	0f b6 c0             	movzbl %al,%eax
 80550c1:	ff 75 f4             	pushl  -0xc(%ebp)
 80550c4:	ff 75 f0             	pushl  -0x10(%ebp)
 80550c7:	ff 75 ec             	pushl  -0x14(%ebp)
 80550ca:	50                   	push   %eax
 80550cb:	e8 1a fb ff ff       	call   8054bea <strconv__assert1>
 80550d0:	83 c4 10             	add    $0x10,%esp
 80550d3:	8b 45 08             	mov    0x8(%ebp),%eax
 80550d6:	69 c0 fb 2e 0b 00    	imul   $0xb2efb,%eax,%eax
 80550dc:	c1 e8 14             	shr    $0x14,%eax
 80550df:	c9                   	leave  
 80550e0:	c3                   	ret    

080550e1 <strconv__pow5_bits>:
 80550e1:	55                   	push   %ebp
 80550e2:	89 e5                	mov    %esp,%ebp
 80550e4:	83 ec 28             	sub    $0x28,%esp
 80550e7:	c7 45 e0 d7 98 06 08 	movl   $0x80698d7,-0x20(%ebp)
 80550ee:	c7 45 e4 06 00 00 00 	movl   $0x6,-0x1c(%ebp)
 80550f5:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 80550fc:	8b 45 08             	mov    0x8(%ebp),%eax
 80550ff:	f7 d0                	not    %eax
 8055101:	c1 e8 1f             	shr    $0x1f,%eax
 8055104:	0f b6 c0             	movzbl %al,%eax
 8055107:	ff 75 e8             	pushl  -0x18(%ebp)
 805510a:	ff 75 e4             	pushl  -0x1c(%ebp)
 805510d:	ff 75 e0             	pushl  -0x20(%ebp)
 8055110:	50                   	push   %eax
 8055111:	e8 d4 fa ff ff       	call   8054bea <strconv__assert1>
 8055116:	83 c4 10             	add    $0x10,%esp
 8055119:	c7 45 ec f2 98 06 08 	movl   $0x80698f2,-0x14(%ebp)
 8055120:	c7 45 f0 09 00 00 00 	movl   $0x9,-0x10(%ebp)
 8055127:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805512e:	81 7d 08 c8 0d 00 00 	cmpl   $0xdc8,0x8(%ebp)
 8055135:	0f 9e c0             	setle  %al
 8055138:	0f b6 c0             	movzbl %al,%eax
 805513b:	ff 75 f4             	pushl  -0xc(%ebp)
 805513e:	ff 75 f0             	pushl  -0x10(%ebp)
 8055141:	ff 75 ec             	pushl  -0x14(%ebp)
 8055144:	50                   	push   %eax
 8055145:	e8 a0 fa ff ff       	call   8054bea <strconv__assert1>
 805514a:	83 c4 10             	add    $0x10,%esp
 805514d:	8b 45 08             	mov    0x8(%ebp),%eax
 8055150:	69 c0 4f 93 12 00    	imul   $0x12934f,%eax,%eax
 8055156:	c1 e8 13             	shr    $0x13,%eax
 8055159:	83 c0 01             	add    $0x1,%eax
 805515c:	c9                   	leave  
 805515d:	c3                   	ret    

0805515e <strconv__decimal_len_64>:
 805515e:	55                   	push   %ebp
 805515f:	89 e5                	mov    %esp,%ebp
 8055161:	83 ec 28             	sub    $0x28,%esp
 8055164:	8b 45 08             	mov    0x8(%ebp),%eax
 8055167:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805516a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805516d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8055170:	83 ec 08             	sub    $0x8,%esp
 8055173:	ff 75 e4             	pushl  -0x1c(%ebp)
 8055176:	ff 75 e0             	pushl  -0x20(%ebp)
 8055179:	e8 43 6a ff ff       	call   804bbc1 <math__bits__leading_zeros_64>
 805517e:	83 c4 10             	add    $0x10,%esp
 8055181:	ba 3f 00 00 00       	mov    $0x3f,%edx
 8055186:	29 c2                	sub    %eax,%edx
 8055188:	89 d0                	mov    %edx,%eax
 805518a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805518d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8055190:	83 c0 01             	add    $0x1,%eax
 8055193:	69 c0 d1 04 00 00    	imul   $0x4d1,%eax,%eax
 8055199:	c1 f8 0c             	sar    $0xc,%eax
 805519c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805519f:	83 ec 0c             	sub    $0xc,%esp
 80551a2:	ff 75 f4             	pushl  -0xc(%ebp)
 80551a5:	ff 35 a0 32 07 08    	pushl  0x80732a0
 80551ab:	ff 35 9c 32 07 08    	pushl  0x807329c
 80551b1:	ff 35 98 32 07 08    	pushl  0x8073298
 80551b7:	ff 35 94 32 07 08    	pushl  0x8073294
 80551bd:	e8 f8 10 00 00       	call   80562ba <array_get>
 80551c2:	83 c4 20             	add    $0x20,%esp
 80551c5:	8b 50 04             	mov    0x4(%eax),%edx
 80551c8:	8b 00                	mov    (%eax),%eax
 80551ca:	b9 01 00 00 00       	mov    $0x1,%ecx
 80551cf:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 80551d2:	77 0f                	ja     80551e3 <strconv__decimal_len_64+0x85>
 80551d4:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
 80551d7:	72 05                	jb     80551de <strconv__decimal_len_64+0x80>
 80551d9:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 80551dc:	77 05                	ja     80551e3 <strconv__decimal_len_64+0x85>
 80551de:	b9 00 00 00 00       	mov    $0x0,%ecx
 80551e3:	0f b6 c1             	movzbl %cl,%eax
 80551e6:	83 ec 0c             	sub    $0xc,%esp
 80551e9:	50                   	push   %eax
 80551ea:	e8 1e fa ff ff       	call   8054c0d <strconv__bool_to_int>
 80551ef:	83 c4 10             	add    $0x10,%esp
 80551f2:	89 c2                	mov    %eax,%edx
 80551f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80551f7:	29 d0                	sub    %edx,%eax
 80551f9:	83 c0 01             	add    $0x1,%eax
 80551fc:	c9                   	leave  
 80551fd:	c3                   	ret    

080551fe <strconv__shift_right_128>:
 80551fe:	55                   	push   %ebp
 80551ff:	89 e5                	mov    %esp,%ebp
 8055201:	56                   	push   %esi
 8055202:	53                   	push   %ebx
 8055203:	83 ec 20             	sub    $0x20,%esp
 8055206:	c7 45 ec fc 98 06 08 	movl   $0x80698fc,-0x14(%ebp)
 805520d:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
 8055214:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805521b:	83 7d 18 3f          	cmpl   $0x3f,0x18(%ebp)
 805521f:	0f 9e c0             	setle  %al
 8055222:	0f b6 c0             	movzbl %al,%eax
 8055225:	ff 75 f4             	pushl  -0xc(%ebp)
 8055228:	ff 75 f0             	pushl  -0x10(%ebp)
 805522b:	ff 75 ec             	pushl  -0x14(%ebp)
 805522e:	50                   	push   %eax
 805522f:	e8 b6 f9 ff ff       	call   8054bea <strconv__assert1>
 8055234:	83 c4 10             	add    $0x10,%esp
 8055237:	8b 45 10             	mov    0x10(%ebp),%eax
 805523a:	8b 55 14             	mov    0x14(%ebp),%edx
 805523d:	b9 40 00 00 00       	mov    $0x40,%ecx
 8055242:	2b 4d 18             	sub    0x18(%ebp),%ecx
 8055245:	0f a5 c2             	shld   %cl,%eax,%edx
 8055248:	d3 e0                	shl    %cl,%eax
 805524a:	f6 c1 20             	test   $0x20,%cl
 805524d:	74 04                	je     8055253 <strconv__shift_right_128+0x55>
 805524f:	89 c2                	mov    %eax,%edx
 8055251:	31 c0                	xor    %eax,%eax
 8055253:	89 c3                	mov    %eax,%ebx
 8055255:	89 d6                	mov    %edx,%esi
 8055257:	8b 45 08             	mov    0x8(%ebp),%eax
 805525a:	8b 55 0c             	mov    0xc(%ebp),%edx
 805525d:	8b 4d 18             	mov    0x18(%ebp),%ecx
 8055260:	0f ad d0             	shrd   %cl,%edx,%eax
 8055263:	d3 ea                	shr    %cl,%edx
 8055265:	f6 c1 20             	test   $0x20,%cl
 8055268:	74 04                	je     805526e <strconv__shift_right_128+0x70>
 805526a:	89 d0                	mov    %edx,%eax
 805526c:	31 d2                	xor    %edx,%edx
 805526e:	89 d9                	mov    %ebx,%ecx
 8055270:	09 c1                	or     %eax,%ecx
 8055272:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 8055275:	09 d6                	or     %edx,%esi
 8055277:	89 75 e4             	mov    %esi,-0x1c(%ebp)
 805527a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805527d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8055280:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8055283:	5b                   	pop    %ebx
 8055284:	5e                   	pop    %esi
 8055285:	5d                   	pop    %ebp
 8055286:	c3                   	ret    

08055287 <strconv__mul_shift_64>:
 8055287:	55                   	push   %ebp
 8055288:	89 e5                	mov    %esp,%ebp
 805528a:	53                   	push   %ebx
 805528b:	83 ec 64             	sub    $0x64,%esp
 805528e:	8b 45 08             	mov    0x8(%ebp),%eax
 8055291:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8055294:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055297:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 805529a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80552a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80552a3:	31 c0                	xor    %eax,%eax
 80552a5:	8b 45 18             	mov    0x18(%ebp),%eax
 80552a8:	8b 55 1c             	mov    0x1c(%ebp),%edx
 80552ab:	8d 4d c4             	lea    -0x3c(%ebp),%ecx
 80552ae:	83 ec 04             	sub    $0x4,%esp
 80552b1:	52                   	push   %edx
 80552b2:	50                   	push   %eax
 80552b3:	ff 75 a4             	pushl  -0x5c(%ebp)
 80552b6:	ff 75 a0             	pushl  -0x60(%ebp)
 80552b9:	51                   	push   %ecx
 80552ba:	e8 45 7c ff ff       	call   804cf04 <math__bits__mul_64>
 80552bf:	83 c4 14             	add    $0x14,%esp
 80552c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80552c5:	8b 55 c8             	mov    -0x38(%ebp),%edx
 80552c8:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80552cb:	89 55 ac             	mov    %edx,-0x54(%ebp)
 80552ce:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80552d1:	8b 55 d0             	mov    -0x30(%ebp),%edx
 80552d4:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80552d7:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 80552da:	8b 45 10             	mov    0x10(%ebp),%eax
 80552dd:	8b 55 14             	mov    0x14(%ebp),%edx
 80552e0:	8d 4d d4             	lea    -0x2c(%ebp),%ecx
 80552e3:	83 ec 04             	sub    $0x4,%esp
 80552e6:	52                   	push   %edx
 80552e7:	50                   	push   %eax
 80552e8:	ff 75 a4             	pushl  -0x5c(%ebp)
 80552eb:	ff 75 a0             	pushl  -0x60(%ebp)
 80552ee:	51                   	push   %ecx
 80552ef:	e8 10 7c ff ff       	call   804cf04 <math__bits__mul_64>
 80552f4:	83 c4 14             	add    $0x14,%esp
 80552f7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80552fa:	8b 55 d8             	mov    -0x28(%ebp),%edx
 80552fd:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8055300:	89 55 bc             	mov    %edx,-0x44(%ebp)
 8055303:	8b 4d b8             	mov    -0x48(%ebp),%ecx
 8055306:	8b 5d bc             	mov    -0x44(%ebp),%ebx
 8055309:	8b 45 b0             	mov    -0x50(%ebp),%eax
 805530c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 805530f:	01 c8                	add    %ecx,%eax
 8055311:	11 da                	adc    %ebx,%edx
 8055313:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8055316:	89 55 e8             	mov    %edx,-0x18(%ebp)
 8055319:	8b 45 a8             	mov    -0x58(%ebp),%eax
 805531c:	8b 55 ac             	mov    -0x54(%ebp),%edx
 805531f:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8055322:	89 55 f0             	mov    %edx,-0x10(%ebp)
 8055325:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055328:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805532b:	3b 55 bc             	cmp    -0x44(%ebp),%edx
 805532e:	77 1c                	ja     805534c <strconv__mul_shift_64+0xc5>
 8055330:	3b 55 bc             	cmp    -0x44(%ebp),%edx
 8055333:	72 05                	jb     805533a <strconv__mul_shift_64+0xb3>
 8055335:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 8055338:	73 12                	jae    805534c <strconv__mul_shift_64+0xc5>
 805533a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805533d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8055340:	83 c0 01             	add    $0x1,%eax
 8055343:	83 d2 00             	adc    $0x0,%edx
 8055346:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8055349:	89 55 f0             	mov    %edx,-0x10(%ebp)
 805534c:	8b 45 20             	mov    0x20(%ebp),%eax
 805534f:	83 e8 40             	sub    $0x40,%eax
 8055352:	83 ec 0c             	sub    $0xc,%esp
 8055355:	50                   	push   %eax
 8055356:	ff 75 f0             	pushl  -0x10(%ebp)
 8055359:	ff 75 ec             	pushl  -0x14(%ebp)
 805535c:	ff 75 e8             	pushl  -0x18(%ebp)
 805535f:	ff 75 e4             	pushl  -0x1c(%ebp)
 8055362:	e8 97 fe ff ff       	call   80551fe <strconv__shift_right_128>
 8055367:	83 c4 20             	add    $0x20,%esp
 805536a:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 805536d:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 8055374:	74 05                	je     805537b <strconv__mul_shift_64+0xf4>
 8055376:	e8 a5 34 ff ff       	call   8048820 <__stack_chk_fail@plt>
 805537b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805537e:	c9                   	leave  
 805537f:	c3                   	ret    

08055380 <strconv__pow5_factor_64>:
 8055380:	55                   	push   %ebp
 8055381:	89 e5                	mov    %esp,%ebp
 8055383:	83 ec 38             	sub    $0x38,%esp
 8055386:	8b 45 08             	mov    0x8(%ebp),%eax
 8055389:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805538c:	8b 45 0c             	mov    0xc(%ebp),%eax
 805538f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8055392:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8055395:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055398:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805539b:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 805539e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 80553a5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80553a8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80553ab:	6a 00                	push   $0x0
 80553ad:	6a 05                	push   $0x5
 80553af:	52                   	push   %edx
 80553b0:	50                   	push   %eax
 80553b1:	e8 3a 3f 01 00       	call   80692f0 <__udivdi3>
 80553b6:	83 c4 10             	add    $0x10,%esp
 80553b9:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80553bc:	89 55 ec             	mov    %edx,-0x14(%ebp)
 80553bf:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80553c2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80553c5:	6a 00                	push   $0x0
 80553c7:	6a 05                	push   $0x5
 80553c9:	52                   	push   %edx
 80553ca:	50                   	push   %eax
 80553cb:	e8 50 40 01 00       	call   8069420 <__umoddi3>
 80553d0:	83 c4 10             	add    $0x10,%esp
 80553d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80553d6:	89 55 f4             	mov    %edx,-0xc(%ebp)
 80553d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80553dc:	0b 45 f0             	or     -0x10(%ebp),%eax
 80553df:	85 c0                	test   %eax,%eax
 80553e1:	74 05                	je     80553e8 <strconv__pow5_factor_64+0x68>
 80553e3:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80553e6:	eb 12                	jmp    80553fa <strconv__pow5_factor_64+0x7a>
 80553e8:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80553eb:	8b 55 ec             	mov    -0x14(%ebp),%edx
 80553ee:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80553f1:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 80553f4:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 80553f8:	eb ab                	jmp    80553a5 <strconv__pow5_factor_64+0x25>
 80553fa:	c9                   	leave  
 80553fb:	c3                   	ret    

080553fc <strconv__multiple_of_power_of_five_64>:
 80553fc:	55                   	push   %ebp
 80553fd:	89 e5                	mov    %esp,%ebp
 80553ff:	83 ec 18             	sub    $0x18,%esp
 8055402:	8b 45 08             	mov    0x8(%ebp),%eax
 8055405:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055408:	8b 45 0c             	mov    0xc(%ebp),%eax
 805540b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805540e:	83 ec 08             	sub    $0x8,%esp
 8055411:	ff 75 f4             	pushl  -0xc(%ebp)
 8055414:	ff 75 f0             	pushl  -0x10(%ebp)
 8055417:	e8 64 ff ff ff       	call   8055380 <strconv__pow5_factor_64>
 805541c:	83 c4 10             	add    $0x10,%esp
 805541f:	3b 45 10             	cmp    0x10(%ebp),%eax
 8055422:	0f 93 c0             	setae  %al
 8055425:	0f b6 c0             	movzbl %al,%eax
 8055428:	c9                   	leave  
 8055429:	c3                   	ret    

0805542a <strconv__multiple_of_power_of_two_64>:
 805542a:	55                   	push   %ebp
 805542b:	89 e5                	mov    %esp,%ebp
 805542d:	83 ec 18             	sub    $0x18,%esp
 8055430:	8b 45 08             	mov    0x8(%ebp),%eax
 8055433:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055436:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055439:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805543c:	83 ec 08             	sub    $0x8,%esp
 805543f:	ff 75 f4             	pushl  -0xc(%ebp)
 8055442:	ff 75 f0             	pushl  -0x10(%ebp)
 8055445:	e8 95 68 ff ff       	call   804bcdf <math__bits__trailing_zeros_64>
 805544a:	83 c4 10             	add    $0x10,%esp
 805544d:	3b 45 10             	cmp    0x10(%ebp),%eax
 8055450:	0f 93 c0             	setae  %al
 8055453:	0f b6 c0             	movzbl %al,%eax
 8055456:	c9                   	leave  
 8055457:	c3                   	ret    

08055458 <strconv__f32_to_str_l>:
 8055458:	55                   	push   %ebp
 8055459:	89 e5                	mov    %esp,%ebp
 805545b:	83 ec 28             	sub    $0x28,%esp
 805545e:	8b 45 08             	mov    0x8(%ebp),%eax
 8055461:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8055464:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055467:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805546a:	8b 45 10             	mov    0x10(%ebp),%eax
 805546d:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8055470:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8055476:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055479:	31 c0                	xor    %eax,%eax
 805547b:	dd 45 d8             	fldl   -0x28(%ebp)
 805547e:	d9 5d e0             	fstps  -0x20(%ebp)
 8055481:	d9 45 e0             	flds   -0x20(%ebp)
 8055484:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055487:	83 ec 04             	sub    $0x4,%esp
 805548a:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 805548e:	dd 1c 24             	fstpl  (%esp)
 8055491:	50                   	push   %eax
 8055492:	e8 1b 00 00 00       	call   80554b2 <strconv__f64_to_str_l>
 8055497:	83 c4 0c             	add    $0xc,%esp
 805549a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805549d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80554a0:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80554a7:	74 05                	je     80554ae <strconv__f32_to_str_l+0x56>
 80554a9:	e8 72 33 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80554ae:	c9                   	leave  
 80554af:	c2 04 00             	ret    $0x4

080554b2 <strconv__f64_to_str_l>:
 80554b2:	55                   	push   %ebp
 80554b3:	89 e5                	mov    %esp,%ebp
 80554b5:	53                   	push   %ebx
 80554b6:	81 ec a4 00 00 00    	sub    $0xa4,%esp
 80554bc:	8b 45 08             	mov    0x8(%ebp),%eax
 80554bf:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 80554c5:	8b 45 0c             	mov    0xc(%ebp),%eax
 80554c8:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 80554ce:	8b 45 10             	mov    0x10(%ebp),%eax
 80554d1:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 80554d7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80554dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80554e0:	31 c0                	xor    %eax,%eax
 80554e2:	8d 45 9c             	lea    -0x64(%ebp),%eax
 80554e5:	6a 12                	push   $0x12
 80554e7:	ff b5 5c ff ff ff    	pushl  -0xa4(%ebp)
 80554ed:	ff b5 58 ff ff ff    	pushl  -0xa8(%ebp)
 80554f3:	50                   	push   %eax
 80554f4:	e8 c6 c4 ff ff       	call   80519bf <strconv__f64_to_str>
 80554f9:	83 c4 0c             	add    $0xc,%esp
 80554fc:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80554ff:	83 f8 02             	cmp    $0x2,%eax
 8055502:	7e 4a                	jle    805554e <strconv__f64_to_str_l+0x9c>
 8055504:	6a 00                	push   $0x0
 8055506:	ff 75 a4             	pushl  -0x5c(%ebp)
 8055509:	ff 75 a0             	pushl  -0x60(%ebp)
 805550c:	ff 75 9c             	pushl  -0x64(%ebp)
 805550f:	e8 26 b4 00 00       	call   806093a <string_at>
 8055514:	83 c4 10             	add    $0x10,%esp
 8055517:	3c 6e                	cmp    $0x6e,%al
 8055519:	74 17                	je     8055532 <strconv__f64_to_str_l+0x80>
 805551b:	6a 01                	push   $0x1
 805551d:	ff 75 a4             	pushl  -0x5c(%ebp)
 8055520:	ff 75 a0             	pushl  -0x60(%ebp)
 8055523:	ff 75 9c             	pushl  -0x64(%ebp)
 8055526:	e8 0f b4 00 00       	call   806093a <string_at>
 805552b:	83 c4 10             	add    $0x10,%esp
 805552e:	3c 69                	cmp    $0x69,%al
 8055530:	75 1c                	jne    805554e <strconv__f64_to_str_l+0x9c>
 8055532:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8055538:	8b 55 9c             	mov    -0x64(%ebp),%edx
 805553b:	89 10                	mov    %edx,(%eax)
 805553d:	8b 55 a0             	mov    -0x60(%ebp),%edx
 8055540:	89 50 04             	mov    %edx,0x4(%eax)
 8055543:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 8055546:	89 50 08             	mov    %edx,0x8(%eax)
 8055549:	e9 a1 04 00 00       	jmp    80559ef <strconv__f64_to_str_l+0x53d>
 805554e:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
 8055555:	c7 85 70 ff ff ff 01 	movl   $0x1,-0x90(%ebp)
 805555c:	00 00 00 
 805555f:	8d 45 da             	lea    -0x26(%ebp),%eax
 8055562:	b9 1a 00 00 00       	mov    $0x1a,%ecx
 8055567:	bb 00 00 00 00       	mov    $0x0,%ebx
 805556c:	89 18                	mov    %ebx,(%eax)
 805556e:	89 5c 08 fc          	mov    %ebx,-0x4(%eax,%ecx,1)
 8055572:	8d 50 04             	lea    0x4(%eax),%edx
 8055575:	83 e2 fc             	and    $0xfffffffc,%edx
 8055578:	29 d0                	sub    %edx,%eax
 805557a:	01 c1                	add    %eax,%ecx
 805557c:	83 e1 fc             	and    $0xfffffffc,%ecx
 805557f:	83 e1 fc             	and    $0xfffffffc,%ecx
 8055582:	b8 00 00 00 00       	mov    $0x0,%eax
 8055587:	89 1c 02             	mov    %ebx,(%edx,%eax,1)
 805558a:	83 c0 04             	add    $0x4,%eax
 805558d:	39 c8                	cmp    %ecx,%eax
 805558f:	72 f6                	jb     8055587 <strconv__f64_to_str_l+0xd5>
 8055591:	01 c2                	add    %eax,%edx
 8055593:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%ebp)
 805559a:	00 00 00 
 805559d:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%ebp)
 80555a4:	00 00 00 
 80555a7:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%ebp)
 80555ae:	00 00 00 
 80555b1:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
 80555b8:	c7 45 84 01 00 00 00 	movl   $0x1,-0x7c(%ebp)
 80555bf:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
 80555c6:	e9 fd 00 00 00       	jmp    80556c8 <strconv__f64_to_str_l+0x216>
 80555cb:	8b 55 9c             	mov    -0x64(%ebp),%edx
 80555ce:	8b 45 88             	mov    -0x78(%ebp),%eax
 80555d1:	01 d0                	add    %edx,%eax
 80555d3:	0f b6 00             	movzbl (%eax),%eax
 80555d6:	88 85 6e ff ff ff    	mov    %al,-0x92(%ebp)
 80555dc:	80 bd 6e ff ff ff 2d 	cmpb   $0x2d,-0x92(%ebp)
 80555e3:	75 16                	jne    80555fb <strconv__f64_to_str_l+0x149>
 80555e5:	c7 85 70 ff ff ff ff 	movl   $0xffffffff,-0x90(%ebp)
 80555ec:	ff ff ff 
 80555ef:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 80555f6:	e9 c9 00 00 00       	jmp    80556c4 <strconv__f64_to_str_l+0x212>
 80555fb:	80 bd 6e ff ff ff 2b 	cmpb   $0x2b,-0x92(%ebp)
 8055602:	75 16                	jne    805561a <strconv__f64_to_str_l+0x168>
 8055604:	c7 85 70 ff ff ff 01 	movl   $0x1,-0x90(%ebp)
 805560b:	00 00 00 
 805560e:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 8055615:	e9 aa 00 00 00       	jmp    80556c4 <strconv__f64_to_str_l+0x212>
 805561a:	80 bd 6e ff ff ff 2f 	cmpb   $0x2f,-0x92(%ebp)
 8055621:	76 2c                	jbe    805564f <strconv__f64_to_str_l+0x19d>
 8055623:	80 bd 6e ff ff ff 39 	cmpb   $0x39,-0x92(%ebp)
 805562a:	77 23                	ja     805564f <strconv__f64_to_str_l+0x19d>
 805562c:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8055632:	8d 50 01             	lea    0x1(%eax),%edx
 8055635:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
 805563b:	0f b6 95 6e ff ff ff 	movzbl -0x92(%ebp),%edx
 8055642:	88 54 05 da          	mov    %dl,-0x26(%ebp,%eax,1)
 8055646:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 805564d:	eb 75                	jmp    80556c4 <strconv__f64_to_str_l+0x212>
 805564f:	80 bd 6e ff ff ff 2e 	cmpb   $0x2e,-0x92(%ebp)
 8055656:	75 2f                	jne    8055687 <strconv__f64_to_str_l+0x1d5>
 8055658:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%ebp)
 805565f:	7e 0e                	jle    805566f <strconv__f64_to_str_l+0x1bd>
 8055661:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8055667:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 805566d:	eb 0f                	jmp    805567e <strconv__f64_to_str_l+0x1cc>
 805566f:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8055675:	83 e8 01             	sub    $0x1,%eax
 8055678:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 805567e:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 8055685:	eb 3d                	jmp    80556c4 <strconv__f64_to_str_l+0x212>
 8055687:	80 bd 6e ff ff ff 65 	cmpb   $0x65,-0x92(%ebp)
 805568e:	75 09                	jne    8055699 <strconv__f64_to_str_l+0x1e7>
 8055690:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 8055697:	eb 3b                	jmp    80556d4 <strconv__f64_to_str_l+0x222>
 8055699:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 805569f:	c7 00 07 99 06 08    	movl   $0x8069907,(%eax)
 80556a5:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80556ab:	c7 40 04 18 00 00 00 	movl   $0x18,0x4(%eax)
 80556b2:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80556b8:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80556bf:	e9 2b 03 00 00       	jmp    80559ef <strconv__f64_to_str_l+0x53d>
 80556c4:	83 45 88 01          	addl   $0x1,-0x78(%ebp)
 80556c8:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80556cb:	3b 45 88             	cmp    -0x78(%ebp),%eax
 80556ce:	0f 8f f7 fe ff ff    	jg     80555cb <strconv__f64_to_str_l+0x119>
 80556d4:	8d 55 da             	lea    -0x26(%ebp),%edx
 80556d7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 80556dd:	01 d0                	add    %edx,%eax
 80556df:	c6 00 00             	movb   $0x0,(%eax)
 80556e2:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 80556e8:	ff 75 a4             	pushl  -0x5c(%ebp)
 80556eb:	ff 75 a0             	pushl  -0x60(%ebp)
 80556ee:	ff 75 9c             	pushl  -0x64(%ebp)
 80556f1:	e8 44 b2 00 00       	call   806093a <string_at>
 80556f6:	83 c4 10             	add    $0x10,%esp
 80556f9:	3c 2d                	cmp    $0x2d,%al
 80556fb:	75 10                	jne    805570d <strconv__f64_to_str_l+0x25b>
 80556fd:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
 8055704:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 805570b:	eb 29                	jmp    8055736 <strconv__f64_to_str_l+0x284>
 805570d:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 8055713:	ff 75 a4             	pushl  -0x5c(%ebp)
 8055716:	ff 75 a0             	pushl  -0x60(%ebp)
 8055719:	ff 75 9c             	pushl  -0x64(%ebp)
 805571c:	e8 19 b2 00 00       	call   806093a <string_at>
 8055721:	83 c4 10             	add    $0x10,%esp
 8055724:	3c 2b                	cmp    $0x2b,%al
 8055726:	75 0e                	jne    8055736 <strconv__f64_to_str_l+0x284>
 8055728:	c7 45 84 01 00 00 00 	movl   $0x1,-0x7c(%ebp)
 805572f:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 8055736:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
 805573d:	eb 54                	jmp    8055793 <strconv__f64_to_str_l+0x2e1>
 805573f:	8b 55 a0             	mov    -0x60(%ebp),%edx
 8055742:	8d 45 a8             	lea    -0x58(%ebp),%eax
 8055745:	83 ec 08             	sub    $0x8,%esp
 8055748:	52                   	push   %edx
 8055749:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 805574f:	ff 75 a4             	pushl  -0x5c(%ebp)
 8055752:	ff 75 a0             	pushl  -0x60(%ebp)
 8055755:	ff 75 9c             	pushl  -0x64(%ebp)
 8055758:	50                   	push   %eax
 8055759:	e8 63 91 00 00       	call   805e8c1 <string_substr>
 805575e:	83 c4 1c             	add    $0x1c,%esp
 8055761:	8b 55 a8             	mov    -0x58(%ebp),%edx
 8055764:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8055767:	01 d0                	add    %edx,%eax
 8055769:	0f b6 00             	movzbl (%eax),%eax
 805576c:	88 85 6f ff ff ff    	mov    %al,-0x91(%ebp)
 8055772:	8b 55 80             	mov    -0x80(%ebp),%edx
 8055775:	89 d0                	mov    %edx,%eax
 8055777:	c1 e0 02             	shl    $0x2,%eax
 805577a:	01 d0                	add    %edx,%eax
 805577c:	01 c0                	add    %eax,%eax
 805577e:	89 c2                	mov    %eax,%edx
 8055780:	0f b6 85 6f ff ff ff 	movzbl -0x91(%ebp),%eax
 8055787:	83 e8 30             	sub    $0x30,%eax
 805578a:	01 d0                	add    %edx,%eax
 805578c:	89 45 80             	mov    %eax,-0x80(%ebp)
 805578f:	83 45 8c 01          	addl   $0x1,-0x74(%ebp)
 8055793:	8b 55 a0             	mov    -0x60(%ebp),%edx
 8055796:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 8055799:	83 ec 08             	sub    $0x8,%esp
 805579c:	52                   	push   %edx
 805579d:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 80557a3:	ff 75 a4             	pushl  -0x5c(%ebp)
 80557a6:	ff 75 a0             	pushl  -0x60(%ebp)
 80557a9:	ff 75 9c             	pushl  -0x64(%ebp)
 80557ac:	50                   	push   %eax
 80557ad:	e8 0f 91 00 00       	call   805e8c1 <string_substr>
 80557b2:	83 c4 1c             	add    $0x1c,%esp
 80557b5:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80557b8:	3b 45 8c             	cmp    -0x74(%ebp),%eax
 80557bb:	7f 82                	jg     805573f <strconv__f64_to_str_l+0x28d>
 80557bd:	c6 45 d0 00          	movb   $0x0,-0x30(%ebp)
 80557c1:	8b 45 80             	mov    -0x80(%ebp),%eax
 80557c4:	8d 48 20             	lea    0x20(%eax),%ecx
 80557c7:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80557ca:	83 ec 0c             	sub    $0xc,%esp
 80557cd:	8d 55 d0             	lea    -0x30(%ebp),%edx
 80557d0:	52                   	push   %edx
 80557d1:	6a 01                	push   $0x1
 80557d3:	6a 00                	push   $0x0
 80557d5:	51                   	push   %ecx
 80557d6:	50                   	push   %eax
 80557d7:	e8 8d 02 00 00       	call   8055a69 <__new_array_with_default>
 80557dc:	83 c4 1c             	add    $0x1c,%esp
 80557df:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
 80557e6:	83 bd 70 ff ff ff 01 	cmpl   $0x1,-0x90(%ebp)
 80557ed:	75 29                	jne    8055818 <strconv__f64_to_str_l+0x366>
 80557ef:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)
 80557f3:	74 44                	je     8055839 <strconv__f64_to_str_l+0x387>
 80557f5:	c6 45 d1 2b          	movb   $0x2b,-0x2f(%ebp)
 80557f9:	8b 45 90             	mov    -0x70(%ebp),%eax
 80557fc:	8d 50 01             	lea    0x1(%eax),%edx
 80557ff:	89 55 90             	mov    %edx,-0x70(%ebp)
 8055802:	83 ec 04             	sub    $0x4,%esp
 8055805:	8d 55 d1             	lea    -0x2f(%ebp),%edx
 8055808:	52                   	push   %edx
 8055809:	50                   	push   %eax
 805580a:	8d 45 c0             	lea    -0x40(%ebp),%eax
 805580d:	50                   	push   %eax
 805580e:	e8 09 11 00 00       	call   805691c <array_set>
 8055813:	83 c4 10             	add    $0x10,%esp
 8055816:	eb 21                	jmp    8055839 <strconv__f64_to_str_l+0x387>
 8055818:	c6 45 d2 2d          	movb   $0x2d,-0x2e(%ebp)
 805581c:	8b 45 90             	mov    -0x70(%ebp),%eax
 805581f:	8d 50 01             	lea    0x1(%eax),%edx
 8055822:	89 55 90             	mov    %edx,-0x70(%ebp)
 8055825:	83 ec 04             	sub    $0x4,%esp
 8055828:	8d 55 d2             	lea    -0x2e(%ebp),%edx
 805582b:	52                   	push   %edx
 805582c:	50                   	push   %eax
 805582d:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8055830:	50                   	push   %eax
 8055831:	e8 e6 10 00 00       	call   805691c <array_set>
 8055836:	83 c4 10             	add    $0x10,%esp
 8055839:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%ebp)
 8055840:	00 00 00 
 8055843:	83 7d 84 00          	cmpl   $0x0,-0x7c(%ebp)
 8055847:	0f 88 be 00 00 00    	js     805590b <strconv__f64_to_str_l+0x459>
 805584d:	8d 55 da             	lea    -0x26(%ebp),%edx
 8055850:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8055856:	01 d0                	add    %edx,%eax
 8055858:	0f b6 00             	movzbl (%eax),%eax
 805585b:	84 c0                	test   %al,%al
 805585d:	75 02                	jne    8055861 <strconv__f64_to_str_l+0x3af>
 805585f:	eb 79                	jmp    80558da <strconv__f64_to_str_l+0x428>
 8055861:	8d 55 da             	lea    -0x26(%ebp),%edx
 8055864:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 805586a:	01 d0                	add    %edx,%eax
 805586c:	0f b6 00             	movzbl (%eax),%eax
 805586f:	88 45 d3             	mov    %al,-0x2d(%ebp)
 8055872:	8b 45 90             	mov    -0x70(%ebp),%eax
 8055875:	8d 50 01             	lea    0x1(%eax),%edx
 8055878:	89 55 90             	mov    %edx,-0x70(%ebp)
 805587b:	83 ec 04             	sub    $0x4,%esp
 805587e:	8d 55 d3             	lea    -0x2d(%ebp),%edx
 8055881:	52                   	push   %edx
 8055882:	50                   	push   %eax
 8055883:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8055886:	50                   	push   %eax
 8055887:	e8 90 10 00 00       	call   805691c <array_set>
 805588c:	83 c4 10             	add    $0x10,%esp
 805588f:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 8055896:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 805589c:	3b 85 74 ff ff ff    	cmp    -0x8c(%ebp),%eax
 80558a2:	7c a9                	jl     805584d <strconv__f64_to_str_l+0x39b>
 80558a4:	83 7d 80 00          	cmpl   $0x0,-0x80(%ebp)
 80558a8:	78 a3                	js     805584d <strconv__f64_to_str_l+0x39b>
 80558aa:	83 7d 80 00          	cmpl   $0x0,-0x80(%ebp)
 80558ae:	75 21                	jne    80558d1 <strconv__f64_to_str_l+0x41f>
 80558b0:	c6 45 d4 2e          	movb   $0x2e,-0x2c(%ebp)
 80558b4:	8b 45 90             	mov    -0x70(%ebp),%eax
 80558b7:	8d 50 01             	lea    0x1(%eax),%edx
 80558ba:	89 55 90             	mov    %edx,-0x70(%ebp)
 80558bd:	83 ec 04             	sub    $0x4,%esp
 80558c0:	8d 55 d4             	lea    -0x2c(%ebp),%edx
 80558c3:	52                   	push   %edx
 80558c4:	50                   	push   %eax
 80558c5:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80558c8:	50                   	push   %eax
 80558c9:	e8 4e 10 00 00       	call   805691c <array_set>
 80558ce:	83 c4 10             	add    $0x10,%esp
 80558d1:	83 6d 80 01          	subl   $0x1,-0x80(%ebp)
 80558d5:	e9 73 ff ff ff       	jmp    805584d <strconv__f64_to_str_l+0x39b>
 80558da:	83 7d 80 00          	cmpl   $0x0,-0x80(%ebp)
 80558de:	0f 88 d4 00 00 00    	js     80559b8 <strconv__f64_to_str_l+0x506>
 80558e4:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)
 80558e8:	8b 45 90             	mov    -0x70(%ebp),%eax
 80558eb:	8d 50 01             	lea    0x1(%eax),%edx
 80558ee:	89 55 90             	mov    %edx,-0x70(%ebp)
 80558f1:	83 ec 04             	sub    $0x4,%esp
 80558f4:	8d 55 d5             	lea    -0x2b(%ebp),%edx
 80558f7:	52                   	push   %edx
 80558f8:	50                   	push   %eax
 80558f9:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80558fc:	50                   	push   %eax
 80558fd:	e8 1a 10 00 00       	call   805691c <array_set>
 8055902:	83 c4 10             	add    $0x10,%esp
 8055905:	83 6d 80 01          	subl   $0x1,-0x80(%ebp)
 8055909:	eb cf                	jmp    80558da <strconv__f64_to_str_l+0x428>
 805590b:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)
 8055912:	83 7d 80 00          	cmpl   $0x0,-0x80(%ebp)
 8055916:	7f 02                	jg     805591a <strconv__f64_to_str_l+0x468>
 8055918:	eb 55                	jmp    805596f <strconv__f64_to_str_l+0x4bd>
 805591a:	c6 45 d6 30          	movb   $0x30,-0x2a(%ebp)
 805591e:	8b 45 90             	mov    -0x70(%ebp),%eax
 8055921:	8d 50 01             	lea    0x1(%eax),%edx
 8055924:	89 55 90             	mov    %edx,-0x70(%ebp)
 8055927:	83 ec 04             	sub    $0x4,%esp
 805592a:	8d 55 d6             	lea    -0x2a(%ebp),%edx
 805592d:	52                   	push   %edx
 805592e:	50                   	push   %eax
 805592f:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8055932:	50                   	push   %eax
 8055933:	e8 e4 0f 00 00       	call   805691c <array_set>
 8055938:	83 c4 10             	add    $0x10,%esp
 805593b:	83 6d 80 01          	subl   $0x1,-0x80(%ebp)
 805593f:	83 7d 94 00          	cmpl   $0x0,-0x6c(%ebp)
 8055943:	74 cd                	je     8055912 <strconv__f64_to_str_l+0x460>
 8055945:	c6 45 d7 2e          	movb   $0x2e,-0x29(%ebp)
 8055949:	8b 45 90             	mov    -0x70(%ebp),%eax
 805594c:	8d 50 01             	lea    0x1(%eax),%edx
 805594f:	89 55 90             	mov    %edx,-0x70(%ebp)
 8055952:	83 ec 04             	sub    $0x4,%esp
 8055955:	8d 55 d7             	lea    -0x29(%ebp),%edx
 8055958:	52                   	push   %edx
 8055959:	50                   	push   %eax
 805595a:	8d 45 c0             	lea    -0x40(%ebp),%eax
 805595d:	50                   	push   %eax
 805595e:	e8 b9 0f 00 00       	call   805691c <array_set>
 8055963:	83 c4 10             	add    $0x10,%esp
 8055966:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
 805596d:	eb a3                	jmp    8055912 <strconv__f64_to_str_l+0x460>
 805596f:	8d 55 da             	lea    -0x26(%ebp),%edx
 8055972:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8055978:	01 d0                	add    %edx,%eax
 805597a:	0f b6 00             	movzbl (%eax),%eax
 805597d:	84 c0                	test   %al,%al
 805597f:	74 3a                	je     80559bb <strconv__f64_to_str_l+0x509>
 8055981:	8d 55 da             	lea    -0x26(%ebp),%edx
 8055984:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 805598a:	01 d0                	add    %edx,%eax
 805598c:	0f b6 00             	movzbl (%eax),%eax
 805598f:	88 45 d8             	mov    %al,-0x28(%ebp)
 8055992:	8b 45 90             	mov    -0x70(%ebp),%eax
 8055995:	8d 50 01             	lea    0x1(%eax),%edx
 8055998:	89 55 90             	mov    %edx,-0x70(%ebp)
 805599b:	83 ec 04             	sub    $0x4,%esp
 805599e:	8d 55 d8             	lea    -0x28(%ebp),%edx
 80559a1:	52                   	push   %edx
 80559a2:	50                   	push   %eax
 80559a3:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80559a6:	50                   	push   %eax
 80559a7:	e8 70 0f 00 00       	call   805691c <array_set>
 80559ac:	83 c4 10             	add    $0x10,%esp
 80559af:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%ebp)
 80559b6:	eb b7                	jmp    805596f <strconv__f64_to_str_l+0x4bd>
 80559b8:	90                   	nop
 80559b9:	eb 01                	jmp    80559bc <strconv__f64_to_str_l+0x50a>
 80559bb:	90                   	nop
 80559bc:	c6 45 d9 00          	movb   $0x0,-0x27(%ebp)
 80559c0:	83 ec 04             	sub    $0x4,%esp
 80559c3:	8d 45 d9             	lea    -0x27(%ebp),%eax
 80559c6:	50                   	push   %eax
 80559c7:	ff 75 90             	pushl  -0x70(%ebp)
 80559ca:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80559cd:	50                   	push   %eax
 80559ce:	e8 49 0f 00 00       	call   805691c <array_set>
 80559d3:	83 c4 10             	add    $0x10,%esp
 80559d6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 80559d9:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80559df:	83 ec 04             	sub    $0x4,%esp
 80559e2:	ff 75 90             	pushl  -0x70(%ebp)
 80559e5:	52                   	push   %edx
 80559e6:	50                   	push   %eax
 80559e7:	e8 0e 79 00 00       	call   805d2fa <tos>
 80559ec:	83 c4 0c             	add    $0xc,%esp
 80559ef:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80559f5:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 80559f8:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 80559ff:	74 05                	je     8055a06 <strconv__f64_to_str_l+0x554>
 8055a01:	e8 1a 2e ff ff       	call   8048820 <__stack_chk_fail@plt>
 8055a06:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8055a09:	c9                   	leave  
 8055a0a:	c2 04 00             	ret    $0x4

08055a0d <__new_array>:
 8055a0d:	55                   	push   %ebp
 8055a0e:	89 e5                	mov    %esp,%ebp
 8055a10:	83 ec 28             	sub    $0x28,%esp
 8055a13:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055a16:	39 45 10             	cmp    %eax,0x10(%ebp)
 8055a19:	0f 4d 45 10          	cmovge 0x10(%ebp),%eax
 8055a1d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8055a20:	8b 45 14             	mov    0x14(%ebp),%eax
 8055a23:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8055a26:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055a29:	0f af 45 14          	imul   0x14(%ebp),%eax
 8055a2d:	83 ec 0c             	sub    $0xc,%esp
 8055a30:	50                   	push   %eax
 8055a31:	e8 22 20 00 00       	call   8057a58 <vcalloc>
 8055a36:	83 c4 10             	add    $0x10,%esp
 8055a39:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8055a3c:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055a3f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055a42:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055a45:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055a48:	8b 45 08             	mov    0x8(%ebp),%eax
 8055a4b:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8055a4e:	89 10                	mov    %edx,(%eax)
 8055a50:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8055a53:	89 50 04             	mov    %edx,0x4(%eax)
 8055a56:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8055a59:	89 50 08             	mov    %edx,0x8(%eax)
 8055a5c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8055a5f:	89 50 0c             	mov    %edx,0xc(%eax)
 8055a62:	8b 45 08             	mov    0x8(%ebp),%eax
 8055a65:	c9                   	leave  
 8055a66:	c2 04 00             	ret    $0x4

08055a69 <__new_array_with_default>:
 8055a69:	55                   	push   %ebp
 8055a6a:	89 e5                	mov    %esp,%ebp
 8055a6c:	83 ec 38             	sub    $0x38,%esp
 8055a6f:	8b 45 08             	mov    0x8(%ebp),%eax
 8055a72:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8055a75:	8b 45 18             	mov    0x18(%ebp),%eax
 8055a78:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8055a7b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8055a81:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055a84:	31 c0                	xor    %eax,%eax
 8055a86:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055a89:	39 45 10             	cmp    %eax,0x10(%ebp)
 8055a8c:	0f 4d 45 10          	cmovge 0x10(%ebp),%eax
 8055a90:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8055a93:	8b 45 14             	mov    0x14(%ebp),%eax
 8055a96:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8055a99:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8055a9c:	0f af 45 14          	imul   0x14(%ebp),%eax
 8055aa0:	83 ec 0c             	sub    $0xc,%esp
 8055aa3:	50                   	push   %eax
 8055aa4:	e8 af 1f 00 00       	call   8057a58 <vcalloc>
 8055aa9:	83 c4 10             	add    $0x10,%esp
 8055aac:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8055aaf:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055ab2:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8055ab5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8055ab8:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055abb:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 8055abf:	74 2a                	je     8055aeb <__new_array_with_default+0x82>
 8055ac1:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 8055ac8:	eb 19                	jmp    8055ae3 <__new_array_with_default+0x7a>
 8055aca:	83 ec 04             	sub    $0x4,%esp
 8055acd:	ff 75 d0             	pushl  -0x30(%ebp)
 8055ad0:	ff 75 dc             	pushl  -0x24(%ebp)
 8055ad3:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8055ad6:	50                   	push   %eax
 8055ad7:	e8 0f 0e 00 00       	call   80568eb <array_set_unsafe>
 8055adc:	83 c4 10             	add    $0x10,%esp
 8055adf:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 8055ae3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8055ae6:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 8055ae9:	7f df                	jg     8055aca <__new_array_with_default+0x61>
 8055aeb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8055aee:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8055af1:	89 10                	mov    %edx,(%eax)
 8055af3:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8055af6:	89 50 04             	mov    %edx,0x4(%eax)
 8055af9:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8055afc:	89 50 08             	mov    %edx,0x8(%eax)
 8055aff:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8055b02:	89 50 0c             	mov    %edx,0xc(%eax)
 8055b05:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8055b08:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8055b0b:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8055b12:	74 05                	je     8055b19 <__new_array_with_default+0xb0>
 8055b14:	e8 07 2d ff ff       	call   8048820 <__stack_chk_fail@plt>
 8055b19:	c9                   	leave  
 8055b1a:	c2 04 00             	ret    $0x4

08055b1d <__new_array_with_array_default>:
 8055b1d:	55                   	push   %ebp
 8055b1e:	89 e5                	mov    %esp,%ebp
 8055b20:	83 ec 48             	sub    $0x48,%esp
 8055b23:	8b 45 08             	mov    0x8(%ebp),%eax
 8055b26:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8055b29:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8055b2f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055b32:	31 c0                	xor    %eax,%eax
 8055b34:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055b37:	39 45 10             	cmp    %eax,0x10(%ebp)
 8055b3a:	0f 4d 45 10          	cmovge 0x10(%ebp),%eax
 8055b3e:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8055b41:	8b 45 14             	mov    0x14(%ebp),%eax
 8055b44:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8055b47:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8055b4a:	0f af 45 14          	imul   0x14(%ebp),%eax
 8055b4e:	83 ec 0c             	sub    $0xc,%esp
 8055b51:	50                   	push   %eax
 8055b52:	e8 01 1f 00 00       	call   8057a58 <vcalloc>
 8055b57:	83 c4 10             	add    $0x10,%esp
 8055b5a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8055b5d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055b60:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8055b63:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8055b66:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8055b69:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 8055b70:	eb 2d                	jmp    8055b9f <__new_array_with_array_default+0x82>
 8055b72:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8055b75:	83 ec 08             	sub    $0x8,%esp
 8055b78:	8d 55 18             	lea    0x18(%ebp),%edx
 8055b7b:	52                   	push   %edx
 8055b7c:	50                   	push   %eax
 8055b7d:	e8 b8 0a 00 00       	call   805663a <array_clone>
 8055b82:	83 c4 0c             	add    $0xc,%esp
 8055b85:	83 ec 04             	sub    $0x4,%esp
 8055b88:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8055b8b:	50                   	push   %eax
 8055b8c:	ff 75 cc             	pushl  -0x34(%ebp)
 8055b8f:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 8055b92:	50                   	push   %eax
 8055b93:	e8 53 0d 00 00       	call   80568eb <array_set_unsafe>
 8055b98:	83 c4 10             	add    $0x10,%esp
 8055b9b:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 8055b9f:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8055ba2:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 8055ba5:	7f cb                	jg     8055b72 <__new_array_with_array_default+0x55>
 8055ba7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8055baa:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055bad:	89 10                	mov    %edx,(%eax)
 8055baf:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8055bb2:	89 50 04             	mov    %edx,0x4(%eax)
 8055bb5:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8055bb8:	89 50 08             	mov    %edx,0x8(%eax)
 8055bbb:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8055bbe:	89 50 0c             	mov    %edx,0xc(%eax)
 8055bc1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8055bc4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8055bc7:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8055bce:	74 05                	je     8055bd5 <__new_array_with_array_default+0xb8>
 8055bd0:	e8 4b 2c ff ff       	call   8048820 <__stack_chk_fail@plt>
 8055bd5:	c9                   	leave  
 8055bd6:	c2 04 00             	ret    $0x4

08055bd9 <new_array_from_c_array>:
 8055bd9:	55                   	push   %ebp
 8055bda:	89 e5                	mov    %esp,%ebp
 8055bdc:	83 ec 28             	sub    $0x28,%esp
 8055bdf:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055be2:	39 45 10             	cmp    %eax,0x10(%ebp)
 8055be5:	0f 4d 45 10          	cmovge 0x10(%ebp),%eax
 8055be9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8055bec:	8b 45 14             	mov    0x14(%ebp),%eax
 8055bef:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8055bf2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055bf5:	0f af 45 14          	imul   0x14(%ebp),%eax
 8055bf9:	83 ec 0c             	sub    $0xc,%esp
 8055bfc:	50                   	push   %eax
 8055bfd:	e8 56 1e 00 00       	call   8057a58 <vcalloc>
 8055c02:	83 c4 10             	add    $0x10,%esp
 8055c05:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8055c08:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055c0b:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055c0e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055c11:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055c14:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055c17:	0f af 45 14          	imul   0x14(%ebp),%eax
 8055c1b:	89 c2                	mov    %eax,%edx
 8055c1d:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8055c20:	83 ec 04             	sub    $0x4,%esp
 8055c23:	52                   	push   %edx
 8055c24:	ff 75 18             	pushl  0x18(%ebp)
 8055c27:	50                   	push   %eax
 8055c28:	e8 93 2b ff ff       	call   80487c0 <memcpy@plt>
 8055c2d:	83 c4 10             	add    $0x10,%esp
 8055c30:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c33:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8055c36:	89 10                	mov    %edx,(%eax)
 8055c38:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8055c3b:	89 50 04             	mov    %edx,0x4(%eax)
 8055c3e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8055c41:	89 50 08             	mov    %edx,0x8(%eax)
 8055c44:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8055c47:	89 50 0c             	mov    %edx,0xc(%eax)
 8055c4a:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c4d:	c9                   	leave  
 8055c4e:	c2 04 00             	ret    $0x4

08055c51 <new_array_from_c_array_no_alloc>:
 8055c51:	55                   	push   %ebp
 8055c52:	89 e5                	mov    %esp,%ebp
 8055c54:	83 ec 10             	sub    $0x10,%esp
 8055c57:	8b 45 14             	mov    0x14(%ebp),%eax
 8055c5a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055c5d:	8b 45 18             	mov    0x18(%ebp),%eax
 8055c60:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055c63:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055c66:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8055c69:	8b 45 10             	mov    0x10(%ebp),%eax
 8055c6c:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8055c6f:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c72:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8055c75:	89 10                	mov    %edx,(%eax)
 8055c77:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8055c7a:	89 50 04             	mov    %edx,0x4(%eax)
 8055c7d:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8055c80:	89 50 08             	mov    %edx,0x8(%eax)
 8055c83:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8055c86:	89 50 0c             	mov    %edx,0xc(%eax)
 8055c89:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c8c:	c9                   	leave  
 8055c8d:	c2 04 00             	ret    $0x4

08055c90 <array_ensure_cap>:
 8055c90:	55                   	push   %ebp
 8055c91:	89 e5                	mov    %esp,%ebp
 8055c93:	83 ec 18             	sub    $0x18,%esp
 8055c96:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c99:	8b 40 0c             	mov    0xc(%eax),%eax
 8055c9c:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8055c9f:	0f 8d 84 00 00 00    	jge    8055d29 <array_ensure_cap+0x99>
 8055ca5:	8b 45 08             	mov    0x8(%ebp),%eax
 8055ca8:	8b 40 0c             	mov    0xc(%eax),%eax
 8055cab:	85 c0                	test   %eax,%eax
 8055cad:	7e 08                	jle    8055cb7 <array_ensure_cap+0x27>
 8055caf:	8b 45 08             	mov    0x8(%ebp),%eax
 8055cb2:	8b 40 0c             	mov    0xc(%eax),%eax
 8055cb5:	eb 05                	jmp    8055cbc <array_ensure_cap+0x2c>
 8055cb7:	b8 02 00 00 00       	mov    $0x2,%eax
 8055cbc:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8055cbf:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055cc2:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 8055cc5:	7e 05                	jle    8055ccc <array_ensure_cap+0x3c>
 8055cc7:	d1 65 ec             	shll   -0x14(%ebp)
 8055cca:	eb f3                	jmp    8055cbf <array_ensure_cap+0x2f>
 8055ccc:	90                   	nop
 8055ccd:	8b 45 08             	mov    0x8(%ebp),%eax
 8055cd0:	8b 00                	mov    (%eax),%eax
 8055cd2:	0f af 45 ec          	imul   -0x14(%ebp),%eax
 8055cd6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055cd9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8055ce0:	8b 45 08             	mov    0x8(%ebp),%eax
 8055ce3:	8b 40 0c             	mov    0xc(%eax),%eax
 8055ce6:	85 c0                	test   %eax,%eax
 8055ce8:	7e 1a                	jle    8055d04 <array_ensure_cap+0x74>
 8055cea:	8b 45 08             	mov    0x8(%ebp),%eax
 8055ced:	8b 40 04             	mov    0x4(%eax),%eax
 8055cf0:	83 ec 08             	sub    $0x8,%esp
 8055cf3:	ff 75 f4             	pushl  -0xc(%ebp)
 8055cf6:	50                   	push   %eax
 8055cf7:	e8 ca 1c 00 00       	call   80579c6 <v_realloc>
 8055cfc:	83 c4 10             	add    $0x10,%esp
 8055cff:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055d02:	eb 11                	jmp    8055d15 <array_ensure_cap+0x85>
 8055d04:	83 ec 0c             	sub    $0xc,%esp
 8055d07:	ff 75 f4             	pushl  -0xc(%ebp)
 8055d0a:	e8 49 1d 00 00       	call   8057a58 <vcalloc>
 8055d0f:	83 c4 10             	add    $0x10,%esp
 8055d12:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8055d15:	8b 45 08             	mov    0x8(%ebp),%eax
 8055d18:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8055d1b:	89 50 04             	mov    %edx,0x4(%eax)
 8055d1e:	8b 45 08             	mov    0x8(%ebp),%eax
 8055d21:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8055d24:	89 50 0c             	mov    %edx,0xc(%eax)
 8055d27:	eb 01                	jmp    8055d2a <array_ensure_cap+0x9a>
 8055d29:	90                   	nop
 8055d2a:	c9                   	leave  
 8055d2b:	c3                   	ret    

08055d2c <array_repeat>:
 8055d2c:	55                   	push   %ebp
 8055d2d:	89 e5                	mov    %esp,%ebp
 8055d2f:	56                   	push   %esi
 8055d30:	53                   	push   %ebx
 8055d31:	83 ec 60             	sub    $0x60,%esp
 8055d34:	8b 45 08             	mov    0x8(%ebp),%eax
 8055d37:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8055d3a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8055d40:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055d43:	31 c0                	xor    %eax,%eax
 8055d45:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
 8055d49:	79 2a                	jns    8055d75 <array_repeat+0x49>
 8055d4b:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8055d4e:	ff 75 1c             	pushl  0x1c(%ebp)
 8055d51:	6a 01                	push   $0x1
 8055d53:	68 20 99 06 08       	push   $0x8069920
 8055d58:	50                   	push   %eax
 8055d59:	e8 66 37 ff ff       	call   80494c4 <_STR>
 8055d5e:	83 c4 0c             	add    $0xc,%esp
 8055d61:	83 ec 04             	sub    $0x4,%esp
 8055d64:	ff 75 c0             	pushl  -0x40(%ebp)
 8055d67:	ff 75 bc             	pushl  -0x44(%ebp)
 8055d6a:	ff 75 b8             	pushl  -0x48(%ebp)
 8055d6d:	e8 25 1a 00 00       	call   8057797 <v_panic>
 8055d72:	83 c4 10             	add    $0x10,%esp
 8055d75:	8b 45 14             	mov    0x14(%ebp),%eax
 8055d78:	0f af 45 1c          	imul   0x1c(%ebp),%eax
 8055d7c:	89 c2                	mov    %eax,%edx
 8055d7e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055d81:	0f af c2             	imul   %edx,%eax
 8055d84:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8055d87:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)
 8055d8b:	75 06                	jne    8055d93 <array_repeat+0x67>
 8055d8d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055d90:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8055d93:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055d96:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8055d99:	83 ec 0c             	sub    $0xc,%esp
 8055d9c:	ff 75 ac             	pushl  -0x54(%ebp)
 8055d9f:	e8 b4 1c 00 00       	call   8057a58 <vcalloc>
 8055da4:	83 c4 10             	add    $0x10,%esp
 8055da7:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8055daa:	8b 45 14             	mov    0x14(%ebp),%eax
 8055dad:	0f af 45 1c          	imul   0x1c(%ebp),%eax
 8055db1:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8055db4:	8b 45 14             	mov    0x14(%ebp),%eax
 8055db7:	0f af 45 1c          	imul   0x1c(%ebp),%eax
 8055dbb:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8055dbe:	c7 45 b4 10 00 00 00 	movl   $0x10,-0x4c(%ebp)
 8055dc5:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 8055dcc:	e9 db 00 00 00       	jmp    8055eac <array_repeat+0x180>
 8055dd1:	8b 45 14             	mov    0x14(%ebp),%eax
 8055dd4:	85 c0                	test   %eax,%eax
 8055dd6:	0f 8e 91 00 00 00    	jle    8055e6d <array_repeat+0x141>
 8055ddc:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055ddf:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 8055de2:	0f 85 85 00 00 00    	jne    8055e6d <array_repeat+0x141>
 8055de8:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 8055def:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 8055df6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 8055dfd:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 8055e04:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8055e07:	8b 45 10             	mov    0x10(%ebp),%eax
 8055e0a:	83 ec 04             	sub    $0x4,%esp
 8055e0d:	52                   	push   %edx
 8055e0e:	50                   	push   %eax
 8055e0f:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 8055e12:	50                   	push   %eax
 8055e13:	e8 a8 29 ff ff       	call   80487c0 <memcpy@plt>
 8055e18:	83 c4 10             	add    $0x10,%esp
 8055e1b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8055e1e:	83 ec 08             	sub    $0x8,%esp
 8055e21:	8d 55 d4             	lea    -0x2c(%ebp),%edx
 8055e24:	52                   	push   %edx
 8055e25:	50                   	push   %eax
 8055e26:	e8 0f 08 00 00       	call   805663a <array_clone>
 8055e2b:	83 c4 0c             	add    $0xc,%esp
 8055e2e:	8b 55 14             	mov    0x14(%ebp),%edx
 8055e31:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055e34:	0f af c2             	imul   %edx,%eax
 8055e37:	89 c3                	mov    %eax,%ebx
 8055e39:	8b 45 14             	mov    0x14(%ebp),%eax
 8055e3c:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 8055e40:	83 ec 0c             	sub    $0xc,%esp
 8055e43:	50                   	push   %eax
 8055e44:	ff 75 d0             	pushl  -0x30(%ebp)
 8055e47:	ff 75 cc             	pushl  -0x34(%ebp)
 8055e4a:	ff 75 c8             	pushl  -0x38(%ebp)
 8055e4d:	ff 75 c4             	pushl  -0x3c(%ebp)
 8055e50:	e8 54 04 00 00       	call   80562a9 <array_get_unsafe>
 8055e55:	83 c4 20             	add    $0x20,%esp
 8055e58:	89 c2                	mov    %eax,%edx
 8055e5a:	83 ec 04             	sub    $0x4,%esp
 8055e5d:	53                   	push   %ebx
 8055e5e:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8055e61:	50                   	push   %eax
 8055e62:	52                   	push   %edx
 8055e63:	e8 58 29 ff ff       	call   80487c0 <memcpy@plt>
 8055e68:	83 c4 10             	add    $0x10,%esp
 8055e6b:	eb 3b                	jmp    8055ea8 <array_repeat+0x17c>
 8055e6d:	8b 55 14             	mov    0x14(%ebp),%edx
 8055e70:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055e73:	0f af c2             	imul   %edx,%eax
 8055e76:	89 c6                	mov    %eax,%esi
 8055e78:	8b 5d 10             	mov    0x10(%ebp),%ebx
 8055e7b:	8b 45 14             	mov    0x14(%ebp),%eax
 8055e7e:	0f af 45 b0          	imul   -0x50(%ebp),%eax
 8055e82:	83 ec 0c             	sub    $0xc,%esp
 8055e85:	50                   	push   %eax
 8055e86:	ff 75 d0             	pushl  -0x30(%ebp)
 8055e89:	ff 75 cc             	pushl  -0x34(%ebp)
 8055e8c:	ff 75 c8             	pushl  -0x38(%ebp)
 8055e8f:	ff 75 c4             	pushl  -0x3c(%ebp)
 8055e92:	e8 12 04 00 00       	call   80562a9 <array_get_unsafe>
 8055e97:	83 c4 20             	add    $0x20,%esp
 8055e9a:	83 ec 04             	sub    $0x4,%esp
 8055e9d:	56                   	push   %esi
 8055e9e:	53                   	push   %ebx
 8055e9f:	50                   	push   %eax
 8055ea0:	e8 1b 29 ff ff       	call   80487c0 <memcpy@plt>
 8055ea5:	83 c4 10             	add    $0x10,%esp
 8055ea8:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 8055eac:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8055eaf:	3b 45 1c             	cmp    0x1c(%ebp),%eax
 8055eb2:	0f 8c 19 ff ff ff    	jl     8055dd1 <array_repeat+0xa5>
 8055eb8:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8055ebb:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8055ebe:	89 10                	mov    %edx,(%eax)
 8055ec0:	8b 55 c8             	mov    -0x38(%ebp),%edx
 8055ec3:	89 50 04             	mov    %edx,0x4(%eax)
 8055ec6:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8055ec9:	89 50 08             	mov    %edx,0x8(%eax)
 8055ecc:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8055ecf:	89 50 0c             	mov    %edx,0xc(%eax)
 8055ed2:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8055ed5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8055ed8:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8055edf:	74 05                	je     8055ee6 <array_repeat+0x1ba>
 8055ee1:	e8 3a 29 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8055ee6:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8055ee9:	5b                   	pop    %ebx
 8055eea:	5e                   	pop    %esi
 8055eeb:	5d                   	pop    %ebp
 8055eec:	c2 04 00             	ret    $0x4

08055eef <array_sort_with_compare>:
 8055eef:	55                   	push   %ebp
 8055ef0:	89 e5                	mov    %esp,%ebp
 8055ef2:	53                   	push   %ebx
 8055ef3:	83 ec 04             	sub    $0x4,%esp
 8055ef6:	8b 55 0c             	mov    0xc(%ebp),%edx
 8055ef9:	8b 45 08             	mov    0x8(%ebp),%eax
 8055efc:	8b 00                	mov    (%eax),%eax
 8055efe:	89 c3                	mov    %eax,%ebx
 8055f00:	8b 45 08             	mov    0x8(%ebp),%eax
 8055f03:	8b 40 08             	mov    0x8(%eax),%eax
 8055f06:	89 c1                	mov    %eax,%ecx
 8055f08:	8b 45 08             	mov    0x8(%ebp),%eax
 8055f0b:	8b 40 04             	mov    0x4(%eax),%eax
 8055f0e:	52                   	push   %edx
 8055f0f:	53                   	push   %ebx
 8055f10:	51                   	push   %ecx
 8055f11:	50                   	push   %eax
 8055f12:	e8 e9 29 ff ff       	call   8048900 <qsort@plt>
 8055f17:	83 c4 10             	add    $0x10,%esp
 8055f1a:	90                   	nop
 8055f1b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8055f1e:	c9                   	leave  
 8055f1f:	c3                   	ret    

08055f20 <array_insert>:
 8055f20:	55                   	push   %ebp
 8055f21:	89 e5                	mov    %esp,%ebp
 8055f23:	56                   	push   %esi
 8055f24:	53                   	push   %ebx
 8055f25:	83 ec 20             	sub    $0x20,%esp
 8055f28:	8b 45 08             	mov    0x8(%ebp),%eax
 8055f2b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8055f2e:	8b 45 10             	mov    0x10(%ebp),%eax
 8055f31:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8055f34:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8055f3a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8055f3d:	31 c0                	xor    %eax,%eax
 8055f3f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8055f43:	78 0b                	js     8055f50 <array_insert+0x30>
 8055f45:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055f48:	8b 40 08             	mov    0x8(%eax),%eax
 8055f4b:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8055f4e:	7d 34                	jge    8055f84 <array_insert+0x64>
 8055f50:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055f53:	8b 50 08             	mov    0x8(%eax),%edx
 8055f56:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8055f59:	83 ec 0c             	sub    $0xc,%esp
 8055f5c:	52                   	push   %edx
 8055f5d:	ff 75 0c             	pushl  0xc(%ebp)
 8055f60:	6a 03                	push   $0x3
 8055f62:	68 44 99 06 08       	push   $0x8069944
 8055f67:	50                   	push   %eax
 8055f68:	e8 57 35 ff ff       	call   80494c4 <_STR>
 8055f6d:	83 c4 1c             	add    $0x1c,%esp
 8055f70:	83 ec 04             	sub    $0x4,%esp
 8055f73:	ff 75 f0             	pushl  -0x10(%ebp)
 8055f76:	ff 75 ec             	pushl  -0x14(%ebp)
 8055f79:	ff 75 e8             	pushl  -0x18(%ebp)
 8055f7c:	e8 16 18 00 00       	call   8057797 <v_panic>
 8055f81:	83 c4 10             	add    $0x10,%esp
 8055f84:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055f87:	8b 40 08             	mov    0x8(%eax),%eax
 8055f8a:	83 c0 01             	add    $0x1,%eax
 8055f8d:	83 ec 08             	sub    $0x8,%esp
 8055f90:	50                   	push   %eax
 8055f91:	ff 75 e4             	pushl  -0x1c(%ebp)
 8055f94:	e8 f7 fc ff ff       	call   8055c90 <array_ensure_cap>
 8055f99:	83 c4 10             	add    $0x10,%esp
 8055f9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055f9f:	8b 40 08             	mov    0x8(%eax),%eax
 8055fa2:	2b 45 0c             	sub    0xc(%ebp),%eax
 8055fa5:	89 c2                	mov    %eax,%edx
 8055fa7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055faa:	8b 00                	mov    (%eax),%eax
 8055fac:	0f af c2             	imul   %edx,%eax
 8055faf:	89 c6                	mov    %eax,%esi
 8055fb1:	83 ec 0c             	sub    $0xc,%esp
 8055fb4:	ff 75 0c             	pushl  0xc(%ebp)
 8055fb7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055fba:	ff 70 0c             	pushl  0xc(%eax)
 8055fbd:	ff 70 08             	pushl  0x8(%eax)
 8055fc0:	ff 70 04             	pushl  0x4(%eax)
 8055fc3:	ff 30                	pushl  (%eax)
 8055fc5:	e8 df 02 00 00       	call   80562a9 <array_get_unsafe>
 8055fca:	83 c4 20             	add    $0x20,%esp
 8055fcd:	89 c3                	mov    %eax,%ebx
 8055fcf:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055fd2:	83 c0 01             	add    $0x1,%eax
 8055fd5:	83 ec 0c             	sub    $0xc,%esp
 8055fd8:	50                   	push   %eax
 8055fd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8055fdc:	ff 70 0c             	pushl  0xc(%eax)
 8055fdf:	ff 70 08             	pushl  0x8(%eax)
 8055fe2:	ff 70 04             	pushl  0x4(%eax)
 8055fe5:	ff 30                	pushl  (%eax)
 8055fe7:	e8 bd 02 00 00       	call   80562a9 <array_get_unsafe>
 8055fec:	83 c4 20             	add    $0x20,%esp
 8055fef:	83 ec 04             	sub    $0x4,%esp
 8055ff2:	56                   	push   %esi
 8055ff3:	53                   	push   %ebx
 8055ff4:	50                   	push   %eax
 8055ff5:	e8 a6 27 ff ff       	call   80487a0 <memmove@plt>
 8055ffa:	83 c4 10             	add    $0x10,%esp
 8055ffd:	83 ec 04             	sub    $0x4,%esp
 8056000:	ff 75 e0             	pushl  -0x20(%ebp)
 8056003:	ff 75 0c             	pushl  0xc(%ebp)
 8056006:	ff 75 e4             	pushl  -0x1c(%ebp)
 8056009:	e8 dd 08 00 00       	call   80568eb <array_set_unsafe>
 805600e:	83 c4 10             	add    $0x10,%esp
 8056011:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056014:	8b 40 08             	mov    0x8(%eax),%eax
 8056017:	8d 50 01             	lea    0x1(%eax),%edx
 805601a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805601d:	89 50 08             	mov    %edx,0x8(%eax)
 8056020:	90                   	nop
 8056021:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8056024:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805602b:	74 05                	je     8056032 <array_insert+0x112>
 805602d:	e8 ee 27 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056032:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8056035:	5b                   	pop    %ebx
 8056036:	5e                   	pop    %esi
 8056037:	5d                   	pop    %ebp
 8056038:	c3                   	ret    

08056039 <array_insert_many>:
 8056039:	55                   	push   %ebp
 805603a:	89 e5                	mov    %esp,%ebp
 805603c:	53                   	push   %ebx
 805603d:	83 ec 34             	sub    $0x34,%esp
 8056040:	8b 45 08             	mov    0x8(%ebp),%eax
 8056043:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8056046:	8b 45 10             	mov    0x10(%ebp),%eax
 8056049:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805604c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056052:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056055:	31 c0                	xor    %eax,%eax
 8056057:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 805605b:	78 0b                	js     8056068 <array_insert_many+0x2f>
 805605d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056060:	8b 40 08             	mov    0x8(%eax),%eax
 8056063:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8056066:	7d 34                	jge    805609c <array_insert_many+0x63>
 8056068:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805606b:	8b 50 08             	mov    0x8(%eax),%edx
 805606e:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8056071:	83 ec 0c             	sub    $0xc,%esp
 8056074:	52                   	push   %edx
 8056075:	ff 75 0c             	pushl  0xc(%ebp)
 8056078:	6a 03                	push   $0x3
 805607a:	68 80 99 06 08       	push   $0x8069980
 805607f:	50                   	push   %eax
 8056080:	e8 3f 34 ff ff       	call   80494c4 <_STR>
 8056085:	83 c4 1c             	add    $0x1c,%esp
 8056088:	83 ec 04             	sub    $0x4,%esp
 805608b:	ff 75 f0             	pushl  -0x10(%ebp)
 805608e:	ff 75 ec             	pushl  -0x14(%ebp)
 8056091:	ff 75 e8             	pushl  -0x18(%ebp)
 8056094:	e8 fe 16 00 00       	call   8057797 <v_panic>
 8056099:	83 c4 10             	add    $0x10,%esp
 805609c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805609f:	8b 50 08             	mov    0x8(%eax),%edx
 80560a2:	8b 45 14             	mov    0x14(%ebp),%eax
 80560a5:	01 d0                	add    %edx,%eax
 80560a7:	83 ec 08             	sub    $0x8,%esp
 80560aa:	50                   	push   %eax
 80560ab:	ff 75 d4             	pushl  -0x2c(%ebp)
 80560ae:	e8 dd fb ff ff       	call   8055c90 <array_ensure_cap>
 80560b3:	83 c4 10             	add    $0x10,%esp
 80560b6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80560b9:	8b 00                	mov    (%eax),%eax
 80560bb:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80560be:	83 ec 0c             	sub    $0xc,%esp
 80560c1:	ff 75 0c             	pushl  0xc(%ebp)
 80560c4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80560c7:	ff 70 0c             	pushl  0xc(%eax)
 80560ca:	ff 70 08             	pushl  0x8(%eax)
 80560cd:	ff 70 04             	pushl  0x4(%eax)
 80560d0:	ff 30                	pushl  (%eax)
 80560d2:	e8 d2 01 00 00       	call   80562a9 <array_get_unsafe>
 80560d7:	83 c4 20             	add    $0x20,%esp
 80560da:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80560dd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80560e0:	8b 40 08             	mov    0x8(%eax),%eax
 80560e3:	2b 45 0c             	sub    0xc(%ebp),%eax
 80560e6:	0f af 45 e0          	imul   -0x20(%ebp),%eax
 80560ea:	89 c3                	mov    %eax,%ebx
 80560ec:	8b 55 0c             	mov    0xc(%ebp),%edx
 80560ef:	8b 45 14             	mov    0x14(%ebp),%eax
 80560f2:	01 d0                	add    %edx,%eax
 80560f4:	83 ec 0c             	sub    $0xc,%esp
 80560f7:	50                   	push   %eax
 80560f8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80560fb:	ff 70 0c             	pushl  0xc(%eax)
 80560fe:	ff 70 08             	pushl  0x8(%eax)
 8056101:	ff 70 04             	pushl  0x4(%eax)
 8056104:	ff 30                	pushl  (%eax)
 8056106:	e8 9e 01 00 00       	call   80562a9 <array_get_unsafe>
 805610b:	83 c4 20             	add    $0x20,%esp
 805610e:	83 ec 04             	sub    $0x4,%esp
 8056111:	53                   	push   %ebx
 8056112:	ff 75 e4             	pushl  -0x1c(%ebp)
 8056115:	50                   	push   %eax
 8056116:	e8 85 26 ff ff       	call   80487a0 <memmove@plt>
 805611b:	83 c4 10             	add    $0x10,%esp
 805611e:	8b 45 14             	mov    0x14(%ebp),%eax
 8056121:	0f af 45 e0          	imul   -0x20(%ebp),%eax
 8056125:	83 ec 04             	sub    $0x4,%esp
 8056128:	50                   	push   %eax
 8056129:	ff 75 d0             	pushl  -0x30(%ebp)
 805612c:	ff 75 e4             	pushl  -0x1c(%ebp)
 805612f:	e8 8c 26 ff ff       	call   80487c0 <memcpy@plt>
 8056134:	83 c4 10             	add    $0x10,%esp
 8056137:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805613a:	8b 50 08             	mov    0x8(%eax),%edx
 805613d:	8b 45 14             	mov    0x14(%ebp),%eax
 8056140:	01 c2                	add    %eax,%edx
 8056142:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056145:	89 50 08             	mov    %edx,0x8(%eax)
 8056148:	90                   	nop
 8056149:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805614c:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8056153:	74 05                	je     805615a <array_insert_many+0x121>
 8056155:	e8 c6 26 ff ff       	call   8048820 <__stack_chk_fail@plt>
 805615a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805615d:	c9                   	leave  
 805615e:	c3                   	ret    

0805615f <array_prepend>:
 805615f:	55                   	push   %ebp
 8056160:	89 e5                	mov    %esp,%ebp
 8056162:	83 ec 08             	sub    $0x8,%esp
 8056165:	83 ec 04             	sub    $0x4,%esp
 8056168:	ff 75 0c             	pushl  0xc(%ebp)
 805616b:	6a 00                	push   $0x0
 805616d:	ff 75 08             	pushl  0x8(%ebp)
 8056170:	e8 ab fd ff ff       	call   8055f20 <array_insert>
 8056175:	83 c4 10             	add    $0x10,%esp
 8056178:	90                   	nop
 8056179:	c9                   	leave  
 805617a:	c3                   	ret    

0805617b <array_prepend_many>:
 805617b:	55                   	push   %ebp
 805617c:	89 e5                	mov    %esp,%ebp
 805617e:	83 ec 08             	sub    $0x8,%esp
 8056181:	ff 75 10             	pushl  0x10(%ebp)
 8056184:	ff 75 0c             	pushl  0xc(%ebp)
 8056187:	6a 00                	push   $0x0
 8056189:	ff 75 08             	pushl  0x8(%ebp)
 805618c:	e8 a8 fe ff ff       	call   8056039 <array_insert_many>
 8056191:	83 c4 10             	add    $0x10,%esp
 8056194:	90                   	nop
 8056195:	c9                   	leave  
 8056196:	c3                   	ret    

08056197 <array_delete>:
 8056197:	55                   	push   %ebp
 8056198:	89 e5                	mov    %esp,%ebp
 805619a:	56                   	push   %esi
 805619b:	53                   	push   %ebx
 805619c:	83 ec 20             	sub    $0x20,%esp
 805619f:	8b 45 08             	mov    0x8(%ebp),%eax
 80561a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80561a5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80561ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80561ae:	31 c0                	xor    %eax,%eax
 80561b0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 80561b4:	78 0b                	js     80561c1 <array_delete+0x2a>
 80561b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80561b9:	8b 40 08             	mov    0x8(%eax),%eax
 80561bc:	3b 45 0c             	cmp    0xc(%ebp),%eax
 80561bf:	7f 34                	jg     80561f5 <array_delete+0x5e>
 80561c1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80561c4:	8b 50 08             	mov    0x8(%eax),%edx
 80561c7:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80561ca:	83 ec 0c             	sub    $0xc,%esp
 80561cd:	52                   	push   %edx
 80561ce:	ff 75 0c             	pushl  0xc(%ebp)
 80561d1:	6a 03                	push   $0x3
 80561d3:	68 c0 99 06 08       	push   $0x80699c0
 80561d8:	50                   	push   %eax
 80561d9:	e8 e6 32 ff ff       	call   80494c4 <_STR>
 80561de:	83 c4 1c             	add    $0x1c,%esp
 80561e1:	83 ec 04             	sub    $0x4,%esp
 80561e4:	ff 75 f0             	pushl  -0x10(%ebp)
 80561e7:	ff 75 ec             	pushl  -0x14(%ebp)
 80561ea:	ff 75 e8             	pushl  -0x18(%ebp)
 80561ed:	e8 a5 15 00 00       	call   8057797 <v_panic>
 80561f2:	83 c4 10             	add    $0x10,%esp
 80561f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80561f8:	8b 40 08             	mov    0x8(%eax),%eax
 80561fb:	2b 45 0c             	sub    0xc(%ebp),%eax
 80561fe:	8d 50 ff             	lea    -0x1(%eax),%edx
 8056201:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056204:	8b 00                	mov    (%eax),%eax
 8056206:	0f af c2             	imul   %edx,%eax
 8056209:	89 c6                	mov    %eax,%esi
 805620b:	8b 45 0c             	mov    0xc(%ebp),%eax
 805620e:	83 c0 01             	add    $0x1,%eax
 8056211:	83 ec 0c             	sub    $0xc,%esp
 8056214:	50                   	push   %eax
 8056215:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056218:	ff 70 0c             	pushl  0xc(%eax)
 805621b:	ff 70 08             	pushl  0x8(%eax)
 805621e:	ff 70 04             	pushl  0x4(%eax)
 8056221:	ff 30                	pushl  (%eax)
 8056223:	e8 81 00 00 00       	call   80562a9 <array_get_unsafe>
 8056228:	83 c4 20             	add    $0x20,%esp
 805622b:	89 c3                	mov    %eax,%ebx
 805622d:	83 ec 0c             	sub    $0xc,%esp
 8056230:	ff 75 0c             	pushl  0xc(%ebp)
 8056233:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056236:	ff 70 0c             	pushl  0xc(%eax)
 8056239:	ff 70 08             	pushl  0x8(%eax)
 805623c:	ff 70 04             	pushl  0x4(%eax)
 805623f:	ff 30                	pushl  (%eax)
 8056241:	e8 63 00 00 00       	call   80562a9 <array_get_unsafe>
 8056246:	83 c4 20             	add    $0x20,%esp
 8056249:	83 ec 04             	sub    $0x4,%esp
 805624c:	56                   	push   %esi
 805624d:	53                   	push   %ebx
 805624e:	50                   	push   %eax
 805624f:	e8 4c 25 ff ff       	call   80487a0 <memmove@plt>
 8056254:	83 c4 10             	add    $0x10,%esp
 8056257:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805625a:	8b 40 08             	mov    0x8(%eax),%eax
 805625d:	8d 50 ff             	lea    -0x1(%eax),%edx
 8056260:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056263:	89 50 08             	mov    %edx,0x8(%eax)
 8056266:	90                   	nop
 8056267:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805626a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8056271:	74 05                	je     8056278 <array_delete+0xe1>
 8056273:	e8 a8 25 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056278:	8d 65 f8             	lea    -0x8(%ebp),%esp
 805627b:	5b                   	pop    %ebx
 805627c:	5e                   	pop    %esi
 805627d:	5d                   	pop    %ebp
 805627e:	c3                   	ret    

0805627f <array_clear>:
 805627f:	55                   	push   %ebp
 8056280:	89 e5                	mov    %esp,%ebp
 8056282:	8b 45 08             	mov    0x8(%ebp),%eax
 8056285:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805628c:	90                   	nop
 805628d:	5d                   	pop    %ebp
 805628e:	c3                   	ret    

0805628f <array_trim>:
 805628f:	55                   	push   %ebp
 8056290:	89 e5                	mov    %esp,%ebp
 8056292:	8b 45 08             	mov    0x8(%ebp),%eax
 8056295:	8b 40 08             	mov    0x8(%eax),%eax
 8056298:	3b 45 0c             	cmp    0xc(%ebp),%eax
 805629b:	7e 09                	jle    80562a6 <array_trim+0x17>
 805629d:	8b 45 08             	mov    0x8(%ebp),%eax
 80562a0:	8b 55 0c             	mov    0xc(%ebp),%edx
 80562a3:	89 50 08             	mov    %edx,0x8(%eax)
 80562a6:	90                   	nop
 80562a7:	5d                   	pop    %ebp
 80562a8:	c3                   	ret    

080562a9 <array_get_unsafe>:
 80562a9:	55                   	push   %ebp
 80562aa:	89 e5                	mov    %esp,%ebp
 80562ac:	8b 55 0c             	mov    0xc(%ebp),%edx
 80562af:	8b 45 08             	mov    0x8(%ebp),%eax
 80562b2:	0f af 45 18          	imul   0x18(%ebp),%eax
 80562b6:	01 d0                	add    %edx,%eax
 80562b8:	5d                   	pop    %ebp
 80562b9:	c3                   	ret    

080562ba <array_get>:
 80562ba:	55                   	push   %ebp
 80562bb:	89 e5                	mov    %esp,%ebp
 80562bd:	83 ec 18             	sub    $0x18,%esp
 80562c0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80562c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80562c9:	31 c0                	xor    %eax,%eax
 80562cb:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 80562cf:	78 08                	js     80562d9 <array_get+0x1f>
 80562d1:	8b 45 10             	mov    0x10(%ebp),%eax
 80562d4:	3b 45 18             	cmp    0x18(%ebp),%eax
 80562d7:	7f 31                	jg     805630a <array_get+0x50>
 80562d9:	8b 55 10             	mov    0x10(%ebp),%edx
 80562dc:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80562df:	83 ec 0c             	sub    $0xc,%esp
 80562e2:	52                   	push   %edx
 80562e3:	ff 75 18             	pushl  0x18(%ebp)
 80562e6:	6a 03                	push   $0x3
 80562e8:	68 fc 99 06 08       	push   $0x80699fc
 80562ed:	50                   	push   %eax
 80562ee:	e8 d1 31 ff ff       	call   80494c4 <_STR>
 80562f3:	83 c4 1c             	add    $0x1c,%esp
 80562f6:	83 ec 04             	sub    $0x4,%esp
 80562f9:	ff 75 f0             	pushl  -0x10(%ebp)
 80562fc:	ff 75 ec             	pushl  -0x14(%ebp)
 80562ff:	ff 75 e8             	pushl  -0x18(%ebp)
 8056302:	e8 90 14 00 00       	call   8057797 <v_panic>
 8056307:	83 c4 10             	add    $0x10,%esp
 805630a:	8b 55 0c             	mov    0xc(%ebp),%edx
 805630d:	8b 45 08             	mov    0x8(%ebp),%eax
 8056310:	0f af 45 18          	imul   0x18(%ebp),%eax
 8056314:	01 d0                	add    %edx,%eax
 8056316:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8056319:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8056320:	74 05                	je     8056327 <array_get+0x6d>
 8056322:	e8 f9 24 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056327:	c9                   	leave  
 8056328:	c3                   	ret    

08056329 <array_first>:
 8056329:	55                   	push   %ebp
 805632a:	89 e5                	mov    %esp,%ebp
 805632c:	83 ec 18             	sub    $0x18,%esp
 805632f:	8b 45 10             	mov    0x10(%ebp),%eax
 8056332:	85 c0                	test   %eax,%eax
 8056334:	75 29                	jne    805635f <array_first+0x36>
 8056336:	c7 45 ec 33 9a 06 08 	movl   $0x8069a33,-0x14(%ebp)
 805633d:	c7 45 f0 1b 00 00 00 	movl   $0x1b,-0x10(%ebp)
 8056344:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805634b:	83 ec 04             	sub    $0x4,%esp
 805634e:	ff 75 f4             	pushl  -0xc(%ebp)
 8056351:	ff 75 f0             	pushl  -0x10(%ebp)
 8056354:	ff 75 ec             	pushl  -0x14(%ebp)
 8056357:	e8 3b 14 00 00       	call   8057797 <v_panic>
 805635c:	83 c4 10             	add    $0x10,%esp
 805635f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8056362:	c9                   	leave  
 8056363:	c3                   	ret    

08056364 <array_last>:
 8056364:	55                   	push   %ebp
 8056365:	89 e5                	mov    %esp,%ebp
 8056367:	83 ec 18             	sub    $0x18,%esp
 805636a:	8b 45 10             	mov    0x10(%ebp),%eax
 805636d:	85 c0                	test   %eax,%eax
 805636f:	75 29                	jne    805639a <array_last+0x36>
 8056371:	c7 45 ec 4f 9a 06 08 	movl   $0x8069a4f,-0x14(%ebp)
 8056378:	c7 45 f0 1a 00 00 00 	movl   $0x1a,-0x10(%ebp)
 805637f:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 8056386:	83 ec 04             	sub    $0x4,%esp
 8056389:	ff 75 f4             	pushl  -0xc(%ebp)
 805638c:	ff 75 f0             	pushl  -0x10(%ebp)
 805638f:	ff 75 ec             	pushl  -0x14(%ebp)
 8056392:	e8 00 14 00 00       	call   8057797 <v_panic>
 8056397:	83 c4 10             	add    $0x10,%esp
 805639a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805639d:	8b 55 10             	mov    0x10(%ebp),%edx
 80563a0:	8d 4a ff             	lea    -0x1(%edx),%ecx
 80563a3:	8b 55 08             	mov    0x8(%ebp),%edx
 80563a6:	0f af d1             	imul   %ecx,%edx
 80563a9:	01 d0                	add    %edx,%eax
 80563ab:	c9                   	leave  
 80563ac:	c3                   	ret    

080563ad <array_pop>:
 80563ad:	55                   	push   %ebp
 80563ae:	89 e5                	mov    %esp,%ebp
 80563b0:	83 ec 28             	sub    $0x28,%esp
 80563b3:	8b 45 08             	mov    0x8(%ebp),%eax
 80563b6:	8b 40 08             	mov    0x8(%eax),%eax
 80563b9:	85 c0                	test   %eax,%eax
 80563bb:	75 29                	jne    80563e6 <array_pop+0x39>
 80563bd:	c7 45 ec 6a 9a 06 08 	movl   $0x8069a6a,-0x14(%ebp)
 80563c4:	c7 45 f0 19 00 00 00 	movl   $0x19,-0x10(%ebp)
 80563cb:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 80563d2:	83 ec 04             	sub    $0x4,%esp
 80563d5:	ff 75 f4             	pushl  -0xc(%ebp)
 80563d8:	ff 75 f0             	pushl  -0x10(%ebp)
 80563db:	ff 75 ec             	pushl  -0x14(%ebp)
 80563de:	e8 b4 13 00 00       	call   8057797 <v_panic>
 80563e3:	83 c4 10             	add    $0x10,%esp
 80563e6:	8b 45 08             	mov    0x8(%ebp),%eax
 80563e9:	8b 40 08             	mov    0x8(%eax),%eax
 80563ec:	83 e8 01             	sub    $0x1,%eax
 80563ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80563f2:	8b 45 08             	mov    0x8(%ebp),%eax
 80563f5:	8b 50 04             	mov    0x4(%eax),%edx
 80563f8:	8b 45 08             	mov    0x8(%ebp),%eax
 80563fb:	8b 00                	mov    (%eax),%eax
 80563fd:	0f af 45 e4          	imul   -0x1c(%ebp),%eax
 8056401:	01 d0                	add    %edx,%eax
 8056403:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8056406:	8b 45 08             	mov    0x8(%ebp),%eax
 8056409:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805640c:	89 50 08             	mov    %edx,0x8(%eax)
 805640f:	8b 45 08             	mov    0x8(%ebp),%eax
 8056412:	8b 00                	mov    (%eax),%eax
 8056414:	83 ec 08             	sub    $0x8,%esp
 8056417:	50                   	push   %eax
 8056418:	ff 75 e8             	pushl  -0x18(%ebp)
 805641b:	e8 a6 16 00 00       	call   8057ac6 <memdup>
 8056420:	83 c4 10             	add    $0x10,%esp
 8056423:	c9                   	leave  
 8056424:	c3                   	ret    

08056425 <array_delete_last>:
 8056425:	55                   	push   %ebp
 8056426:	89 e5                	mov    %esp,%ebp
 8056428:	83 ec 18             	sub    $0x18,%esp
 805642b:	8b 45 08             	mov    0x8(%ebp),%eax
 805642e:	8b 40 08             	mov    0x8(%eax),%eax
 8056431:	85 c0                	test   %eax,%eax
 8056433:	75 29                	jne    805645e <array_delete_last+0x39>
 8056435:	c7 45 ec 6a 9a 06 08 	movl   $0x8069a6a,-0x14(%ebp)
 805643c:	c7 45 f0 19 00 00 00 	movl   $0x19,-0x10(%ebp)
 8056443:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805644a:	83 ec 04             	sub    $0x4,%esp
 805644d:	ff 75 f4             	pushl  -0xc(%ebp)
 8056450:	ff 75 f0             	pushl  -0x10(%ebp)
 8056453:	ff 75 ec             	pushl  -0x14(%ebp)
 8056456:	e8 3c 13 00 00       	call   8057797 <v_panic>
 805645b:	83 c4 10             	add    $0x10,%esp
 805645e:	8b 45 08             	mov    0x8(%ebp),%eax
 8056461:	8b 40 08             	mov    0x8(%eax),%eax
 8056464:	8d 50 ff             	lea    -0x1(%eax),%edx
 8056467:	8b 45 08             	mov    0x8(%ebp),%eax
 805646a:	89 50 08             	mov    %edx,0x8(%eax)
 805646d:	90                   	nop
 805646e:	c9                   	leave  
 805646f:	c3                   	ret    

08056470 <array_slice>:
 8056470:	55                   	push   %ebp
 8056471:	89 e5                	mov    %esp,%ebp
 8056473:	83 ec 68             	sub    $0x68,%esp
 8056476:	8b 45 08             	mov    0x8(%ebp),%eax
 8056479:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 805647c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056482:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056485:	31 c0                	xor    %eax,%eax
 8056487:	8b 45 20             	mov    0x20(%ebp),%eax
 805648a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805648d:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8056490:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 8056493:	7e 30                	jle    80564c5 <array_slice+0x55>
 8056495:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8056498:	83 ec 0c             	sub    $0xc,%esp
 805649b:	ff 75 b4             	pushl  -0x4c(%ebp)
 805649e:	ff 75 1c             	pushl  0x1c(%ebp)
 80564a1:	6a 03                	push   $0x3
 80564a3:	68 84 9a 06 08       	push   $0x8069a84
 80564a8:	50                   	push   %eax
 80564a9:	e8 16 30 ff ff       	call   80494c4 <_STR>
 80564ae:	83 c4 1c             	add    $0x1c,%esp
 80564b1:	83 ec 04             	sub    $0x4,%esp
 80564b4:	ff 75 c8             	pushl  -0x38(%ebp)
 80564b7:	ff 75 c4             	pushl  -0x3c(%ebp)
 80564ba:	ff 75 c0             	pushl  -0x40(%ebp)
 80564bd:	e8 d5 12 00 00       	call   8057797 <v_panic>
 80564c2:	83 c4 10             	add    $0x10,%esp
 80564c5:	8b 45 14             	mov    0x14(%ebp),%eax
 80564c8:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 80564cb:	7d 31                	jge    80564fe <array_slice+0x8e>
 80564cd:	8b 55 14             	mov    0x14(%ebp),%edx
 80564d0:	8d 45 cc             	lea    -0x34(%ebp),%eax
 80564d3:	83 ec 0c             	sub    $0xc,%esp
 80564d6:	52                   	push   %edx
 80564d7:	ff 75 b4             	pushl  -0x4c(%ebp)
 80564da:	6a 03                	push   $0x3
 80564dc:	68 b4 9a 06 08       	push   $0x8069ab4
 80564e1:	50                   	push   %eax
 80564e2:	e8 dd 2f ff ff       	call   80494c4 <_STR>
 80564e7:	83 c4 1c             	add    $0x1c,%esp
 80564ea:	83 ec 04             	sub    $0x4,%esp
 80564ed:	ff 75 d4             	pushl  -0x2c(%ebp)
 80564f0:	ff 75 d0             	pushl  -0x30(%ebp)
 80564f3:	ff 75 cc             	pushl  -0x34(%ebp)
 80564f6:	e8 9c 12 00 00       	call   8057797 <v_panic>
 80564fb:	83 c4 10             	add    $0x10,%esp
 80564fe:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
 8056502:	79 2a                	jns    805652e <array_slice+0xbe>
 8056504:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056507:	ff 75 1c             	pushl  0x1c(%ebp)
 805650a:	6a 02                	push   $0x2
 805650c:	68 e8 9a 06 08       	push   $0x8069ae8
 8056511:	50                   	push   %eax
 8056512:	e8 ad 2f ff ff       	call   80494c4 <_STR>
 8056517:	83 c4 0c             	add    $0xc,%esp
 805651a:	83 ec 04             	sub    $0x4,%esp
 805651d:	ff 75 e0             	pushl  -0x20(%ebp)
 8056520:	ff 75 dc             	pushl  -0x24(%ebp)
 8056523:	ff 75 d8             	pushl  -0x28(%ebp)
 8056526:	e8 6c 12 00 00       	call   8057797 <v_panic>
 805652b:	83 c4 10             	add    $0x10,%esp
 805652e:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 8056535:	8b 55 10             	mov    0x10(%ebp),%edx
 8056538:	8b 45 0c             	mov    0xc(%ebp),%eax
 805653b:	0f af 45 1c          	imul   0x1c(%ebp),%eax
 805653f:	01 d0                	add    %edx,%eax
 8056541:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8056544:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8056547:	2b 45 1c             	sub    0x1c(%ebp),%eax
 805654a:	89 45 bc             	mov    %eax,-0x44(%ebp)
 805654d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8056550:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8056553:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8056556:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8056559:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805655c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805655f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8056562:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8056565:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8056568:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805656b:	89 10                	mov    %edx,(%eax)
 805656d:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8056570:	89 50 04             	mov    %edx,0x4(%eax)
 8056573:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8056576:	89 50 08             	mov    %edx,0x8(%eax)
 8056579:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805657c:	89 50 0c             	mov    %edx,0xc(%eax)
 805657f:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8056582:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8056585:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805658c:	74 05                	je     8056593 <array_slice+0x123>
 805658e:	e8 8d 22 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056593:	c9                   	leave  
 8056594:	c2 04 00             	ret    $0x4

08056597 <array_slice2>:
 8056597:	55                   	push   %ebp
 8056598:	89 e5                	mov    %esp,%ebp
 805659a:	83 ec 28             	sub    $0x28,%esp
 805659d:	8b 45 08             	mov    0x8(%ebp),%eax
 80565a0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80565a3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80565a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80565ac:	31 c0                	xor    %eax,%eax
 80565ae:	83 7d 24 00          	cmpl   $0x0,0x24(%ebp)
 80565b2:	74 05                	je     80565b9 <array_slice2+0x22>
 80565b4:	8b 45 14             	mov    0x14(%ebp),%eax
 80565b7:	eb 03                	jmp    80565bc <array_slice2+0x25>
 80565b9:	8b 45 20             	mov    0x20(%ebp),%eax
 80565bc:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80565bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80565c2:	83 ec 04             	sub    $0x4,%esp
 80565c5:	ff 75 f0             	pushl  -0x10(%ebp)
 80565c8:	ff 75 1c             	pushl  0x1c(%ebp)
 80565cb:	ff 75 18             	pushl  0x18(%ebp)
 80565ce:	ff 75 14             	pushl  0x14(%ebp)
 80565d1:	ff 75 10             	pushl  0x10(%ebp)
 80565d4:	ff 75 0c             	pushl  0xc(%ebp)
 80565d7:	50                   	push   %eax
 80565d8:	e8 93 fe ff ff       	call   8056470 <array_slice>
 80565dd:	83 c4 1c             	add    $0x1c,%esp
 80565e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80565e3:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80565e6:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80565ed:	74 05                	je     80565f4 <array_slice2+0x5d>
 80565ef:	e8 2c 22 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80565f4:	c9                   	leave  
 80565f5:	c2 04 00             	ret    $0x4

080565f8 <array_clone_static>:
 80565f8:	55                   	push   %ebp
 80565f9:	89 e5                	mov    %esp,%ebp
 80565fb:	83 ec 28             	sub    $0x28,%esp
 80565fe:	8b 45 08             	mov    0x8(%ebp),%eax
 8056601:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8056604:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805660a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805660d:	31 c0                	xor    %eax,%eax
 805660f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056612:	83 ec 08             	sub    $0x8,%esp
 8056615:	8d 55 0c             	lea    0xc(%ebp),%edx
 8056618:	52                   	push   %edx
 8056619:	50                   	push   %eax
 805661a:	e8 1b 00 00 00       	call   805663a <array_clone>
 805661f:	83 c4 0c             	add    $0xc,%esp
 8056622:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056625:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8056628:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805662f:	74 05                	je     8056636 <array_clone_static+0x3e>
 8056631:	e8 ea 21 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056636:	c9                   	leave  
 8056637:	c2 04 00             	ret    $0x4

0805663a <array_clone>:
 805663a:	55                   	push   %ebp
 805663b:	89 e5                	mov    %esp,%ebp
 805663d:	53                   	push   %ebx
 805663e:	83 ec 54             	sub    $0x54,%esp
 8056641:	8b 45 08             	mov    0x8(%ebp),%eax
 8056644:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8056647:	8b 45 0c             	mov    0xc(%ebp),%eax
 805664a:	89 45 b0             	mov    %eax,-0x50(%ebp)
 805664d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056653:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056656:	31 c0                	xor    %eax,%eax
 8056658:	8b 45 b0             	mov    -0x50(%ebp),%eax
 805665b:	8b 50 0c             	mov    0xc(%eax),%edx
 805665e:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8056661:	8b 00                	mov    (%eax),%eax
 8056663:	0f af c2             	imul   %edx,%eax
 8056666:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8056669:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)
 805666d:	75 04                	jne    8056673 <array_clone+0x39>
 805666f:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 8056673:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8056676:	8b 00                	mov    (%eax),%eax
 8056678:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805667b:	83 ec 0c             	sub    $0xc,%esp
 805667e:	ff 75 b8             	pushl  -0x48(%ebp)
 8056681:	e8 d2 13 00 00       	call   8057a58 <vcalloc>
 8056686:	83 c4 10             	add    $0x10,%esp
 8056689:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805668c:	8b 45 b0             	mov    -0x50(%ebp),%eax
 805668f:	8b 40 08             	mov    0x8(%eax),%eax
 8056692:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8056695:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8056698:	8b 40 0c             	mov    0xc(%eax),%eax
 805669b:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805669e:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%ebp)
 80566a5:	8b 45 b0             	mov    -0x50(%ebp),%eax
 80566a8:	8b 00                	mov    (%eax),%eax
 80566aa:	3b 45 c0             	cmp    -0x40(%ebp),%eax
 80566ad:	0f 85 93 00 00 00    	jne    8056746 <array_clone+0x10c>
 80566b3:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 80566ba:	eb 79                	jmp    8056735 <array_clone+0xfb>
 80566bc:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 80566c3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 80566ca:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 80566d1:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 80566d8:	8b 5d c0             	mov    -0x40(%ebp),%ebx
 80566db:	83 ec 0c             	sub    $0xc,%esp
 80566de:	ff 75 bc             	pushl  -0x44(%ebp)
 80566e1:	8b 45 b0             	mov    -0x50(%ebp),%eax
 80566e4:	ff 70 0c             	pushl  0xc(%eax)
 80566e7:	ff 70 08             	pushl  0x8(%eax)
 80566ea:	ff 70 04             	pushl  0x4(%eax)
 80566ed:	ff 30                	pushl  (%eax)
 80566ef:	e8 b5 fb ff ff       	call   80562a9 <array_get_unsafe>
 80566f4:	83 c4 20             	add    $0x20,%esp
 80566f7:	83 ec 04             	sub    $0x4,%esp
 80566fa:	53                   	push   %ebx
 80566fb:	50                   	push   %eax
 80566fc:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 80566ff:	50                   	push   %eax
 8056700:	e8 bb 20 ff ff       	call   80487c0 <memcpy@plt>
 8056705:	83 c4 10             	add    $0x10,%esp
 8056708:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805670b:	83 ec 08             	sub    $0x8,%esp
 805670e:	8d 55 d4             	lea    -0x2c(%ebp),%edx
 8056711:	52                   	push   %edx
 8056712:	50                   	push   %eax
 8056713:	e8 22 ff ff ff       	call   805663a <array_clone>
 8056718:	83 c4 0c             	add    $0xc,%esp
 805671b:	83 ec 04             	sub    $0x4,%esp
 805671e:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8056721:	50                   	push   %eax
 8056722:	ff 75 bc             	pushl  -0x44(%ebp)
 8056725:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 8056728:	50                   	push   %eax
 8056729:	e8 bd 01 00 00       	call   80568eb <array_set_unsafe>
 805672e:	83 c4 10             	add    $0x10,%esp
 8056731:	83 45 bc 01          	addl   $0x1,-0x44(%ebp)
 8056735:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8056738:	8b 40 08             	mov    0x8(%eax),%eax
 805673b:	3b 45 bc             	cmp    -0x44(%ebp),%eax
 805673e:	0f 8f 78 ff ff ff    	jg     80566bc <array_clone+0x82>
 8056744:	eb 3d                	jmp    8056783 <array_clone+0x149>
 8056746:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8056749:	8b 40 04             	mov    0x4(%eax),%eax
 805674c:	83 ec 0c             	sub    $0xc,%esp
 805674f:	50                   	push   %eax
 8056750:	e8 e1 13 00 00       	call   8057b36 <isnil>
 8056755:	83 c4 10             	add    $0x10,%esp
 8056758:	85 c0                	test   %eax,%eax
 805675a:	75 27                	jne    8056783 <array_clone+0x149>
 805675c:	8b 45 b0             	mov    -0x50(%ebp),%eax
 805675f:	8b 50 0c             	mov    0xc(%eax),%edx
 8056762:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8056765:	8b 00                	mov    (%eax),%eax
 8056767:	0f af c2             	imul   %edx,%eax
 805676a:	89 c1                	mov    %eax,%ecx
 805676c:	8b 45 b0             	mov    -0x50(%ebp),%eax
 805676f:	8b 50 04             	mov    0x4(%eax),%edx
 8056772:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8056775:	83 ec 04             	sub    $0x4,%esp
 8056778:	51                   	push   %ecx
 8056779:	52                   	push   %edx
 805677a:	50                   	push   %eax
 805677b:	e8 40 20 ff ff       	call   80487c0 <memcpy@plt>
 8056780:	83 c4 10             	add    $0x10,%esp
 8056783:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8056786:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8056789:	89 10                	mov    %edx,(%eax)
 805678b:	8b 55 c8             	mov    -0x38(%ebp),%edx
 805678e:	89 50 04             	mov    %edx,0x4(%eax)
 8056791:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8056794:	89 50 08             	mov    %edx,0x8(%eax)
 8056797:	8b 55 d0             	mov    -0x30(%ebp),%edx
 805679a:	89 50 0c             	mov    %edx,0xc(%eax)
 805679d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80567a0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80567a3:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80567aa:	74 05                	je     80567b1 <array_clone+0x177>
 80567ac:	e8 6f 20 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80567b1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80567b4:	c9                   	leave  
 80567b5:	c2 04 00             	ret    $0x4

080567b8 <array_slice_clone>:
 80567b8:	55                   	push   %ebp
 80567b9:	89 e5                	mov    %esp,%ebp
 80567bb:	83 ec 68             	sub    $0x68,%esp
 80567be:	8b 45 08             	mov    0x8(%ebp),%eax
 80567c1:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 80567c4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80567c7:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80567ca:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80567d0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80567d3:	31 c0                	xor    %eax,%eax
 80567d5:	8b 45 14             	mov    0x14(%ebp),%eax
 80567d8:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80567db:	8b 45 10             	mov    0x10(%ebp),%eax
 80567de:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 80567e1:	7e 30                	jle    8056813 <array_slice_clone+0x5b>
 80567e3:	8d 45 c0             	lea    -0x40(%ebp),%eax
 80567e6:	83 ec 0c             	sub    $0xc,%esp
 80567e9:	ff 75 b4             	pushl  -0x4c(%ebp)
 80567ec:	ff 75 10             	pushl  0x10(%ebp)
 80567ef:	6a 03                	push   $0x3
 80567f1:	68 84 9a 06 08       	push   $0x8069a84
 80567f6:	50                   	push   %eax
 80567f7:	e8 c8 2c ff ff       	call   80494c4 <_STR>
 80567fc:	83 c4 1c             	add    $0x1c,%esp
 80567ff:	83 ec 04             	sub    $0x4,%esp
 8056802:	ff 75 c8             	pushl  -0x38(%ebp)
 8056805:	ff 75 c4             	pushl  -0x3c(%ebp)
 8056808:	ff 75 c0             	pushl  -0x40(%ebp)
 805680b:	e8 87 0f 00 00       	call   8057797 <v_panic>
 8056810:	83 c4 10             	add    $0x10,%esp
 8056813:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8056816:	8b 40 08             	mov    0x8(%eax),%eax
 8056819:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 805681c:	7d 34                	jge    8056852 <array_slice_clone+0x9a>
 805681e:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8056821:	8b 50 08             	mov    0x8(%eax),%edx
 8056824:	8d 45 cc             	lea    -0x34(%ebp),%eax
 8056827:	83 ec 0c             	sub    $0xc,%esp
 805682a:	52                   	push   %edx
 805682b:	ff 75 b4             	pushl  -0x4c(%ebp)
 805682e:	6a 03                	push   $0x3
 8056830:	68 b4 9a 06 08       	push   $0x8069ab4
 8056835:	50                   	push   %eax
 8056836:	e8 89 2c ff ff       	call   80494c4 <_STR>
 805683b:	83 c4 1c             	add    $0x1c,%esp
 805683e:	83 ec 04             	sub    $0x4,%esp
 8056841:	ff 75 d4             	pushl  -0x2c(%ebp)
 8056844:	ff 75 d0             	pushl  -0x30(%ebp)
 8056847:	ff 75 cc             	pushl  -0x34(%ebp)
 805684a:	e8 48 0f 00 00       	call   8057797 <v_panic>
 805684f:	83 c4 10             	add    $0x10,%esp
 8056852:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8056856:	79 2a                	jns    8056882 <array_slice_clone+0xca>
 8056858:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805685b:	ff 75 10             	pushl  0x10(%ebp)
 805685e:	6a 02                	push   $0x2
 8056860:	68 e8 9a 06 08       	push   $0x8069ae8
 8056865:	50                   	push   %eax
 8056866:	e8 59 2c ff ff       	call   80494c4 <_STR>
 805686b:	83 c4 0c             	add    $0xc,%esp
 805686e:	83 ec 04             	sub    $0x4,%esp
 8056871:	ff 75 e0             	pushl  -0x20(%ebp)
 8056874:	ff 75 dc             	pushl  -0x24(%ebp)
 8056877:	ff 75 d8             	pushl  -0x28(%ebp)
 805687a:	e8 18 0f 00 00       	call   8057797 <v_panic>
 805687f:	83 c4 10             	add    $0x10,%esp
 8056882:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 8056889:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805688c:	8b 50 04             	mov    0x4(%eax),%edx
 805688f:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8056892:	8b 00                	mov    (%eax),%eax
 8056894:	0f af 45 10          	imul   0x10(%ebp),%eax
 8056898:	01 d0                	add    %edx,%eax
 805689a:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805689d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80568a0:	2b 45 10             	sub    0x10(%ebp),%eax
 80568a3:	89 45 bc             	mov    %eax,-0x44(%ebp)
 80568a6:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80568a9:	8b 00                	mov    (%eax),%eax
 80568ab:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80568ae:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80568b1:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80568b4:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80568b7:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80568ba:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80568bd:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80568c0:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80568c3:	83 ec 08             	sub    $0x8,%esp
 80568c6:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80568c9:	52                   	push   %edx
 80568ca:	50                   	push   %eax
 80568cb:	e8 6a fd ff ff       	call   805663a <array_clone>
 80568d0:	83 c4 0c             	add    $0xc,%esp
 80568d3:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80568d6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80568d9:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80568e0:	74 05                	je     80568e7 <array_slice_clone+0x12f>
 80568e2:	e8 39 1f ff ff       	call   8048820 <__stack_chk_fail@plt>
 80568e7:	c9                   	leave  
 80568e8:	c2 04 00             	ret    $0x4

080568eb <array_set_unsafe>:
 80568eb:	55                   	push   %ebp
 80568ec:	89 e5                	mov    %esp,%ebp
 80568ee:	83 ec 08             	sub    $0x8,%esp
 80568f1:	8b 45 08             	mov    0x8(%ebp),%eax
 80568f4:	8b 00                	mov    (%eax),%eax
 80568f6:	89 c1                	mov    %eax,%ecx
 80568f8:	8b 45 08             	mov    0x8(%ebp),%eax
 80568fb:	8b 50 04             	mov    0x4(%eax),%edx
 80568fe:	8b 45 08             	mov    0x8(%ebp),%eax
 8056901:	8b 00                	mov    (%eax),%eax
 8056903:	0f af 45 0c          	imul   0xc(%ebp),%eax
 8056907:	01 d0                	add    %edx,%eax
 8056909:	83 ec 04             	sub    $0x4,%esp
 805690c:	51                   	push   %ecx
 805690d:	ff 75 10             	pushl  0x10(%ebp)
 8056910:	50                   	push   %eax
 8056911:	e8 aa 1e ff ff       	call   80487c0 <memcpy@plt>
 8056916:	83 c4 10             	add    $0x10,%esp
 8056919:	90                   	nop
 805691a:	c9                   	leave  
 805691b:	c3                   	ret    

0805691c <array_set>:
 805691c:	55                   	push   %ebp
 805691d:	89 e5                	mov    %esp,%ebp
 805691f:	83 ec 28             	sub    $0x28,%esp
 8056922:	8b 45 08             	mov    0x8(%ebp),%eax
 8056925:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8056928:	8b 45 10             	mov    0x10(%ebp),%eax
 805692b:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805692e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056934:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056937:	31 c0                	xor    %eax,%eax
 8056939:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 805693d:	78 0b                	js     805694a <array_set+0x2e>
 805693f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056942:	8b 40 08             	mov    0x8(%eax),%eax
 8056945:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8056948:	7f 34                	jg     805697e <array_set+0x62>
 805694a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805694d:	8b 50 08             	mov    0x8(%eax),%edx
 8056950:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8056953:	83 ec 0c             	sub    $0xc,%esp
 8056956:	52                   	push   %edx
 8056957:	ff 75 0c             	pushl  0xc(%ebp)
 805695a:	6a 03                	push   $0x3
 805695c:	68 1c 9b 06 08       	push   $0x8069b1c
 8056961:	50                   	push   %eax
 8056962:	e8 5d 2b ff ff       	call   80494c4 <_STR>
 8056967:	83 c4 1c             	add    $0x1c,%esp
 805696a:	83 ec 04             	sub    $0x4,%esp
 805696d:	ff 75 f0             	pushl  -0x10(%ebp)
 8056970:	ff 75 ec             	pushl  -0x14(%ebp)
 8056973:	ff 75 e8             	pushl  -0x18(%ebp)
 8056976:	e8 1c 0e 00 00       	call   8057797 <v_panic>
 805697b:	83 c4 10             	add    $0x10,%esp
 805697e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056981:	8b 00                	mov    (%eax),%eax
 8056983:	89 c1                	mov    %eax,%ecx
 8056985:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8056988:	8b 50 04             	mov    0x4(%eax),%edx
 805698b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805698e:	8b 00                	mov    (%eax),%eax
 8056990:	0f af 45 0c          	imul   0xc(%ebp),%eax
 8056994:	01 d0                	add    %edx,%eax
 8056996:	83 ec 04             	sub    $0x4,%esp
 8056999:	51                   	push   %ecx
 805699a:	ff 75 e0             	pushl  -0x20(%ebp)
 805699d:	50                   	push   %eax
 805699e:	e8 1d 1e ff ff       	call   80487c0 <memcpy@plt>
 80569a3:	83 c4 10             	add    $0x10,%esp
 80569a6:	90                   	nop
 80569a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80569aa:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80569b1:	74 05                	je     80569b8 <array_set+0x9c>
 80569b3:	e8 68 1e ff ff       	call   8048820 <__stack_chk_fail@plt>
 80569b8:	c9                   	leave  
 80569b9:	c3                   	ret    

080569ba <array_push>:
 80569ba:	55                   	push   %ebp
 80569bb:	89 e5                	mov    %esp,%ebp
 80569bd:	53                   	push   %ebx
 80569be:	83 ec 04             	sub    $0x4,%esp
 80569c1:	8b 45 08             	mov    0x8(%ebp),%eax
 80569c4:	8b 40 08             	mov    0x8(%eax),%eax
 80569c7:	83 c0 01             	add    $0x1,%eax
 80569ca:	83 ec 08             	sub    $0x8,%esp
 80569cd:	50                   	push   %eax
 80569ce:	ff 75 08             	pushl  0x8(%ebp)
 80569d1:	e8 ba f2 ff ff       	call   8055c90 <array_ensure_cap>
 80569d6:	83 c4 10             	add    $0x10,%esp
 80569d9:	8b 45 08             	mov    0x8(%ebp),%eax
 80569dc:	8b 00                	mov    (%eax),%eax
 80569de:	89 c3                	mov    %eax,%ebx
 80569e0:	8b 45 08             	mov    0x8(%ebp),%eax
 80569e3:	8b 50 04             	mov    0x4(%eax),%edx
 80569e6:	8b 45 08             	mov    0x8(%ebp),%eax
 80569e9:	8b 08                	mov    (%eax),%ecx
 80569eb:	8b 45 08             	mov    0x8(%ebp),%eax
 80569ee:	8b 40 08             	mov    0x8(%eax),%eax
 80569f1:	0f af c1             	imul   %ecx,%eax
 80569f4:	01 d0                	add    %edx,%eax
 80569f6:	83 ec 04             	sub    $0x4,%esp
 80569f9:	53                   	push   %ebx
 80569fa:	ff 75 0c             	pushl  0xc(%ebp)
 80569fd:	50                   	push   %eax
 80569fe:	e8 9d 1d ff ff       	call   80487a0 <memmove@plt>
 8056a03:	83 c4 10             	add    $0x10,%esp
 8056a06:	8b 45 08             	mov    0x8(%ebp),%eax
 8056a09:	8b 40 08             	mov    0x8(%eax),%eax
 8056a0c:	8d 50 01             	lea    0x1(%eax),%edx
 8056a0f:	8b 45 08             	mov    0x8(%ebp),%eax
 8056a12:	89 50 08             	mov    %edx,0x8(%eax)
 8056a15:	90                   	nop
 8056a16:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8056a19:	c9                   	leave  
 8056a1a:	c3                   	ret    

08056a1b <array_push_many>:
 8056a1b:	55                   	push   %ebp
 8056a1c:	89 e5                	mov    %esp,%ebp
 8056a1e:	56                   	push   %esi
 8056a1f:	53                   	push   %ebx
 8056a20:	83 ec 30             	sub    $0x30,%esp
 8056a23:	8b 45 08             	mov    0x8(%ebp),%eax
 8056a26:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8056a29:	8b 45 0c             	mov    0xc(%ebp),%eax
 8056a2c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8056a2f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056a35:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056a38:	31 c0                	xor    %eax,%eax
 8056a3a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056a3d:	8b 40 04             	mov    0x4(%eax),%eax
 8056a40:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 8056a43:	0f 85 80 00 00 00    	jne    8056ac9 <array_push_many+0xae>
 8056a49:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056a4c:	8b 40 04             	mov    0x4(%eax),%eax
 8056a4f:	83 ec 0c             	sub    $0xc,%esp
 8056a52:	50                   	push   %eax
 8056a53:	e8 de 10 00 00       	call   8057b36 <isnil>
 8056a58:	83 c4 10             	add    $0x10,%esp
 8056a5b:	85 c0                	test   %eax,%eax
 8056a5d:	75 6a                	jne    8056ac9 <array_push_many+0xae>
 8056a5f:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8056a62:	83 ec 08             	sub    $0x8,%esp
 8056a65:	ff 75 d4             	pushl  -0x2c(%ebp)
 8056a68:	50                   	push   %eax
 8056a69:	e8 cc fb ff ff       	call   805663a <array_clone>
 8056a6e:	83 c4 0c             	add    $0xc,%esp
 8056a71:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056a74:	8b 50 08             	mov    0x8(%eax),%edx
 8056a77:	8b 45 10             	mov    0x10(%ebp),%eax
 8056a7a:	01 d0                	add    %edx,%eax
 8056a7c:	83 ec 08             	sub    $0x8,%esp
 8056a7f:	50                   	push   %eax
 8056a80:	ff 75 d4             	pushl  -0x2c(%ebp)
 8056a83:	e8 08 f2 ff ff       	call   8055c90 <array_ensure_cap>
 8056a88:	83 c4 10             	add    $0x10,%esp
 8056a8b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056a8e:	8b 00                	mov    (%eax),%eax
 8056a90:	0f af 45 10          	imul   0x10(%ebp),%eax
 8056a94:	89 c6                	mov    %eax,%esi
 8056a96:	8b 5d e8             	mov    -0x18(%ebp),%ebx
 8056a99:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056a9c:	8b 40 08             	mov    0x8(%eax),%eax
 8056a9f:	83 ec 0c             	sub    $0xc,%esp
 8056aa2:	50                   	push   %eax
 8056aa3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056aa6:	ff 70 0c             	pushl  0xc(%eax)
 8056aa9:	ff 70 08             	pushl  0x8(%eax)
 8056aac:	ff 70 04             	pushl  0x4(%eax)
 8056aaf:	ff 30                	pushl  (%eax)
 8056ab1:	e8 f3 f7 ff ff       	call   80562a9 <array_get_unsafe>
 8056ab6:	83 c4 20             	add    $0x20,%esp
 8056ab9:	83 ec 04             	sub    $0x4,%esp
 8056abc:	56                   	push   %esi
 8056abd:	53                   	push   %ebx
 8056abe:	50                   	push   %eax
 8056abf:	e8 fc 1c ff ff       	call   80487c0 <memcpy@plt>
 8056ac4:	83 c4 10             	add    $0x10,%esp
 8056ac7:	eb 7d                	jmp    8056b46 <array_push_many+0x12b>
 8056ac9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056acc:	8b 50 08             	mov    0x8(%eax),%edx
 8056acf:	8b 45 10             	mov    0x10(%ebp),%eax
 8056ad2:	01 d0                	add    %edx,%eax
 8056ad4:	83 ec 08             	sub    $0x8,%esp
 8056ad7:	50                   	push   %eax
 8056ad8:	ff 75 d4             	pushl  -0x2c(%ebp)
 8056adb:	e8 b0 f1 ff ff       	call   8055c90 <array_ensure_cap>
 8056ae0:	83 c4 10             	add    $0x10,%esp
 8056ae3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056ae6:	8b 40 04             	mov    0x4(%eax),%eax
 8056ae9:	83 ec 0c             	sub    $0xc,%esp
 8056aec:	50                   	push   %eax
 8056aed:	e8 44 10 00 00       	call   8057b36 <isnil>
 8056af2:	83 c4 10             	add    $0x10,%esp
 8056af5:	85 c0                	test   %eax,%eax
 8056af7:	75 4d                	jne    8056b46 <array_push_many+0x12b>
 8056af9:	83 ec 0c             	sub    $0xc,%esp
 8056afc:	ff 75 d0             	pushl  -0x30(%ebp)
 8056aff:	e8 32 10 00 00       	call   8057b36 <isnil>
 8056b04:	83 c4 10             	add    $0x10,%esp
 8056b07:	85 c0                	test   %eax,%eax
 8056b09:	75 3b                	jne    8056b46 <array_push_many+0x12b>
 8056b0b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056b0e:	8b 00                	mov    (%eax),%eax
 8056b10:	0f af 45 10          	imul   0x10(%ebp),%eax
 8056b14:	89 c3                	mov    %eax,%ebx
 8056b16:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056b19:	8b 40 08             	mov    0x8(%eax),%eax
 8056b1c:	83 ec 0c             	sub    $0xc,%esp
 8056b1f:	50                   	push   %eax
 8056b20:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056b23:	ff 70 0c             	pushl  0xc(%eax)
 8056b26:	ff 70 08             	pushl  0x8(%eax)
 8056b29:	ff 70 04             	pushl  0x4(%eax)
 8056b2c:	ff 30                	pushl  (%eax)
 8056b2e:	e8 76 f7 ff ff       	call   80562a9 <array_get_unsafe>
 8056b33:	83 c4 20             	add    $0x20,%esp
 8056b36:	83 ec 04             	sub    $0x4,%esp
 8056b39:	53                   	push   %ebx
 8056b3a:	ff 75 d0             	pushl  -0x30(%ebp)
 8056b3d:	50                   	push   %eax
 8056b3e:	e8 7d 1c ff ff       	call   80487c0 <memcpy@plt>
 8056b43:	83 c4 10             	add    $0x10,%esp
 8056b46:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056b49:	8b 50 08             	mov    0x8(%eax),%edx
 8056b4c:	8b 45 10             	mov    0x10(%ebp),%eax
 8056b4f:	01 c2                	add    %eax,%edx
 8056b51:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056b54:	89 50 08             	mov    %edx,0x8(%eax)
 8056b57:	90                   	nop
 8056b58:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8056b5b:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8056b62:	74 05                	je     8056b69 <array_push_many+0x14e>
 8056b64:	e8 b7 1c ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056b69:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8056b6c:	5b                   	pop    %ebx
 8056b6d:	5e                   	pop    %esi
 8056b6e:	5d                   	pop    %ebp
 8056b6f:	c3                   	ret    

08056b70 <array_reverse_in_place>:
 8056b70:	55                   	push   %ebp
 8056b71:	89 e5                	mov    %esp,%ebp
 8056b73:	53                   	push   %ebx
 8056b74:	83 ec 14             	sub    $0x14,%esp
 8056b77:	8b 45 08             	mov    0x8(%ebp),%eax
 8056b7a:	8b 40 08             	mov    0x8(%eax),%eax
 8056b7d:	83 f8 01             	cmp    $0x1,%eax
 8056b80:	0f 8e ed 00 00 00    	jle    8056c73 <array_reverse_in_place+0x103>
 8056b86:	8b 45 08             	mov    0x8(%ebp),%eax
 8056b89:	8b 00                	mov    (%eax),%eax
 8056b8b:	83 ec 0c             	sub    $0xc,%esp
 8056b8e:	50                   	push   %eax
 8056b8f:	e8 93 0d 00 00       	call   8057927 <v_malloc>
 8056b94:	83 c4 10             	add    $0x10,%esp
 8056b97:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056b9a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8056ba1:	e9 a5 00 00 00       	jmp    8056c4b <array_reverse_in_place+0xdb>
 8056ba6:	8b 45 08             	mov    0x8(%ebp),%eax
 8056ba9:	8b 00                	mov    (%eax),%eax
 8056bab:	89 c1                	mov    %eax,%ecx
 8056bad:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bb0:	8b 50 04             	mov    0x4(%eax),%edx
 8056bb3:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bb6:	8b 00                	mov    (%eax),%eax
 8056bb8:	0f af 45 f0          	imul   -0x10(%ebp),%eax
 8056bbc:	01 d0                	add    %edx,%eax
 8056bbe:	83 ec 04             	sub    $0x4,%esp
 8056bc1:	51                   	push   %ecx
 8056bc2:	50                   	push   %eax
 8056bc3:	ff 75 f4             	pushl  -0xc(%ebp)
 8056bc6:	e8 f5 1b ff ff       	call   80487c0 <memcpy@plt>
 8056bcb:	83 c4 10             	add    $0x10,%esp
 8056bce:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bd1:	8b 00                	mov    (%eax),%eax
 8056bd3:	89 c3                	mov    %eax,%ebx
 8056bd5:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bd8:	8b 50 04             	mov    0x4(%eax),%edx
 8056bdb:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bde:	8b 40 08             	mov    0x8(%eax),%eax
 8056be1:	83 e8 01             	sub    $0x1,%eax
 8056be4:	2b 45 f0             	sub    -0x10(%ebp),%eax
 8056be7:	89 c1                	mov    %eax,%ecx
 8056be9:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bec:	8b 00                	mov    (%eax),%eax
 8056bee:	0f af c1             	imul   %ecx,%eax
 8056bf1:	01 c2                	add    %eax,%edx
 8056bf3:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bf6:	8b 48 04             	mov    0x4(%eax),%ecx
 8056bf9:	8b 45 08             	mov    0x8(%ebp),%eax
 8056bfc:	8b 00                	mov    (%eax),%eax
 8056bfe:	0f af 45 f0          	imul   -0x10(%ebp),%eax
 8056c02:	01 c8                	add    %ecx,%eax
 8056c04:	83 ec 04             	sub    $0x4,%esp
 8056c07:	53                   	push   %ebx
 8056c08:	52                   	push   %edx
 8056c09:	50                   	push   %eax
 8056c0a:	e8 b1 1b ff ff       	call   80487c0 <memcpy@plt>
 8056c0f:	83 c4 10             	add    $0x10,%esp
 8056c12:	8b 45 08             	mov    0x8(%ebp),%eax
 8056c15:	8b 00                	mov    (%eax),%eax
 8056c17:	89 c3                	mov    %eax,%ebx
 8056c19:	8b 45 08             	mov    0x8(%ebp),%eax
 8056c1c:	8b 50 04             	mov    0x4(%eax),%edx
 8056c1f:	8b 45 08             	mov    0x8(%ebp),%eax
 8056c22:	8b 40 08             	mov    0x8(%eax),%eax
 8056c25:	83 e8 01             	sub    $0x1,%eax
 8056c28:	2b 45 f0             	sub    -0x10(%ebp),%eax
 8056c2b:	89 c1                	mov    %eax,%ecx
 8056c2d:	8b 45 08             	mov    0x8(%ebp),%eax
 8056c30:	8b 00                	mov    (%eax),%eax
 8056c32:	0f af c1             	imul   %ecx,%eax
 8056c35:	01 d0                	add    %edx,%eax
 8056c37:	83 ec 04             	sub    $0x4,%esp
 8056c3a:	53                   	push   %ebx
 8056c3b:	ff 75 f4             	pushl  -0xc(%ebp)
 8056c3e:	50                   	push   %eax
 8056c3f:	e8 7c 1b ff ff       	call   80487c0 <memcpy@plt>
 8056c44:	83 c4 10             	add    $0x10,%esp
 8056c47:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8056c4b:	8b 45 08             	mov    0x8(%ebp),%eax
 8056c4e:	8b 40 08             	mov    0x8(%eax),%eax
 8056c51:	89 c2                	mov    %eax,%edx
 8056c53:	c1 ea 1f             	shr    $0x1f,%edx
 8056c56:	01 d0                	add    %edx,%eax
 8056c58:	d1 f8                	sar    %eax
 8056c5a:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8056c5d:	0f 8f 43 ff ff ff    	jg     8056ba6 <array_reverse_in_place+0x36>
 8056c63:	83 ec 0c             	sub    $0xc,%esp
 8056c66:	ff 75 f4             	pushl  -0xc(%ebp)
 8056c69:	e8 41 0e 00 00       	call   8057aaf <v_free>
 8056c6e:	83 c4 10             	add    $0x10,%esp
 8056c71:	eb 01                	jmp    8056c74 <array_reverse_in_place+0x104>
 8056c73:	90                   	nop
 8056c74:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8056c77:	c9                   	leave  
 8056c78:	c3                   	ret    

08056c79 <array_reverse>:
 8056c79:	55                   	push   %ebp
 8056c7a:	89 e5                	mov    %esp,%ebp
 8056c7c:	83 ec 38             	sub    $0x38,%esp
 8056c7f:	8b 45 08             	mov    0x8(%ebp),%eax
 8056c82:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8056c85:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056c8b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056c8e:	31 c0                	xor    %eax,%eax
 8056c90:	8b 45 14             	mov    0x14(%ebp),%eax
 8056c93:	83 f8 01             	cmp    $0x1,%eax
 8056c96:	7f 1f                	jg     8056cb7 <array_reverse+0x3e>
 8056c98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056c9b:	8b 55 0c             	mov    0xc(%ebp),%edx
 8056c9e:	89 10                	mov    %edx,(%eax)
 8056ca0:	8b 55 10             	mov    0x10(%ebp),%edx
 8056ca3:	89 50 04             	mov    %edx,0x4(%eax)
 8056ca6:	8b 55 14             	mov    0x14(%ebp),%edx
 8056ca9:	89 50 08             	mov    %edx,0x8(%eax)
 8056cac:	8b 55 18             	mov    0x18(%ebp),%edx
 8056caf:	89 50 0c             	mov    %edx,0xc(%eax)
 8056cb2:	e9 8d 00 00 00       	jmp    8056d44 <array_reverse+0xcb>
 8056cb7:	8b 45 0c             	mov    0xc(%ebp),%eax
 8056cba:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8056cbd:	8b 55 18             	mov    0x18(%ebp),%edx
 8056cc0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8056cc3:	0f af c2             	imul   %edx,%eax
 8056cc6:	83 ec 0c             	sub    $0xc,%esp
 8056cc9:	50                   	push   %eax
 8056cca:	e8 89 0d 00 00       	call   8057a58 <vcalloc>
 8056ccf:	83 c4 10             	add    $0x10,%esp
 8056cd2:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8056cd5:	8b 45 14             	mov    0x14(%ebp),%eax
 8056cd8:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8056cdb:	8b 45 18             	mov    0x18(%ebp),%eax
 8056cde:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8056ce1:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 8056ce8:	eb 38                	jmp    8056d22 <array_reverse+0xa9>
 8056cea:	8b 45 14             	mov    0x14(%ebp),%eax
 8056ced:	83 e8 01             	sub    $0x1,%eax
 8056cf0:	2b 45 e0             	sub    -0x20(%ebp),%eax
 8056cf3:	83 ec 0c             	sub    $0xc,%esp
 8056cf6:	50                   	push   %eax
 8056cf7:	ff 75 18             	pushl  0x18(%ebp)
 8056cfa:	ff 75 14             	pushl  0x14(%ebp)
 8056cfd:	ff 75 10             	pushl  0x10(%ebp)
 8056d00:	ff 75 0c             	pushl  0xc(%ebp)
 8056d03:	e8 a1 f5 ff ff       	call   80562a9 <array_get_unsafe>
 8056d08:	83 c4 20             	add    $0x20,%esp
 8056d0b:	83 ec 04             	sub    $0x4,%esp
 8056d0e:	50                   	push   %eax
 8056d0f:	ff 75 e0             	pushl  -0x20(%ebp)
 8056d12:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8056d15:	50                   	push   %eax
 8056d16:	e8 d0 fb ff ff       	call   80568eb <array_set_unsafe>
 8056d1b:	83 c4 10             	add    $0x10,%esp
 8056d1e:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 8056d22:	8b 45 14             	mov    0x14(%ebp),%eax
 8056d25:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 8056d28:	7f c0                	jg     8056cea <array_reverse+0x71>
 8056d2a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056d2d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8056d30:	89 10                	mov    %edx,(%eax)
 8056d32:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8056d35:	89 50 04             	mov    %edx,0x4(%eax)
 8056d38:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8056d3b:	89 50 08             	mov    %edx,0x8(%eax)
 8056d3e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8056d41:	89 50 0c             	mov    %edx,0xc(%eax)
 8056d44:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8056d47:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8056d4a:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8056d51:	74 05                	je     8056d58 <array_reverse+0xdf>
 8056d53:	e8 c8 1a ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056d58:	c9                   	leave  
 8056d59:	c2 04 00             	ret    $0x4

08056d5c <array_free>:
 8056d5c:	55                   	push   %ebp
 8056d5d:	89 e5                	mov    %esp,%ebp
 8056d5f:	83 ec 08             	sub    $0x8,%esp
 8056d62:	8b 45 08             	mov    0x8(%ebp),%eax
 8056d65:	8b 40 04             	mov    0x4(%eax),%eax
 8056d68:	83 ec 0c             	sub    $0xc,%esp
 8056d6b:	50                   	push   %eax
 8056d6c:	e8 3f 1a ff ff       	call   80487b0 <free@plt>
 8056d71:	83 c4 10             	add    $0x10,%esp
 8056d74:	90                   	nop
 8056d75:	c9                   	leave  
 8056d76:	c3                   	ret    

08056d77 <array_string_str>:
 8056d77:	55                   	push   %ebp
 8056d78:	89 e5                	mov    %esp,%ebp
 8056d7a:	83 ec 78             	sub    $0x78,%esp
 8056d7d:	8b 45 08             	mov    0x8(%ebp),%eax
 8056d80:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8056d83:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056d89:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056d8c:	31 c0                	xor    %eax,%eax
 8056d8e:	8b 55 14             	mov    0x14(%ebp),%edx
 8056d91:	89 d0                	mov    %edx,%eax
 8056d93:	01 c0                	add    %eax,%eax
 8056d95:	01 c2                	add    %eax,%edx
 8056d97:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056d9a:	83 ec 08             	sub    $0x8,%esp
 8056d9d:	52                   	push   %edx
 8056d9e:	50                   	push   %eax
 8056d9f:	e8 8e 2b ff ff       	call   8049932 <strings__new_builder>
 8056da4:	83 c4 0c             	add    $0xc,%esp
 8056da7:	c7 45 9c 2d 97 06 08 	movl   $0x806972d,-0x64(%ebp)
 8056dae:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)
 8056db5:	c7 45 a4 01 00 00 00 	movl   $0x1,-0x5c(%ebp)
 8056dbc:	ff 75 a4             	pushl  -0x5c(%ebp)
 8056dbf:	ff 75 a0             	pushl  -0x60(%ebp)
 8056dc2:	ff 75 9c             	pushl  -0x64(%ebp)
 8056dc5:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056dc8:	50                   	push   %eax
 8056dc9:	e8 6b 2c ff ff       	call   8049a39 <strings__Builder_write>
 8056dce:	83 c4 10             	add    $0x10,%esp
 8056dd1:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
 8056dd8:	e9 cd 00 00 00       	jmp    8056eaa <array_string_str+0x133>
 8056ddd:	83 ec 0c             	sub    $0xc,%esp
 8056de0:	ff 75 98             	pushl  -0x68(%ebp)
 8056de3:	ff 75 18             	pushl  0x18(%ebp)
 8056de6:	ff 75 14             	pushl  0x14(%ebp)
 8056de9:	ff 75 10             	pushl  0x10(%ebp)
 8056dec:	ff 75 0c             	pushl  0xc(%ebp)
 8056def:	e8 c6 f4 ff ff       	call   80562ba <array_get>
 8056df4:	83 c4 20             	add    $0x20,%esp
 8056df7:	8b 10                	mov    (%eax),%edx
 8056df9:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8056dfc:	8b 50 04             	mov    0x4(%eax),%edx
 8056dff:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8056e02:	8b 40 08             	mov    0x8(%eax),%eax
 8056e05:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8056e08:	c7 45 a8 53 9b 06 08 	movl   $0x8069b53,-0x58(%ebp)
 8056e0f:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)
 8056e16:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
 8056e1d:	ff 75 b0             	pushl  -0x50(%ebp)
 8056e20:	ff 75 ac             	pushl  -0x54(%ebp)
 8056e23:	ff 75 a8             	pushl  -0x58(%ebp)
 8056e26:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056e29:	50                   	push   %eax
 8056e2a:	e8 0a 2c ff ff       	call   8049a39 <strings__Builder_write>
 8056e2f:	83 c4 10             	add    $0x10,%esp
 8056e32:	ff 75 d4             	pushl  -0x2c(%ebp)
 8056e35:	ff 75 d0             	pushl  -0x30(%ebp)
 8056e38:	ff 75 cc             	pushl  -0x34(%ebp)
 8056e3b:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056e3e:	50                   	push   %eax
 8056e3f:	e8 f5 2b ff ff       	call   8049a39 <strings__Builder_write>
 8056e44:	83 c4 10             	add    $0x10,%esp
 8056e47:	c7 45 b4 53 9b 06 08 	movl   $0x8069b53,-0x4c(%ebp)
 8056e4e:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%ebp)
 8056e55:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
 8056e5c:	ff 75 bc             	pushl  -0x44(%ebp)
 8056e5f:	ff 75 b8             	pushl  -0x48(%ebp)
 8056e62:	ff 75 b4             	pushl  -0x4c(%ebp)
 8056e65:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056e68:	50                   	push   %eax
 8056e69:	e8 cb 2b ff ff       	call   8049a39 <strings__Builder_write>
 8056e6e:	83 c4 10             	add    $0x10,%esp
 8056e71:	8b 45 14             	mov    0x14(%ebp),%eax
 8056e74:	83 e8 01             	sub    $0x1,%eax
 8056e77:	3b 45 98             	cmp    -0x68(%ebp),%eax
 8056e7a:	7e 2a                	jle    8056ea6 <array_string_str+0x12f>
 8056e7c:	c7 45 c0 2f 97 06 08 	movl   $0x806972f,-0x40(%ebp)
 8056e83:	c7 45 c4 02 00 00 00 	movl   $0x2,-0x3c(%ebp)
 8056e8a:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 8056e91:	ff 75 c8             	pushl  -0x38(%ebp)
 8056e94:	ff 75 c4             	pushl  -0x3c(%ebp)
 8056e97:	ff 75 c0             	pushl  -0x40(%ebp)
 8056e9a:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056e9d:	50                   	push   %eax
 8056e9e:	e8 96 2b ff ff       	call   8049a39 <strings__Builder_write>
 8056ea3:	83 c4 10             	add    $0x10,%esp
 8056ea6:	83 45 98 01          	addl   $0x1,-0x68(%ebp)
 8056eaa:	8b 45 14             	mov    0x14(%ebp),%eax
 8056ead:	3b 45 98             	cmp    -0x68(%ebp),%eax
 8056eb0:	0f 8f 27 ff ff ff    	jg     8056ddd <array_string_str+0x66>
 8056eb6:	c7 45 cc 32 97 06 08 	movl   $0x8069732,-0x34(%ebp)
 8056ebd:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
 8056ec4:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 8056ecb:	ff 75 d4             	pushl  -0x2c(%ebp)
 8056ece:	ff 75 d0             	pushl  -0x30(%ebp)
 8056ed1:	ff 75 cc             	pushl  -0x34(%ebp)
 8056ed4:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8056ed7:	50                   	push   %eax
 8056ed8:	e8 5c 2b ff ff       	call   8049a39 <strings__Builder_write>
 8056edd:	83 c4 10             	add    $0x10,%esp
 8056ee0:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8056ee3:	83 ec 08             	sub    $0x8,%esp
 8056ee6:	8d 55 d8             	lea    -0x28(%ebp),%edx
 8056ee9:	52                   	push   %edx
 8056eea:	50                   	push   %eax
 8056eeb:	e8 d7 2e ff ff       	call   8049dc7 <strings__Builder_str>
 8056ef0:	83 c4 0c             	add    $0xc,%esp
 8056ef3:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8056ef6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8056ef9:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8056f00:	74 05                	je     8056f07 <array_string_str+0x190>
 8056f02:	e8 19 19 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8056f07:	c9                   	leave  
 8056f08:	c2 04 00             	ret    $0x4

08056f0b <array_byte_hex>:
 8056f0b:	55                   	push   %ebp
 8056f0c:	89 e5                	mov    %esp,%ebp
 8056f0e:	83 ec 48             	sub    $0x48,%esp
 8056f11:	8b 45 08             	mov    0x8(%ebp),%eax
 8056f14:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8056f17:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8056f1d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8056f20:	31 c0                	xor    %eax,%eax
 8056f22:	8b 45 14             	mov    0x14(%ebp),%eax
 8056f25:	01 c0                	add    %eax,%eax
 8056f27:	83 c0 01             	add    $0x1,%eax
 8056f2a:	83 ec 0c             	sub    $0xc,%esp
 8056f2d:	50                   	push   %eax
 8056f2e:	e8 f4 09 00 00       	call   8057927 <v_malloc>
 8056f33:	83 c4 10             	add    $0x10,%esp
 8056f36:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8056f39:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 8056f40:	8b 45 0c             	mov    0xc(%ebp),%eax
 8056f43:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8056f46:	8b 45 10             	mov    0x10(%ebp),%eax
 8056f49:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8056f4c:	8b 45 14             	mov    0x14(%ebp),%eax
 8056f4f:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8056f52:	8b 45 18             	mov    0x18(%ebp),%eax
 8056f55:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8056f58:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 8056f5f:	eb 76                	jmp    8056fd7 <array_byte_hex+0xcc>
 8056f61:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8056f64:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8056f67:	01 d0                	add    %edx,%eax
 8056f69:	0f b6 00             	movzbl (%eax),%eax
 8056f6c:	88 45 d5             	mov    %al,-0x2b(%ebp)
 8056f6f:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax
 8056f73:	c0 e8 04             	shr    $0x4,%al
 8056f76:	88 45 d6             	mov    %al,-0x2a(%ebp)
 8056f79:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8056f7c:	8d 50 01             	lea    0x1(%eax),%edx
 8056f7f:	89 55 d8             	mov    %edx,-0x28(%ebp)
 8056f82:	89 c2                	mov    %eax,%edx
 8056f84:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8056f87:	01 c2                	add    %eax,%edx
 8056f89:	80 7d d6 09          	cmpb   $0x9,-0x2a(%ebp)
 8056f8d:	77 09                	ja     8056f98 <array_byte_hex+0x8d>
 8056f8f:	0f b6 45 d6          	movzbl -0x2a(%ebp),%eax
 8056f93:	83 c0 30             	add    $0x30,%eax
 8056f96:	eb 07                	jmp    8056f9f <array_byte_hex+0x94>
 8056f98:	0f b6 45 d6          	movzbl -0x2a(%ebp),%eax
 8056f9c:	83 c0 57             	add    $0x57,%eax
 8056f9f:	88 02                	mov    %al,(%edx)
 8056fa1:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax
 8056fa5:	83 e0 0f             	and    $0xf,%eax
 8056fa8:	88 45 d7             	mov    %al,-0x29(%ebp)
 8056fab:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8056fae:	8d 50 01             	lea    0x1(%eax),%edx
 8056fb1:	89 55 d8             	mov    %edx,-0x28(%ebp)
 8056fb4:	89 c2                	mov    %eax,%edx
 8056fb6:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8056fb9:	01 c2                	add    %eax,%edx
 8056fbb:	80 7d d7 09          	cmpb   $0x9,-0x29(%ebp)
 8056fbf:	77 09                	ja     8056fca <array_byte_hex+0xbf>
 8056fc1:	0f b6 45 d7          	movzbl -0x29(%ebp),%eax
 8056fc5:	83 c0 30             	add    $0x30,%eax
 8056fc8:	eb 07                	jmp    8056fd1 <array_byte_hex+0xc6>
 8056fca:	0f b6 45 d7          	movzbl -0x29(%ebp),%eax
 8056fce:	83 c0 57             	add    $0x57,%eax
 8056fd1:	88 02                	mov    %al,(%edx)
 8056fd3:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 8056fd7:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8056fda:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 8056fdd:	7f 82                	jg     8056f61 <array_byte_hex+0x56>
 8056fdf:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8056fe2:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8056fe5:	01 d0                	add    %edx,%eax
 8056fe7:	c6 00 00             	movb   $0x0,(%eax)
 8056fea:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8056fed:	83 ec 04             	sub    $0x4,%esp
 8056ff0:	ff 75 d8             	pushl  -0x28(%ebp)
 8056ff3:	ff 75 e0             	pushl  -0x20(%ebp)
 8056ff6:	50                   	push   %eax
 8056ff7:	e8 fe 62 00 00       	call   805d2fa <tos>
 8056ffc:	83 c4 0c             	add    $0xc,%esp
 8056fff:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8057002:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8057005:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805700c:	74 05                	je     8057013 <array_byte_hex+0x108>
 805700e:	e8 0d 18 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8057013:	c9                   	leave  
 8057014:	c2 04 00             	ret    $0x4

08057017 <copy>:
 8057017:	55                   	push   %ebp
 8057018:	89 e5                	mov    %esp,%ebp
 805701a:	53                   	push   %ebx
 805701b:	83 ec 24             	sub    $0x24,%esp
 805701e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8057024:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057027:	31 c0                	xor    %eax,%eax
 8057029:	8b 45 10             	mov    0x10(%ebp),%eax
 805702c:	85 c0                	test   %eax,%eax
 805702e:	7e 5e                	jle    805708e <copy+0x77>
 8057030:	8b 45 20             	mov    0x20(%ebp),%eax
 8057033:	85 c0                	test   %eax,%eax
 8057035:	7e 57                	jle    805708e <copy+0x77>
 8057037:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 805703e:	8b 55 20             	mov    0x20(%ebp),%edx
 8057041:	8b 45 10             	mov    0x10(%ebp),%eax
 8057044:	39 c2                	cmp    %eax,%edx
 8057046:	0f 4e c2             	cmovle %edx,%eax
 8057049:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805704c:	8b 45 08             	mov    0x8(%ebp),%eax
 805704f:	0f af 45 e0          	imul   -0x20(%ebp),%eax
 8057053:	89 c3                	mov    %eax,%ebx
 8057055:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8057058:	83 ec 04             	sub    $0x4,%esp
 805705b:	ff 75 e0             	pushl  -0x20(%ebp)
 805705e:	6a 00                	push   $0x0
 8057060:	ff 75 24             	pushl  0x24(%ebp)
 8057063:	ff 75 20             	pushl  0x20(%ebp)
 8057066:	ff 75 1c             	pushl  0x1c(%ebp)
 8057069:	ff 75 18             	pushl  0x18(%ebp)
 805706c:	50                   	push   %eax
 805706d:	e8 fe f3 ff ff       	call   8056470 <array_slice>
 8057072:	83 c4 1c             	add    $0x1c,%esp
 8057075:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8057078:	8b 45 0c             	mov    0xc(%ebp),%eax
 805707b:	83 ec 04             	sub    $0x4,%esp
 805707e:	53                   	push   %ebx
 805707f:	52                   	push   %edx
 8057080:	50                   	push   %eax
 8057081:	e8 3a 17 ff ff       	call   80487c0 <memcpy@plt>
 8057086:	83 c4 10             	add    $0x10,%esp
 8057089:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805708c:	eb 05                	jmp    8057093 <copy+0x7c>
 805708e:	b8 00 00 00 00       	mov    $0x0,%eax
 8057093:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8057096:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805709d:	74 05                	je     80570a4 <copy+0x8d>
 805709f:	e8 7c 17 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80570a4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80570a7:	c9                   	leave  
 80570a8:	c3                   	ret    

080570a9 <compare_ints>:
 80570a9:	55                   	push   %ebp
 80570aa:	89 e5                	mov    %esp,%ebp
 80570ac:	8b 45 08             	mov    0x8(%ebp),%eax
 80570af:	8b 10                	mov    (%eax),%edx
 80570b1:	8b 45 0c             	mov    0xc(%ebp),%eax
 80570b4:	8b 00                	mov    (%eax),%eax
 80570b6:	39 c2                	cmp    %eax,%edx
 80570b8:	7d 07                	jge    80570c1 <compare_ints+0x18>
 80570ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80570bf:	eb 1a                	jmp    80570db <compare_ints+0x32>
 80570c1:	8b 45 08             	mov    0x8(%ebp),%eax
 80570c4:	8b 10                	mov    (%eax),%edx
 80570c6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80570c9:	8b 00                	mov    (%eax),%eax
 80570cb:	39 c2                	cmp    %eax,%edx
 80570cd:	7e 07                	jle    80570d6 <compare_ints+0x2d>
 80570cf:	b8 01 00 00 00       	mov    $0x1,%eax
 80570d4:	eb 05                	jmp    80570db <compare_ints+0x32>
 80570d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80570db:	5d                   	pop    %ebp
 80570dc:	c3                   	ret    

080570dd <compare_ints_reverse>:
 80570dd:	55                   	push   %ebp
 80570de:	89 e5                	mov    %esp,%ebp
 80570e0:	8b 45 08             	mov    0x8(%ebp),%eax
 80570e3:	8b 10                	mov    (%eax),%edx
 80570e5:	8b 45 0c             	mov    0xc(%ebp),%eax
 80570e8:	8b 00                	mov    (%eax),%eax
 80570ea:	39 c2                	cmp    %eax,%edx
 80570ec:	7e 07                	jle    80570f5 <compare_ints_reverse+0x18>
 80570ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80570f3:	eb 1a                	jmp    805710f <compare_ints_reverse+0x32>
 80570f5:	8b 45 08             	mov    0x8(%ebp),%eax
 80570f8:	8b 10                	mov    (%eax),%edx
 80570fa:	8b 45 0c             	mov    0xc(%ebp),%eax
 80570fd:	8b 00                	mov    (%eax),%eax
 80570ff:	39 c2                	cmp    %eax,%edx
 8057101:	7d 07                	jge    805710a <compare_ints_reverse+0x2d>
 8057103:	b8 01 00 00 00       	mov    $0x1,%eax
 8057108:	eb 05                	jmp    805710f <compare_ints_reverse+0x32>
 805710a:	b8 00 00 00 00       	mov    $0x0,%eax
 805710f:	5d                   	pop    %ebp
 8057110:	c3                   	ret    

08057111 <compare_u64s>:
 8057111:	55                   	push   %ebp
 8057112:	89 e5                	mov    %esp,%ebp
 8057114:	53                   	push   %ebx
 8057115:	8b 45 08             	mov    0x8(%ebp),%eax
 8057118:	8b 08                	mov    (%eax),%ecx
 805711a:	8b 58 04             	mov    0x4(%eax),%ebx
 805711d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057120:	8b 50 04             	mov    0x4(%eax),%edx
 8057123:	8b 00                	mov    (%eax),%eax
 8057125:	39 d3                	cmp    %edx,%ebx
 8057127:	77 0f                	ja     8057138 <compare_u64s+0x27>
 8057129:	39 d3                	cmp    %edx,%ebx
 805712b:	72 04                	jb     8057131 <compare_u64s+0x20>
 805712d:	39 c1                	cmp    %eax,%ecx
 805712f:	73 07                	jae    8057138 <compare_u64s+0x27>
 8057131:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8057136:	eb 28                	jmp    8057160 <compare_u64s+0x4f>
 8057138:	8b 45 08             	mov    0x8(%ebp),%eax
 805713b:	8b 08                	mov    (%eax),%ecx
 805713d:	8b 58 04             	mov    0x4(%eax),%ebx
 8057140:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057143:	8b 50 04             	mov    0x4(%eax),%edx
 8057146:	8b 00                	mov    (%eax),%eax
 8057148:	39 d3                	cmp    %edx,%ebx
 805714a:	72 0f                	jb     805715b <compare_u64s+0x4a>
 805714c:	39 d3                	cmp    %edx,%ebx
 805714e:	77 04                	ja     8057154 <compare_u64s+0x43>
 8057150:	39 c1                	cmp    %eax,%ecx
 8057152:	76 07                	jbe    805715b <compare_u64s+0x4a>
 8057154:	b8 01 00 00 00       	mov    $0x1,%eax
 8057159:	eb 05                	jmp    8057160 <compare_u64s+0x4f>
 805715b:	b8 00 00 00 00       	mov    $0x0,%eax
 8057160:	5b                   	pop    %ebx
 8057161:	5d                   	pop    %ebp
 8057162:	c3                   	ret    

08057163 <compare_u64s_reverse>:
 8057163:	55                   	push   %ebp
 8057164:	89 e5                	mov    %esp,%ebp
 8057166:	53                   	push   %ebx
 8057167:	8b 45 08             	mov    0x8(%ebp),%eax
 805716a:	8b 08                	mov    (%eax),%ecx
 805716c:	8b 58 04             	mov    0x4(%eax),%ebx
 805716f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057172:	8b 50 04             	mov    0x4(%eax),%edx
 8057175:	8b 00                	mov    (%eax),%eax
 8057177:	39 d3                	cmp    %edx,%ebx
 8057179:	72 0f                	jb     805718a <compare_u64s_reverse+0x27>
 805717b:	39 d3                	cmp    %edx,%ebx
 805717d:	77 04                	ja     8057183 <compare_u64s_reverse+0x20>
 805717f:	39 c1                	cmp    %eax,%ecx
 8057181:	76 07                	jbe    805718a <compare_u64s_reverse+0x27>
 8057183:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8057188:	eb 28                	jmp    80571b2 <compare_u64s_reverse+0x4f>
 805718a:	8b 45 08             	mov    0x8(%ebp),%eax
 805718d:	8b 08                	mov    (%eax),%ecx
 805718f:	8b 58 04             	mov    0x4(%eax),%ebx
 8057192:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057195:	8b 50 04             	mov    0x4(%eax),%edx
 8057198:	8b 00                	mov    (%eax),%eax
 805719a:	39 d3                	cmp    %edx,%ebx
 805719c:	77 0f                	ja     80571ad <compare_u64s_reverse+0x4a>
 805719e:	39 d3                	cmp    %edx,%ebx
 80571a0:	72 04                	jb     80571a6 <compare_u64s_reverse+0x43>
 80571a2:	39 c1                	cmp    %eax,%ecx
 80571a4:	73 07                	jae    80571ad <compare_u64s_reverse+0x4a>
 80571a6:	b8 01 00 00 00       	mov    $0x1,%eax
 80571ab:	eb 05                	jmp    80571b2 <compare_u64s_reverse+0x4f>
 80571ad:	b8 00 00 00 00       	mov    $0x0,%eax
 80571b2:	5b                   	pop    %ebx
 80571b3:	5d                   	pop    %ebp
 80571b4:	c3                   	ret    

080571b5 <compare_floats>:
 80571b5:	55                   	push   %ebp
 80571b6:	89 e5                	mov    %esp,%ebp
 80571b8:	8b 45 08             	mov    0x8(%ebp),%eax
 80571bb:	dd 00                	fldl   (%eax)
 80571bd:	8b 45 0c             	mov    0xc(%ebp),%eax
 80571c0:	dd 00                	fldl   (%eax)
 80571c2:	df e9                	fucomip %st(1),%st
 80571c4:	dd d8                	fstp   %st(0)
 80571c6:	76 07                	jbe    80571cf <compare_floats+0x1a>
 80571c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80571cd:	eb 1e                	jmp    80571ed <compare_floats+0x38>
 80571cf:	8b 45 08             	mov    0x8(%ebp),%eax
 80571d2:	dd 00                	fldl   (%eax)
 80571d4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80571d7:	dd 00                	fldl   (%eax)
 80571d9:	d9 c9                	fxch   %st(1)
 80571db:	df e9                	fucomip %st(1),%st
 80571dd:	dd d8                	fstp   %st(0)
 80571df:	76 07                	jbe    80571e8 <compare_floats+0x33>
 80571e1:	b8 01 00 00 00       	mov    $0x1,%eax
 80571e6:	eb 05                	jmp    80571ed <compare_floats+0x38>
 80571e8:	b8 00 00 00 00       	mov    $0x0,%eax
 80571ed:	5d                   	pop    %ebp
 80571ee:	c3                   	ret    

080571ef <compare_floats_reverse>:
 80571ef:	55                   	push   %ebp
 80571f0:	89 e5                	mov    %esp,%ebp
 80571f2:	8b 45 08             	mov    0x8(%ebp),%eax
 80571f5:	dd 00                	fldl   (%eax)
 80571f7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80571fa:	dd 00                	fldl   (%eax)
 80571fc:	d9 c9                	fxch   %st(1)
 80571fe:	df e9                	fucomip %st(1),%st
 8057200:	dd d8                	fstp   %st(0)
 8057202:	76 07                	jbe    805720b <compare_floats_reverse+0x1c>
 8057204:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8057209:	eb 1c                	jmp    8057227 <compare_floats_reverse+0x38>
 805720b:	8b 45 08             	mov    0x8(%ebp),%eax
 805720e:	dd 00                	fldl   (%eax)
 8057210:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057213:	dd 00                	fldl   (%eax)
 8057215:	df e9                	fucomip %st(1),%st
 8057217:	dd d8                	fstp   %st(0)
 8057219:	76 07                	jbe    8057222 <compare_floats_reverse+0x33>
 805721b:	b8 01 00 00 00       	mov    $0x1,%eax
 8057220:	eb 05                	jmp    8057227 <compare_floats_reverse+0x38>
 8057222:	b8 00 00 00 00       	mov    $0x0,%eax
 8057227:	5d                   	pop    %ebp
 8057228:	c3                   	ret    

08057229 <array_int_sort>:
 8057229:	55                   	push   %ebp
 805722a:	89 e5                	mov    %esp,%ebp
 805722c:	83 ec 08             	sub    $0x8,%esp
 805722f:	83 ec 08             	sub    $0x8,%esp
 8057232:	68 a9 70 05 08       	push   $0x80570a9
 8057237:	ff 75 08             	pushl  0x8(%ebp)
 805723a:	e8 b0 ec ff ff       	call   8055eef <array_sort_with_compare>
 805723f:	83 c4 10             	add    $0x10,%esp
 8057242:	90                   	nop
 8057243:	c9                   	leave  
 8057244:	c3                   	ret    

08057245 <array_string_index>:
 8057245:	55                   	push   %ebp
 8057246:	89 e5                	mov    %esp,%ebp
 8057248:	83 ec 18             	sub    $0x18,%esp
 805724b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8057252:	eb 43                	jmp    8057297 <array_string_index+0x52>
 8057254:	83 ec 0c             	sub    $0xc,%esp
 8057257:	ff 75 f4             	pushl  -0xc(%ebp)
 805725a:	ff 75 14             	pushl  0x14(%ebp)
 805725d:	ff 75 10             	pushl  0x10(%ebp)
 8057260:	ff 75 0c             	pushl  0xc(%ebp)
 8057263:	ff 75 08             	pushl  0x8(%ebp)
 8057266:	e8 4f f0 ff ff       	call   80562ba <array_get>
 805726b:	83 c4 20             	add    $0x20,%esp
 805726e:	83 ec 08             	sub    $0x8,%esp
 8057271:	ff 75 20             	pushl  0x20(%ebp)
 8057274:	ff 75 1c             	pushl  0x1c(%ebp)
 8057277:	ff 75 18             	pushl  0x18(%ebp)
 805727a:	ff 70 08             	pushl  0x8(%eax)
 805727d:	ff 70 04             	pushl  0x4(%eax)
 8057280:	ff 30                	pushl  (%eax)
 8057282:	e8 cd 6d 00 00       	call   805e054 <string_eq>
 8057287:	83 c4 20             	add    $0x20,%esp
 805728a:	85 c0                	test   %eax,%eax
 805728c:	74 05                	je     8057293 <array_string_index+0x4e>
 805728e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8057291:	eb 11                	jmp    80572a4 <array_string_index+0x5f>
 8057293:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8057297:	8b 45 10             	mov    0x10(%ebp),%eax
 805729a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805729d:	7f b5                	jg     8057254 <array_string_index+0xf>
 805729f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80572a4:	c9                   	leave  
 80572a5:	c3                   	ret    

080572a6 <array_int_reduce>:
 80572a6:	55                   	push   %ebp
 80572a7:	89 e5                	mov    %esp,%ebp
 80572a9:	83 ec 28             	sub    $0x28,%esp
 80572ac:	8b 45 1c             	mov    0x1c(%ebp),%eax
 80572af:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80572b2:	8b 45 08             	mov    0x8(%ebp),%eax
 80572b5:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80572b8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80572bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80572be:	8b 45 10             	mov    0x10(%ebp),%eax
 80572c1:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80572c4:	8b 45 14             	mov    0x14(%ebp),%eax
 80572c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80572ca:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 80572d1:	eb 28                	jmp    80572fb <array_int_reduce+0x55>
 80572d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80572d6:	8b 55 e0             	mov    -0x20(%ebp),%edx
 80572d9:	c1 e2 02             	shl    $0x2,%edx
 80572dc:	01 d0                	add    %edx,%eax
 80572de:	8b 00                	mov    (%eax),%eax
 80572e0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80572e3:	83 ec 08             	sub    $0x8,%esp
 80572e6:	ff 75 e4             	pushl  -0x1c(%ebp)
 80572e9:	ff 75 dc             	pushl  -0x24(%ebp)
 80572ec:	8b 45 18             	mov    0x18(%ebp),%eax
 80572ef:	ff d0                	call   *%eax
 80572f1:	83 c4 10             	add    $0x10,%esp
 80572f4:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80572f7:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 80572fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80572fe:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 8057301:	7f d0                	jg     80572d3 <array_int_reduce+0x2d>
 8057303:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8057306:	c9                   	leave  
 8057307:	c3                   	ret    

08057308 <array_grow_cap>:
 8057308:	55                   	push   %ebp
 8057309:	89 e5                	mov    %esp,%ebp
 805730b:	83 ec 08             	sub    $0x8,%esp
 805730e:	8b 45 08             	mov    0x8(%ebp),%eax
 8057311:	8b 50 0c             	mov    0xc(%eax),%edx
 8057314:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057317:	01 d0                	add    %edx,%eax
 8057319:	83 ec 08             	sub    $0x8,%esp
 805731c:	50                   	push   %eax
 805731d:	ff 75 08             	pushl  0x8(%ebp)
 8057320:	e8 6b e9 ff ff       	call   8055c90 <array_ensure_cap>
 8057325:	83 c4 10             	add    $0x10,%esp
 8057328:	90                   	nop
 8057329:	c9                   	leave  
 805732a:	c3                   	ret    

0805732b <array_grow_len>:
 805732b:	55                   	push   %ebp
 805732c:	89 e5                	mov    %esp,%ebp
 805732e:	83 ec 08             	sub    $0x8,%esp
 8057331:	8b 45 08             	mov    0x8(%ebp),%eax
 8057334:	8b 50 08             	mov    0x8(%eax),%edx
 8057337:	8b 45 0c             	mov    0xc(%ebp),%eax
 805733a:	01 d0                	add    %edx,%eax
 805733c:	83 ec 08             	sub    $0x8,%esp
 805733f:	50                   	push   %eax
 8057340:	ff 75 08             	pushl  0x8(%ebp)
 8057343:	e8 48 e9 ff ff       	call   8055c90 <array_ensure_cap>
 8057348:	83 c4 10             	add    $0x10,%esp
 805734b:	8b 45 08             	mov    0x8(%ebp),%eax
 805734e:	8b 50 08             	mov    0x8(%eax),%edx
 8057351:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057354:	01 c2                	add    %eax,%edx
 8057356:	8b 45 08             	mov    0x8(%ebp),%eax
 8057359:	89 50 08             	mov    %edx,0x8(%eax)
 805735c:	90                   	nop
 805735d:	c9                   	leave  
 805735e:	c3                   	ret    

0805735f <array_string_eq>:
 805735f:	55                   	push   %ebp
 8057360:	89 e5                	mov    %esp,%ebp
 8057362:	53                   	push   %ebx
 8057363:	83 ec 14             	sub    $0x14,%esp
 8057366:	8b 55 10             	mov    0x10(%ebp),%edx
 8057369:	8b 45 20             	mov    0x20(%ebp),%eax
 805736c:	39 c2                	cmp    %eax,%edx
 805736e:	74 07                	je     8057377 <array_string_eq+0x18>
 8057370:	b8 00 00 00 00       	mov    $0x0,%eax
 8057375:	eb 76                	jmp    80573ed <array_string_eq+0x8e>
 8057377:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805737e:	eb 60                	jmp    80573e0 <array_string_eq+0x81>
 8057380:	83 ec 0c             	sub    $0xc,%esp
 8057383:	ff 75 f4             	pushl  -0xc(%ebp)
 8057386:	ff 75 24             	pushl  0x24(%ebp)
 8057389:	ff 75 20             	pushl  0x20(%ebp)
 805738c:	ff 75 1c             	pushl  0x1c(%ebp)
 805738f:	ff 75 18             	pushl  0x18(%ebp)
 8057392:	e8 23 ef ff ff       	call   80562ba <array_get>
 8057397:	83 c4 20             	add    $0x20,%esp
 805739a:	89 c3                	mov    %eax,%ebx
 805739c:	83 ec 0c             	sub    $0xc,%esp
 805739f:	ff 75 f4             	pushl  -0xc(%ebp)
 80573a2:	ff 75 14             	pushl  0x14(%ebp)
 80573a5:	ff 75 10             	pushl  0x10(%ebp)
 80573a8:	ff 75 0c             	pushl  0xc(%ebp)
 80573ab:	ff 75 08             	pushl  0x8(%ebp)
 80573ae:	e8 07 ef ff ff       	call   80562ba <array_get>
 80573b3:	83 c4 20             	add    $0x20,%esp
 80573b6:	83 ec 08             	sub    $0x8,%esp
 80573b9:	ff 73 08             	pushl  0x8(%ebx)
 80573bc:	ff 73 04             	pushl  0x4(%ebx)
 80573bf:	ff 33                	pushl  (%ebx)
 80573c1:	ff 70 08             	pushl  0x8(%eax)
 80573c4:	ff 70 04             	pushl  0x4(%eax)
 80573c7:	ff 30                	pushl  (%eax)
 80573c9:	e8 f0 6c 00 00       	call   805e0be <string_ne>
 80573ce:	83 c4 20             	add    $0x20,%esp
 80573d1:	85 c0                	test   %eax,%eax
 80573d3:	74 07                	je     80573dc <array_string_eq+0x7d>
 80573d5:	b8 00 00 00 00       	mov    $0x0,%eax
 80573da:	eb 11                	jmp    80573ed <array_string_eq+0x8e>
 80573dc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 80573e0:	8b 45 10             	mov    0x10(%ebp),%eax
 80573e3:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 80573e6:	7f 98                	jg     8057380 <array_string_eq+0x21>
 80573e8:	b8 01 00 00 00       	mov    $0x1,%eax
 80573ed:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80573f0:	c9                   	leave  
 80573f1:	c3                   	ret    

080573f2 <compare_i64>:
 80573f2:	55                   	push   %ebp
 80573f3:	89 e5                	mov    %esp,%ebp
 80573f5:	53                   	push   %ebx
 80573f6:	8b 45 08             	mov    0x8(%ebp),%eax
 80573f9:	8b 08                	mov    (%eax),%ecx
 80573fb:	8b 58 04             	mov    0x4(%eax),%ebx
 80573fe:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057401:	8b 50 04             	mov    0x4(%eax),%edx
 8057404:	8b 00                	mov    (%eax),%eax
 8057406:	39 d3                	cmp    %edx,%ebx
 8057408:	7f 0f                	jg     8057419 <compare_i64+0x27>
 805740a:	39 d3                	cmp    %edx,%ebx
 805740c:	7c 04                	jl     8057412 <compare_i64+0x20>
 805740e:	39 c1                	cmp    %eax,%ecx
 8057410:	73 07                	jae    8057419 <compare_i64+0x27>
 8057412:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8057417:	eb 28                	jmp    8057441 <compare_i64+0x4f>
 8057419:	8b 45 08             	mov    0x8(%ebp),%eax
 805741c:	8b 08                	mov    (%eax),%ecx
 805741e:	8b 58 04             	mov    0x4(%eax),%ebx
 8057421:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057424:	8b 50 04             	mov    0x4(%eax),%edx
 8057427:	8b 00                	mov    (%eax),%eax
 8057429:	39 d3                	cmp    %edx,%ebx
 805742b:	7c 0f                	jl     805743c <compare_i64+0x4a>
 805742d:	39 d3                	cmp    %edx,%ebx
 805742f:	7f 04                	jg     8057435 <compare_i64+0x43>
 8057431:	39 c1                	cmp    %eax,%ecx
 8057433:	76 07                	jbe    805743c <compare_i64+0x4a>
 8057435:	b8 01 00 00 00       	mov    $0x1,%eax
 805743a:	eb 05                	jmp    8057441 <compare_i64+0x4f>
 805743c:	b8 00 00 00 00       	mov    $0x0,%eax
 8057441:	5b                   	pop    %ebx
 8057442:	5d                   	pop    %ebp
 8057443:	c3                   	ret    

08057444 <compare_f64>:
 8057444:	55                   	push   %ebp
 8057445:	89 e5                	mov    %esp,%ebp
 8057447:	8b 45 08             	mov    0x8(%ebp),%eax
 805744a:	dd 00                	fldl   (%eax)
 805744c:	8b 45 0c             	mov    0xc(%ebp),%eax
 805744f:	dd 00                	fldl   (%eax)
 8057451:	df e9                	fucomip %st(1),%st
 8057453:	dd d8                	fstp   %st(0)
 8057455:	76 07                	jbe    805745e <compare_f64+0x1a>
 8057457:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805745c:	eb 1e                	jmp    805747c <compare_f64+0x38>
 805745e:	8b 45 08             	mov    0x8(%ebp),%eax
 8057461:	dd 00                	fldl   (%eax)
 8057463:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057466:	dd 00                	fldl   (%eax)
 8057468:	d9 c9                	fxch   %st(1)
 805746a:	df e9                	fucomip %st(1),%st
 805746c:	dd d8                	fstp   %st(0)
 805746e:	76 07                	jbe    8057477 <compare_f64+0x33>
 8057470:	b8 01 00 00 00       	mov    $0x1,%eax
 8057475:	eb 05                	jmp    805747c <compare_f64+0x38>
 8057477:	b8 00 00 00 00       	mov    $0x0,%eax
 805747c:	5d                   	pop    %ebp
 805747d:	c3                   	ret    

0805747e <compare_f32>:
 805747e:	55                   	push   %ebp
 805747f:	89 e5                	mov    %esp,%ebp
 8057481:	8b 45 08             	mov    0x8(%ebp),%eax
 8057484:	d9 00                	flds   (%eax)
 8057486:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057489:	d9 00                	flds   (%eax)
 805748b:	df e9                	fucomip %st(1),%st
 805748d:	dd d8                	fstp   %st(0)
 805748f:	76 07                	jbe    8057498 <compare_f32+0x1a>
 8057491:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8057496:	eb 1e                	jmp    80574b6 <compare_f32+0x38>
 8057498:	8b 45 08             	mov    0x8(%ebp),%eax
 805749b:	d9 00                	flds   (%eax)
 805749d:	8b 45 0c             	mov    0xc(%ebp),%eax
 80574a0:	d9 00                	flds   (%eax)
 80574a2:	d9 c9                	fxch   %st(1)
 80574a4:	df e9                	fucomip %st(1),%st
 80574a6:	dd d8                	fstp   %st(0)
 80574a8:	76 07                	jbe    80574b1 <compare_f32+0x33>
 80574aa:	b8 01 00 00 00       	mov    $0x1,%eax
 80574af:	eb 05                	jmp    80574b6 <compare_f32+0x38>
 80574b1:	b8 00 00 00 00       	mov    $0x0,%eax
 80574b6:	5d                   	pop    %ebp
 80574b7:	c3                   	ret    

080574b8 <array_pointers>:
 80574b8:	55                   	push   %ebp
 80574b9:	89 e5                	mov    %esp,%ebp
 80574bb:	83 ec 38             	sub    $0x38,%esp
 80574be:	8b 45 08             	mov    0x8(%ebp),%eax
 80574c1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80574c4:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80574ca:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80574cd:	31 c0                	xor    %eax,%eax
 80574cf:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80574d2:	83 ec 0c             	sub    $0xc,%esp
 80574d5:	6a 00                	push   $0x0
 80574d7:	6a 04                	push   $0x4
 80574d9:	6a 00                	push   $0x0
 80574db:	6a 00                	push   $0x0
 80574dd:	50                   	push   %eax
 80574de:	e8 86 e5 ff ff       	call   8055a69 <__new_array_with_default>
 80574e3:	83 c4 1c             	add    $0x1c,%esp
 80574e6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 80574ed:	eb 34                	jmp    8057523 <array_pointers+0x6b>
 80574ef:	83 ec 0c             	sub    $0xc,%esp
 80574f2:	ff 75 dc             	pushl  -0x24(%ebp)
 80574f5:	ff 75 18             	pushl  0x18(%ebp)
 80574f8:	ff 75 14             	pushl  0x14(%ebp)
 80574fb:	ff 75 10             	pushl  0x10(%ebp)
 80574fe:	ff 75 0c             	pushl  0xc(%ebp)
 8057501:	e8 a3 ed ff ff       	call   80562a9 <array_get_unsafe>
 8057506:	83 c4 20             	add    $0x20,%esp
 8057509:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805750c:	83 ec 08             	sub    $0x8,%esp
 805750f:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8057512:	50                   	push   %eax
 8057513:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8057516:	50                   	push   %eax
 8057517:	e8 9e f4 ff ff       	call   80569ba <array_push>
 805751c:	83 c4 10             	add    $0x10,%esp
 805751f:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 8057523:	8b 45 14             	mov    0x14(%ebp),%eax
 8057526:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 8057529:	7f c4                	jg     80574ef <array_pointers+0x37>
 805752b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805752e:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8057531:	89 10                	mov    %edx,(%eax)
 8057533:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8057536:	89 50 04             	mov    %edx,0x4(%eax)
 8057539:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805753c:	89 50 08             	mov    %edx,0x8(%eax)
 805753f:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8057542:	89 50 0c             	mov    %edx,0xc(%eax)
 8057545:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8057548:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805754b:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8057552:	74 05                	je     8057559 <array_pointers+0xa1>
 8057554:	e8 c7 12 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8057559:	c9                   	leave  
 805755a:	c2 04 00             	ret    $0x4

0805755d <voidptr_vbytes>:
 805755d:	55                   	push   %ebp
 805755e:	89 e5                	mov    %esp,%ebp
 8057560:	83 ec 10             	sub    $0x10,%esp
 8057563:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 805756a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805756d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057570:	8b 45 10             	mov    0x10(%ebp),%eax
 8057573:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8057576:	8b 45 10             	mov    0x10(%ebp),%eax
 8057579:	89 45 fc             	mov    %eax,-0x4(%ebp)
 805757c:	8b 45 08             	mov    0x8(%ebp),%eax
 805757f:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8057582:	89 10                	mov    %edx,(%eax)
 8057584:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8057587:	89 50 04             	mov    %edx,0x4(%eax)
 805758a:	8b 55 f8             	mov    -0x8(%ebp),%edx
 805758d:	89 50 08             	mov    %edx,0x8(%eax)
 8057590:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8057593:	89 50 0c             	mov    %edx,0xc(%eax)
 8057596:	8b 45 08             	mov    0x8(%ebp),%eax
 8057599:	c9                   	leave  
 805759a:	c2 04 00             	ret    $0x4

0805759d <byteptr_vbytes>:
 805759d:	55                   	push   %ebp
 805759e:	89 e5                	mov    %esp,%ebp
 80575a0:	83 ec 28             	sub    $0x28,%esp
 80575a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80575a6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80575a9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80575ac:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80575af:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80575b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80575b8:	31 c0                	xor    %eax,%eax
 80575ba:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80575bd:	ff 75 10             	pushl  0x10(%ebp)
 80575c0:	ff 75 e0             	pushl  -0x20(%ebp)
 80575c3:	50                   	push   %eax
 80575c4:	e8 94 ff ff ff       	call   805755d <voidptr_vbytes>
 80575c9:	83 c4 08             	add    $0x8,%esp
 80575cc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80575cf:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80575d2:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80575d9:	74 05                	je     80575e0 <byteptr_vbytes+0x43>
 80575db:	e8 40 12 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80575e0:	c9                   	leave  
 80575e1:	c2 04 00             	ret    $0x4

080575e4 <v_exit>:
 80575e4:	55                   	push   %ebp
 80575e5:	89 e5                	mov    %esp,%ebp
 80575e7:	83 ec 08             	sub    $0x8,%esp
 80575ea:	83 ec 0c             	sub    $0xc,%esp
 80575ed:	ff 75 08             	pushl  0x8(%ebp)
 80575f0:	e8 6b 12 ff ff       	call   8048860 <exit@plt>

080575f5 <panic_debug>:
 80575f5:	55                   	push   %ebp
 80575f6:	89 e5                	mov    %esp,%ebp
 80575f8:	83 ec 78             	sub    $0x78,%esp
 80575fb:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8057601:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057604:	31 c0                	xor    %eax,%eax
 8057606:	c7 45 88 58 9b 06 08 	movl   $0x8069b58,-0x78(%ebp)
 805760d:	c7 45 8c 29 00 00 00 	movl   $0x29,-0x74(%ebp)
 8057614:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%ebp)
 805761b:	83 ec 04             	sub    $0x4,%esp
 805761e:	ff 75 90             	pushl  -0x70(%ebp)
 8057621:	ff 75 8c             	pushl  -0x74(%ebp)
 8057624:	ff 75 88             	pushl  -0x78(%ebp)
 8057627:	e8 c6 01 00 00       	call   80577f2 <eprintln>
 805762c:	83 c4 10             	add    $0x10,%esp
 805762f:	8d 45 ac             	lea    -0x54(%ebp),%eax
 8057632:	83 ec 08             	sub    $0x8,%esp
 8057635:	ff 75 20             	pushl  0x20(%ebp)
 8057638:	ff 75 1c             	pushl  0x1c(%ebp)
 805763b:	ff 75 18             	pushl  0x18(%ebp)
 805763e:	6a 01                	push   $0x1
 8057640:	68 82 9b 06 08       	push   $0x8069b82
 8057645:	50                   	push   %eax
 8057646:	e8 79 1e ff ff       	call   80494c4 <_STR>
 805764b:	83 c4 1c             	add    $0x1c,%esp
 805764e:	83 ec 04             	sub    $0x4,%esp
 8057651:	ff 75 b4             	pushl  -0x4c(%ebp)
 8057654:	ff 75 b0             	pushl  -0x50(%ebp)
 8057657:	ff 75 ac             	pushl  -0x54(%ebp)
 805765a:	e8 93 01 00 00       	call   80577f2 <eprintln>
 805765f:	83 c4 10             	add    $0x10,%esp
 8057662:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8057665:	83 ec 08             	sub    $0x8,%esp
 8057668:	ff 75 2c             	pushl  0x2c(%ebp)
 805766b:	ff 75 28             	pushl  0x28(%ebp)
 805766e:	ff 75 24             	pushl  0x24(%ebp)
 8057671:	6a 02                	push   $0x2
 8057673:	68 92 9b 06 08       	push   $0x8069b92
 8057678:	50                   	push   %eax
 8057679:	e8 46 1e ff ff       	call   80494c4 <_STR>
 805767e:	83 c4 1c             	add    $0x1c,%esp
 8057681:	83 ec 04             	sub    $0x4,%esp
 8057684:	ff 75 c0             	pushl  -0x40(%ebp)
 8057687:	ff 75 bc             	pushl  -0x44(%ebp)
 805768a:	ff 75 b8             	pushl  -0x48(%ebp)
 805768d:	e8 60 01 00 00       	call   80577f2 <eprintln>
 8057692:	83 c4 10             	add    $0x10,%esp
 8057695:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 8057698:	83 ec 08             	sub    $0x8,%esp
 805769b:	ff 75 38             	pushl  0x38(%ebp)
 805769e:	ff 75 34             	pushl  0x34(%ebp)
 80576a1:	ff 75 30             	pushl  0x30(%ebp)
 80576a4:	6a 01                	push   $0x1
 80576a6:	68 a5 9b 06 08       	push   $0x8069ba5
 80576ab:	50                   	push   %eax
 80576ac:	e8 13 1e ff ff       	call   80494c4 <_STR>
 80576b1:	83 c4 1c             	add    $0x1c,%esp
 80576b4:	83 ec 04             	sub    $0x4,%esp
 80576b7:	ff 75 cc             	pushl  -0x34(%ebp)
 80576ba:	ff 75 c8             	pushl  -0x38(%ebp)
 80576bd:	ff 75 c4             	pushl  -0x3c(%ebp)
 80576c0:	e8 2d 01 00 00       	call   80577f2 <eprintln>
 80576c5:	83 c4 10             	add    $0x10,%esp
 80576c8:	8d 45 d0             	lea    -0x30(%ebp),%eax
 80576cb:	83 ec 08             	sub    $0x8,%esp
 80576ce:	ff 75 14             	pushl  0x14(%ebp)
 80576d1:	ff 75 10             	pushl  0x10(%ebp)
 80576d4:	ff 75 0c             	pushl  0xc(%ebp)
 80576d7:	6a 01                	push   $0x1
 80576d9:	68 b5 9b 06 08       	push   $0x8069bb5
 80576de:	50                   	push   %eax
 80576df:	e8 e0 1d ff ff       	call   80494c4 <_STR>
 80576e4:	83 c4 1c             	add    $0x1c,%esp
 80576e7:	83 ec 04             	sub    $0x4,%esp
 80576ea:	ff 75 d8             	pushl  -0x28(%ebp)
 80576ed:	ff 75 d4             	pushl  -0x2c(%ebp)
 80576f0:	ff 75 d0             	pushl  -0x30(%ebp)
 80576f3:	e8 fa 00 00 00       	call   80577f2 <eprintln>
 80576f8:	83 c4 10             	add    $0x10,%esp
 80576fb:	8d 45 dc             	lea    -0x24(%ebp),%eax
 80576fe:	83 ec 08             	sub    $0x8,%esp
 8057701:	ff 75 08             	pushl  0x8(%ebp)
 8057704:	50                   	push   %eax
 8057705:	e8 39 16 00 00       	call   8058d43 <int_str>
 805770a:	83 c4 0c             	add    $0xc,%esp
 805770d:	c7 45 94 c5 9b 06 08 	movl   $0x8069bc5,-0x6c(%ebp)
 8057714:	c7 45 98 0b 00 00 00 	movl   $0xb,-0x68(%ebp)
 805771b:	c7 45 9c 01 00 00 00 	movl   $0x1,-0x64(%ebp)
 8057722:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8057725:	83 ec 04             	sub    $0x4,%esp
 8057728:	ff 75 e4             	pushl  -0x1c(%ebp)
 805772b:	ff 75 e0             	pushl  -0x20(%ebp)
 805772e:	ff 75 dc             	pushl  -0x24(%ebp)
 8057731:	ff 75 9c             	pushl  -0x64(%ebp)
 8057734:	ff 75 98             	pushl  -0x68(%ebp)
 8057737:	ff 75 94             	pushl  -0x6c(%ebp)
 805773a:	50                   	push   %eax
 805773b:	e8 04 6b 00 00       	call   805e244 <string_add>
 8057740:	83 c4 1c             	add    $0x1c,%esp
 8057743:	83 ec 04             	sub    $0x4,%esp
 8057746:	ff 75 f0             	pushl  -0x10(%ebp)
 8057749:	ff 75 ec             	pushl  -0x14(%ebp)
 805774c:	ff 75 e8             	pushl  -0x18(%ebp)
 805774f:	e8 9e 00 00 00       	call   80577f2 <eprintln>
 8057754:	83 c4 10             	add    $0x10,%esp
 8057757:	c7 45 a0 d4 9b 06 08 	movl   $0x8069bd4,-0x60(%ebp)
 805775e:	c7 45 a4 29 00 00 00 	movl   $0x29,-0x5c(%ebp)
 8057765:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%ebp)
 805776c:	83 ec 04             	sub    $0x4,%esp
 805776f:	ff 75 a8             	pushl  -0x58(%ebp)
 8057772:	ff 75 a4             	pushl  -0x5c(%ebp)
 8057775:	ff 75 a0             	pushl  -0x60(%ebp)
 8057778:	e8 75 00 00 00       	call   80577f2 <eprintln>
 805777d:	83 c4 10             	add    $0x10,%esp
 8057780:	83 ec 0c             	sub    $0xc,%esp
 8057783:	6a 01                	push   $0x1
 8057785:	e8 ec 05 00 00       	call   8057d76 <print_backtrace_skipping_top_frames>
 805778a:	83 c4 10             	add    $0x10,%esp
 805778d:	83 ec 0c             	sub    $0xc,%esp
 8057790:	6a 01                	push   $0x1
 8057792:	e8 c9 10 ff ff       	call   8048860 <exit@plt>

08057797 <v_panic>:
 8057797:	55                   	push   %ebp
 8057798:	89 e5                	mov    %esp,%ebp
 805779a:	83 ec 18             	sub    $0x18,%esp
 805779d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80577a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80577a6:	31 c0                	xor    %eax,%eax
 80577a8:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80577ab:	83 ec 08             	sub    $0x8,%esp
 80577ae:	ff 75 10             	pushl  0x10(%ebp)
 80577b1:	ff 75 0c             	pushl  0xc(%ebp)
 80577b4:	ff 75 08             	pushl  0x8(%ebp)
 80577b7:	6a 01                	push   $0x1
 80577b9:	68 fe 9b 06 08       	push   $0x8069bfe
 80577be:	50                   	push   %eax
 80577bf:	e8 00 1d ff ff       	call   80494c4 <_STR>
 80577c4:	83 c4 1c             	add    $0x1c,%esp
 80577c7:	83 ec 04             	sub    $0x4,%esp
 80577ca:	ff 75 f0             	pushl  -0x10(%ebp)
 80577cd:	ff 75 ec             	pushl  -0x14(%ebp)
 80577d0:	ff 75 e8             	pushl  -0x18(%ebp)
 80577d3:	e8 1a 00 00 00       	call   80577f2 <eprintln>
 80577d8:	83 c4 10             	add    $0x10,%esp
 80577db:	83 ec 0c             	sub    $0xc,%esp
 80577de:	6a 01                	push   $0x1
 80577e0:	e8 91 05 00 00       	call   8057d76 <print_backtrace_skipping_top_frames>
 80577e5:	83 c4 10             	add    $0x10,%esp
 80577e8:	83 ec 0c             	sub    $0xc,%esp
 80577eb:	6a 01                	push   $0x1
 80577ed:	e8 6e 10 ff ff       	call   8048860 <exit@plt>

080577f2 <eprintln>:
 80577f2:	55                   	push   %ebp
 80577f3:	89 e5                	mov    %esp,%ebp
 80577f5:	83 ec 08             	sub    $0x8,%esp
 80577f8:	a1 8c 30 07 08       	mov    0x807308c,%eax
 80577fd:	83 ec 0c             	sub    $0xc,%esp
 8057800:	50                   	push   %eax
 8057801:	e8 8a 0f ff ff       	call   8048790 <fflush@plt>
 8057806:	83 c4 10             	add    $0x10,%esp
 8057809:	a1 88 30 07 08       	mov    0x8073088,%eax
 805780e:	83 ec 0c             	sub    $0xc,%esp
 8057811:	50                   	push   %eax
 8057812:	e8 79 0f ff ff       	call   8048790 <fflush@plt>
 8057817:	83 c4 10             	add    $0x10,%esp
 805781a:	8b 45 08             	mov    0x8(%ebp),%eax
 805781d:	85 c0                	test   %eax,%eax
 805781f:	75 16                	jne    8057837 <eprintln+0x45>
 8057821:	83 ec 04             	sub    $0x4,%esp
 8057824:	6a 0e                	push   $0xe
 8057826:	68 0c 9c 06 08       	push   $0x8069c0c
 805782b:	6a 02                	push   $0x2
 805782d:	e8 6e 10 ff ff       	call   80488a0 <write@plt>
 8057832:	83 c4 10             	add    $0x10,%esp
 8057835:	eb 2b                	jmp    8057862 <eprintln+0x70>
 8057837:	8b 45 0c             	mov    0xc(%ebp),%eax
 805783a:	89 c2                	mov    %eax,%edx
 805783c:	8b 45 08             	mov    0x8(%ebp),%eax
 805783f:	83 ec 04             	sub    $0x4,%esp
 8057842:	52                   	push   %edx
 8057843:	50                   	push   %eax
 8057844:	6a 02                	push   $0x2
 8057846:	e8 55 10 ff ff       	call   80488a0 <write@plt>
 805784b:	83 c4 10             	add    $0x10,%esp
 805784e:	83 ec 04             	sub    $0x4,%esp
 8057851:	6a 01                	push   $0x1
 8057853:	68 1b 9c 06 08       	push   $0x8069c1b
 8057858:	6a 02                	push   $0x2
 805785a:	e8 41 10 ff ff       	call   80488a0 <write@plt>
 805785f:	83 c4 10             	add    $0x10,%esp
 8057862:	a1 88 30 07 08       	mov    0x8073088,%eax
 8057867:	83 ec 0c             	sub    $0xc,%esp
 805786a:	50                   	push   %eax
 805786b:	e8 20 0f ff ff       	call   8048790 <fflush@plt>
 8057870:	83 c4 10             	add    $0x10,%esp
 8057873:	90                   	nop
 8057874:	c9                   	leave  
 8057875:	c3                   	ret    

08057876 <eprint>:
 8057876:	55                   	push   %ebp
 8057877:	89 e5                	mov    %esp,%ebp
 8057879:	83 ec 08             	sub    $0x8,%esp
 805787c:	a1 8c 30 07 08       	mov    0x807308c,%eax
 8057881:	83 ec 0c             	sub    $0xc,%esp
 8057884:	50                   	push   %eax
 8057885:	e8 06 0f ff ff       	call   8048790 <fflush@plt>
 805788a:	83 c4 10             	add    $0x10,%esp
 805788d:	a1 88 30 07 08       	mov    0x8073088,%eax
 8057892:	83 ec 0c             	sub    $0xc,%esp
 8057895:	50                   	push   %eax
 8057896:	e8 f5 0e ff ff       	call   8048790 <fflush@plt>
 805789b:	83 c4 10             	add    $0x10,%esp
 805789e:	8b 45 08             	mov    0x8(%ebp),%eax
 80578a1:	85 c0                	test   %eax,%eax
 80578a3:	75 16                	jne    80578bb <eprint+0x45>
 80578a5:	83 ec 04             	sub    $0x4,%esp
 80578a8:	6a 0c                	push   $0xc
 80578aa:	68 1d 9c 06 08       	push   $0x8069c1d
 80578af:	6a 02                	push   $0x2
 80578b1:	e8 ea 0f ff ff       	call   80488a0 <write@plt>
 80578b6:	83 c4 10             	add    $0x10,%esp
 80578b9:	eb 17                	jmp    80578d2 <eprint+0x5c>
 80578bb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80578be:	89 c2                	mov    %eax,%edx
 80578c0:	8b 45 08             	mov    0x8(%ebp),%eax
 80578c3:	83 ec 04             	sub    $0x4,%esp
 80578c6:	52                   	push   %edx
 80578c7:	50                   	push   %eax
 80578c8:	6a 02                	push   $0x2
 80578ca:	e8 d1 0f ff ff       	call   80488a0 <write@plt>
 80578cf:	83 c4 10             	add    $0x10,%esp
 80578d2:	a1 88 30 07 08       	mov    0x8073088,%eax
 80578d7:	83 ec 0c             	sub    $0xc,%esp
 80578da:	50                   	push   %eax
 80578db:	e8 b0 0e ff ff       	call   8048790 <fflush@plt>
 80578e0:	83 c4 10             	add    $0x10,%esp
 80578e3:	90                   	nop
 80578e4:	c9                   	leave  
 80578e5:	c3                   	ret    

080578e6 <print>:
 80578e6:	55                   	push   %ebp
 80578e7:	89 e5                	mov    %esp,%ebp
 80578e9:	83 ec 08             	sub    $0x8,%esp
 80578ec:	8b 45 0c             	mov    0xc(%ebp),%eax
 80578ef:	89 c2                	mov    %eax,%edx
 80578f1:	8b 45 08             	mov    0x8(%ebp),%eax
 80578f4:	83 ec 04             	sub    $0x4,%esp
 80578f7:	52                   	push   %edx
 80578f8:	50                   	push   %eax
 80578f9:	6a 01                	push   $0x1
 80578fb:	e8 a0 0f ff ff       	call   80488a0 <write@plt>
 8057900:	83 c4 10             	add    $0x10,%esp
 8057903:	90                   	nop
 8057904:	c9                   	leave  
 8057905:	c3                   	ret    

08057906 <println>:
 8057906:	55                   	push   %ebp
 8057907:	89 e5                	mov    %esp,%ebp
 8057909:	83 ec 08             	sub    $0x8,%esp
 805790c:	8b 55 08             	mov    0x8(%ebp),%edx
 805790f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057912:	83 ec 04             	sub    $0x4,%esp
 8057915:	52                   	push   %edx
 8057916:	50                   	push   %eax
 8057917:	68 2a 9c 06 08       	push   $0x8069c2a
 805791c:	e8 5f 0e ff ff       	call   8048780 <printf@plt>
 8057921:	83 c4 10             	add    $0x10,%esp
 8057924:	90                   	nop
 8057925:	c9                   	leave  
 8057926:	c3                   	ret    

08057927 <v_malloc>:
 8057927:	55                   	push   %ebp
 8057928:	89 e5                	mov    %esp,%ebp
 805792a:	83 ec 28             	sub    $0x28,%esp
 805792d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8057933:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057936:	31 c0                	xor    %eax,%eax
 8057938:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 805793c:	7f 29                	jg     8057967 <v_malloc+0x40>
 805793e:	c7 45 dc 30 9c 06 08 	movl   $0x8069c30,-0x24(%ebp)
 8057945:	c7 45 e0 0f 00 00 00 	movl   $0xf,-0x20(%ebp)
 805794c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 8057953:	83 ec 04             	sub    $0x4,%esp
 8057956:	ff 75 e4             	pushl  -0x1c(%ebp)
 8057959:	ff 75 e0             	pushl  -0x20(%ebp)
 805795c:	ff 75 dc             	pushl  -0x24(%ebp)
 805795f:	e8 33 fe ff ff       	call   8057797 <v_panic>
 8057964:	83 c4 10             	add    $0x10,%esp
 8057967:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 805796e:	8b 45 08             	mov    0x8(%ebp),%eax
 8057971:	83 ec 0c             	sub    $0xc,%esp
 8057974:	50                   	push   %eax
 8057975:	e8 c6 0e ff ff       	call   8048840 <malloc@plt>
 805797a:	83 c4 10             	add    $0x10,%esp
 805797d:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8057980:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8057984:	75 2a                	jne    80579b0 <v_malloc+0x89>
 8057986:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8057989:	ff 75 08             	pushl  0x8(%ebp)
 805798c:	6a 02                	push   $0x2
 805798e:	68 40 9c 06 08       	push   $0x8069c40
 8057993:	50                   	push   %eax
 8057994:	e8 2b 1b ff ff       	call   80494c4 <_STR>
 8057999:	83 c4 0c             	add    $0xc,%esp
 805799c:	83 ec 04             	sub    $0x4,%esp
 805799f:	ff 75 f0             	pushl  -0x10(%ebp)
 80579a2:	ff 75 ec             	pushl  -0x14(%ebp)
 80579a5:	ff 75 e8             	pushl  -0x18(%ebp)
 80579a8:	e8 ea fd ff ff       	call   8057797 <v_panic>
 80579ad:	83 c4 10             	add    $0x10,%esp
 80579b0:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80579b3:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80579b6:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80579bd:	74 05                	je     80579c4 <v_malloc+0x9d>
 80579bf:	e8 5c 0e ff ff       	call   8048820 <__stack_chk_fail@plt>
 80579c4:	c9                   	leave  
 80579c5:	c3                   	ret    

080579c6 <v_realloc>:
 80579c6:	55                   	push   %ebp
 80579c7:	89 e5                	mov    %esp,%ebp
 80579c9:	83 ec 38             	sub    $0x38,%esp
 80579cc:	8b 45 08             	mov    0x8(%ebp),%eax
 80579cf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80579d2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80579d8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80579db:	31 c0                	xor    %eax,%eax
 80579dd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 80579e4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80579e7:	83 ec 08             	sub    $0x8,%esp
 80579ea:	50                   	push   %eax
 80579eb:	ff 75 d4             	pushl  -0x2c(%ebp)
 80579ee:	e8 3d 0e ff ff       	call   8048830 <realloc@plt>
 80579f3:	83 c4 10             	add    $0x10,%esp
 80579f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80579f9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 80579fd:	75 2a                	jne    8057a29 <v_realloc+0x63>
 80579ff:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8057a02:	ff 75 0c             	pushl  0xc(%ebp)
 8057a05:	6a 02                	push   $0x2
 8057a07:	68 53 9c 06 08       	push   $0x8069c53
 8057a0c:	50                   	push   %eax
 8057a0d:	e8 b2 1a ff ff       	call   80494c4 <_STR>
 8057a12:	83 c4 0c             	add    $0xc,%esp
 8057a15:	83 ec 04             	sub    $0x4,%esp
 8057a18:	ff 75 f0             	pushl  -0x10(%ebp)
 8057a1b:	ff 75 ec             	pushl  -0x14(%ebp)
 8057a1e:	ff 75 e8             	pushl  -0x18(%ebp)
 8057a21:	e8 71 fd ff ff       	call   8057797 <v_panic>
 8057a26:	83 c4 10             	add    $0x10,%esp
 8057a29:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8057a2c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8057a2f:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8057a36:	74 05                	je     8057a3d <v_realloc+0x77>
 8057a38:	e8 e3 0d ff ff       	call   8048820 <__stack_chk_fail@plt>
 8057a3d:	c9                   	leave  
 8057a3e:	c3                   	ret    

08057a3f <v_calloc>:
 8057a3f:	55                   	push   %ebp
 8057a40:	89 e5                	mov    %esp,%ebp
 8057a42:	83 ec 08             	sub    $0x8,%esp
 8057a45:	8b 45 08             	mov    0x8(%ebp),%eax
 8057a48:	83 ec 08             	sub    $0x8,%esp
 8057a4b:	50                   	push   %eax
 8057a4c:	6a 01                	push   $0x1
 8057a4e:	e8 dd 0e ff ff       	call   8048930 <calloc@plt>
 8057a53:	83 c4 10             	add    $0x10,%esp
 8057a56:	c9                   	leave  
 8057a57:	c3                   	ret    

08057a58 <vcalloc>:
 8057a58:	55                   	push   %ebp
 8057a59:	89 e5                	mov    %esp,%ebp
 8057a5b:	83 ec 18             	sub    $0x18,%esp
 8057a5e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8057a62:	79 2b                	jns    8057a8f <vcalloc+0x37>
 8057a64:	c7 45 ec 67 9c 06 08 	movl   $0x8069c67,-0x14(%ebp)
 8057a6b:	c7 45 f0 0b 00 00 00 	movl   $0xb,-0x10(%ebp)
 8057a72:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 8057a79:	83 ec 04             	sub    $0x4,%esp
 8057a7c:	ff 75 f4             	pushl  -0xc(%ebp)
 8057a7f:	ff 75 f0             	pushl  -0x10(%ebp)
 8057a82:	ff 75 ec             	pushl  -0x14(%ebp)
 8057a85:	e8 0d fd ff ff       	call   8057797 <v_panic>
 8057a8a:	83 c4 10             	add    $0x10,%esp
 8057a8d:	eb 0d                	jmp    8057a9c <vcalloc+0x44>
 8057a8f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8057a93:	75 07                	jne    8057a9c <vcalloc+0x44>
 8057a95:	b8 00 00 00 00       	mov    $0x0,%eax
 8057a9a:	eb 11                	jmp    8057aad <vcalloc+0x55>
 8057a9c:	8b 45 08             	mov    0x8(%ebp),%eax
 8057a9f:	83 ec 08             	sub    $0x8,%esp
 8057aa2:	50                   	push   %eax
 8057aa3:	6a 01                	push   $0x1
 8057aa5:	e8 86 0e ff ff       	call   8048930 <calloc@plt>
 8057aaa:	83 c4 10             	add    $0x10,%esp
 8057aad:	c9                   	leave  
 8057aae:	c3                   	ret    

08057aaf <v_free>:
 8057aaf:	55                   	push   %ebp
 8057ab0:	89 e5                	mov    %esp,%ebp
 8057ab2:	83 ec 08             	sub    $0x8,%esp
 8057ab5:	83 ec 0c             	sub    $0xc,%esp
 8057ab8:	ff 75 08             	pushl  0x8(%ebp)
 8057abb:	e8 f0 0c ff ff       	call   80487b0 <free@plt>
 8057ac0:	83 c4 10             	add    $0x10,%esp
 8057ac3:	90                   	nop
 8057ac4:	c9                   	leave  
 8057ac5:	c3                   	ret    

08057ac6 <memdup>:
 8057ac6:	55                   	push   %ebp
 8057ac7:	89 e5                	mov    %esp,%ebp
 8057ac9:	83 ec 18             	sub    $0x18,%esp
 8057acc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8057ad0:	75 0f                	jne    8057ae1 <memdup+0x1b>
 8057ad2:	83 ec 0c             	sub    $0xc,%esp
 8057ad5:	6a 01                	push   $0x1
 8057ad7:	e8 7c ff ff ff       	call   8057a58 <vcalloc>
 8057adc:	83 c4 10             	add    $0x10,%esp
 8057adf:	eb 26                	jmp    8057b07 <memdup+0x41>
 8057ae1:	83 ec 0c             	sub    $0xc,%esp
 8057ae4:	ff 75 0c             	pushl  0xc(%ebp)
 8057ae7:	e8 3b fe ff ff       	call   8057927 <v_malloc>
 8057aec:	83 c4 10             	add    $0x10,%esp
 8057aef:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057af2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057af5:	83 ec 04             	sub    $0x4,%esp
 8057af8:	50                   	push   %eax
 8057af9:	ff 75 08             	pushl  0x8(%ebp)
 8057afc:	ff 75 f4             	pushl  -0xc(%ebp)
 8057aff:	e8 bc 0c ff ff       	call   80487c0 <memcpy@plt>
 8057b04:	83 c4 10             	add    $0x10,%esp
 8057b07:	c9                   	leave  
 8057b08:	c3                   	ret    

08057b09 <v_ptr_free>:
 8057b09:	55                   	push   %ebp
 8057b0a:	89 e5                	mov    %esp,%ebp
 8057b0c:	83 ec 08             	sub    $0x8,%esp
 8057b0f:	83 ec 0c             	sub    $0xc,%esp
 8057b12:	ff 75 08             	pushl  0x8(%ebp)
 8057b15:	e8 96 0c ff ff       	call   80487b0 <free@plt>
 8057b1a:	83 c4 10             	add    $0x10,%esp
 8057b1d:	90                   	nop
 8057b1e:	c9                   	leave  
 8057b1f:	c3                   	ret    

08057b20 <is_atty>:
 8057b20:	55                   	push   %ebp
 8057b21:	89 e5                	mov    %esp,%ebp
 8057b23:	83 ec 08             	sub    $0x8,%esp
 8057b26:	83 ec 0c             	sub    $0xc,%esp
 8057b29:	ff 75 08             	pushl  0x8(%ebp)
 8057b2c:	e8 df 0d ff ff       	call   8048910 <isatty@plt>
 8057b31:	83 c4 10             	add    $0x10,%esp
 8057b34:	c9                   	leave  
 8057b35:	c3                   	ret    

08057b36 <isnil>:
 8057b36:	55                   	push   %ebp
 8057b37:	89 e5                	mov    %esp,%ebp
 8057b39:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8057b3d:	0f 94 c0             	sete   %al
 8057b40:	0f b6 c0             	movzbl %al,%eax
 8057b43:	5d                   	pop    %ebp
 8057b44:	c3                   	ret    

08057b45 <print_backtrace>:
 8057b45:	55                   	push   %ebp
 8057b46:	89 e5                	mov    %esp,%ebp
 8057b48:	83 ec 08             	sub    $0x8,%esp
 8057b4b:	83 ec 0c             	sub    $0xc,%esp
 8057b4e:	6a 02                	push   $0x2
 8057b50:	e8 21 02 00 00       	call   8057d76 <print_backtrace_skipping_top_frames>
 8057b55:	83 c4 10             	add    $0x10,%esp
 8057b58:	90                   	nop
 8057b59:	c9                   	leave  
 8057b5a:	c3                   	ret    

08057b5b <__as_cast>:
 8057b5b:	55                   	push   %ebp
 8057b5c:	89 e5                	mov    %esp,%ebp
 8057b5e:	83 ec 28             	sub    $0x28,%esp
 8057b61:	8b 45 08             	mov    0x8(%ebp),%eax
 8057b64:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8057b67:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8057b6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057b70:	31 c0                	xor    %eax,%eax
 8057b72:	8b 45 0c             	mov    0xc(%ebp),%eax
 8057b75:	3b 45 10             	cmp    0x10(%ebp),%eax
 8057b78:	74 30                	je     8057baa <__as_cast+0x4f>
 8057b7a:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8057b7d:	83 ec 0c             	sub    $0xc,%esp
 8057b80:	ff 75 10             	pushl  0x10(%ebp)
 8057b83:	ff 75 0c             	pushl  0xc(%ebp)
 8057b86:	6a 02                	push   $0x2
 8057b88:	68 74 9c 06 08       	push   $0x8069c74
 8057b8d:	50                   	push   %eax
 8057b8e:	e8 31 19 ff ff       	call   80494c4 <_STR>
 8057b93:	83 c4 1c             	add    $0x1c,%esp
 8057b96:	83 ec 04             	sub    $0x4,%esp
 8057b99:	ff 75 f0             	pushl  -0x10(%ebp)
 8057b9c:	ff 75 ec             	pushl  -0x14(%ebp)
 8057b9f:	ff 75 e8             	pushl  -0x18(%ebp)
 8057ba2:	e8 f0 fb ff ff       	call   8057797 <v_panic>
 8057ba7:	83 c4 10             	add    $0x10,%esp
 8057baa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8057bad:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8057bb0:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8057bb7:	74 05                	je     8057bbe <__as_cast+0x63>
 8057bb9:	e8 62 0c ff ff       	call   8048820 <__stack_chk_fail@plt>
 8057bbe:	c9                   	leave  
 8057bbf:	c3                   	ret    

08057bc0 <__print_assert_failure>:
 8057bc0:	55                   	push   %ebp
 8057bc1:	89 e5                	mov    %esp,%ebp
 8057bc3:	83 ec 58             	sub    $0x58,%esp
 8057bc6:	8b 45 08             	mov    0x8(%ebp),%eax
 8057bc9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8057bcc:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8057bd2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057bd5:	31 c0                	xor    %eax,%eax
 8057bd7:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057bda:	8b 40 0c             	mov    0xc(%eax),%eax
 8057bdd:	8d 48 01             	lea    0x1(%eax),%ecx
 8057be0:	8d 55 c4             	lea    -0x3c(%ebp),%edx
 8057be3:	83 ec 0c             	sub    $0xc,%esp
 8057be6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057be9:	ff 70 24             	pushl  0x24(%eax)
 8057bec:	ff 70 20             	pushl  0x20(%eax)
 8057bef:	ff 70 1c             	pushl  0x1c(%eax)
 8057bf2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057bf5:	ff 70 18             	pushl  0x18(%eax)
 8057bf8:	ff 70 14             	pushl  0x14(%eax)
 8057bfb:	ff 70 10             	pushl  0x10(%eax)
 8057bfe:	51                   	push   %ecx
 8057bff:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057c02:	ff 70 08             	pushl  0x8(%eax)
 8057c05:	ff 70 04             	pushl  0x4(%eax)
 8057c08:	ff 30                	pushl  (%eax)
 8057c0a:	6a 04                	push   $0x4
 8057c0c:	68 94 9c 06 08       	push   $0x8069c94
 8057c11:	52                   	push   %edx
 8057c12:	e8 ad 18 ff ff       	call   80494c4 <_STR>
 8057c17:	83 c4 3c             	add    $0x3c,%esp
 8057c1a:	83 ec 04             	sub    $0x4,%esp
 8057c1d:	ff 75 cc             	pushl  -0x34(%ebp)
 8057c20:	ff 75 c8             	pushl  -0x38(%ebp)
 8057c23:	ff 75 c4             	pushl  -0x3c(%ebp)
 8057c26:	e8 c7 fb ff ff       	call   80577f2 <eprintln>
 8057c2b:	83 c4 10             	add    $0x10,%esp
 8057c2e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057c31:	8b 40 2c             	mov    0x2c(%eax),%eax
 8057c34:	85 c0                	test   %eax,%eax
 8057c36:	0f 8e 20 01 00 00    	jle    8057d5c <__print_assert_failure+0x19c>
 8057c3c:	c7 45 b8 bb 9c 06 08 	movl   $0x8069cbb,-0x48(%ebp)
 8057c43:	c7 45 bc 04 00 00 00 	movl   $0x4,-0x44(%ebp)
 8057c4a:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)
 8057c51:	83 ec 08             	sub    $0x8,%esp
 8057c54:	ff 75 c0             	pushl  -0x40(%ebp)
 8057c57:	ff 75 bc             	pushl  -0x44(%ebp)
 8057c5a:	ff 75 b8             	pushl  -0x48(%ebp)
 8057c5d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057c60:	ff 70 30             	pushl  0x30(%eax)
 8057c63:	ff 70 2c             	pushl  0x2c(%eax)
 8057c66:	ff 70 28             	pushl  0x28(%eax)
 8057c69:	e8 50 64 00 00       	call   805e0be <string_ne>
 8057c6e:	83 c4 20             	add    $0x20,%esp
 8057c71:	85 c0                	test   %eax,%eax
 8057c73:	0f 84 e3 00 00 00    	je     8057d5c <__print_assert_failure+0x19c>
 8057c79:	8d 55 d0             	lea    -0x30(%ebp),%edx
 8057c7c:	83 ec 0c             	sub    $0xc,%esp
 8057c7f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057c82:	ff 70 54             	pushl  0x54(%eax)
 8057c85:	ff 70 50             	pushl  0x50(%eax)
 8057c88:	ff 70 4c             	pushl  0x4c(%eax)
 8057c8b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057c8e:	ff 70 3c             	pushl  0x3c(%eax)
 8057c91:	ff 70 38             	pushl  0x38(%eax)
 8057c94:	ff 70 34             	pushl  0x34(%eax)
 8057c97:	6a 02                	push   $0x2
 8057c99:	68 c0 9c 06 08       	push   $0x8069cc0
 8057c9e:	52                   	push   %edx
 8057c9f:	e8 20 18 ff ff       	call   80494c4 <_STR>
 8057ca4:	83 c4 2c             	add    $0x2c,%esp
 8057ca7:	83 ec 04             	sub    $0x4,%esp
 8057caa:	ff 75 d8             	pushl  -0x28(%ebp)
 8057cad:	ff 75 d4             	pushl  -0x2c(%ebp)
 8057cb0:	ff 75 d0             	pushl  -0x30(%ebp)
 8057cb3:	e8 3a fb ff ff       	call   80577f2 <eprintln>
 8057cb8:	83 c4 10             	add    $0x10,%esp
 8057cbb:	83 ec 08             	sub    $0x8,%esp
 8057cbe:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057cc1:	ff 70 60             	pushl  0x60(%eax)
 8057cc4:	ff 70 5c             	pushl  0x5c(%eax)
 8057cc7:	ff 70 58             	pushl  0x58(%eax)
 8057cca:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057ccd:	ff 70 48             	pushl  0x48(%eax)
 8057cd0:	ff 70 44             	pushl  0x44(%eax)
 8057cd3:	ff 70 40             	pushl  0x40(%eax)
 8057cd6:	e8 79 63 00 00       	call   805e054 <string_eq>
 8057cdb:	83 c4 20             	add    $0x20,%esp
 8057cde:	85 c0                	test   %eax,%eax
 8057ce0:	74 38                	je     8057d1a <__print_assert_failure+0x15a>
 8057ce2:	8d 55 dc             	lea    -0x24(%ebp),%edx
 8057ce5:	83 ec 08             	sub    $0x8,%esp
 8057ce8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057ceb:	ff 70 48             	pushl  0x48(%eax)
 8057cee:	ff 70 44             	pushl  0x44(%eax)
 8057cf1:	ff 70 40             	pushl  0x40(%eax)
 8057cf4:	6a 01                	push   $0x1
 8057cf6:	68 dc 9c 06 08       	push   $0x8069cdc
 8057cfb:	52                   	push   %edx
 8057cfc:	e8 c3 17 ff ff       	call   80494c4 <_STR>
 8057d01:	83 c4 1c             	add    $0x1c,%esp
 8057d04:	83 ec 04             	sub    $0x4,%esp
 8057d07:	ff 75 e4             	pushl  -0x1c(%ebp)
 8057d0a:	ff 75 e0             	pushl  -0x20(%ebp)
 8057d0d:	ff 75 dc             	pushl  -0x24(%ebp)
 8057d10:	e8 dd fa ff ff       	call   80577f2 <eprintln>
 8057d15:	83 c4 10             	add    $0x10,%esp
 8057d18:	eb 42                	jmp    8057d5c <__print_assert_failure+0x19c>
 8057d1a:	8d 55 e8             	lea    -0x18(%ebp),%edx
 8057d1d:	83 ec 0c             	sub    $0xc,%esp
 8057d20:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057d23:	ff 70 60             	pushl  0x60(%eax)
 8057d26:	ff 70 5c             	pushl  0x5c(%eax)
 8057d29:	ff 70 58             	pushl  0x58(%eax)
 8057d2c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8057d2f:	ff 70 48             	pushl  0x48(%eax)
 8057d32:	ff 70 44             	pushl  0x44(%eax)
 8057d35:	ff 70 40             	pushl  0x40(%eax)
 8057d38:	6a 02                	push   $0x2
 8057d3a:	68 f0 9c 06 08       	push   $0x8069cf0
 8057d3f:	52                   	push   %edx
 8057d40:	e8 7f 17 ff ff       	call   80494c4 <_STR>
 8057d45:	83 c4 2c             	add    $0x2c,%esp
 8057d48:	83 ec 04             	sub    $0x4,%esp
 8057d4b:	ff 75 f0             	pushl  -0x10(%ebp)
 8057d4e:	ff 75 ec             	pushl  -0x14(%ebp)
 8057d51:	ff 75 e8             	pushl  -0x18(%ebp)
 8057d54:	e8 99 fa ff ff       	call   80577f2 <eprintln>
 8057d59:	83 c4 10             	add    $0x10,%esp
 8057d5c:	90                   	nop
 8057d5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8057d60:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8057d67:	74 05                	je     8057d6e <__print_assert_failure+0x1ae>
 8057d69:	e8 b2 0a ff ff       	call   8048820 <__stack_chk_fail@plt>
 8057d6e:	c9                   	leave  
 8057d6f:	c3                   	ret    

08057d70 <builtin_init>:
 8057d70:	55                   	push   %ebp
 8057d71:	89 e5                	mov    %esp,%ebp
 8057d73:	90                   	nop
 8057d74:	5d                   	pop    %ebp
 8057d75:	c3                   	ret    

08057d76 <print_backtrace_skipping_top_frames>:
 8057d76:	55                   	push   %ebp
 8057d77:	89 e5                	mov    %esp,%ebp
 8057d79:	83 ec 28             	sub    $0x28,%esp
 8057d7c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8057d82:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057d85:	31 c0                	xor    %eax,%eax
 8057d87:	8b 45 08             	mov    0x8(%ebp),%eax
 8057d8a:	83 c0 02             	add    $0x2,%eax
 8057d8d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8057d90:	83 ec 0c             	sub    $0xc,%esp
 8057d93:	ff 75 e4             	pushl  -0x1c(%ebp)
 8057d96:	e8 2a 00 00 00       	call   8057dc5 <print_backtrace_skipping_top_frames_linux>
 8057d9b:	83 c4 10             	add    $0x10,%esp
 8057d9e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8057da1:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8057da8:	74 05                	je     8057daf <print_backtrace_skipping_top_frames+0x39>
 8057daa:	e8 71 0a ff ff       	call   8048820 <__stack_chk_fail@plt>
 8057daf:	c9                   	leave  
 8057db0:	c3                   	ret    

08057db1 <print_backtrace_skipping_top_frames_mac>:
 8057db1:	55                   	push   %ebp
 8057db2:	89 e5                	mov    %esp,%ebp
 8057db4:	b8 01 00 00 00       	mov    $0x1,%eax
 8057db9:	5d                   	pop    %ebp
 8057dba:	c3                   	ret    

08057dbb <print_backtrace_skipping_top_frames_freebsd>:
 8057dbb:	55                   	push   %ebp
 8057dbc:	89 e5                	mov    %esp,%ebp
 8057dbe:	b8 01 00 00 00       	mov    $0x1,%eax
 8057dc3:	5d                   	pop    %ebp
 8057dc4:	c3                   	ret    

08057dc5 <print_backtrace_skipping_top_frames_linux>:
 8057dc5:	55                   	push   %ebp
 8057dc6:	89 e5                	mov    %esp,%ebp
 8057dc8:	57                   	push   %edi
 8057dc9:	81 ec c4 06 00 00    	sub    $0x6c4,%esp
 8057dcf:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8057dd5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8057dd8:	31 c0                	xor    %eax,%eax
 8057dda:	8d 95 7c fa ff ff    	lea    -0x584(%ebp),%edx
 8057de0:	b8 00 00 00 00       	mov    $0x0,%eax
 8057de5:	b9 64 00 00 00       	mov    $0x64,%ecx
 8057dea:	89 d7                	mov    %edx,%edi
 8057dec:	f3 ab                	rep stos %eax,%es:(%edi)
 8057dee:	83 ec 08             	sub    $0x8,%esp
 8057df1:	6a 64                	push   $0x64
 8057df3:	8d 85 7c fa ff ff    	lea    -0x584(%ebp),%eax
 8057df9:	50                   	push   %eax
 8057dfa:	e8 21 0b ff ff       	call   8048920 <backtrace@plt>
 8057dff:	83 c4 10             	add    $0x10,%esp
 8057e02:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%ebp)
 8057e08:	83 bd 5c f9 ff ff 01 	cmpl   $0x1,-0x6a4(%ebp)
 8057e0f:	7f 45                	jg     8057e56 <print_backtrace_skipping_top_frames_linux+0x91>
 8057e11:	c7 85 60 fa ff ff 0c 	movl   $0x8069d0c,-0x5a0(%ebp)
 8057e18:	9d 06 08 
 8057e1b:	c7 85 64 fa ff ff 27 	movl   $0x27,-0x59c(%ebp)
 8057e22:	00 00 00 
 8057e25:	c7 85 68 fa ff ff 01 	movl   $0x1,-0x598(%ebp)
 8057e2c:	00 00 00 
 8057e2f:	83 ec 04             	sub    $0x4,%esp
 8057e32:	ff b5 68 fa ff ff    	pushl  -0x598(%ebp)
 8057e38:	ff b5 64 fa ff ff    	pushl  -0x59c(%ebp)
 8057e3e:	ff b5 60 fa ff ff    	pushl  -0x5a0(%ebp)
 8057e44:	e8 a9 f9 ff ff       	call   80577f2 <eprintln>
 8057e49:	83 c4 10             	add    $0x10,%esp
 8057e4c:	b8 00 00 00 00       	mov    $0x0,%eax
 8057e51:	e9 87 06 00 00       	jmp    80584dd <print_backtrace_skipping_top_frames_linux+0x718>
 8057e56:	8b 85 5c f9 ff ff    	mov    -0x6a4(%ebp),%eax
 8057e5c:	2b 45 08             	sub    0x8(%ebp),%eax
 8057e5f:	89 85 60 f9 ff ff    	mov    %eax,-0x6a0(%ebp)
 8057e65:	8d 85 50 fa ff ff    	lea    -0x5b0(%ebp),%eax
 8057e6b:	83 ec 0c             	sub    $0xc,%esp
 8057e6e:	6a 00                	push   $0x0
 8057e70:	6a 0c                	push   $0xc
 8057e72:	6a 00                	push   $0x0
 8057e74:	6a 00                	push   $0x0
 8057e76:	50                   	push   %eax
 8057e77:	e8 ed db ff ff       	call   8055a69 <__new_array_with_default>
 8057e7c:	83 c4 1c             	add    $0x1c,%esp
 8057e7f:	8d 85 7c fa ff ff    	lea    -0x584(%ebp),%eax
 8057e85:	8b 55 08             	mov    0x8(%ebp),%edx
 8057e88:	c1 e2 02             	shl    $0x2,%edx
 8057e8b:	01 d0                	add    %edx,%eax
 8057e8d:	83 ec 08             	sub    $0x8,%esp
 8057e90:	ff b5 60 f9 ff ff    	pushl  -0x6a0(%ebp)
 8057e96:	50                   	push   %eax
 8057e97:	e8 14 0a ff ff       	call   80488b0 <backtrace_symbols@plt>
 8057e9c:	83 c4 10             	add    $0x10,%esp
 8057e9f:	89 85 64 f9 ff ff    	mov    %eax,-0x69c(%ebp)
 8057ea5:	c7 85 54 f9 ff ff 00 	movl   $0x0,-0x6ac(%ebp)
 8057eac:	00 00 00 
 8057eaf:	eb 4a                	jmp    8057efb <print_backtrace_skipping_top_frames_linux+0x136>
 8057eb1:	8b 85 54 f9 ff ff    	mov    -0x6ac(%ebp),%eax
 8057eb7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8057ebe:	8b 85 64 f9 ff ff    	mov    -0x69c(%ebp),%eax
 8057ec4:	01 d0                	add    %edx,%eax
 8057ec6:	8b 10                	mov    (%eax),%edx
 8057ec8:	8d 85 70 fa ff ff    	lea    -0x590(%ebp),%eax
 8057ece:	83 ec 08             	sub    $0x8,%esp
 8057ed1:	52                   	push   %edx
 8057ed2:	50                   	push   %eax
 8057ed3:	e8 e2 54 00 00       	call   805d3ba <tos2>
 8057ed8:	83 c4 0c             	add    $0xc,%esp
 8057edb:	83 ec 08             	sub    $0x8,%esp
 8057ede:	8d 85 70 fa ff ff    	lea    -0x590(%ebp),%eax
 8057ee4:	50                   	push   %eax
 8057ee5:	8d 85 50 fa ff ff    	lea    -0x5b0(%ebp),%eax
 8057eeb:	50                   	push   %eax
 8057eec:	e8 c9 ea ff ff       	call   80569ba <array_push>
 8057ef1:	83 c4 10             	add    $0x10,%esp
 8057ef4:	83 85 54 f9 ff ff 01 	addl   $0x1,-0x6ac(%ebp)
 8057efb:	8b 85 54 f9 ff ff    	mov    -0x6ac(%ebp),%eax
 8057f01:	3b 85 60 f9 ff ff    	cmp    -0x6a0(%ebp),%eax
 8057f07:	7c a8                	jl     8057eb1 <print_backtrace_skipping_top_frames_linux+0xec>
 8057f09:	8b 85 50 fa ff ff    	mov    -0x5b0(%ebp),%eax
 8057f0f:	89 85 60 fa ff ff    	mov    %eax,-0x5a0(%ebp)
 8057f15:	8b 85 54 fa ff ff    	mov    -0x5ac(%ebp),%eax
 8057f1b:	89 85 64 fa ff ff    	mov    %eax,-0x59c(%ebp)
 8057f21:	8b 85 58 fa ff ff    	mov    -0x5a8(%ebp),%eax
 8057f27:	89 85 68 fa ff ff    	mov    %eax,-0x598(%ebp)
 8057f2d:	8b 85 5c fa ff ff    	mov    -0x5a4(%ebp),%eax
 8057f33:	89 85 6c fa ff ff    	mov    %eax,-0x594(%ebp)
 8057f39:	c7 85 58 f9 ff ff 00 	movl   $0x0,-0x6a8(%ebp)
 8057f40:	00 00 00 
 8057f43:	e9 7e 05 00 00       	jmp    80584c6 <print_backtrace_skipping_top_frames_linux+0x701>
 8057f48:	8b 8d 64 fa ff ff    	mov    -0x59c(%ebp),%ecx
 8057f4e:	8b 95 58 f9 ff ff    	mov    -0x6a8(%ebp),%edx
 8057f54:	89 d0                	mov    %edx,%eax
 8057f56:	01 c0                	add    %eax,%eax
 8057f58:	01 d0                	add    %edx,%eax
 8057f5a:	c1 e0 02             	shl    $0x2,%eax
 8057f5d:	01 c8                	add    %ecx,%eax
 8057f5f:	8b 10                	mov    (%eax),%edx
 8057f61:	89 95 6c f9 ff ff    	mov    %edx,-0x694(%ebp)
 8057f67:	8b 50 04             	mov    0x4(%eax),%edx
 8057f6a:	89 95 70 f9 ff ff    	mov    %edx,-0x690(%ebp)
 8057f70:	8b 40 08             	mov    0x8(%eax),%eax
 8057f73:	89 85 74 f9 ff ff    	mov    %eax,-0x68c(%ebp)
 8057f79:	c7 85 84 f9 ff ff 34 	movl   $0x8069d34,-0x67c(%ebp)
 8057f80:	9d 06 08 
 8057f83:	c7 85 88 f9 ff ff 01 	movl   $0x1,-0x678(%ebp)
 8057f8a:	00 00 00 
 8057f8d:	c7 85 8c f9 ff ff 01 	movl   $0x1,-0x674(%ebp)
 8057f94:	00 00 00 
 8057f97:	8d 85 78 f9 ff ff    	lea    -0x688(%ebp),%eax
 8057f9d:	83 ec 04             	sub    $0x4,%esp
 8057fa0:	ff b5 8c f9 ff ff    	pushl  -0x674(%ebp)
 8057fa6:	ff b5 88 f9 ff ff    	pushl  -0x678(%ebp)
 8057fac:	ff b5 84 f9 ff ff    	pushl  -0x67c(%ebp)
 8057fb2:	ff b5 74 f9 ff ff    	pushl  -0x68c(%ebp)
 8057fb8:	ff b5 70 f9 ff ff    	pushl  -0x690(%ebp)
 8057fbe:	ff b5 6c f9 ff ff    	pushl  -0x694(%ebp)
 8057fc4:	50                   	push   %eax
 8057fc5:	e8 e8 8b 00 00       	call   8060bb2 <string_all_before>
 8057fca:	83 c4 1c             	add    $0x1c,%esp
 8057fcd:	c7 85 a8 f9 ff ff 32 	movl   $0x8069732,-0x658(%ebp)
 8057fd4:	97 06 08 
 8057fd7:	c7 85 ac f9 ff ff 01 	movl   $0x1,-0x654(%ebp)
 8057fde:	00 00 00 
 8057fe1:	c7 85 b0 f9 ff ff 01 	movl   $0x1,-0x650(%ebp)
 8057fe8:	00 00 00 
 8057feb:	c7 85 9c f9 ff ff 2d 	movl   $0x806972d,-0x664(%ebp)
 8057ff2:	97 06 08 
 8057ff5:	c7 85 a0 f9 ff ff 01 	movl   $0x1,-0x660(%ebp)
 8057ffc:	00 00 00 
 8057fff:	c7 85 a4 f9 ff ff 01 	movl   $0x1,-0x65c(%ebp)
 8058006:	00 00 00 
 8058009:	8d 85 20 fa ff ff    	lea    -0x5e0(%ebp),%eax
 805800f:	83 ec 04             	sub    $0x4,%esp
 8058012:	ff b5 a4 f9 ff ff    	pushl  -0x65c(%ebp)
 8058018:	ff b5 a0 f9 ff ff    	pushl  -0x660(%ebp)
 805801e:	ff b5 9c f9 ff ff    	pushl  -0x664(%ebp)
 8058024:	ff b5 74 f9 ff ff    	pushl  -0x68c(%ebp)
 805802a:	ff b5 70 f9 ff ff    	pushl  -0x690(%ebp)
 8058030:	ff b5 6c f9 ff ff    	pushl  -0x694(%ebp)
 8058036:	50                   	push   %eax
 8058037:	e8 7f 8c 00 00       	call   8060cbb <string_all_after>
 805803c:	83 c4 1c             	add    $0x1c,%esp
 805803f:	8d 85 90 f9 ff ff    	lea    -0x670(%ebp),%eax
 8058045:	83 ec 04             	sub    $0x4,%esp
 8058048:	ff b5 b0 f9 ff ff    	pushl  -0x650(%ebp)
 805804e:	ff b5 ac f9 ff ff    	pushl  -0x654(%ebp)
 8058054:	ff b5 a8 f9 ff ff    	pushl  -0x658(%ebp)
 805805a:	ff b5 28 fa ff ff    	pushl  -0x5d8(%ebp)
 8058060:	ff b5 24 fa ff ff    	pushl  -0x5dc(%ebp)
 8058066:	ff b5 20 fa ff ff    	pushl  -0x5e0(%ebp)
 805806c:	50                   	push   %eax
 805806d:	e8 40 8b 00 00       	call   8060bb2 <string_all_before>
 8058072:	83 c4 1c             	add    $0x1c,%esp
 8058075:	c7 85 c0 f9 ff ff 2d 	movl   $0x806972d,-0x640(%ebp)
 805807c:	97 06 08 
 805807f:	c7 85 c4 f9 ff ff 01 	movl   $0x1,-0x63c(%ebp)
 8058086:	00 00 00 
 8058089:	c7 85 c8 f9 ff ff 01 	movl   $0x1,-0x638(%ebp)
 8058090:	00 00 00 
 8058093:	8d 85 b4 f9 ff ff    	lea    -0x64c(%ebp),%eax
 8058099:	83 ec 04             	sub    $0x4,%esp
 805809c:	ff b5 c8 f9 ff ff    	pushl  -0x638(%ebp)
 80580a2:	ff b5 c4 f9 ff ff    	pushl  -0x63c(%ebp)
 80580a8:	ff b5 c0 f9 ff ff    	pushl  -0x640(%ebp)
 80580ae:	ff b5 74 f9 ff ff    	pushl  -0x68c(%ebp)
 80580b4:	ff b5 70 f9 ff ff    	pushl  -0x690(%ebp)
 80580ba:	ff b5 6c f9 ff ff    	pushl  -0x694(%ebp)
 80580c0:	50                   	push   %eax
 80580c1:	e8 ec 8a 00 00       	call   8060bb2 <string_all_before>
 80580c6:	83 c4 1c             	add    $0x1c,%esp
 80580c9:	8d 85 cc f9 ff ff    	lea    -0x634(%ebp),%eax
 80580cf:	83 ec 0c             	sub    $0xc,%esp
 80580d2:	ff b5 98 f9 ff ff    	pushl  -0x668(%ebp)
 80580d8:	ff b5 94 f9 ff ff    	pushl  -0x66c(%ebp)
 80580de:	ff b5 90 f9 ff ff    	pushl  -0x670(%ebp)
 80580e4:	ff b5 80 f9 ff ff    	pushl  -0x680(%ebp)
 80580ea:	ff b5 7c f9 ff ff    	pushl  -0x684(%ebp)
 80580f0:	ff b5 78 f9 ff ff    	pushl  -0x688(%ebp)
 80580f6:	6a 02                	push   $0x2
 80580f8:	68 36 9d 06 08       	push   $0x8069d36
 80580fd:	50                   	push   %eax
 80580fe:	e8 c1 13 ff ff       	call   80494c4 <_STR>
 8058103:	83 c4 2c             	add    $0x2c,%esp
 8058106:	8b 85 cc f9 ff ff    	mov    -0x634(%ebp),%eax
 805810c:	83 ec 08             	sub    $0x8,%esp
 805810f:	68 4e 9d 06 08       	push   $0x8069d4e
 8058114:	50                   	push   %eax
 8058115:	e8 f6 06 ff ff       	call   8048810 <popen@plt>
 805811a:	83 c4 10             	add    $0x10,%esp
 805811d:	89 85 68 f9 ff ff    	mov    %eax,-0x698(%ebp)
 8058123:	83 ec 0c             	sub    $0xc,%esp
 8058126:	ff b5 68 f9 ff ff    	pushl  -0x698(%ebp)
 805812c:	e8 05 fa ff ff       	call   8057b36 <isnil>
 8058131:	83 c4 10             	add    $0x10,%esp
 8058134:	85 c0                	test   %eax,%eax
 8058136:	74 22                	je     805815a <print_backtrace_skipping_top_frames_linux+0x395>
 8058138:	83 ec 04             	sub    $0x4,%esp
 805813b:	ff b5 74 f9 ff ff    	pushl  -0x68c(%ebp)
 8058141:	ff b5 70 f9 ff ff    	pushl  -0x690(%ebp)
 8058147:	ff b5 6c f9 ff ff    	pushl  -0x694(%ebp)
 805814d:	e8 a0 f6 ff ff       	call   80577f2 <eprintln>
 8058152:	83 c4 10             	add    $0x10,%esp
 8058155:	e9 65 03 00 00       	jmp    80584bf <print_backtrace_skipping_top_frames_linux+0x6fa>
 805815a:	8d 95 0c fc ff ff    	lea    -0x3f4(%ebp),%edx
 8058160:	b8 00 00 00 00       	mov    $0x0,%eax
 8058165:	b9 fa 00 00 00       	mov    $0xfa,%ecx
 805816a:	89 d7                	mov    %edx,%edi
 805816c:	f3 ab                	rep stos %eax,%es:(%edi)
 805816e:	c7 85 d8 f9 ff ff 34 	movl   $0x8069734,-0x628(%ebp)
 8058175:	97 06 08 
 8058178:	c7 85 dc f9 ff ff 00 	movl   $0x0,-0x624(%ebp)
 805817f:	00 00 00 
 8058182:	c7 85 e0 f9 ff ff 01 	movl   $0x1,-0x620(%ebp)
 8058189:	00 00 00 
 805818c:	83 ec 04             	sub    $0x4,%esp
 805818f:	ff b5 68 f9 ff ff    	pushl  -0x698(%ebp)
 8058195:	68 e8 03 00 00       	push   $0x3e8
 805819a:	8d 85 0c fc ff ff    	lea    -0x3f4(%ebp),%eax
 80581a0:	50                   	push   %eax
 80581a1:	e8 3a 06 ff ff       	call   80487e0 <fgets@plt>
 80581a6:	83 c4 10             	add    $0x10,%esp
 80581a9:	85 c0                	test   %eax,%eax
 80581ab:	74 69                	je     8058216 <print_backtrace_skipping_top_frames_linux+0x451>
 80581ad:	83 ec 0c             	sub    $0xc,%esp
 80581b0:	8d 85 0c fc ff ff    	lea    -0x3f4(%ebp),%eax
 80581b6:	50                   	push   %eax
 80581b7:	e8 28 51 00 00       	call   805d2e4 <vstrlen>
 80581bc:	83 c4 10             	add    $0x10,%esp
 80581bf:	89 c2                	mov    %eax,%edx
 80581c1:	8d 85 2c fa ff ff    	lea    -0x5d4(%ebp),%eax
 80581c7:	83 ec 04             	sub    $0x4,%esp
 80581ca:	52                   	push   %edx
 80581cb:	8d 95 0c fc ff ff    	lea    -0x3f4(%ebp),%edx
 80581d1:	52                   	push   %edx
 80581d2:	50                   	push   %eax
 80581d3:	e8 22 51 00 00       	call   805d2fa <tos>
 80581d8:	83 c4 0c             	add    $0xc,%esp
 80581db:	8d 85 d8 f9 ff ff    	lea    -0x628(%ebp),%eax
 80581e1:	83 ec 04             	sub    $0x4,%esp
 80581e4:	ff b5 34 fa ff ff    	pushl  -0x5cc(%ebp)
 80581ea:	ff b5 30 fa ff ff    	pushl  -0x5d0(%ebp)
 80581f0:	ff b5 2c fa ff ff    	pushl  -0x5d4(%ebp)
 80581f6:	ff b5 e0 f9 ff ff    	pushl  -0x620(%ebp)
 80581fc:	ff b5 dc f9 ff ff    	pushl  -0x624(%ebp)
 8058202:	ff b5 d8 f9 ff ff    	pushl  -0x628(%ebp)
 8058208:	50                   	push   %eax
 8058209:	e8 36 60 00 00       	call   805e244 <string_add>
 805820e:	83 c4 1c             	add    $0x1c,%esp
 8058211:	e9 76 ff ff ff       	jmp    805818c <print_backtrace_skipping_top_frames_linux+0x3c7>
 8058216:	90                   	nop
 8058217:	c7 85 e4 f9 ff ff 50 	movl   $0x8069d50,-0x61c(%ebp)
 805821e:	9d 06 08 
 8058221:	c7 85 e8 f9 ff ff 01 	movl   $0x1,-0x618(%ebp)
 8058228:	00 00 00 
 805822b:	c7 85 ec f9 ff ff 01 	movl   $0x1,-0x614(%ebp)
 8058232:	00 00 00 
 8058235:	8d 85 38 fa ff ff    	lea    -0x5c8(%ebp),%eax
 805823b:	ff b5 e0 f9 ff ff    	pushl  -0x620(%ebp)
 8058241:	ff b5 dc f9 ff ff    	pushl  -0x624(%ebp)
 8058247:	ff b5 d8 f9 ff ff    	pushl  -0x628(%ebp)
 805824d:	50                   	push   %eax
 805824e:	e8 12 77 00 00       	call   805f965 <string_trim_space>
 8058253:	83 c4 0c             	add    $0xc,%esp
 8058256:	8d 85 38 f9 ff ff    	lea    -0x6c8(%ebp),%eax
 805825c:	83 ec 04             	sub    $0x4,%esp
 805825f:	ff b5 ec f9 ff ff    	pushl  -0x614(%ebp)
 8058265:	ff b5 e8 f9 ff ff    	pushl  -0x618(%ebp)
 805826b:	ff b5 e4 f9 ff ff    	pushl  -0x61c(%ebp)
 8058271:	ff b5 40 fa ff ff    	pushl  -0x5c0(%ebp)
 8058277:	ff b5 3c fa ff ff    	pushl  -0x5c4(%ebp)
 805827d:	ff b5 38 fa ff ff    	pushl  -0x5c8(%ebp)
 8058283:	50                   	push   %eax
 8058284:	e8 bb 5f 00 00       	call   805e244 <string_add>
 8058289:	83 c4 1c             	add    $0x1c,%esp
 805828c:	8b 85 38 f9 ff ff    	mov    -0x6c8(%ebp),%eax
 8058292:	89 85 d8 f9 ff ff    	mov    %eax,-0x628(%ebp)
 8058298:	8b 85 3c f9 ff ff    	mov    -0x6c4(%ebp),%eax
 805829e:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%ebp)
 80582a4:	8b 85 40 f9 ff ff    	mov    -0x6c0(%ebp),%eax
 80582aa:	89 85 e0 f9 ff ff    	mov    %eax,-0x620(%ebp)
 80582b0:	83 ec 0c             	sub    $0xc,%esp
 80582b3:	ff b5 68 f9 ff ff    	pushl  -0x698(%ebp)
 80582b9:	e8 b2 05 ff ff       	call   8048870 <pclose@plt>
 80582be:	83 c4 10             	add    $0x10,%esp
 80582c1:	85 c0                	test   %eax,%eax
 80582c3:	74 22                	je     80582e7 <print_backtrace_skipping_top_frames_linux+0x522>
 80582c5:	83 ec 04             	sub    $0x4,%esp
 80582c8:	ff b5 74 f9 ff ff    	pushl  -0x68c(%ebp)
 80582ce:	ff b5 70 f9 ff ff    	pushl  -0x690(%ebp)
 80582d4:	ff b5 6c f9 ff ff    	pushl  -0x694(%ebp)
 80582da:	e8 13 f5 ff ff       	call   80577f2 <eprintln>
 80582df:	83 c4 10             	add    $0x10,%esp
 80582e2:	e9 d8 01 00 00       	jmp    80584bf <print_backtrace_skipping_top_frames_linux+0x6fa>
 80582e7:	c7 85 f0 f9 ff ff 52 	movl   $0x8069d52,-0x610(%ebp)
 80582ee:	9d 06 08 
 80582f1:	c7 85 f4 f9 ff ff 05 	movl   $0x5,-0x60c(%ebp)
 80582f8:	00 00 00 
 80582fb:	c7 85 f8 f9 ff ff 01 	movl   $0x1,-0x608(%ebp)
 8058302:	00 00 00 
 8058305:	83 ec 08             	sub    $0x8,%esp
 8058308:	ff b5 f8 f9 ff ff    	pushl  -0x608(%ebp)
 805830e:	ff b5 f4 f9 ff ff    	pushl  -0x60c(%ebp)
 8058314:	ff b5 f0 f9 ff ff    	pushl  -0x610(%ebp)
 805831a:	ff b5 e0 f9 ff ff    	pushl  -0x620(%ebp)
 8058320:	ff b5 dc f9 ff ff    	pushl  -0x624(%ebp)
 8058326:	ff b5 d8 f9 ff ff    	pushl  -0x628(%ebp)
 805832c:	e8 23 5d 00 00       	call   805e054 <string_eq>
 8058331:	83 c4 20             	add    $0x20,%esp
 8058334:	85 c0                	test   %eax,%eax
 8058336:	75 51                	jne    8058389 <print_backtrace_skipping_top_frames_linux+0x5c4>
 8058338:	c7 85 fc f9 ff ff 58 	movl   $0x8069d58,-0x604(%ebp)
 805833f:	9d 06 08 
 8058342:	c7 85 00 fa ff ff 05 	movl   $0x5,-0x600(%ebp)
 8058349:	00 00 00 
 805834c:	c7 85 04 fa ff ff 01 	movl   $0x1,-0x5fc(%ebp)
 8058353:	00 00 00 
 8058356:	83 ec 08             	sub    $0x8,%esp
 8058359:	ff b5 04 fa ff ff    	pushl  -0x5fc(%ebp)
 805835f:	ff b5 00 fa ff ff    	pushl  -0x600(%ebp)
 8058365:	ff b5 fc f9 ff ff    	pushl  -0x604(%ebp)
 805836b:	ff b5 e0 f9 ff ff    	pushl  -0x620(%ebp)
 8058371:	ff b5 dc f9 ff ff    	pushl  -0x624(%ebp)
 8058377:	ff b5 d8 f9 ff ff    	pushl  -0x628(%ebp)
 805837d:	e8 d2 5c 00 00       	call   805e054 <string_eq>
 8058382:	83 c4 20             	add    $0x20,%esp
 8058385:	85 c0                	test   %eax,%eax
 8058387:	74 1e                	je     80583a7 <print_backtrace_skipping_top_frames_linux+0x5e2>
 8058389:	c7 85 d8 f9 ff ff 34 	movl   $0x8069734,-0x628(%ebp)
 8058390:	97 06 08 
 8058393:	c7 85 dc f9 ff ff 00 	movl   $0x0,-0x624(%ebp)
 805839a:	00 00 00 
 805839d:	c7 85 e0 f9 ff ff 01 	movl   $0x1,-0x620(%ebp)
 80583a4:	00 00 00 
 80583a7:	c7 85 14 fa ff ff 5e 	movl   $0x8069d5e,-0x5ec(%ebp)
 80583ae:	9d 06 08 
 80583b1:	c7 85 18 fa ff ff 05 	movl   $0x5,-0x5e8(%ebp)
 80583b8:	00 00 00 
 80583bb:	c7 85 1c fa ff ff 01 	movl   $0x1,-0x5e4(%ebp)
 80583c2:	00 00 00 
 80583c5:	c7 85 08 fa ff ff 64 	movl   $0x8069d64,-0x5f8(%ebp)
 80583cc:	9d 06 08 
 80583cf:	c7 85 0c fa ff ff 0f 	movl   $0xf,-0x5f4(%ebp)
 80583d6:	00 00 00 
 80583d9:	c7 85 10 fa ff ff 01 	movl   $0x1,-0x5f0(%ebp)
 80583e0:	00 00 00 
 80583e3:	8d 85 38 f9 ff ff    	lea    -0x6c8(%ebp),%eax
 80583e9:	83 ec 08             	sub    $0x8,%esp
 80583ec:	ff b5 1c fa ff ff    	pushl  -0x5e4(%ebp)
 80583f2:	ff b5 18 fa ff ff    	pushl  -0x5e8(%ebp)
 80583f8:	ff b5 14 fa ff ff    	pushl  -0x5ec(%ebp)
 80583fe:	ff b5 10 fa ff ff    	pushl  -0x5f0(%ebp)
 8058404:	ff b5 0c fa ff ff    	pushl  -0x5f4(%ebp)
 805840a:	ff b5 08 fa ff ff    	pushl  -0x5f8(%ebp)
 8058410:	ff b5 e0 f9 ff ff    	pushl  -0x620(%ebp)
 8058416:	ff b5 dc f9 ff ff    	pushl  -0x624(%ebp)
 805841c:	ff b5 d8 f9 ff ff    	pushl  -0x628(%ebp)
 8058422:	50                   	push   %eax
 8058423:	e8 ab 54 00 00       	call   805d8d3 <string_replace>
 8058428:	83 c4 2c             	add    $0x2c,%esp
 805842b:	8b 85 38 f9 ff ff    	mov    -0x6c8(%ebp),%eax
 8058431:	89 85 d8 f9 ff ff    	mov    %eax,-0x628(%ebp)
 8058437:	8b 85 3c f9 ff ff    	mov    -0x6c4(%ebp),%eax
 805843d:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%ebp)
 8058443:	8b 85 40 f9 ff ff    	mov    -0x6c0(%ebp),%eax
 8058449:	89 85 e0 f9 ff ff    	mov    %eax,-0x620(%ebp)
 805844f:	8d 85 44 fa ff ff    	lea    -0x5bc(%ebp),%eax
 8058455:	83 ec 08             	sub    $0x8,%esp
 8058458:	ff b5 bc f9 ff ff    	pushl  -0x644(%ebp)
 805845e:	ff b5 b8 f9 ff ff    	pushl  -0x648(%ebp)
 8058464:	ff b5 b4 f9 ff ff    	pushl  -0x64c(%ebp)
 805846a:	6a 0e                	push   $0xe
 805846c:	ff b5 98 f9 ff ff    	pushl  -0x668(%ebp)
 8058472:	ff b5 94 f9 ff ff    	pushl  -0x66c(%ebp)
 8058478:	ff b5 90 f9 ff ff    	pushl  -0x670(%ebp)
 805847e:	6a c9                	push   $0xffffffc9
 8058480:	ff b5 e0 f9 ff ff    	pushl  -0x620(%ebp)
 8058486:	ff b5 dc f9 ff ff    	pushl  -0x624(%ebp)
 805848c:	ff b5 d8 f9 ff ff    	pushl  -0x628(%ebp)
 8058492:	6a 03                	push   $0x3
 8058494:	68 74 9d 06 08       	push   $0x8069d74
 8058499:	50                   	push   %eax
 805849a:	e8 25 10 ff ff       	call   80494c4 <_STR>
 805849f:	83 c4 3c             	add    $0x3c,%esp
 80584a2:	83 ec 04             	sub    $0x4,%esp
 80584a5:	ff b5 4c fa ff ff    	pushl  -0x5b4(%ebp)
 80584ab:	ff b5 48 fa ff ff    	pushl  -0x5b8(%ebp)
 80584b1:	ff b5 44 fa ff ff    	pushl  -0x5bc(%ebp)
 80584b7:	e8 36 f3 ff ff       	call   80577f2 <eprintln>
 80584bc:	83 c4 10             	add    $0x10,%esp
 80584bf:	83 85 58 f9 ff ff 01 	addl   $0x1,-0x6a8(%ebp)
 80584c6:	8b 85 68 fa ff ff    	mov    -0x598(%ebp),%eax
 80584cc:	3b 85 58 f9 ff ff    	cmp    -0x6a8(%ebp),%eax
 80584d2:	0f 8f 70 fa ff ff    	jg     8057f48 <print_backtrace_skipping_top_frames_linux+0x183>
 80584d8:	b8 01 00 00 00       	mov    $0x1,%eax
 80584dd:	8b 7d f4             	mov    -0xc(%ebp),%edi
 80584e0:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 80584e7:	74 05                	je     80584ee <print_backtrace_skipping_top_frames_linux+0x729>
 80584e9:	e8 32 03 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80584ee:	8b 7d fc             	mov    -0x4(%ebp),%edi
 80584f1:	c9                   	leave  
 80584f2:	c3                   	ret    

080584f3 <break_if_debugger_attached>:
 80584f3:	55                   	push   %ebp
 80584f4:	89 e5                	mov    %esp,%ebp
 80584f6:	83 ec 10             	sub    $0x10,%esp
 80584f9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8058500:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8058503:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8058509:	90                   	nop
 805850a:	c9                   	leave  
 805850b:	c3                   	ret    

0805850c <chan_close>:
 805850c:	55                   	push   %ebp
 805850d:	89 e5                	mov    %esp,%ebp
 805850f:	90                   	nop
 8058510:	5d                   	pop    %ebp
 8058511:	c3                   	ret    

08058512 <chan_try_pop>:
 8058512:	55                   	push   %ebp
 8058513:	89 e5                	mov    %esp,%ebp
 8058515:	b8 00 00 00 00       	mov    $0x0,%eax
 805851a:	5d                   	pop    %ebp
 805851b:	c3                   	ret    

0805851c <chan_try_push>:
 805851c:	55                   	push   %ebp
 805851d:	89 e5                	mov    %esp,%ebp
 805851f:	b8 00 00 00 00       	mov    $0x0,%eax
 8058524:	5d                   	pop    %ebp
 8058525:	c3                   	ret    

08058526 <f64_str>:
 8058526:	55                   	push   %ebp
 8058527:	89 e5                	mov    %esp,%ebp
 8058529:	83 ec 28             	sub    $0x28,%esp
 805852c:	8b 45 08             	mov    0x8(%ebp),%eax
 805852f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058532:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058535:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8058538:	8b 45 10             	mov    0x10(%ebp),%eax
 805853b:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805853e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058544:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058547:	31 c0                	xor    %eax,%eax
 8058549:	83 ec 08             	sub    $0x8,%esp
 805854c:	ff 75 dc             	pushl  -0x24(%ebp)
 805854f:	ff 75 d8             	pushl  -0x28(%ebp)
 8058552:	e8 dd 02 00 00       	call   8058834 <f64_abs>
 8058557:	83 c4 10             	add    $0x10,%esp
 805855a:	dd 5d e8             	fstpl  -0x18(%ebp)
 805855d:	dd 45 e8             	fldl   -0x18(%ebp)
 8058560:	dd 05 e8 bc 06 08    	fldl   0x806bce8
 8058566:	d9 c9                	fxch   %st(1)
 8058568:	df e9                	fucomip %st(1),%st
 805856a:	dd d8                	fstp   %st(0)
 805856c:	72 28                	jb     8058596 <f64_str+0x70>
 805856e:	dd 05 f0 bc 06 08    	fldl   0x806bcf0
 8058574:	dd 45 e8             	fldl   -0x18(%ebp)
 8058577:	d9 c9                	fxch   %st(1)
 8058579:	df e9                	fucomip %st(1),%st
 805857b:	dd d8                	fstp   %st(0)
 805857d:	76 17                	jbe    8058596 <f64_str+0x70>
 805857f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058582:	83 ec 04             	sub    $0x4,%esp
 8058585:	ff 75 dc             	pushl  -0x24(%ebp)
 8058588:	ff 75 d8             	pushl  -0x28(%ebp)
 805858b:	50                   	push   %eax
 805858c:	e8 21 cf ff ff       	call   80554b2 <strconv__f64_to_str_l>
 8058591:	83 c4 0c             	add    $0xc,%esp
 8058594:	eb 15                	jmp    80585ab <f64_str+0x85>
 8058596:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058599:	83 ec 04             	sub    $0x4,%esp
 805859c:	ff 75 dc             	pushl  -0x24(%ebp)
 805859f:	ff 75 d8             	pushl  -0x28(%ebp)
 80585a2:	50                   	push   %eax
 80585a3:	e8 ec c1 ff ff       	call   8054794 <strconv__ftoa_64>
 80585a8:	83 c4 0c             	add    $0xc,%esp
 80585ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80585ae:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80585b1:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80585b8:	74 05                	je     80585bf <f64_str+0x99>
 80585ba:	e8 61 02 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80585bf:	c9                   	leave  
 80585c0:	c2 04 00             	ret    $0x4

080585c3 <float_literal_str>:
 80585c3:	55                   	push   %ebp
 80585c4:	89 e5                	mov    %esp,%ebp
 80585c6:	83 ec 28             	sub    $0x28,%esp
 80585c9:	8b 45 08             	mov    0x8(%ebp),%eax
 80585cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80585cf:	8b 45 0c             	mov    0xc(%ebp),%eax
 80585d2:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80585d5:	8b 45 10             	mov    0x10(%ebp),%eax
 80585d8:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80585db:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80585e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80585e4:	31 c0                	xor    %eax,%eax
 80585e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80585e9:	83 ec 04             	sub    $0x4,%esp
 80585ec:	ff 75 dc             	pushl  -0x24(%ebp)
 80585ef:	ff 75 d8             	pushl  -0x28(%ebp)
 80585f2:	50                   	push   %eax
 80585f3:	e8 2e ff ff ff       	call   8058526 <f64_str>
 80585f8:	83 c4 0c             	add    $0xc,%esp
 80585fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80585fe:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8058601:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8058608:	74 05                	je     805860f <float_literal_str+0x4c>
 805860a:	e8 11 02 ff ff       	call   8048820 <__stack_chk_fail@plt>
 805860f:	c9                   	leave  
 8058610:	c2 04 00             	ret    $0x4

08058613 <f64_strsci>:
 8058613:	55                   	push   %ebp
 8058614:	89 e5                	mov    %esp,%ebp
 8058616:	83 ec 28             	sub    $0x28,%esp
 8058619:	8b 45 08             	mov    0x8(%ebp),%eax
 805861c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805861f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058622:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8058625:	8b 45 10             	mov    0x10(%ebp),%eax
 8058628:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805862b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058631:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058634:	31 c0                	xor    %eax,%eax
 8058636:	8b 45 14             	mov    0x14(%ebp),%eax
 8058639:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805863c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8058640:	7f 09                	jg     805864b <f64_strsci+0x38>
 8058642:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8058649:	eb 0d                	jmp    8058658 <f64_strsci+0x45>
 805864b:	83 7d f0 11          	cmpl   $0x11,-0x10(%ebp)
 805864f:	7e 07                	jle    8058658 <f64_strsci+0x45>
 8058651:	c7 45 f0 11 00 00 00 	movl   $0x11,-0x10(%ebp)
 8058658:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805865b:	ff 75 f0             	pushl  -0x10(%ebp)
 805865e:	ff 75 dc             	pushl  -0x24(%ebp)
 8058661:	ff 75 d8             	pushl  -0x28(%ebp)
 8058664:	50                   	push   %eax
 8058665:	e8 55 93 ff ff       	call   80519bf <strconv__f64_to_str>
 805866a:	83 c4 0c             	add    $0xc,%esp
 805866d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058670:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8058673:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805867a:	74 05                	je     8058681 <f64_strsci+0x6e>
 805867c:	e8 9f 01 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8058681:	c9                   	leave  
 8058682:	c2 04 00             	ret    $0x4

08058685 <f64_strlong>:
 8058685:	55                   	push   %ebp
 8058686:	89 e5                	mov    %esp,%ebp
 8058688:	83 ec 28             	sub    $0x28,%esp
 805868b:	8b 45 08             	mov    0x8(%ebp),%eax
 805868e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058691:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058694:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8058697:	8b 45 10             	mov    0x10(%ebp),%eax
 805869a:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805869d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80586a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80586a6:	31 c0                	xor    %eax,%eax
 80586a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80586ab:	83 ec 04             	sub    $0x4,%esp
 80586ae:	ff 75 dc             	pushl  -0x24(%ebp)
 80586b1:	ff 75 d8             	pushl  -0x28(%ebp)
 80586b4:	50                   	push   %eax
 80586b5:	e8 f8 cd ff ff       	call   80554b2 <strconv__f64_to_str_l>
 80586ba:	83 c4 0c             	add    $0xc,%esp
 80586bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80586c0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80586c3:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80586ca:	74 05                	je     80586d1 <f64_strlong+0x4c>
 80586cc:	e8 4f 01 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80586d1:	c9                   	leave  
 80586d2:	c2 04 00             	ret    $0x4

080586d5 <f32_str>:
 80586d5:	55                   	push   %ebp
 80586d6:	89 e5                	mov    %esp,%ebp
 80586d8:	83 ec 28             	sub    $0x28,%esp
 80586db:	8b 45 08             	mov    0x8(%ebp),%eax
 80586de:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80586e1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80586e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80586ea:	31 c0                	xor    %eax,%eax
 80586ec:	83 ec 0c             	sub    $0xc,%esp
 80586ef:	ff 75 0c             	pushl  0xc(%ebp)
 80586f2:	e8 21 01 00 00       	call   8058818 <f32_abs>
 80586f7:	83 c4 10             	add    $0x10,%esp
 80586fa:	d9 5d e0             	fstps  -0x20(%ebp)
 80586fd:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058700:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8058703:	d9 45 f0             	flds   -0x10(%ebp)
 8058706:	dd 05 e8 bc 06 08    	fldl   0x806bce8
 805870c:	d9 c9                	fxch   %st(1)
 805870e:	df e9                	fucomip %st(1),%st
 8058710:	dd d8                	fstp   %st(0)
 8058712:	72 2c                	jb     8058740 <f32_str+0x6b>
 8058714:	d9 05 f8 bc 06 08    	flds   0x806bcf8
 805871a:	d9 45 f0             	flds   -0x10(%ebp)
 805871d:	d9 c9                	fxch   %st(1)
 805871f:	df e9                	fucomip %st(1),%st
 8058721:	dd d8                	fstp   %st(0)
 8058723:	76 1b                	jbe    8058740 <f32_str+0x6b>
 8058725:	d9 45 0c             	flds   0xc(%ebp)
 8058728:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805872b:	83 ec 04             	sub    $0x4,%esp
 805872e:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 8058732:	dd 1c 24             	fstpl  (%esp)
 8058735:	50                   	push   %eax
 8058736:	e8 1d cd ff ff       	call   8055458 <strconv__f32_to_str_l>
 805873b:	83 c4 0c             	add    $0xc,%esp
 805873e:	eb 12                	jmp    8058752 <f32_str+0x7d>
 8058740:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058743:	83 ec 08             	sub    $0x8,%esp
 8058746:	ff 75 0c             	pushl  0xc(%ebp)
 8058749:	50                   	push   %eax
 805874a:	e8 e4 c0 ff ff       	call   8054833 <strconv__ftoa_32>
 805874f:	83 c4 0c             	add    $0xc,%esp
 8058752:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058755:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8058758:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805875f:	74 05                	je     8058766 <f32_str+0x91>
 8058761:	e8 ba 00 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8058766:	c9                   	leave  
 8058767:	c2 04 00             	ret    $0x4

0805876a <f32_strsci>:
 805876a:	55                   	push   %ebp
 805876b:	89 e5                	mov    %esp,%ebp
 805876d:	83 ec 28             	sub    $0x28,%esp
 8058770:	8b 45 08             	mov    0x8(%ebp),%eax
 8058773:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058776:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805877c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805877f:	31 c0                	xor    %eax,%eax
 8058781:	8b 45 10             	mov    0x10(%ebp),%eax
 8058784:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8058787:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 805878b:	7f 09                	jg     8058796 <f32_strsci+0x2c>
 805878d:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8058794:	eb 0d                	jmp    80587a3 <f32_strsci+0x39>
 8058796:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
 805879a:	7e 07                	jle    80587a3 <f32_strsci+0x39>
 805879c:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%ebp)
 80587a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80587a6:	83 ec 04             	sub    $0x4,%esp
 80587a9:	ff 75 f0             	pushl  -0x10(%ebp)
 80587ac:	ff 75 0c             	pushl  0xc(%ebp)
 80587af:	50                   	push   %eax
 80587b0:	e8 e1 7c ff ff       	call   8050496 <strconv__f32_to_str>
 80587b5:	83 c4 0c             	add    $0xc,%esp
 80587b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80587bb:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80587be:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80587c5:	74 05                	je     80587cc <f32_strsci+0x62>
 80587c7:	e8 54 00 ff ff       	call   8048820 <__stack_chk_fail@plt>
 80587cc:	c9                   	leave  
 80587cd:	c2 04 00             	ret    $0x4

080587d0 <f32_strlong>:
 80587d0:	55                   	push   %ebp
 80587d1:	89 e5                	mov    %esp,%ebp
 80587d3:	83 ec 28             	sub    $0x28,%esp
 80587d6:	8b 45 08             	mov    0x8(%ebp),%eax
 80587d9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80587dc:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80587e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80587e5:	31 c0                	xor    %eax,%eax
 80587e7:	d9 45 0c             	flds   0xc(%ebp)
 80587ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80587ed:	83 ec 04             	sub    $0x4,%esp
 80587f0:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 80587f4:	dd 1c 24             	fstpl  (%esp)
 80587f7:	50                   	push   %eax
 80587f8:	e8 5b cc ff ff       	call   8055458 <strconv__f32_to_str_l>
 80587fd:	83 c4 0c             	add    $0xc,%esp
 8058800:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058803:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8058806:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805880d:	74 05                	je     8058814 <f32_strlong+0x44>
 805880f:	e8 0c 00 ff ff       	call   8048820 <__stack_chk_fail@plt>
 8058814:	c9                   	leave  
 8058815:	c2 04 00             	ret    $0x4

08058818 <f32_abs>:
 8058818:	55                   	push   %ebp
 8058819:	89 e5                	mov    %esp,%ebp
 805881b:	d9 ee                	fldz   
 805881d:	d9 45 08             	flds   0x8(%ebp)
 8058820:	d9 c9                	fxch   %st(1)
 8058822:	df e9                	fucomip %st(1),%st
 8058824:	dd d8                	fstp   %st(0)
 8058826:	76 07                	jbe    805882f <f32_abs+0x17>
 8058828:	d9 45 08             	flds   0x8(%ebp)
 805882b:	d9 e0                	fchs   
 805882d:	eb 03                	jmp    8058832 <f32_abs+0x1a>
 805882f:	d9 45 08             	flds   0x8(%ebp)
 8058832:	5d                   	pop    %ebp
 8058833:	c3                   	ret    

08058834 <f64_abs>:
 8058834:	55                   	push   %ebp
 8058835:	89 e5                	mov    %esp,%ebp
 8058837:	83 ec 08             	sub    $0x8,%esp
 805883a:	8b 45 08             	mov    0x8(%ebp),%eax
 805883d:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8058840:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058843:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8058846:	d9 ee                	fldz   
 8058848:	dd 45 f8             	fldl   -0x8(%ebp)
 805884b:	d9 c9                	fxch   %st(1)
 805884d:	df e9                	fucomip %st(1),%st
 805884f:	dd d8                	fstp   %st(0)
 8058851:	76 07                	jbe    805885a <f64_abs+0x26>
 8058853:	dd 45 f8             	fldl   -0x8(%ebp)
 8058856:	d9 e0                	fchs   
 8058858:	eb 03                	jmp    805885d <f64_abs+0x29>
 805885a:	dd 45 f8             	fldl   -0x8(%ebp)
 805885d:	c9                   	leave  
 805885e:	c3                   	ret    

0805885f <f32_max>:
 805885f:	55                   	push   %ebp
 8058860:	89 e5                	mov    %esp,%ebp
 8058862:	d9 45 08             	flds   0x8(%ebp)
 8058865:	d9 45 0c             	flds   0xc(%ebp)
 8058868:	d9 c9                	fxch   %st(1)
 805886a:	df e9                	fucomip %st(1),%st
 805886c:	dd d8                	fstp   %st(0)
 805886e:	76 05                	jbe    8058875 <f32_max+0x16>
 8058870:	d9 45 08             	flds   0x8(%ebp)
 8058873:	eb 03                	jmp    8058878 <f32_max+0x19>
 8058875:	d9 45 0c             	flds   0xc(%ebp)
 8058878:	5d                   	pop    %ebp
 8058879:	c3                   	ret    

0805887a <f32_min>:
 805887a:	55                   	push   %ebp
 805887b:	89 e5                	mov    %esp,%ebp
 805887d:	d9 45 0c             	flds   0xc(%ebp)
 8058880:	d9 45 08             	flds   0x8(%ebp)
 8058883:	d9 c9                	fxch   %st(1)
 8058885:	df e9                	fucomip %st(1),%st
 8058887:	dd d8                	fstp   %st(0)
 8058889:	76 05                	jbe    8058890 <f32_min+0x16>
 805888b:	d9 45 08             	flds   0x8(%ebp)
 805888e:	eb 03                	jmp    8058893 <f32_min+0x19>
 8058890:	d9 45 0c             	flds   0xc(%ebp)
 8058893:	5d                   	pop    %ebp
 8058894:	c3                   	ret    

08058895 <f64_max>:
 8058895:	55                   	push   %ebp
 8058896:	89 e5                	mov    %esp,%ebp
 8058898:	83 ec 10             	sub    $0x10,%esp
 805889b:	8b 45 08             	mov    0x8(%ebp),%eax
 805889e:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80588a1:	8b 45 0c             	mov    0xc(%ebp),%eax
 80588a4:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80588a7:	8b 45 10             	mov    0x10(%ebp),%eax
 80588aa:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80588ad:	8b 45 14             	mov    0x14(%ebp),%eax
 80588b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80588b3:	dd 45 f8             	fldl   -0x8(%ebp)
 80588b6:	dd 45 f0             	fldl   -0x10(%ebp)
 80588b9:	d9 c9                	fxch   %st(1)
 80588bb:	df e9                	fucomip %st(1),%st
 80588bd:	dd d8                	fstp   %st(0)
 80588bf:	76 05                	jbe    80588c6 <f64_max+0x31>
 80588c1:	dd 45 f8             	fldl   -0x8(%ebp)
 80588c4:	eb 03                	jmp    80588c9 <f64_max+0x34>
 80588c6:	dd 45 f0             	fldl   -0x10(%ebp)
 80588c9:	c9                   	leave  
 80588ca:	c3                   	ret    

080588cb <f64_min>:
 80588cb:	55                   	push   %ebp
 80588cc:	89 e5                	mov    %esp,%ebp
 80588ce:	83 ec 10             	sub    $0x10,%esp
 80588d1:	8b 45 08             	mov    0x8(%ebp),%eax
 80588d4:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80588d7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80588da:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80588dd:	8b 45 10             	mov    0x10(%ebp),%eax
 80588e0:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80588e3:	8b 45 14             	mov    0x14(%ebp),%eax
 80588e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80588e9:	dd 45 f0             	fldl   -0x10(%ebp)
 80588ec:	dd 45 f8             	fldl   -0x8(%ebp)
 80588ef:	d9 c9                	fxch   %st(1)
 80588f1:	df e9                	fucomip %st(1),%st
 80588f3:	dd d8                	fstp   %st(0)
 80588f5:	76 05                	jbe    80588fc <f64_min+0x31>
 80588f7:	dd 45 f8             	fldl   -0x8(%ebp)
 80588fa:	eb 03                	jmp    80588ff <f64_min+0x34>
 80588fc:	dd 45 f0             	fldl   -0x10(%ebp)
 80588ff:	c9                   	leave  
 8058900:	c3                   	ret    

08058901 <f32_eq_epsilon>:
 8058901:	55                   	push   %ebp
 8058902:	89 e5                	mov    %esp,%ebp
 8058904:	53                   	push   %ebx
 8058905:	83 ec 14             	sub    $0x14,%esp
 8058908:	ff 75 0c             	pushl  0xc(%ebp)
 805890b:	e8 08 ff ff ff       	call   8058818 <f32_abs>
 8058910:	83 c4 04             	add    $0x4,%esp
 8058913:	d9 5d e8             	fstps  -0x18(%ebp)
 8058916:	8b 5d e8             	mov    -0x18(%ebp),%ebx
 8058919:	ff 75 08             	pushl  0x8(%ebp)
 805891c:	e8 f7 fe ff ff       	call   8058818 <f32_abs>
 8058921:	83 c4 04             	add    $0x4,%esp
 8058924:	d9 5d e8             	fstps  -0x18(%ebp)
 8058927:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805892a:	53                   	push   %ebx
 805892b:	50                   	push   %eax
 805892c:	e8 2e ff ff ff       	call   805885f <f32_max>
 8058931:	83 c4 08             	add    $0x8,%esp
 8058934:	d9 5d e8             	fstps  -0x18(%ebp)
 8058937:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805893a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805893d:	d9 45 08             	flds   0x8(%ebp)
 8058940:	d8 65 0c             	fsubs  0xc(%ebp)
 8058943:	8d 64 24 fc          	lea    -0x4(%esp),%esp
 8058947:	d9 1c 24             	fstps  (%esp)
 805894a:	e8 c9 fe ff ff       	call   8058818 <f32_abs>
 805894f:	83 c4 04             	add    $0x4,%esp
 8058952:	d9 5d e8             	fstps  -0x18(%ebp)
 8058955:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8058958:	89 45 f8             	mov    %eax,-0x8(%ebp)
 805895b:	d9 45 f4             	flds   -0xc(%ebp)
 805895e:	d9 e8                	fld1   
 8058960:	d9 c9                	fxch   %st(1)
 8058962:	df e9                	fucomip %st(1),%st
 8058964:	dd d8                	fstp   %st(0)
 8058966:	76 1c                	jbe    8058984 <f32_eq_epsilon+0x83>
 8058968:	d9 45 f4             	flds   -0xc(%ebp)
 805896b:	d9 05 fc bc 06 08    	flds   0x806bcfc
 8058971:	de c9                	fmulp  %st,%st(1)
 8058973:	d9 45 f8             	flds   -0x8(%ebp)
 8058976:	d9 c9                	fxch   %st(1)
 8058978:	df e9                	fucomip %st(1),%st
 805897a:	dd d8                	fstp   %st(0)
 805897c:	0f 93 c0             	setae  %al
 805897f:	0f b6 c0             	movzbl %al,%eax
 8058982:	eb 18                	jmp    805899c <f32_eq_epsilon+0x9b>
 8058984:	d9 45 f8             	flds   -0x8(%ebp)
 8058987:	d9 05 00 bd 06 08    	flds   0x806bd00
 805898d:	de c9                	fmulp  %st,%st(1)
 805898f:	d9 45 f4             	flds   -0xc(%ebp)
 8058992:	df e9                	fucomip %st(1),%st
 8058994:	dd d8                	fstp   %st(0)
 8058996:	0f 93 c0             	setae  %al
 8058999:	0f b6 c0             	movzbl %al,%eax
 805899c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805899f:	c9                   	leave  
 80589a0:	c3                   	ret    

080589a1 <f64_eq_epsilon>:
 80589a1:	55                   	push   %ebp
 80589a2:	89 e5                	mov    %esp,%ebp
 80589a4:	83 ec 28             	sub    $0x28,%esp
 80589a7:	8b 45 08             	mov    0x8(%ebp),%eax
 80589aa:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80589ad:	8b 45 0c             	mov    0xc(%ebp),%eax
 80589b0:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80589b3:	8b 45 10             	mov    0x10(%ebp),%eax
 80589b6:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80589b9:	8b 45 14             	mov    0x14(%ebp),%eax
 80589bc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80589bf:	ff 75 e4             	pushl  -0x1c(%ebp)
 80589c2:	ff 75 e0             	pushl  -0x20(%ebp)
 80589c5:	e8 6a fe ff ff       	call   8058834 <f64_abs>
 80589ca:	83 c4 08             	add    $0x8,%esp
 80589cd:	dd 5d d8             	fstpl  -0x28(%ebp)
 80589d0:	ff 75 ec             	pushl  -0x14(%ebp)
 80589d3:	ff 75 e8             	pushl  -0x18(%ebp)
 80589d6:	e8 59 fe ff ff       	call   8058834 <f64_abs>
 80589db:	83 c4 08             	add    $0x8,%esp
 80589de:	ff 75 dc             	pushl  -0x24(%ebp)
 80589e1:	ff 75 d8             	pushl  -0x28(%ebp)
 80589e4:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 80589e8:	dd 1c 24             	fstpl  (%esp)
 80589eb:	e8 a5 fe ff ff       	call   8058895 <f64_max>
 80589f0:	83 c4 10             	add    $0x10,%esp
 80589f3:	dd 5d f0             	fstpl  -0x10(%ebp)
 80589f6:	dd 45 e8             	fldl   -0x18(%ebp)
 80589f9:	dc 65 e0             	fsubl  -0x20(%ebp)
 80589fc:	8d 64 24 f8          	lea    -0x8(%esp),%esp
 8058a00:	dd 1c 24             	fstpl  (%esp)
 8058a03:	e8 2c fe ff ff       	call   8058834 <f64_abs>
 8058a08:	83 c4 08             	add    $0x8,%esp
 8058a0b:	dd 5d f8             	fstpl  -0x8(%ebp)
 8058a0e:	dd 45 f0             	fldl   -0x10(%ebp)
 8058a11:	d9 e8                	fld1   
 8058a13:	d9 c9                	fxch   %st(1)
 8058a15:	df e9                	fucomip %st(1),%st
 8058a17:	dd d8                	fstp   %st(0)
 8058a19:	76 1c                	jbe    8058a37 <f64_eq_epsilon+0x96>
 8058a1b:	dd 45 f0             	fldl   -0x10(%ebp)
 8058a1e:	dd 05 08 bd 06 08    	fldl   0x806bd08
 8058a24:	de c9                	fmulp  %st,%st(1)
 8058a26:	dd 45 f8             	fldl   -0x8(%ebp)
 8058a29:	d9 c9                	fxch   %st(1)
 8058a2b:	df e9                	fucomip %st(1),%st
 8058a2d:	dd d8                	fstp   %st(0)
 8058a2f:	0f 93 c0             	setae  %al
 8058a32:	0f b6 c0             	movzbl %al,%eax
 8058a35:	eb 18                	jmp    8058a4f <f64_eq_epsilon+0xae>
 8058a37:	dd 45 f8             	fldl   -0x8(%ebp)
 8058a3a:	dd 05 10 bd 06 08    	fldl   0x806bd10
 8058a40:	de c9                	fmulp  %st,%st(1)
 8058a42:	dd 45 f0             	fldl   -0x10(%ebp)
 8058a45:	df e9                	fucomip %st(1),%st
 8058a47:	dd d8                	fstp   %st(0)
 8058a49:	0f 93 c0             	setae  %al
 8058a4c:	0f b6 c0             	movzbl %al,%eax
 8058a4f:	c9                   	leave  
 8058a50:	c3                   	ret    

08058a51 <ptr_str>:
 8058a51:	55                   	push   %ebp
 8058a52:	89 e5                	mov    %esp,%ebp
 8058a54:	83 ec 28             	sub    $0x28,%esp
 8058a57:	8b 45 08             	mov    0x8(%ebp),%eax
 8058a5a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058a5d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058a60:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8058a63:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058a69:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058a6c:	31 c0                	xor    %eax,%eax
 8058a6e:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058a71:	99                   	cltd   
 8058a72:	8d 4d e8             	lea    -0x18(%ebp),%ecx
 8058a75:	83 ec 04             	sub    $0x4,%esp
 8058a78:	52                   	push   %edx
 8058a79:	50                   	push   %eax
 8058a7a:	51                   	push   %ecx
 8058a7b:	e8 27 0f 00 00       	call   80599a7 <u64_hex>
 8058a80:	83 c4 0c             	add    $0xc,%esp
 8058a83:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058a86:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8058a89:	89 10                	mov    %edx,(%eax)
 8058a8b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8058a8e:	89 50 04             	mov    %edx,0x4(%eax)
 8058a91:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8058a94:	89 50 08             	mov    %edx,0x8(%eax)
 8058a97:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058a9a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8058a9d:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8058aa4:	74 05                	je     8058aab <ptr_str+0x5a>
 8058aa6:	e8 75 fd fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058aab:	c9                   	leave  
 8058aac:	c2 04 00             	ret    $0x4

08058aaf <int_str_l>:
 8058aaf:	55                   	push   %ebp
 8058ab0:	89 e5                	mov    %esp,%ebp
 8058ab2:	53                   	push   %ebx
 8058ab3:	83 ec 44             	sub    $0x44,%esp
 8058ab6:	8b 45 08             	mov    0x8(%ebp),%eax
 8058ab9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8058abc:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058ac2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058ac5:	31 c0                	xor    %eax,%eax
 8058ac7:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058aca:	99                   	cltd   
 8058acb:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8058ace:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8058ad1:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 8058ad8:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8058adb:	0b 45 e8             	or     -0x18(%ebp),%eax
 8058ade:	85 c0                	test   %eax,%eax
 8058ae0:	75 22                	jne    8058b04 <int_str_l+0x55>
 8058ae2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058ae5:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 8058aeb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058aee:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 8058af5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058af8:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8058aff:	e9 41 01 00 00       	jmp    8058c45 <int_str_l+0x196>
 8058b04:	8b 45 10             	mov    0x10(%ebp),%eax
 8058b07:	83 c0 01             	add    $0x1,%eax
 8058b0a:	83 ec 0c             	sub    $0xc,%esp
 8058b0d:	50                   	push   %eax
 8058b0e:	e8 14 ee ff ff       	call   8057927 <v_malloc>
 8058b13:	83 c4 10             	add    $0x10,%esp
 8058b16:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8058b19:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 8058b20:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8058b24:	79 11                	jns    8058b37 <int_str_l+0x88>
 8058b26:	f7 5d e8             	negl   -0x18(%ebp)
 8058b29:	83 55 ec 00          	adcl   $0x0,-0x14(%ebp)
 8058b2d:	f7 5d ec             	negl   -0x14(%ebp)
 8058b30:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8058b37:	8b 45 10             	mov    0x10(%ebp),%eax
 8058b3a:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8058b3d:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8058b40:	8d 50 ff             	lea    -0x1(%eax),%edx
 8058b43:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8058b46:	89 c2                	mov    %eax,%edx
 8058b48:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058b4b:	01 d0                	add    %edx,%eax
 8058b4d:	c6 00 00             	movb   $0x0,(%eax)
 8058b50:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8058b54:	7f 10                	jg     8058b66 <int_str_l+0xb7>
 8058b56:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8058b5a:	0f 88 83 00 00 00    	js     8058be3 <int_str_l+0x134>
 8058b60:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 8058b64:	76 7d                	jbe    8058be3 <int_str_l+0x134>
 8058b66:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8058b69:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8058b6c:	6a 00                	push   $0x0
 8058b6e:	6a 64                	push   $0x64
 8058b70:	52                   	push   %edx
 8058b71:	50                   	push   %eax
 8058b72:	e8 49 04 01 00       	call   8068fc0 <__divdi3>
 8058b77:	83 c4 10             	add    $0x10,%esp
 8058b7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058b7d:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8058b80:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058b83:	6b c0 9c             	imul   $0xffffff9c,%eax,%eax
 8058b86:	01 d0                	add    %edx,%eax
 8058b88:	01 c0                	add    %eax,%eax
 8058b8a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8058b8d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058b90:	99                   	cltd   
 8058b91:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8058b94:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8058b97:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8058b9a:	8d 50 ff             	lea    -0x1(%eax),%edx
 8058b9d:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8058ba0:	89 c2                	mov    %eax,%edx
 8058ba2:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058ba5:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8058ba8:	8b 1d a0 31 07 08    	mov    0x80731a0,%ebx
 8058bae:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8058bb1:	8d 50 01             	lea    0x1(%eax),%edx
 8058bb4:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8058bb7:	01 d8                	add    %ebx,%eax
 8058bb9:	0f b6 00             	movzbl (%eax),%eax
 8058bbc:	88 01                	mov    %al,(%ecx)
 8058bbe:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8058bc1:	8d 50 ff             	lea    -0x1(%eax),%edx
 8058bc4:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8058bc7:	89 c2                	mov    %eax,%edx
 8058bc9:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058bcc:	01 c2                	add    %eax,%edx
 8058bce:	8b 0d a0 31 07 08    	mov    0x80731a0,%ecx
 8058bd4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8058bd7:	01 c8                	add    %ecx,%eax
 8058bd9:	0f b6 00             	movzbl (%eax),%eax
 8058bdc:	88 02                	mov    %al,(%edx)
 8058bde:	e9 6d ff ff ff       	jmp    8058b50 <int_str_l+0xa1>
 8058be3:	90                   	nop
 8058be4:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 8058be8:	83 7d d4 13          	cmpl   $0x13,-0x2c(%ebp)
 8058bec:	7f 04                	jg     8058bf2 <int_str_l+0x143>
 8058bee:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 8058bf2:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8058bf6:	74 0f                	je     8058c07 <int_str_l+0x158>
 8058bf8:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)
 8058bfc:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8058bff:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058c02:	01 d0                	add    %edx,%eax
 8058c04:	c6 00 2d             	movb   $0x2d,(%eax)
 8058c07:	8b 45 10             	mov    0x10(%ebp),%eax
 8058c0a:	2b 45 dc             	sub    -0x24(%ebp),%eax
 8058c0d:	83 c0 01             	add    $0x1,%eax
 8058c10:	89 c1                	mov    %eax,%ecx
 8058c12:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8058c15:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058c18:	01 d0                	add    %edx,%eax
 8058c1a:	83 ec 04             	sub    $0x4,%esp
 8058c1d:	51                   	push   %ecx
 8058c1e:	50                   	push   %eax
 8058c1f:	ff 75 e0             	pushl  -0x20(%ebp)
 8058c22:	e8 79 fb fe ff       	call   80487a0 <memmove@plt>
 8058c27:	83 c4 10             	add    $0x10,%esp
 8058c2a:	8b 45 10             	mov    0x10(%ebp),%eax
 8058c2d:	2b 45 dc             	sub    -0x24(%ebp),%eax
 8058c30:	89 c2                	mov    %eax,%edx
 8058c32:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058c35:	83 ec 04             	sub    $0x4,%esp
 8058c38:	52                   	push   %edx
 8058c39:	ff 75 e0             	pushl  -0x20(%ebp)
 8058c3c:	50                   	push   %eax
 8058c3d:	e8 b8 46 00 00       	call   805d2fa <tos>
 8058c42:	83 c4 0c             	add    $0xc,%esp
 8058c45:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058c48:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 8058c4b:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 8058c52:	74 05                	je     8058c59 <int_str_l+0x1aa>
 8058c54:	e8 c7 fb fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058c59:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8058c5c:	c9                   	leave  
 8058c5d:	c2 04 00             	ret    $0x4

08058c60 <i8_str>:
 8058c60:	55                   	push   %ebp
 8058c61:	89 e5                	mov    %esp,%ebp
 8058c63:	83 ec 28             	sub    $0x28,%esp
 8058c66:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058c69:	8b 55 08             	mov    0x8(%ebp),%edx
 8058c6c:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8058c6f:	88 45 e0             	mov    %al,-0x20(%ebp)
 8058c72:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058c78:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058c7b:	31 c0                	xor    %eax,%eax
 8058c7d:	0f be 55 e0          	movsbl -0x20(%ebp),%edx
 8058c81:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058c84:	83 ec 04             	sub    $0x4,%esp
 8058c87:	6a 05                	push   $0x5
 8058c89:	52                   	push   %edx
 8058c8a:	50                   	push   %eax
 8058c8b:	e8 1f fe ff ff       	call   8058aaf <int_str_l>
 8058c90:	83 c4 0c             	add    $0xc,%esp
 8058c93:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058c96:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8058c99:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8058ca0:	74 05                	je     8058ca7 <i8_str+0x47>
 8058ca2:	e8 79 fb fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058ca7:	c9                   	leave  
 8058ca8:	c2 04 00             	ret    $0x4

08058cab <i16_str>:
 8058cab:	55                   	push   %ebp
 8058cac:	89 e5                	mov    %esp,%ebp
 8058cae:	83 ec 28             	sub    $0x28,%esp
 8058cb1:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058cb4:	8b 55 08             	mov    0x8(%ebp),%edx
 8058cb7:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8058cba:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
 8058cbe:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058cc4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058cc7:	31 c0                	xor    %eax,%eax
 8058cc9:	0f bf 55 e0          	movswl -0x20(%ebp),%edx
 8058ccd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058cd0:	83 ec 04             	sub    $0x4,%esp
 8058cd3:	6a 07                	push   $0x7
 8058cd5:	52                   	push   %edx
 8058cd6:	50                   	push   %eax
 8058cd7:	e8 d3 fd ff ff       	call   8058aaf <int_str_l>
 8058cdc:	83 c4 0c             	add    $0xc,%esp
 8058cdf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058ce2:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8058ce5:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8058cec:	74 05                	je     8058cf3 <i16_str+0x48>
 8058cee:	e8 2d fb fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058cf3:	c9                   	leave  
 8058cf4:	c2 04 00             	ret    $0x4

08058cf7 <u16_str>:
 8058cf7:	55                   	push   %ebp
 8058cf8:	89 e5                	mov    %esp,%ebp
 8058cfa:	83 ec 28             	sub    $0x28,%esp
 8058cfd:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058d00:	8b 55 08             	mov    0x8(%ebp),%edx
 8058d03:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8058d06:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
 8058d0a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058d10:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058d13:	31 c0                	xor    %eax,%eax
 8058d15:	0f b7 55 e0          	movzwl -0x20(%ebp),%edx
 8058d19:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058d1c:	83 ec 04             	sub    $0x4,%esp
 8058d1f:	6a 07                	push   $0x7
 8058d21:	52                   	push   %edx
 8058d22:	50                   	push   %eax
 8058d23:	e8 87 fd ff ff       	call   8058aaf <int_str_l>
 8058d28:	83 c4 0c             	add    $0xc,%esp
 8058d2b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058d2e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8058d31:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8058d38:	74 05                	je     8058d3f <u16_str+0x48>
 8058d3a:	e8 e1 fa fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058d3f:	c9                   	leave  
 8058d40:	c2 04 00             	ret    $0x4

08058d43 <int_str>:
 8058d43:	55                   	push   %ebp
 8058d44:	89 e5                	mov    %esp,%ebp
 8058d46:	83 ec 28             	sub    $0x28,%esp
 8058d49:	8b 45 08             	mov    0x8(%ebp),%eax
 8058d4c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058d4f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058d55:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058d58:	31 c0                	xor    %eax,%eax
 8058d5a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058d5d:	83 ec 04             	sub    $0x4,%esp
 8058d60:	6a 0c                	push   $0xc
 8058d62:	ff 75 0c             	pushl  0xc(%ebp)
 8058d65:	50                   	push   %eax
 8058d66:	e8 44 fd ff ff       	call   8058aaf <int_str_l>
 8058d6b:	83 c4 0c             	add    $0xc,%esp
 8058d6e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058d71:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8058d74:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8058d7b:	74 05                	je     8058d82 <int_str+0x3f>
 8058d7d:	e8 9e fa fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058d82:	c9                   	leave  
 8058d83:	c2 04 00             	ret    $0x4

08058d86 <u32_str>:
 8058d86:	55                   	push   %ebp
 8058d87:	89 e5                	mov    %esp,%ebp
 8058d89:	53                   	push   %ebx
 8058d8a:	83 ec 34             	sub    $0x34,%esp
 8058d8d:	8b 45 08             	mov    0x8(%ebp),%eax
 8058d90:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8058d93:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058d99:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058d9c:	31 c0                	xor    %eax,%eax
 8058d9e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058da1:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8058da4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 8058dab:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 8058daf:	75 22                	jne    8058dd3 <u32_str+0x4d>
 8058db1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8058db4:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 8058dba:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8058dbd:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 8058dc4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8058dc7:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8058dce:	e9 23 01 00 00       	jmp    8058ef6 <u32_str+0x170>
 8058dd3:	c7 45 e8 0c 00 00 00 	movl   $0xc,-0x18(%ebp)
 8058dda:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8058ddd:	83 c0 01             	add    $0x1,%eax
 8058de0:	83 ec 0c             	sub    $0xc,%esp
 8058de3:	50                   	push   %eax
 8058de4:	e8 3e eb ff ff       	call   8057927 <v_malloc>
 8058de9:	83 c4 10             	add    $0x10,%esp
 8058dec:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8058def:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8058df2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058df5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058df8:	8d 50 ff             	lea    -0x1(%eax),%edx
 8058dfb:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8058dfe:	89 c2                	mov    %eax,%edx
 8058e00:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8058e03:	01 d0                	add    %edx,%eax
 8058e05:	c6 00 00             	movb   $0x0,(%eax)
 8058e08:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 8058e0c:	0f 84 97 00 00 00    	je     8058ea9 <u32_str+0x123>
 8058e12:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8058e15:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
 8058e1a:	f7 e2                	mul    %edx
 8058e1c:	89 d0                	mov    %edx,%eax
 8058e1e:	c1 e8 05             	shr    $0x5,%eax
 8058e21:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8058e24:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8058e27:	6b c0 64             	imul   $0x64,%eax,%eax
 8058e2a:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8058e2d:	29 c2                	sub    %eax,%edx
 8058e2f:	89 d0                	mov    %edx,%eax
 8058e31:	01 c0                	add    %eax,%eax
 8058e33:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8058e36:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8058e39:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8058e3c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058e3f:	8d 50 ff             	lea    -0x1(%eax),%edx
 8058e42:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8058e45:	89 c2                	mov    %eax,%edx
 8058e47:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8058e4a:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 8058e4d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058e50:	8d 50 01             	lea    0x1(%eax),%edx
 8058e53:	89 55 e0             	mov    %edx,-0x20(%ebp)
 8058e56:	50                   	push   %eax
 8058e57:	ff 35 a8 31 07 08    	pushl  0x80731a8
 8058e5d:	ff 35 a4 31 07 08    	pushl  0x80731a4
 8058e63:	ff 35 a0 31 07 08    	pushl  0x80731a0
 8058e69:	e8 cc 7a 00 00       	call   806093a <string_at>
 8058e6e:	83 c4 10             	add    $0x10,%esp
 8058e71:	88 03                	mov    %al,(%ebx)
 8058e73:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058e76:	8d 50 ff             	lea    -0x1(%eax),%edx
 8058e79:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8058e7c:	89 c2                	mov    %eax,%edx
 8058e7e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8058e81:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 8058e84:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8058e87:	50                   	push   %eax
 8058e88:	ff 35 a8 31 07 08    	pushl  0x80731a8
 8058e8e:	ff 35 a4 31 07 08    	pushl  0x80731a4
 8058e94:	ff 35 a0 31 07 08    	pushl  0x80731a0
 8058e9a:	e8 9b 7a 00 00       	call   806093a <string_at>
 8058e9f:	83 c4 10             	add    $0x10,%esp
 8058ea2:	88 03                	mov    %al,(%ebx)
 8058ea4:	e9 5f ff ff ff       	jmp    8058e08 <u32_str+0x82>
 8058ea9:	90                   	nop
 8058eaa:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 8058eae:	83 7d e0 13          	cmpl   $0x13,-0x20(%ebp)
 8058eb2:	77 04                	ja     8058eb8 <u32_str+0x132>
 8058eb4:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 8058eb8:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8058ebb:	2b 45 e4             	sub    -0x1c(%ebp),%eax
 8058ebe:	83 c0 01             	add    $0x1,%eax
 8058ec1:	89 c1                	mov    %eax,%ecx
 8058ec3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8058ec6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8058ec9:	01 d0                	add    %edx,%eax
 8058ecb:	83 ec 04             	sub    $0x4,%esp
 8058ece:	51                   	push   %ecx
 8058ecf:	50                   	push   %eax
 8058ed0:	ff 75 ec             	pushl  -0x14(%ebp)
 8058ed3:	e8 c8 f8 fe ff       	call   80487a0 <memmove@plt>
 8058ed8:	83 c4 10             	add    $0x10,%esp
 8058edb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8058ede:	2b 45 e4             	sub    -0x1c(%ebp),%eax
 8058ee1:	89 c2                	mov    %eax,%edx
 8058ee3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8058ee6:	83 ec 04             	sub    $0x4,%esp
 8058ee9:	52                   	push   %edx
 8058eea:	ff 75 ec             	pushl  -0x14(%ebp)
 8058eed:	50                   	push   %eax
 8058eee:	e8 07 44 00 00       	call   805d2fa <tos>
 8058ef3:	83 c4 0c             	add    $0xc,%esp
 8058ef6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8058ef9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8058efc:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8058f03:	74 05                	je     8058f0a <u32_str+0x184>
 8058f05:	e8 16 f9 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058f0a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8058f0d:	c9                   	leave  
 8058f0e:	c2 04 00             	ret    $0x4

08058f11 <int_literal_str>:
 8058f11:	55                   	push   %ebp
 8058f12:	89 e5                	mov    %esp,%ebp
 8058f14:	83 ec 28             	sub    $0x28,%esp
 8058f17:	8b 45 08             	mov    0x8(%ebp),%eax
 8058f1a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8058f1d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058f20:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8058f23:	8b 45 10             	mov    0x10(%ebp),%eax
 8058f26:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8058f29:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058f2f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058f32:	31 c0                	xor    %eax,%eax
 8058f34:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058f37:	83 ec 04             	sub    $0x4,%esp
 8058f3a:	ff 75 dc             	pushl  -0x24(%ebp)
 8058f3d:	ff 75 d8             	pushl  -0x28(%ebp)
 8058f40:	50                   	push   %eax
 8058f41:	e8 1b 00 00 00       	call   8058f61 <i64_str>
 8058f46:	83 c4 0c             	add    $0xc,%esp
 8058f49:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8058f4c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8058f4f:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8058f56:	74 05                	je     8058f5d <int_literal_str+0x4c>
 8058f58:	e8 c3 f8 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8058f5d:	c9                   	leave  
 8058f5e:	c2 04 00             	ret    $0x4

08058f61 <i64_str>:
 8058f61:	55                   	push   %ebp
 8058f62:	89 e5                	mov    %esp,%ebp
 8058f64:	56                   	push   %esi
 8058f65:	53                   	push   %ebx
 8058f66:	83 ec 40             	sub    $0x40,%esp
 8058f69:	8b 45 08             	mov    0x8(%ebp),%eax
 8058f6c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8058f6f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058f72:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8058f75:	8b 45 10             	mov    0x10(%ebp),%eax
 8058f78:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8058f7b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8058f81:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8058f84:	31 c0                	xor    %eax,%eax
 8058f86:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8058f89:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8058f8c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8058f8f:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8058f92:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 8058f99:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 8058fa0:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8058fa3:	0b 45 d8             	or     -0x28(%ebp),%eax
 8058fa6:	85 c0                	test   %eax,%eax
 8058fa8:	75 22                	jne    8058fcc <i64_str+0x6b>
 8058faa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058fad:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 8058fb3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058fb6:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 8058fbd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8058fc0:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8058fc7:	e9 ac 01 00 00       	jmp    8059178 <i64_str+0x217>
 8058fcc:	c7 45 d0 14 00 00 00 	movl   $0x14,-0x30(%ebp)
 8058fd3:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8058fd6:	83 c0 01             	add    $0x1,%eax
 8058fd9:	83 ec 0c             	sub    $0xc,%esp
 8058fdc:	50                   	push   %eax
 8058fdd:	e8 76 ea ff ff       	call   8057a58 <vcalloc>
 8058fe2:	83 c4 10             	add    $0x10,%esp
 8058fe5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8058fe8:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 8058fef:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 8058ff3:	79 11                	jns    8059006 <i64_str+0xa5>
 8058ff5:	f7 5d d8             	negl   -0x28(%ebp)
 8058ff8:	83 55 dc 00          	adcl   $0x0,-0x24(%ebp)
 8058ffc:	f7 5d dc             	negl   -0x24(%ebp)
 8058fff:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 8059006:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8059009:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805900c:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805900f:	8d 50 ff             	lea    -0x1(%eax),%edx
 8059012:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8059015:	89 c2                	mov    %eax,%edx
 8059017:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805901a:	01 d0                	add    %edx,%eax
 805901c:	c6 00 00             	movb   $0x0,(%eax)
 805901f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 8059023:	7f 14                	jg     8059039 <i64_str+0xd8>
 8059025:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 8059029:	0f 88 db 00 00 00    	js     805910a <i64_str+0x1a9>
 805902f:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 8059033:	0f 86 d1 00 00 00    	jbe    805910a <i64_str+0x1a9>
 8059039:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805903c:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805903f:	6a 00                	push   $0x0
 8059041:	6a 64                	push   $0x64
 8059043:	52                   	push   %edx
 8059044:	50                   	push   %eax
 8059045:	e8 76 ff 00 00       	call   8068fc0 <__divdi3>
 805904a:	83 c4 10             	add    $0x10,%esp
 805904d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8059050:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8059053:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8059056:	6b d0 9c             	imul   $0xffffff9c,%eax,%edx
 8059059:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805905c:	6b c0 ff             	imul   $0xffffffff,%eax,%eax
 805905f:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8059062:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax
 8059067:	f7 65 e8             	mull   -0x18(%ebp)
 805906a:	01 d1                	add    %edx,%ecx
 805906c:	89 ca                	mov    %ecx,%edx
 805906e:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 8059071:	8b 5d dc             	mov    -0x24(%ebp),%ebx
 8059074:	01 c8                	add    %ecx,%eax
 8059076:	11 da                	adc    %ebx,%edx
 8059078:	0f a4 c2 01          	shld   $0x1,%eax,%edx
 805907c:	01 c0                	add    %eax,%eax
 805907e:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8059081:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8059084:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8059087:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805908a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805908d:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8059090:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8059093:	8d 50 ff             	lea    -0x1(%eax),%edx
 8059096:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8059099:	89 c2                	mov    %eax,%edx
 805909b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805909e:	8d 34 02             	lea    (%edx,%eax,1),%esi
 80590a1:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80590a4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80590a7:	89 c1                	mov    %eax,%ecx
 80590a9:	89 d3                	mov    %edx,%ebx
 80590ab:	83 c1 01             	add    $0x1,%ecx
 80590ae:	83 d3 00             	adc    $0x0,%ebx
 80590b1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 80590b4:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
 80590b7:	50                   	push   %eax
 80590b8:	ff 35 a8 31 07 08    	pushl  0x80731a8
 80590be:	ff 35 a4 31 07 08    	pushl  0x80731a4
 80590c4:	ff 35 a0 31 07 08    	pushl  0x80731a0
 80590ca:	e8 6b 78 00 00       	call   806093a <string_at>
 80590cf:	83 c4 10             	add    $0x10,%esp
 80590d2:	88 06                	mov    %al,(%esi)
 80590d4:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80590d7:	8d 50 ff             	lea    -0x1(%eax),%edx
 80590da:	89 55 cc             	mov    %edx,-0x34(%ebp)
 80590dd:	89 c2                	mov    %eax,%edx
 80590df:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80590e2:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 80590e5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80590e8:	50                   	push   %eax
 80590e9:	ff 35 a8 31 07 08    	pushl  0x80731a8
 80590ef:	ff 35 a4 31 07 08    	pushl  0x80731a4
 80590f5:	ff 35 a0 31 07 08    	pushl  0x80731a0
 80590fb:	e8 3a 78 00 00       	call   806093a <string_at>
 8059100:	83 c4 10             	add    $0x10,%esp
 8059103:	88 03                	mov    %al,(%ebx)
 8059105:	e9 15 ff ff ff       	jmp    805901f <i64_str+0xbe>
 805910a:	90                   	nop
 805910b:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 805910f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 8059113:	7f 10                	jg     8059125 <i64_str+0x1c4>
 8059115:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 8059119:	78 06                	js     8059121 <i64_str+0x1c0>
 805911b:	83 7d e0 13          	cmpl   $0x13,-0x20(%ebp)
 805911f:	77 04                	ja     8059125 <i64_str+0x1c4>
 8059121:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 8059125:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 8059129:	74 0f                	je     805913a <i64_str+0x1d9>
 805912b:	83 6d cc 01          	subl   $0x1,-0x34(%ebp)
 805912f:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8059132:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8059135:	01 d0                	add    %edx,%eax
 8059137:	c6 00 2d             	movb   $0x2d,(%eax)
 805913a:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805913d:	2b 45 cc             	sub    -0x34(%ebp),%eax
 8059140:	83 c0 01             	add    $0x1,%eax
 8059143:	89 c1                	mov    %eax,%ecx
 8059145:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8059148:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805914b:	01 d0                	add    %edx,%eax
 805914d:	83 ec 04             	sub    $0x4,%esp
 8059150:	51                   	push   %ecx
 8059151:	50                   	push   %eax
 8059152:	ff 75 d4             	pushl  -0x2c(%ebp)
 8059155:	e8 46 f6 fe ff       	call   80487a0 <memmove@plt>
 805915a:	83 c4 10             	add    $0x10,%esp
 805915d:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8059160:	2b 45 cc             	sub    -0x34(%ebp),%eax
 8059163:	89 c2                	mov    %eax,%edx
 8059165:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8059168:	83 ec 04             	sub    $0x4,%esp
 805916b:	52                   	push   %edx
 805916c:	ff 75 d4             	pushl  -0x2c(%ebp)
 805916f:	50                   	push   %eax
 8059170:	e8 85 41 00 00       	call   805d2fa <tos>
 8059175:	83 c4 0c             	add    $0xc,%esp
 8059178:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805917b:	8b 75 f4             	mov    -0xc(%ebp),%esi
 805917e:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
 8059185:	74 05                	je     805918c <i64_str+0x22b>
 8059187:	e8 94 f6 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805918c:	8d 65 f8             	lea    -0x8(%ebp),%esp
 805918f:	5b                   	pop    %ebx
 8059190:	5e                   	pop    %esi
 8059191:	5d                   	pop    %ebp
 8059192:	c2 04 00             	ret    $0x4

08059195 <u64_str>:
 8059195:	55                   	push   %ebp
 8059196:	89 e5                	mov    %esp,%ebp
 8059198:	56                   	push   %esi
 8059199:	53                   	push   %ebx
 805919a:	83 ec 40             	sub    $0x40,%esp
 805919d:	8b 45 08             	mov    0x8(%ebp),%eax
 80591a0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 80591a3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80591a6:	89 45 b8             	mov    %eax,-0x48(%ebp)
 80591a9:	8b 45 10             	mov    0x10(%ebp),%eax
 80591ac:	89 45 bc             	mov    %eax,-0x44(%ebp)
 80591af:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80591b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80591b8:	31 c0                	xor    %eax,%eax
 80591ba:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80591bd:	8b 55 bc             	mov    -0x44(%ebp),%edx
 80591c0:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80591c3:	89 55 dc             	mov    %edx,-0x24(%ebp)
 80591c6:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 80591cd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 80591d4:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80591d7:	0b 45 d8             	or     -0x28(%ebp),%eax
 80591da:	85 c0                	test   %eax,%eax
 80591dc:	75 22                	jne    8059200 <u64_str+0x6b>
 80591de:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80591e1:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 80591e7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80591ea:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 80591f1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80591f4:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80591fb:	e9 71 01 00 00       	jmp    8059371 <u64_str+0x1dc>
 8059200:	c7 45 d0 14 00 00 00 	movl   $0x14,-0x30(%ebp)
 8059207:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805920a:	83 c0 01             	add    $0x1,%eax
 805920d:	83 ec 0c             	sub    $0xc,%esp
 8059210:	50                   	push   %eax
 8059211:	e8 42 e8 ff ff       	call   8057a58 <vcalloc>
 8059216:	83 c4 10             	add    $0x10,%esp
 8059219:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805921c:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805921f:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8059222:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8059225:	8d 50 ff             	lea    -0x1(%eax),%edx
 8059228:	89 55 cc             	mov    %edx,-0x34(%ebp)
 805922b:	89 c2                	mov    %eax,%edx
 805922d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8059230:	01 d0                	add    %edx,%eax
 8059232:	c6 00 00             	movb   $0x0,(%eax)
 8059235:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8059238:	0b 45 d8             	or     -0x28(%ebp),%eax
 805923b:	85 c0                	test   %eax,%eax
 805923d:	0f 84 d5 00 00 00    	je     8059318 <u64_str+0x183>
 8059243:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8059246:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8059249:	6a 00                	push   $0x0
 805924b:	6a 64                	push   $0x64
 805924d:	52                   	push   %edx
 805924e:	50                   	push   %eax
 805924f:	e8 9c 00 01 00       	call   80692f0 <__udivdi3>
 8059254:	83 c4 10             	add    $0x10,%esp
 8059257:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805925a:	89 55 ec             	mov    %edx,-0x14(%ebp)
 805925d:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8059260:	6b d0 64             	imul   $0x64,%eax,%edx
 8059263:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8059266:	6b c0 00             	imul   $0x0,%eax,%eax
 8059269:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 805926c:	b8 64 00 00 00       	mov    $0x64,%eax
 8059271:	f7 65 e8             	mull   -0x18(%ebp)
 8059274:	01 d1                	add    %edx,%ecx
 8059276:	89 ca                	mov    %ecx,%edx
 8059278:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 805927b:	8b 5d dc             	mov    -0x24(%ebp),%ebx
 805927e:	29 c1                	sub    %eax,%ecx
 8059280:	19 d3                	sbb    %edx,%ebx
 8059282:	89 c8                	mov    %ecx,%eax
 8059284:	89 da                	mov    %ebx,%edx
 8059286:	0f a4 c2 01          	shld   $0x1,%eax,%edx
 805928a:	01 c0                	add    %eax,%eax
 805928c:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805928f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8059292:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8059295:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8059298:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805929b:	89 55 dc             	mov    %edx,-0x24(%ebp)
 805929e:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80592a1:	8d 50 ff             	lea    -0x1(%eax),%edx
 80592a4:	89 55 cc             	mov    %edx,-0x34(%ebp)
 80592a7:	89 c2                	mov    %eax,%edx
 80592a9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80592ac:	8d 34 02             	lea    (%edx,%eax,1),%esi
 80592af:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80592b2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80592b5:	89 c1                	mov    %eax,%ecx
 80592b7:	89 d3                	mov    %edx,%ebx
 80592b9:	83 c1 01             	add    $0x1,%ecx
 80592bc:	83 d3 00             	adc    $0x0,%ebx
 80592bf:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 80592c2:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
 80592c5:	50                   	push   %eax
 80592c6:	ff 35 a8 31 07 08    	pushl  0x80731a8
 80592cc:	ff 35 a4 31 07 08    	pushl  0x80731a4
 80592d2:	ff 35 a0 31 07 08    	pushl  0x80731a0
 80592d8:	e8 5d 76 00 00       	call   806093a <string_at>
 80592dd:	83 c4 10             	add    $0x10,%esp
 80592e0:	88 06                	mov    %al,(%esi)
 80592e2:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80592e5:	8d 50 ff             	lea    -0x1(%eax),%edx
 80592e8:	89 55 cc             	mov    %edx,-0x34(%ebp)
 80592eb:	89 c2                	mov    %eax,%edx
 80592ed:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80592f0:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 80592f3:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80592f6:	50                   	push   %eax
 80592f7:	ff 35 a8 31 07 08    	pushl  0x80731a8
 80592fd:	ff 35 a4 31 07 08    	pushl  0x80731a4
 8059303:	ff 35 a0 31 07 08    	pushl  0x80731a0
 8059309:	e8 2c 76 00 00       	call   806093a <string_at>
 805930e:	83 c4 10             	add    $0x10,%esp
 8059311:	88 03                	mov    %al,(%ebx)
 8059313:	e9 1d ff ff ff       	jmp    8059235 <u64_str+0xa0>
 8059318:	90                   	nop
 8059319:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 805931d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 8059321:	77 10                	ja     8059333 <u64_str+0x19e>
 8059323:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 8059327:	72 06                	jb     805932f <u64_str+0x19a>
 8059329:	83 7d e0 13          	cmpl   $0x13,-0x20(%ebp)
 805932d:	77 04                	ja     8059333 <u64_str+0x19e>
 805932f:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 8059333:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8059336:	2b 45 cc             	sub    -0x34(%ebp),%eax
 8059339:	83 c0 01             	add    $0x1,%eax
 805933c:	89 c1                	mov    %eax,%ecx
 805933e:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8059341:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8059344:	01 d0                	add    %edx,%eax
 8059346:	83 ec 04             	sub    $0x4,%esp
 8059349:	51                   	push   %ecx
 805934a:	50                   	push   %eax
 805934b:	ff 75 d4             	pushl  -0x2c(%ebp)
 805934e:	e8 4d f4 fe ff       	call   80487a0 <memmove@plt>
 8059353:	83 c4 10             	add    $0x10,%esp
 8059356:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8059359:	2b 45 cc             	sub    -0x34(%ebp),%eax
 805935c:	89 c2                	mov    %eax,%edx
 805935e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8059361:	83 ec 04             	sub    $0x4,%esp
 8059364:	52                   	push   %edx
 8059365:	ff 75 d4             	pushl  -0x2c(%ebp)
 8059368:	50                   	push   %eax
 8059369:	e8 8c 3f 00 00       	call   805d2fa <tos>
 805936e:	83 c4 0c             	add    $0xc,%esp
 8059371:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8059374:	8b 75 f4             	mov    -0xc(%ebp),%esi
 8059377:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
 805937e:	74 05                	je     8059385 <u64_str+0x1f0>
 8059380:	e8 9b f4 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059385:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8059388:	5b                   	pop    %ebx
 8059389:	5e                   	pop    %esi
 805938a:	5d                   	pop    %ebp
 805938b:	c2 04 00             	ret    $0x4

0805938e <bool_str>:
 805938e:	55                   	push   %ebp
 805938f:	89 e5                	mov    %esp,%ebp
 8059391:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8059395:	74 1f                	je     80593b6 <bool_str+0x28>
 8059397:	8b 45 08             	mov    0x8(%ebp),%eax
 805939a:	c7 00 8b 9d 06 08    	movl   $0x8069d8b,(%eax)
 80593a0:	8b 45 08             	mov    0x8(%ebp),%eax
 80593a3:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%eax)
 80593aa:	8b 45 08             	mov    0x8(%ebp),%eax
 80593ad:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80593b4:	eb 1d                	jmp    80593d3 <bool_str+0x45>
 80593b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80593b9:	c7 00 90 9d 06 08    	movl   $0x8069d90,(%eax)
 80593bf:	8b 45 08             	mov    0x8(%ebp),%eax
 80593c2:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
 80593c9:	8b 45 08             	mov    0x8(%ebp),%eax
 80593cc:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80593d3:	8b 45 08             	mov    0x8(%ebp),%eax
 80593d6:	5d                   	pop    %ebp
 80593d7:	c2 04 00             	ret    $0x4

080593da <u64_to_hex>:
 80593da:	55                   	push   %ebp
 80593db:	89 e5                	mov    %esp,%ebp
 80593dd:	57                   	push   %edi
 80593de:	81 ec 34 01 00 00    	sub    $0x134,%esp
 80593e4:	8b 45 14             	mov    0x14(%ebp),%eax
 80593e7:	8b 55 08             	mov    0x8(%ebp),%edx
 80593ea:	89 95 d4 fe ff ff    	mov    %edx,-0x12c(%ebp)
 80593f0:	8b 55 0c             	mov    0xc(%ebp),%edx
 80593f3:	89 95 c8 fe ff ff    	mov    %edx,-0x138(%ebp)
 80593f9:	8b 55 10             	mov    0x10(%ebp),%edx
 80593fc:	89 95 cc fe ff ff    	mov    %edx,-0x134(%ebp)
 8059402:	88 85 d0 fe ff ff    	mov    %al,-0x130(%ebp)
 8059408:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805940e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059411:	31 c0                	xor    %eax,%eax
 8059413:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8059419:	8b 95 cc fe ff ff    	mov    -0x134(%ebp),%edx
 805941f:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 8059425:	89 95 ec fe ff ff    	mov    %edx,-0x114(%ebp)
 805942b:	8d 95 f4 fe ff ff    	lea    -0x10c(%ebp),%edx
 8059431:	b8 00 00 00 00       	mov    $0x0,%eax
 8059436:	b9 40 00 00 00       	mov    $0x40,%ecx
 805943b:	89 d7                	mov    %edx,%edi
 805943d:	f3 ab                	rep stos %eax,%es:(%edi)
 805943f:	0f b6 85 d0 fe ff ff 	movzbl -0x130(%ebp),%eax
 8059446:	c6 84 05 f4 fe ff ff 	movb   $0x0,-0x10c(%ebp,%eax,1)
 805944d:	00 
 805944e:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%ebp)
 8059455:	00 00 00 
 8059458:	0f b6 85 d0 fe ff ff 	movzbl -0x130(%ebp),%eax
 805945f:	83 e8 01             	sub    $0x1,%eax
 8059462:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 8059468:	eb 72                	jmp    80594dc <u64_to_hex+0x102>
 805946a:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 8059470:	83 e0 0f             	and    $0xf,%eax
 8059473:	88 85 df fe ff ff    	mov    %al,-0x121(%ebp)
 8059479:	80 bd df fe ff ff 09 	cmpb   $0x9,-0x121(%ebp)
 8059480:	77 0c                	ja     805948e <u64_to_hex+0xb4>
 8059482:	0f b6 85 df fe ff ff 	movzbl -0x121(%ebp),%eax
 8059489:	83 c0 30             	add    $0x30,%eax
 805948c:	eb 0a                	jmp    8059498 <u64_to_hex+0xbe>
 805948e:	0f b6 85 df fe ff ff 	movzbl -0x121(%ebp),%eax
 8059495:	83 c0 57             	add    $0x57,%eax
 8059498:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 805949e:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 80594a4:	89 c1                	mov    %eax,%ecx
 80594a6:	8d 95 f4 fe ff ff    	lea    -0x10c(%ebp),%edx
 80594ac:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 80594b2:	01 d0                	add    %edx,%eax
 80594b4:	88 08                	mov    %cl,(%eax)
 80594b6:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 80594bc:	8b 95 ec fe ff ff    	mov    -0x114(%ebp),%edx
 80594c2:	0f ac d0 04          	shrd   $0x4,%edx,%eax
 80594c6:	c1 ea 04             	shr    $0x4,%edx
 80594c9:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 80594cf:	89 95 ec fe ff ff    	mov    %edx,-0x114(%ebp)
 80594d5:	83 ad e0 fe ff ff 01 	subl   $0x1,-0x120(%ebp)
 80594dc:	83 bd e0 fe ff ff 00 	cmpl   $0x0,-0x120(%ebp)
 80594e3:	79 85                	jns    805946a <u64_to_hex+0x90>
 80594e5:	0f b6 85 d0 fe ff ff 	movzbl -0x130(%ebp),%eax
 80594ec:	83 c0 01             	add    $0x1,%eax
 80594ef:	83 ec 08             	sub    $0x8,%esp
 80594f2:	50                   	push   %eax
 80594f3:	8d 85 f4 fe ff ff    	lea    -0x10c(%ebp),%eax
 80594f9:	50                   	push   %eax
 80594fa:	e8 c7 e5 ff ff       	call   8057ac6 <memdup>
 80594ff:	83 c4 10             	add    $0x10,%esp
 8059502:	89 c1                	mov    %eax,%ecx
 8059504:	0f b6 95 d0 fe ff ff 	movzbl -0x130(%ebp),%edx
 805950b:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8059511:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8059517:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805951e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 8059525:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 805952b:	89 08                	mov    %ecx,(%eax)
 805952d:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8059533:	89 50 04             	mov    %edx,0x4(%eax)
 8059536:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 805953c:	8b 7d f4             	mov    -0xc(%ebp),%edi
 805953f:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8059546:	74 05                	je     805954d <u64_to_hex+0x173>
 8059548:	e8 d3 f2 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805954d:	8b 7d fc             	mov    -0x4(%ebp),%edi
 8059550:	c9                   	leave  
 8059551:	c2 04 00             	ret    $0x4

08059554 <u64_to_hex_no_leading_zeros>:
 8059554:	55                   	push   %ebp
 8059555:	89 e5                	mov    %esp,%ebp
 8059557:	57                   	push   %edi
 8059558:	81 ec 34 01 00 00    	sub    $0x134,%esp
 805955e:	8b 45 14             	mov    0x14(%ebp),%eax
 8059561:	8b 55 08             	mov    0x8(%ebp),%edx
 8059564:	89 95 d4 fe ff ff    	mov    %edx,-0x12c(%ebp)
 805956a:	8b 55 0c             	mov    0xc(%ebp),%edx
 805956d:	89 95 c8 fe ff ff    	mov    %edx,-0x138(%ebp)
 8059573:	8b 55 10             	mov    0x10(%ebp),%edx
 8059576:	89 95 cc fe ff ff    	mov    %edx,-0x134(%ebp)
 805957c:	88 85 d0 fe ff ff    	mov    %al,-0x130(%ebp)
 8059582:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059588:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805958b:	31 c0                	xor    %eax,%eax
 805958d:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8059593:	8b 95 cc fe ff ff    	mov    -0x134(%ebp),%edx
 8059599:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 805959f:	89 95 ec fe ff ff    	mov    %edx,-0x114(%ebp)
 80595a5:	8d 95 f4 fe ff ff    	lea    -0x10c(%ebp),%edx
 80595ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80595b0:	b9 40 00 00 00       	mov    $0x40,%ecx
 80595b5:	89 d7                	mov    %edx,%edi
 80595b7:	f3 ab                	rep stos %eax,%es:(%edi)
 80595b9:	0f b6 85 d0 fe ff ff 	movzbl -0x130(%ebp),%eax
 80595c0:	c6 84 05 f4 fe ff ff 	movb   $0x0,-0x10c(%ebp,%eax,1)
 80595c7:	00 
 80595c8:	c7 85 dc fe ff ff 00 	movl   $0x0,-0x124(%ebp)
 80595cf:	00 00 00 
 80595d2:	0f b6 85 d0 fe ff ff 	movzbl -0x130(%ebp),%eax
 80595d9:	83 e8 01             	sub    $0x1,%eax
 80595dc:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 80595e2:	e9 82 00 00 00       	jmp    8059669 <u64_to_hex_no_leading_zeros+0x115>
 80595e7:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 80595ed:	83 e0 0f             	and    $0xf,%eax
 80595f0:	88 85 db fe ff ff    	mov    %al,-0x125(%ebp)
 80595f6:	80 bd db fe ff ff 09 	cmpb   $0x9,-0x125(%ebp)
 80595fd:	77 0c                	ja     805960b <u64_to_hex_no_leading_zeros+0xb7>
 80595ff:	0f b6 85 db fe ff ff 	movzbl -0x125(%ebp),%eax
 8059606:	83 c0 30             	add    $0x30,%eax
 8059609:	eb 0a                	jmp    8059615 <u64_to_hex_no_leading_zeros+0xc1>
 805960b:	0f b6 85 db fe ff ff 	movzbl -0x125(%ebp),%eax
 8059612:	83 c0 57             	add    $0x57,%eax
 8059615:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 805961b:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 8059621:	89 c1                	mov    %eax,%ecx
 8059623:	8d 95 f4 fe ff ff    	lea    -0x10c(%ebp),%edx
 8059629:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 805962f:	01 d0                	add    %edx,%eax
 8059631:	88 08                	mov    %cl,(%eax)
 8059633:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 8059639:	8b 95 ec fe ff ff    	mov    -0x114(%ebp),%edx
 805963f:	0f ac d0 04          	shrd   $0x4,%edx,%eax
 8059643:	c1 ea 04             	shr    $0x4,%edx
 8059646:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 805964c:	89 95 ec fe ff ff    	mov    %edx,-0x114(%ebp)
 8059652:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 8059658:	0b 85 e8 fe ff ff    	or     -0x118(%ebp),%eax
 805965e:	85 c0                	test   %eax,%eax
 8059660:	74 16                	je     8059678 <u64_to_hex_no_leading_zeros+0x124>
 8059662:	83 ad dc fe ff ff 01 	subl   $0x1,-0x124(%ebp)
 8059669:	83 bd dc fe ff ff 00 	cmpl   $0x0,-0x124(%ebp)
 8059670:	0f 89 71 ff ff ff    	jns    80595e7 <u64_to_hex_no_leading_zeros+0x93>
 8059676:	eb 01                	jmp    8059679 <u64_to_hex_no_leading_zeros+0x125>
 8059678:	90                   	nop
 8059679:	0f b6 85 d0 fe ff ff 	movzbl -0x130(%ebp),%eax
 8059680:	2b 85 dc fe ff ff    	sub    -0x124(%ebp),%eax
 8059686:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 805968c:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8059692:	8d 50 01             	lea    0x1(%eax),%edx
 8059695:	8d 8d f4 fe ff ff    	lea    -0x10c(%ebp),%ecx
 805969b:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 80596a1:	01 c8                	add    %ecx,%eax
 80596a3:	83 ec 08             	sub    $0x8,%esp
 80596a6:	52                   	push   %edx
 80596a7:	50                   	push   %eax
 80596a8:	e8 19 e4 ff ff       	call   8057ac6 <memdup>
 80596ad:	83 c4 10             	add    $0x10,%esp
 80596b0:	89 c2                	mov    %eax,%edx
 80596b2:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80596b8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 80596be:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 80596c5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 80596cc:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80596d2:	89 10                	mov    %edx,(%eax)
 80596d4:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80596da:	8b 95 e4 fe ff ff    	mov    -0x11c(%ebp),%edx
 80596e0:	89 50 04             	mov    %edx,0x4(%eax)
 80596e3:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80596e9:	8b 7d f4             	mov    -0xc(%ebp),%edi
 80596ec:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 80596f3:	74 05                	je     80596fa <u64_to_hex_no_leading_zeros+0x1a6>
 80596f5:	e8 26 f1 fe ff       	call   8048820 <__stack_chk_fail@plt>
 80596fa:	8b 7d fc             	mov    -0x4(%ebp),%edi
 80596fd:	c9                   	leave  
 80596fe:	c2 04 00             	ret    $0x4

08059701 <byte_hex>:
 8059701:	55                   	push   %ebp
 8059702:	89 e5                	mov    %esp,%ebp
 8059704:	83 ec 28             	sub    $0x28,%esp
 8059707:	8b 45 0c             	mov    0xc(%ebp),%eax
 805970a:	8b 55 08             	mov    0x8(%ebp),%edx
 805970d:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8059710:	88 45 e0             	mov    %al,-0x20(%ebp)
 8059713:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059719:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805971c:	31 c0                	xor    %eax,%eax
 805971e:	80 7d e0 00          	cmpb   $0x0,-0x20(%ebp)
 8059722:	75 1f                	jne    8059743 <byte_hex+0x42>
 8059724:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059727:	c7 00 96 9d 06 08    	movl   $0x8069d96,(%eax)
 805972d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059730:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%eax)
 8059737:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805973a:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8059741:	eb 19                	jmp    805975c <byte_hex+0x5b>
 8059743:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8059747:	ba 00 00 00 00       	mov    $0x0,%edx
 805974c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 805974f:	6a 02                	push   $0x2
 8059751:	52                   	push   %edx
 8059752:	50                   	push   %eax
 8059753:	51                   	push   %ecx
 8059754:	e8 81 fc ff ff       	call   80593da <u64_to_hex>
 8059759:	83 c4 0c             	add    $0xc,%esp
 805975c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805975f:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059762:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8059769:	74 05                	je     8059770 <byte_hex+0x6f>
 805976b:	e8 b0 f0 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059770:	c9                   	leave  
 8059771:	c2 04 00             	ret    $0x4

08059774 <i8_hex>:
 8059774:	55                   	push   %ebp
 8059775:	89 e5                	mov    %esp,%ebp
 8059777:	83 ec 28             	sub    $0x28,%esp
 805977a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805977d:	8b 55 08             	mov    0x8(%ebp),%edx
 8059780:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8059783:	88 45 e0             	mov    %al,-0x20(%ebp)
 8059786:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805978c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805978f:	31 c0                	xor    %eax,%eax
 8059791:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8059795:	0f b6 d0             	movzbl %al,%edx
 8059798:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805979b:	83 ec 08             	sub    $0x8,%esp
 805979e:	52                   	push   %edx
 805979f:	50                   	push   %eax
 80597a0:	e8 5c ff ff ff       	call   8059701 <byte_hex>
 80597a5:	83 c4 0c             	add    $0xc,%esp
 80597a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80597ab:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80597ae:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80597b5:	74 05                	je     80597bc <i8_hex+0x48>
 80597b7:	e8 64 f0 fe ff       	call   8048820 <__stack_chk_fail@plt>
 80597bc:	c9                   	leave  
 80597bd:	c2 04 00             	ret    $0x4

080597c0 <u16_hex>:
 80597c0:	55                   	push   %ebp
 80597c1:	89 e5                	mov    %esp,%ebp
 80597c3:	83 ec 28             	sub    $0x28,%esp
 80597c6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80597c9:	8b 55 08             	mov    0x8(%ebp),%edx
 80597cc:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 80597cf:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
 80597d3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80597d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80597dc:	31 c0                	xor    %eax,%eax
 80597de:	66 83 7d e0 00       	cmpw   $0x0,-0x20(%ebp)
 80597e3:	75 1f                	jne    8059804 <u16_hex+0x44>
 80597e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80597e8:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 80597ee:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80597f1:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 80597f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80597fb:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8059802:	eb 19                	jmp    805981d <u16_hex+0x5d>
 8059804:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
 8059808:	ba 00 00 00 00       	mov    $0x0,%edx
 805980d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 8059810:	6a 04                	push   $0x4
 8059812:	52                   	push   %edx
 8059813:	50                   	push   %eax
 8059814:	51                   	push   %ecx
 8059815:	e8 3a fd ff ff       	call   8059554 <u64_to_hex_no_leading_zeros>
 805981a:	83 c4 0c             	add    $0xc,%esp
 805981d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059820:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059823:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805982a:	74 05                	je     8059831 <u16_hex+0x71>
 805982c:	e8 ef ef fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059831:	c9                   	leave  
 8059832:	c2 04 00             	ret    $0x4

08059835 <i16_hex>:
 8059835:	55                   	push   %ebp
 8059836:	89 e5                	mov    %esp,%ebp
 8059838:	83 ec 28             	sub    $0x28,%esp
 805983b:	8b 45 0c             	mov    0xc(%ebp),%eax
 805983e:	8b 55 08             	mov    0x8(%ebp),%edx
 8059841:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8059844:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
 8059848:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805984e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059851:	31 c0                	xor    %eax,%eax
 8059853:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
 8059857:	0f b7 d0             	movzwl %ax,%edx
 805985a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805985d:	83 ec 08             	sub    $0x8,%esp
 8059860:	52                   	push   %edx
 8059861:	50                   	push   %eax
 8059862:	e8 59 ff ff ff       	call   80597c0 <u16_hex>
 8059867:	83 c4 0c             	add    $0xc,%esp
 805986a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805986d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8059870:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8059877:	74 05                	je     805987e <i16_hex+0x49>
 8059879:	e8 a2 ef fe ff       	call   8048820 <__stack_chk_fail@plt>
 805987e:	c9                   	leave  
 805987f:	c2 04 00             	ret    $0x4

08059882 <u32_hex>:
 8059882:	55                   	push   %ebp
 8059883:	89 e5                	mov    %esp,%ebp
 8059885:	83 ec 28             	sub    $0x28,%esp
 8059888:	8b 45 08             	mov    0x8(%ebp),%eax
 805988b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805988e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059894:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059897:	31 c0                	xor    %eax,%eax
 8059899:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 805989d:	75 1f                	jne    80598be <u32_hex+0x3c>
 805989f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80598a2:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 80598a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80598ab:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 80598b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80598b5:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80598bc:	eb 18                	jmp    80598d6 <u32_hex+0x54>
 80598be:	8b 45 0c             	mov    0xc(%ebp),%eax
 80598c1:	ba 00 00 00 00       	mov    $0x0,%edx
 80598c6:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 80598c9:	6a 08                	push   $0x8
 80598cb:	52                   	push   %edx
 80598cc:	50                   	push   %eax
 80598cd:	51                   	push   %ecx
 80598ce:	e8 81 fc ff ff       	call   8059554 <u64_to_hex_no_leading_zeros>
 80598d3:	83 c4 0c             	add    $0xc,%esp
 80598d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80598d9:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80598dc:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80598e3:	74 05                	je     80598ea <u32_hex+0x68>
 80598e5:	e8 36 ef fe ff       	call   8048820 <__stack_chk_fail@plt>
 80598ea:	c9                   	leave  
 80598eb:	c2 04 00             	ret    $0x4

080598ee <int_hex>:
 80598ee:	55                   	push   %ebp
 80598ef:	89 e5                	mov    %esp,%ebp
 80598f1:	83 ec 28             	sub    $0x28,%esp
 80598f4:	8b 45 08             	mov    0x8(%ebp),%eax
 80598f7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80598fa:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059900:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059903:	31 c0                	xor    %eax,%eax
 8059905:	8b 55 0c             	mov    0xc(%ebp),%edx
 8059908:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805990b:	83 ec 08             	sub    $0x8,%esp
 805990e:	52                   	push   %edx
 805990f:	50                   	push   %eax
 8059910:	e8 6d ff ff ff       	call   8059882 <u32_hex>
 8059915:	83 c4 0c             	add    $0xc,%esp
 8059918:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805991b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805991e:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8059925:	74 05                	je     805992c <int_hex+0x3e>
 8059927:	e8 f4 ee fe ff       	call   8048820 <__stack_chk_fail@plt>
 805992c:	c9                   	leave  
 805992d:	c2 04 00             	ret    $0x4

08059930 <int_hex2>:
 8059930:	55                   	push   %ebp
 8059931:	89 e5                	mov    %esp,%ebp
 8059933:	83 ec 38             	sub    $0x38,%esp
 8059936:	8b 45 08             	mov    0x8(%ebp),%eax
 8059939:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805993c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059942:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059945:	31 c0                	xor    %eax,%eax
 8059947:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805994a:	83 ec 08             	sub    $0x8,%esp
 805994d:	ff 75 0c             	pushl  0xc(%ebp)
 8059950:	50                   	push   %eax
 8059951:	e8 98 ff ff ff       	call   80598ee <int_hex>
 8059956:	83 c4 0c             	add    $0xc,%esp
 8059959:	c7 45 dc ea 97 06 08 	movl   $0x80697ea,-0x24(%ebp)
 8059960:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
 8059967:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 805996e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8059971:	83 ec 04             	sub    $0x4,%esp
 8059974:	ff 75 f0             	pushl  -0x10(%ebp)
 8059977:	ff 75 ec             	pushl  -0x14(%ebp)
 805997a:	ff 75 e8             	pushl  -0x18(%ebp)
 805997d:	ff 75 e4             	pushl  -0x1c(%ebp)
 8059980:	ff 75 e0             	pushl  -0x20(%ebp)
 8059983:	ff 75 dc             	pushl  -0x24(%ebp)
 8059986:	50                   	push   %eax
 8059987:	e8 b8 48 00 00       	call   805e244 <string_add>
 805998c:	83 c4 1c             	add    $0x1c,%esp
 805998f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8059992:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059995:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805999c:	74 05                	je     80599a3 <int_hex2+0x73>
 805999e:	e8 7d ee fe ff       	call   8048820 <__stack_chk_fail@plt>
 80599a3:	c9                   	leave  
 80599a4:	c2 04 00             	ret    $0x4

080599a7 <u64_hex>:
 80599a7:	55                   	push   %ebp
 80599a8:	89 e5                	mov    %esp,%ebp
 80599aa:	83 ec 28             	sub    $0x28,%esp
 80599ad:	8b 45 08             	mov    0x8(%ebp),%eax
 80599b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80599b3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80599b6:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80599b9:	8b 45 10             	mov    0x10(%ebp),%eax
 80599bc:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80599bf:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80599c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80599c8:	31 c0                	xor    %eax,%eax
 80599ca:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80599cd:	0b 45 d8             	or     -0x28(%ebp),%eax
 80599d0:	85 c0                	test   %eax,%eax
 80599d2:	75 1f                	jne    80599f3 <u64_hex+0x4c>
 80599d4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80599d7:	c7 00 8d 98 06 08    	movl   $0x806988d,(%eax)
 80599dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80599e0:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 80599e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80599ea:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80599f1:	eb 14                	jmp    8059a07 <u64_hex+0x60>
 80599f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80599f6:	6a 10                	push   $0x10
 80599f8:	ff 75 dc             	pushl  -0x24(%ebp)
 80599fb:	ff 75 d8             	pushl  -0x28(%ebp)
 80599fe:	50                   	push   %eax
 80599ff:	e8 50 fb ff ff       	call   8059554 <u64_to_hex_no_leading_zeros>
 8059a04:	83 c4 0c             	add    $0xc,%esp
 8059a07:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059a0a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059a0d:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8059a14:	74 05                	je     8059a1b <u64_hex+0x74>
 8059a16:	e8 05 ee fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059a1b:	c9                   	leave  
 8059a1c:	c2 04 00             	ret    $0x4

08059a1f <i64_hex>:
 8059a1f:	55                   	push   %ebp
 8059a20:	89 e5                	mov    %esp,%ebp
 8059a22:	83 ec 28             	sub    $0x28,%esp
 8059a25:	8b 45 08             	mov    0x8(%ebp),%eax
 8059a28:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8059a2b:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059a2e:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8059a31:	8b 45 10             	mov    0x10(%ebp),%eax
 8059a34:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8059a37:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059a3d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059a40:	31 c0                	xor    %eax,%eax
 8059a42:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8059a45:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8059a48:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 8059a4b:	83 ec 04             	sub    $0x4,%esp
 8059a4e:	52                   	push   %edx
 8059a4f:	50                   	push   %eax
 8059a50:	51                   	push   %ecx
 8059a51:	e8 51 ff ff ff       	call   80599a7 <u64_hex>
 8059a56:	83 c4 0c             	add    $0xc,%esp
 8059a59:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059a5c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059a5f:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8059a66:	74 05                	je     8059a6d <i64_hex+0x4e>
 8059a68:	e8 b3 ed fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059a6d:	c9                   	leave  
 8059a6e:	c2 04 00             	ret    $0x4

08059a71 <int_literal_hex>:
 8059a71:	55                   	push   %ebp
 8059a72:	89 e5                	mov    %esp,%ebp
 8059a74:	83 ec 28             	sub    $0x28,%esp
 8059a77:	8b 45 08             	mov    0x8(%ebp),%eax
 8059a7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8059a7d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059a80:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8059a83:	8b 45 10             	mov    0x10(%ebp),%eax
 8059a86:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8059a89:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059a8f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059a92:	31 c0                	xor    %eax,%eax
 8059a94:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8059a97:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8059a9a:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 8059a9d:	83 ec 04             	sub    $0x4,%esp
 8059aa0:	52                   	push   %edx
 8059aa1:	50                   	push   %eax
 8059aa2:	51                   	push   %ecx
 8059aa3:	e8 ff fe ff ff       	call   80599a7 <u64_hex>
 8059aa8:	83 c4 0c             	add    $0xc,%esp
 8059aab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059aae:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059ab1:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8059ab8:	74 05                	je     8059abf <int_literal_hex+0x4e>
 8059aba:	e8 61 ed fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059abf:	c9                   	leave  
 8059ac0:	c2 04 00             	ret    $0x4

08059ac3 <voidptr_str>:
 8059ac3:	55                   	push   %ebp
 8059ac4:	89 e5                	mov    %esp,%ebp
 8059ac6:	83 ec 28             	sub    $0x28,%esp
 8059ac9:	8b 45 08             	mov    0x8(%ebp),%eax
 8059acc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8059acf:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059ad2:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8059ad5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059adb:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059ade:	31 c0                	xor    %eax,%eax
 8059ae0:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8059ae3:	99                   	cltd   
 8059ae4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 8059ae7:	83 ec 04             	sub    $0x4,%esp
 8059aea:	52                   	push   %edx
 8059aeb:	50                   	push   %eax
 8059aec:	51                   	push   %ecx
 8059aed:	e8 b5 fe ff ff       	call   80599a7 <u64_hex>
 8059af2:	83 c4 0c             	add    $0xc,%esp
 8059af5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059af8:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059afb:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8059b02:	74 05                	je     8059b09 <voidptr_str+0x46>
 8059b04:	e8 17 ed fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059b09:	c9                   	leave  
 8059b0a:	c2 04 00             	ret    $0x4

08059b0d <byteptr_str>:
 8059b0d:	55                   	push   %ebp
 8059b0e:	89 e5                	mov    %esp,%ebp
 8059b10:	83 ec 28             	sub    $0x28,%esp
 8059b13:	8b 45 08             	mov    0x8(%ebp),%eax
 8059b16:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8059b19:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059b1c:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8059b1f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059b25:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059b28:	31 c0                	xor    %eax,%eax
 8059b2a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8059b2d:	99                   	cltd   
 8059b2e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 8059b31:	83 ec 04             	sub    $0x4,%esp
 8059b34:	52                   	push   %edx
 8059b35:	50                   	push   %eax
 8059b36:	51                   	push   %ecx
 8059b37:	e8 6b fe ff ff       	call   80599a7 <u64_hex>
 8059b3c:	83 c4 0c             	add    $0xc,%esp
 8059b3f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059b42:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059b45:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8059b4c:	74 05                	je     8059b53 <byteptr_str+0x46>
 8059b4e:	e8 cd ec fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059b53:	c9                   	leave  
 8059b54:	c2 04 00             	ret    $0x4

08059b57 <u64_hex_full>:
 8059b57:	55                   	push   %ebp
 8059b58:	89 e5                	mov    %esp,%ebp
 8059b5a:	83 ec 28             	sub    $0x28,%esp
 8059b5d:	8b 45 08             	mov    0x8(%ebp),%eax
 8059b60:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8059b63:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059b66:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8059b69:	8b 45 10             	mov    0x10(%ebp),%eax
 8059b6c:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8059b6f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059b75:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059b78:	31 c0                	xor    %eax,%eax
 8059b7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059b7d:	6a 10                	push   $0x10
 8059b7f:	ff 75 dc             	pushl  -0x24(%ebp)
 8059b82:	ff 75 d8             	pushl  -0x28(%ebp)
 8059b85:	50                   	push   %eax
 8059b86:	e8 4f f8 ff ff       	call   80593da <u64_to_hex>
 8059b8b:	83 c4 0c             	add    $0xc,%esp
 8059b8e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059b91:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059b94:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8059b9b:	74 05                	je     8059ba2 <u64_hex_full+0x4b>
 8059b9d:	e8 7e ec fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059ba2:	c9                   	leave  
 8059ba3:	c2 04 00             	ret    $0x4

08059ba6 <byte_str>:
 8059ba6:	55                   	push   %ebp
 8059ba7:	89 e5                	mov    %esp,%ebp
 8059ba9:	83 ec 28             	sub    $0x28,%esp
 8059bac:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059baf:	8b 55 08             	mov    0x8(%ebp),%edx
 8059bb2:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8059bb5:	88 45 e0             	mov    %al,-0x20(%ebp)
 8059bb8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059bbe:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059bc1:	31 c0                	xor    %eax,%eax
 8059bc3:	0f b6 55 e0          	movzbl -0x20(%ebp),%edx
 8059bc7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059bca:	83 ec 04             	sub    $0x4,%esp
 8059bcd:	6a 07                	push   $0x7
 8059bcf:	52                   	push   %edx
 8059bd0:	50                   	push   %eax
 8059bd1:	e8 d9 ee ff ff       	call   8058aaf <int_str_l>
 8059bd6:	83 c4 0c             	add    $0xc,%esp
 8059bd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8059bdc:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8059bdf:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8059be6:	74 05                	je     8059bed <byte_str+0x47>
 8059be8:	e8 33 ec fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059bed:	c9                   	leave  
 8059bee:	c2 04 00             	ret    $0x4

08059bf1 <byte_ascii_str>:
 8059bf1:	55                   	push   %ebp
 8059bf2:	89 e5                	mov    %esp,%ebp
 8059bf4:	83 ec 28             	sub    $0x28,%esp
 8059bf7:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059bfa:	88 45 e4             	mov    %al,-0x1c(%ebp)
 8059bfd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8059c04:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8059c0b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8059c12:	83 ec 0c             	sub    $0xc,%esp
 8059c15:	6a 02                	push   $0x2
 8059c17:	e8 0b dd ff ff       	call   8057927 <v_malloc>
 8059c1c:	83 c4 10             	add    $0x10,%esp
 8059c1f:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8059c22:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8059c29:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8059c2c:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
 8059c30:	88 10                	mov    %dl,(%eax)
 8059c32:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8059c35:	83 c0 01             	add    $0x1,%eax
 8059c38:	c6 00 00             	movb   $0x0,(%eax)
 8059c3b:	8b 45 08             	mov    0x8(%ebp),%eax
 8059c3e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8059c41:	89 10                	mov    %edx,(%eax)
 8059c43:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8059c46:	89 50 04             	mov    %edx,0x4(%eax)
 8059c49:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059c4c:	89 50 08             	mov    %edx,0x8(%eax)
 8059c4f:	8b 45 08             	mov    0x8(%ebp),%eax
 8059c52:	c9                   	leave  
 8059c53:	c2 04 00             	ret    $0x4

08059c56 <byte_str_escaped>:
 8059c56:	55                   	push   %ebp
 8059c57:	89 e5                	mov    %esp,%ebp
 8059c59:	83 ec 48             	sub    $0x48,%esp
 8059c5c:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059c5f:	8b 55 08             	mov    0x8(%ebp),%edx
 8059c62:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 8059c65:	88 45 c0             	mov    %al,-0x40(%ebp)
 8059c68:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8059c6e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059c71:	31 c0                	xor    %eax,%eax
 8059c73:	0f b6 45 c0          	movzbl -0x40(%ebp),%eax
 8059c77:	88 45 cf             	mov    %al,-0x31(%ebp)
 8059c7a:	80 7d cf 00          	cmpb   $0x0,-0x31(%ebp)
 8059c7e:	75 1a                	jne    8059c9a <byte_str_escaped+0x44>
 8059c80:	c7 45 d0 99 9d 06 08 	movl   $0x8069d99,-0x30(%ebp)
 8059c87:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059c8e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059c95:	e9 49 01 00 00       	jmp    8059de3 <byte_str_escaped+0x18d>
 8059c9a:	80 7d cf 07          	cmpb   $0x7,-0x31(%ebp)
 8059c9e:	75 1a                	jne    8059cba <byte_str_escaped+0x64>
 8059ca0:	c7 45 d0 9e 9d 06 08 	movl   $0x8069d9e,-0x30(%ebp)
 8059ca7:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059cae:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059cb5:	e9 29 01 00 00       	jmp    8059de3 <byte_str_escaped+0x18d>
 8059cba:	80 7d cf 08          	cmpb   $0x8,-0x31(%ebp)
 8059cbe:	75 1a                	jne    8059cda <byte_str_escaped+0x84>
 8059cc0:	c7 45 d0 a3 9d 06 08 	movl   $0x8069da3,-0x30(%ebp)
 8059cc7:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059cce:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059cd5:	e9 09 01 00 00       	jmp    8059de3 <byte_str_escaped+0x18d>
 8059cda:	80 7d cf 09          	cmpb   $0x9,-0x31(%ebp)
 8059cde:	75 1a                	jne    8059cfa <byte_str_escaped+0xa4>
 8059ce0:	c7 45 d0 a8 9d 06 08 	movl   $0x8069da8,-0x30(%ebp)
 8059ce7:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059cee:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059cf5:	e9 e9 00 00 00       	jmp    8059de3 <byte_str_escaped+0x18d>
 8059cfa:	80 7d cf 0a          	cmpb   $0xa,-0x31(%ebp)
 8059cfe:	75 1a                	jne    8059d1a <byte_str_escaped+0xc4>
 8059d00:	c7 45 d0 ad 9d 06 08 	movl   $0x8069dad,-0x30(%ebp)
 8059d07:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059d0e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059d15:	e9 c9 00 00 00       	jmp    8059de3 <byte_str_escaped+0x18d>
 8059d1a:	80 7d cf 0b          	cmpb   $0xb,-0x31(%ebp)
 8059d1e:	75 1a                	jne    8059d3a <byte_str_escaped+0xe4>
 8059d20:	c7 45 d0 b2 9d 06 08 	movl   $0x8069db2,-0x30(%ebp)
 8059d27:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059d2e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059d35:	e9 a9 00 00 00       	jmp    8059de3 <byte_str_escaped+0x18d>
 8059d3a:	80 7d cf 0c          	cmpb   $0xc,-0x31(%ebp)
 8059d3e:	75 1a                	jne    8059d5a <byte_str_escaped+0x104>
 8059d40:	c7 45 d0 b7 9d 06 08 	movl   $0x8069db7,-0x30(%ebp)
 8059d47:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059d4e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059d55:	e9 89 00 00 00       	jmp    8059de3 <byte_str_escaped+0x18d>
 8059d5a:	80 7d cf 0d          	cmpb   $0xd,-0x31(%ebp)
 8059d5e:	75 17                	jne    8059d77 <byte_str_escaped+0x121>
 8059d60:	c7 45 d0 bc 9d 06 08 	movl   $0x8069dbc,-0x30(%ebp)
 8059d67:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8059d6e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 8059d75:	eb 6c                	jmp    8059de3 <byte_str_escaped+0x18d>
 8059d77:	80 7d cf 1f          	cmpb   $0x1f,-0x31(%ebp)
 8059d7b:	76 1c                	jbe    8059d99 <byte_str_escaped+0x143>
 8059d7d:	80 7d cf 7e          	cmpb   $0x7e,-0x31(%ebp)
 8059d81:	77 16                	ja     8059d99 <byte_str_escaped+0x143>
 8059d83:	0f b6 55 c0          	movzbl -0x40(%ebp),%edx
 8059d87:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8059d8a:	83 ec 08             	sub    $0x8,%esp
 8059d8d:	52                   	push   %edx
 8059d8e:	50                   	push   %eax
 8059d8f:	e8 5d fe ff ff       	call   8059bf1 <byte_ascii_str>
 8059d94:	83 c4 0c             	add    $0xc,%esp
 8059d97:	eb 4a                	jmp    8059de3 <byte_str_escaped+0x18d>
 8059d99:	0f b6 55 c0          	movzbl -0x40(%ebp),%edx
 8059d9d:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8059da0:	83 ec 08             	sub    $0x8,%esp
 8059da3:	52                   	push   %edx
 8059da4:	50                   	push   %eax
 8059da5:	e8 57 f9 ff ff       	call   8059701 <byte_hex>
 8059daa:	83 c4 0c             	add    $0xc,%esp
 8059dad:	c7 45 dc ea 97 06 08 	movl   $0x80697ea,-0x24(%ebp)
 8059db4:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
 8059dbb:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 8059dc2:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8059dc5:	83 ec 04             	sub    $0x4,%esp
 8059dc8:	ff 75 f0             	pushl  -0x10(%ebp)
 8059dcb:	ff 75 ec             	pushl  -0x14(%ebp)
 8059dce:	ff 75 e8             	pushl  -0x18(%ebp)
 8059dd1:	ff 75 e4             	pushl  -0x1c(%ebp)
 8059dd4:	ff 75 e0             	pushl  -0x20(%ebp)
 8059dd7:	ff 75 dc             	pushl  -0x24(%ebp)
 8059dda:	50                   	push   %eax
 8059ddb:	e8 64 44 00 00       	call   805e244 <string_add>
 8059de0:	83 c4 1c             	add    $0x1c,%esp
 8059de3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8059de6:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8059de9:	89 10                	mov    %edx,(%eax)
 8059deb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8059dee:	89 50 04             	mov    %edx,0x4(%eax)
 8059df1:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8059df4:	89 50 08             	mov    %edx,0x8(%eax)
 8059df7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8059dfa:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8059dfd:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8059e04:	74 05                	je     8059e0b <byte_str_escaped+0x1b5>
 8059e06:	e8 15 ea fe ff       	call   8048820 <__stack_chk_fail@plt>
 8059e0b:	c9                   	leave  
 8059e0c:	c2 04 00             	ret    $0x4

08059e0f <fast_string_eq>:
 8059e0f:	55                   	push   %ebp
 8059e10:	89 e5                	mov    %esp,%ebp
 8059e12:	83 ec 08             	sub    $0x8,%esp
 8059e15:	8b 55 0c             	mov    0xc(%ebp),%edx
 8059e18:	8b 45 18             	mov    0x18(%ebp),%eax
 8059e1b:	39 c2                	cmp    %eax,%edx
 8059e1d:	74 07                	je     8059e26 <fast_string_eq+0x17>
 8059e1f:	b8 00 00 00 00       	mov    $0x0,%eax
 8059e24:	eb 21                	jmp    8059e47 <fast_string_eq+0x38>
 8059e26:	8b 45 18             	mov    0x18(%ebp),%eax
 8059e29:	89 c1                	mov    %eax,%ecx
 8059e2b:	8b 55 14             	mov    0x14(%ebp),%edx
 8059e2e:	8b 45 08             	mov    0x8(%ebp),%eax
 8059e31:	83 ec 04             	sub    $0x4,%esp
 8059e34:	51                   	push   %ecx
 8059e35:	52                   	push   %edx
 8059e36:	50                   	push   %eax
 8059e37:	e8 c4 e9 fe ff       	call   8048800 <memcmp@plt>
 8059e3c:	83 c4 10             	add    $0x10,%esp
 8059e3f:	85 c0                	test   %eax,%eax
 8059e41:	0f 94 c0             	sete   %al
 8059e44:	0f b6 c0             	movzbl %al,%eax
 8059e47:	c9                   	leave  
 8059e48:	c3                   	ret    

08059e49 <new_dense_array>:
 8059e49:	55                   	push   %ebp
 8059e4a:	89 e5                	mov    %esp,%ebp
 8059e4c:	83 ec 18             	sub    $0x18,%esp
 8059e4f:	8b 55 0c             	mov    0xc(%ebp),%edx
 8059e52:	8b 45 10             	mov    0x10(%ebp),%eax
 8059e55:	01 d0                	add    %edx,%eax
 8059e57:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8059e5a:	c7 45 f4 08 00 00 00 	movl   $0x8,-0xc(%ebp)
 8059e61:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8059e64:	0f af 45 f0          	imul   -0x10(%ebp),%eax
 8059e68:	83 ec 0c             	sub    $0xc,%esp
 8059e6b:	50                   	push   %eax
 8059e6c:	e8 b6 da ff ff       	call   8057927 <v_malloc>
 8059e71:	83 c4 10             	add    $0x10,%esp
 8059e74:	89 c1                	mov    %eax,%ecx
 8059e76:	8b 45 08             	mov    0x8(%ebp),%eax
 8059e79:	8b 55 0c             	mov    0xc(%ebp),%edx
 8059e7c:	89 10                	mov    %edx,(%eax)
 8059e7e:	8b 45 08             	mov    0x8(%ebp),%eax
 8059e81:	8b 55 10             	mov    0x10(%ebp),%edx
 8059e84:	89 50 04             	mov    %edx,0x4(%eax)
 8059e87:	8b 45 08             	mov    0x8(%ebp),%eax
 8059e8a:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8059e8d:	89 50 08             	mov    %edx,0x8(%eax)
 8059e90:	8b 45 08             	mov    0x8(%ebp),%eax
 8059e93:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8059e96:	89 50 0c             	mov    %edx,0xc(%eax)
 8059e99:	8b 45 08             	mov    0x8(%ebp),%eax
 8059e9c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
 8059ea3:	8b 45 08             	mov    0x8(%ebp),%eax
 8059ea6:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
 8059ead:	8b 45 08             	mov    0x8(%ebp),%eax
 8059eb0:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
 8059eb7:	8b 45 08             	mov    0x8(%ebp),%eax
 8059eba:	89 48 1c             	mov    %ecx,0x1c(%eax)
 8059ebd:	8b 45 08             	mov    0x8(%ebp),%eax
 8059ec0:	c9                   	leave  
 8059ec1:	c2 04 00             	ret    $0x4

08059ec4 <DenseArray_key>:
 8059ec4:	55                   	push   %ebp
 8059ec5:	89 e5                	mov    %esp,%ebp
 8059ec7:	8b 45 08             	mov    0x8(%ebp),%eax
 8059eca:	8b 50 1c             	mov    0x1c(%eax),%edx
 8059ecd:	8b 45 08             	mov    0x8(%ebp),%eax
 8059ed0:	8b 40 08             	mov    0x8(%eax),%eax
 8059ed3:	0f af 45 0c          	imul   0xc(%ebp),%eax
 8059ed7:	01 d0                	add    %edx,%eax
 8059ed9:	5d                   	pop    %ebp
 8059eda:	c3                   	ret    

08059edb <DenseArray_value>:
 8059edb:	55                   	push   %ebp
 8059edc:	89 e5                	mov    %esp,%ebp
 8059ede:	8b 45 08             	mov    0x8(%ebp),%eax
 8059ee1:	8b 50 1c             	mov    0x1c(%eax),%edx
 8059ee4:	8b 45 08             	mov    0x8(%ebp),%eax
 8059ee7:	8b 40 08             	mov    0x8(%eax),%eax
 8059eea:	0f af 45 0c          	imul   0xc(%ebp),%eax
 8059eee:	89 c1                	mov    %eax,%ecx
 8059ef0:	8b 45 08             	mov    0x8(%ebp),%eax
 8059ef3:	8b 00                	mov    (%eax),%eax
 8059ef5:	01 c8                	add    %ecx,%eax
 8059ef7:	01 d0                	add    %edx,%eax
 8059ef9:	5d                   	pop    %ebp
 8059efa:	c3                   	ret    

08059efb <DenseArray_has_index>:
 8059efb:	55                   	push   %ebp
 8059efc:	89 e5                	mov    %esp,%ebp
 8059efe:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f01:	8b 40 14             	mov    0x14(%eax),%eax
 8059f04:	85 c0                	test   %eax,%eax
 8059f06:	74 12                	je     8059f1a <DenseArray_has_index+0x1f>
 8059f08:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f0b:	8b 50 18             	mov    0x18(%eax),%edx
 8059f0e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8059f11:	01 d0                	add    %edx,%eax
 8059f13:	0f b6 00             	movzbl (%eax),%eax
 8059f16:	84 c0                	test   %al,%al
 8059f18:	75 07                	jne    8059f21 <DenseArray_has_index+0x26>
 8059f1a:	b8 01 00 00 00       	mov    $0x1,%eax
 8059f1f:	eb 05                	jmp    8059f26 <DenseArray_has_index+0x2b>
 8059f21:	b8 00 00 00 00       	mov    $0x0,%eax
 8059f26:	5d                   	pop    %ebp
 8059f27:	c3                   	ret    

08059f28 <DenseArray_expand>:
 8059f28:	55                   	push   %ebp
 8059f29:	89 e5                	mov    %esp,%ebp
 8059f2b:	83 ec 18             	sub    $0x18,%esp
 8059f2e:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f31:	8b 50 0c             	mov    0xc(%eax),%edx
 8059f34:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f37:	8b 40 10             	mov    0x10(%eax),%eax
 8059f3a:	39 c2                	cmp    %eax,%edx
 8059f3c:	0f 85 9b 00 00 00    	jne    8059fdd <DenseArray_expand+0xb5>
 8059f42:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f45:	8b 50 0c             	mov    0xc(%eax),%edx
 8059f48:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f4b:	8b 40 0c             	mov    0xc(%eax),%eax
 8059f4e:	c1 f8 03             	sar    $0x3,%eax
 8059f51:	01 c2                	add    %eax,%edx
 8059f53:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f56:	89 50 0c             	mov    %edx,0xc(%eax)
 8059f59:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f5c:	8b 50 08             	mov    0x8(%eax),%edx
 8059f5f:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f62:	8b 40 0c             	mov    0xc(%eax),%eax
 8059f65:	0f af d0             	imul   %eax,%edx
 8059f68:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f6b:	8b 40 1c             	mov    0x1c(%eax),%eax
 8059f6e:	83 ec 08             	sub    $0x8,%esp
 8059f71:	52                   	push   %edx
 8059f72:	50                   	push   %eax
 8059f73:	e8 4e da ff ff       	call   80579c6 <v_realloc>
 8059f78:	83 c4 10             	add    $0x10,%esp
 8059f7b:	89 c2                	mov    %eax,%edx
 8059f7d:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f80:	89 50 1c             	mov    %edx,0x1c(%eax)
 8059f83:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f86:	8b 40 14             	mov    0x14(%eax),%eax
 8059f89:	85 c0                	test   %eax,%eax
 8059f8b:	74 50                	je     8059fdd <DenseArray_expand+0xb5>
 8059f8d:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f90:	8b 50 0c             	mov    0xc(%eax),%edx
 8059f93:	8b 45 08             	mov    0x8(%ebp),%eax
 8059f96:	8b 40 18             	mov    0x18(%eax),%eax
 8059f99:	83 ec 08             	sub    $0x8,%esp
 8059f9c:	52                   	push   %edx
 8059f9d:	50                   	push   %eax
 8059f9e:	e8 23 da ff ff       	call   80579c6 <v_realloc>
 8059fa3:	83 c4 10             	add    $0x10,%esp
 8059fa6:	89 c2                	mov    %eax,%edx
 8059fa8:	8b 45 08             	mov    0x8(%ebp),%eax
 8059fab:	89 50 18             	mov    %edx,0x18(%eax)
 8059fae:	8b 45 08             	mov    0x8(%ebp),%eax
 8059fb1:	8b 50 0c             	mov    0xc(%eax),%edx
 8059fb4:	8b 45 08             	mov    0x8(%ebp),%eax
 8059fb7:	8b 40 10             	mov    0x10(%eax),%eax
 8059fba:	29 c2                	sub    %eax,%edx
 8059fbc:	89 d0                	mov    %edx,%eax
 8059fbe:	89 c1                	mov    %eax,%ecx
 8059fc0:	8b 45 08             	mov    0x8(%ebp),%eax
 8059fc3:	8b 50 18             	mov    0x18(%eax),%edx
 8059fc6:	8b 45 08             	mov    0x8(%ebp),%eax
 8059fc9:	8b 40 10             	mov    0x10(%eax),%eax
 8059fcc:	01 d0                	add    %edx,%eax
 8059fce:	83 ec 04             	sub    $0x4,%esp
 8059fd1:	51                   	push   %ecx
 8059fd2:	6a 00                	push   $0x0
 8059fd4:	50                   	push   %eax
 8059fd5:	e8 e6 e8 fe ff       	call   80488c0 <memset@plt>
 8059fda:	83 c4 10             	add    $0x10,%esp
 8059fdd:	8b 45 08             	mov    0x8(%ebp),%eax
 8059fe0:	8b 40 10             	mov    0x10(%eax),%eax
 8059fe3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8059fe6:	8b 45 08             	mov    0x8(%ebp),%eax
 8059fe9:	8b 40 14             	mov    0x14(%eax),%eax
 8059fec:	85 c0                	test   %eax,%eax
 8059fee:	74 0e                	je     8059ffe <DenseArray_expand+0xd6>
 8059ff0:	8b 45 08             	mov    0x8(%ebp),%eax
 8059ff3:	8b 50 18             	mov    0x18(%eax),%edx
 8059ff6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8059ff9:	01 d0                	add    %edx,%eax
 8059ffb:	c6 00 00             	movb   $0x0,(%eax)
 8059ffe:	8b 45 08             	mov    0x8(%ebp),%eax
 805a001:	8b 40 10             	mov    0x10(%eax),%eax
 805a004:	8d 50 01             	lea    0x1(%eax),%edx
 805a007:	8b 45 08             	mov    0x8(%ebp),%eax
 805a00a:	89 50 10             	mov    %edx,0x10(%eax)
 805a00d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805a010:	c9                   	leave  
 805a011:	c3                   	ret    

0805a012 <DenseArray_zeros_to_end>:
 805a012:	55                   	push   %ebp
 805a013:	89 e5                	mov    %esp,%ebp
 805a015:	56                   	push   %esi
 805a016:	53                   	push   %ebx
 805a017:	83 ec 10             	sub    $0x10,%esp
 805a01a:	8b 45 08             	mov    0x8(%ebp),%eax
 805a01d:	8b 40 08             	mov    0x8(%eax),%eax
 805a020:	83 ec 0c             	sub    $0xc,%esp
 805a023:	50                   	push   %eax
 805a024:	e8 fe d8 ff ff       	call   8057927 <v_malloc>
 805a029:	83 c4 10             	add    $0x10,%esp
 805a02c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805a02f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805a036:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 805a03d:	e9 ad 00 00 00       	jmp    805a0ef <DenseArray_zeros_to_end+0xdd>
 805a042:	83 ec 08             	sub    $0x8,%esp
 805a045:	ff 75 f0             	pushl  -0x10(%ebp)
 805a048:	ff 75 08             	pushl  0x8(%ebp)
 805a04b:	e8 ab fe ff ff       	call   8059efb <DenseArray_has_index>
 805a050:	83 c4 10             	add    $0x10,%esp
 805a053:	85 c0                	test   %eax,%eax
 805a055:	0f 84 90 00 00 00    	je     805a0eb <DenseArray_zeros_to_end+0xd9>
 805a05b:	8b 45 08             	mov    0x8(%ebp),%eax
 805a05e:	8b 40 08             	mov    0x8(%eax),%eax
 805a061:	89 c3                	mov    %eax,%ebx
 805a063:	83 ec 08             	sub    $0x8,%esp
 805a066:	ff 75 ec             	pushl  -0x14(%ebp)
 805a069:	ff 75 08             	pushl  0x8(%ebp)
 805a06c:	e8 53 fe ff ff       	call   8059ec4 <DenseArray_key>
 805a071:	83 c4 10             	add    $0x10,%esp
 805a074:	83 ec 04             	sub    $0x4,%esp
 805a077:	53                   	push   %ebx
 805a078:	50                   	push   %eax
 805a079:	ff 75 f4             	pushl  -0xc(%ebp)
 805a07c:	e8 3f e7 fe ff       	call   80487c0 <memcpy@plt>
 805a081:	83 c4 10             	add    $0x10,%esp
 805a084:	8b 45 08             	mov    0x8(%ebp),%eax
 805a087:	8b 40 08             	mov    0x8(%eax),%eax
 805a08a:	89 c6                	mov    %eax,%esi
 805a08c:	83 ec 08             	sub    $0x8,%esp
 805a08f:	ff 75 f0             	pushl  -0x10(%ebp)
 805a092:	ff 75 08             	pushl  0x8(%ebp)
 805a095:	e8 2a fe ff ff       	call   8059ec4 <DenseArray_key>
 805a09a:	83 c4 10             	add    $0x10,%esp
 805a09d:	89 c3                	mov    %eax,%ebx
 805a09f:	83 ec 08             	sub    $0x8,%esp
 805a0a2:	ff 75 ec             	pushl  -0x14(%ebp)
 805a0a5:	ff 75 08             	pushl  0x8(%ebp)
 805a0a8:	e8 17 fe ff ff       	call   8059ec4 <DenseArray_key>
 805a0ad:	83 c4 10             	add    $0x10,%esp
 805a0b0:	83 ec 04             	sub    $0x4,%esp
 805a0b3:	56                   	push   %esi
 805a0b4:	53                   	push   %ebx
 805a0b5:	50                   	push   %eax
 805a0b6:	e8 05 e7 fe ff       	call   80487c0 <memcpy@plt>
 805a0bb:	83 c4 10             	add    $0x10,%esp
 805a0be:	8b 45 08             	mov    0x8(%ebp),%eax
 805a0c1:	8b 40 08             	mov    0x8(%eax),%eax
 805a0c4:	89 c3                	mov    %eax,%ebx
 805a0c6:	83 ec 08             	sub    $0x8,%esp
 805a0c9:	ff 75 f0             	pushl  -0x10(%ebp)
 805a0cc:	ff 75 08             	pushl  0x8(%ebp)
 805a0cf:	e8 f0 fd ff ff       	call   8059ec4 <DenseArray_key>
 805a0d4:	83 c4 10             	add    $0x10,%esp
 805a0d7:	83 ec 04             	sub    $0x4,%esp
 805a0da:	53                   	push   %ebx
 805a0db:	ff 75 f4             	pushl  -0xc(%ebp)
 805a0de:	50                   	push   %eax
 805a0df:	e8 dc e6 fe ff       	call   80487c0 <memcpy@plt>
 805a0e4:	83 c4 10             	add    $0x10,%esp
 805a0e7:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 805a0eb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 805a0ef:	8b 45 08             	mov    0x8(%ebp),%eax
 805a0f2:	8b 40 10             	mov    0x10(%eax),%eax
 805a0f5:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805a0f8:	0f 8f 44 ff ff ff    	jg     805a042 <DenseArray_zeros_to_end+0x30>
 805a0fe:	83 ec 0c             	sub    $0xc,%esp
 805a101:	ff 75 f4             	pushl  -0xc(%ebp)
 805a104:	e8 a6 d9 ff ff       	call   8057aaf <v_free>
 805a109:	83 c4 10             	add    $0x10,%esp
 805a10c:	8b 45 08             	mov    0x8(%ebp),%eax
 805a10f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
 805a116:	8b 45 08             	mov    0x8(%ebp),%eax
 805a119:	8b 40 18             	mov    0x18(%eax),%eax
 805a11c:	83 ec 0c             	sub    $0xc,%esp
 805a11f:	50                   	push   %eax
 805a120:	e8 8a d9 ff ff       	call   8057aaf <v_free>
 805a125:	83 c4 10             	add    $0x10,%esp
 805a128:	8b 45 08             	mov    0x8(%ebp),%eax
 805a12b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805a12e:	89 50 10             	mov    %edx,0x10(%eax)
 805a131:	b8 08 00 00 00       	mov    $0x8,%eax
 805a136:	83 7d ec 08          	cmpl   $0x8,-0x14(%ebp)
 805a13a:	0f 4d 45 ec          	cmovge -0x14(%ebp),%eax
 805a13e:	89 c2                	mov    %eax,%edx
 805a140:	8b 45 08             	mov    0x8(%ebp),%eax
 805a143:	89 50 0c             	mov    %edx,0xc(%eax)
 805a146:	8b 45 08             	mov    0x8(%ebp),%eax
 805a149:	8b 50 08             	mov    0x8(%eax),%edx
 805a14c:	8b 45 08             	mov    0x8(%ebp),%eax
 805a14f:	8b 40 0c             	mov    0xc(%eax),%eax
 805a152:	0f af d0             	imul   %eax,%edx
 805a155:	8b 45 08             	mov    0x8(%ebp),%eax
 805a158:	8b 40 1c             	mov    0x1c(%eax),%eax
 805a15b:	83 ec 08             	sub    $0x8,%esp
 805a15e:	52                   	push   %edx
 805a15f:	50                   	push   %eax
 805a160:	e8 61 d8 ff ff       	call   80579c6 <v_realloc>
 805a165:	83 c4 10             	add    $0x10,%esp
 805a168:	89 c2                	mov    %eax,%edx
 805a16a:	8b 45 08             	mov    0x8(%ebp),%eax
 805a16d:	89 50 1c             	mov    %edx,0x1c(%eax)
 805a170:	90                   	nop
 805a171:	8d 65 f8             	lea    -0x8(%ebp),%esp
 805a174:	5b                   	pop    %ebx
 805a175:	5e                   	pop    %esi
 805a176:	5d                   	pop    %ebp
 805a177:	c3                   	ret    

0805a178 <map_hash_string>:
 805a178:	55                   	push   %ebp
 805a179:	89 e5                	mov    %esp,%ebp
 805a17b:	83 ec 18             	sub    $0x18,%esp
 805a17e:	8b 45 08             	mov    0x8(%ebp),%eax
 805a181:	8b 10                	mov    (%eax),%edx
 805a183:	89 55 ec             	mov    %edx,-0x14(%ebp)
 805a186:	8b 50 04             	mov    0x4(%eax),%edx
 805a189:	89 55 f0             	mov    %edx,-0x10(%ebp)
 805a18c:	8b 40 08             	mov    0x8(%eax),%eax
 805a18f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805a192:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805a195:	99                   	cltd   
 805a196:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805a199:	83 ec 0c             	sub    $0xc,%esp
 805a19c:	6a 00                	push   $0x0
 805a19e:	6a 00                	push   $0x0
 805a1a0:	52                   	push   %edx
 805a1a1:	50                   	push   %eax
 805a1a2:	51                   	push   %ecx
 805a1a3:	e8 3d 06 ff ff       	call   804a7e5 <hash__wyhash_c>
 805a1a8:	83 c4 20             	add    $0x20,%esp
 805a1ab:	c9                   	leave  
 805a1ac:	c3                   	ret    

0805a1ad <map_hash_int_1>:
 805a1ad:	55                   	push   %ebp
 805a1ae:	89 e5                	mov    %esp,%ebp
 805a1b0:	8b 45 08             	mov    0x8(%ebp),%eax
 805a1b3:	0f b6 08             	movzbl (%eax),%ecx
 805a1b6:	0f b6 c1             	movzbl %cl,%eax
 805a1b9:	ba 00 00 00 00       	mov    $0x0,%edx
 805a1be:	6a 00                	push   $0x0
 805a1c0:	6a 00                	push   $0x0
 805a1c2:	52                   	push   %edx
 805a1c3:	50                   	push   %eax
 805a1c4:	e8 56 06 ff ff       	call   804a81f <hash__wyhash64_c>
 805a1c9:	83 c4 10             	add    $0x10,%esp
 805a1cc:	c9                   	leave  
 805a1cd:	c3                   	ret    

0805a1ce <map_hash_int_2>:
 805a1ce:	55                   	push   %ebp
 805a1cf:	89 e5                	mov    %esp,%ebp
 805a1d1:	8b 45 08             	mov    0x8(%ebp),%eax
 805a1d4:	0f b7 08             	movzwl (%eax),%ecx
 805a1d7:	0f b7 c1             	movzwl %cx,%eax
 805a1da:	ba 00 00 00 00       	mov    $0x0,%edx
 805a1df:	6a 00                	push   $0x0
 805a1e1:	6a 00                	push   $0x0
 805a1e3:	52                   	push   %edx
 805a1e4:	50                   	push   %eax
 805a1e5:	e8 35 06 ff ff       	call   804a81f <hash__wyhash64_c>
 805a1ea:	83 c4 10             	add    $0x10,%esp
 805a1ed:	c9                   	leave  
 805a1ee:	c3                   	ret    

0805a1ef <map_hash_int_4>:
 805a1ef:	55                   	push   %ebp
 805a1f0:	89 e5                	mov    %esp,%ebp
 805a1f2:	8b 45 08             	mov    0x8(%ebp),%eax
 805a1f5:	8b 00                	mov    (%eax),%eax
 805a1f7:	ba 00 00 00 00       	mov    $0x0,%edx
 805a1fc:	6a 00                	push   $0x0
 805a1fe:	6a 00                	push   $0x0
 805a200:	52                   	push   %edx
 805a201:	50                   	push   %eax
 805a202:	e8 18 06 ff ff       	call   804a81f <hash__wyhash64_c>
 805a207:	83 c4 10             	add    $0x10,%esp
 805a20a:	c9                   	leave  
 805a20b:	c3                   	ret    

0805a20c <map_hash_int_8>:
 805a20c:	55                   	push   %ebp
 805a20d:	89 e5                	mov    %esp,%ebp
 805a20f:	8b 45 08             	mov    0x8(%ebp),%eax
 805a212:	8b 50 04             	mov    0x4(%eax),%edx
 805a215:	8b 00                	mov    (%eax),%eax
 805a217:	6a 00                	push   $0x0
 805a219:	6a 00                	push   $0x0
 805a21b:	52                   	push   %edx
 805a21c:	50                   	push   %eax
 805a21d:	e8 fd 05 ff ff       	call   804a81f <hash__wyhash64_c>
 805a222:	83 c4 10             	add    $0x10,%esp
 805a225:	c9                   	leave  
 805a226:	c3                   	ret    

0805a227 <map_eq_string>:
 805a227:	55                   	push   %ebp
 805a228:	89 e5                	mov    %esp,%ebp
 805a22a:	83 ec 08             	sub    $0x8,%esp
 805a22d:	83 ec 08             	sub    $0x8,%esp
 805a230:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a233:	ff 70 08             	pushl  0x8(%eax)
 805a236:	ff 70 04             	pushl  0x4(%eax)
 805a239:	ff 30                	pushl  (%eax)
 805a23b:	8b 45 08             	mov    0x8(%ebp),%eax
 805a23e:	ff 70 08             	pushl  0x8(%eax)
 805a241:	ff 70 04             	pushl  0x4(%eax)
 805a244:	ff 30                	pushl  (%eax)
 805a246:	e8 c4 fb ff ff       	call   8059e0f <fast_string_eq>
 805a24b:	83 c4 20             	add    $0x20,%esp
 805a24e:	c9                   	leave  
 805a24f:	c3                   	ret    

0805a250 <map_eq_int_1>:
 805a250:	55                   	push   %ebp
 805a251:	89 e5                	mov    %esp,%ebp
 805a253:	8b 45 08             	mov    0x8(%ebp),%eax
 805a256:	0f b6 10             	movzbl (%eax),%edx
 805a259:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a25c:	0f b6 00             	movzbl (%eax),%eax
 805a25f:	38 c2                	cmp    %al,%dl
 805a261:	0f 94 c0             	sete   %al
 805a264:	0f b6 c0             	movzbl %al,%eax
 805a267:	5d                   	pop    %ebp
 805a268:	c3                   	ret    

0805a269 <map_eq_int_2>:
 805a269:	55                   	push   %ebp
 805a26a:	89 e5                	mov    %esp,%ebp
 805a26c:	8b 45 08             	mov    0x8(%ebp),%eax
 805a26f:	0f b7 10             	movzwl (%eax),%edx
 805a272:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a275:	0f b7 00             	movzwl (%eax),%eax
 805a278:	66 39 c2             	cmp    %ax,%dx
 805a27b:	0f 94 c0             	sete   %al
 805a27e:	0f b6 c0             	movzbl %al,%eax
 805a281:	5d                   	pop    %ebp
 805a282:	c3                   	ret    

0805a283 <map_eq_int_4>:
 805a283:	55                   	push   %ebp
 805a284:	89 e5                	mov    %esp,%ebp
 805a286:	8b 45 08             	mov    0x8(%ebp),%eax
 805a289:	8b 10                	mov    (%eax),%edx
 805a28b:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a28e:	8b 00                	mov    (%eax),%eax
 805a290:	39 c2                	cmp    %eax,%edx
 805a292:	0f 94 c0             	sete   %al
 805a295:	0f b6 c0             	movzbl %al,%eax
 805a298:	5d                   	pop    %ebp
 805a299:	c3                   	ret    

0805a29a <map_eq_int_8>:
 805a29a:	55                   	push   %ebp
 805a29b:	89 e5                	mov    %esp,%ebp
 805a29d:	57                   	push   %edi
 805a29e:	56                   	push   %esi
 805a29f:	53                   	push   %ebx
 805a2a0:	83 ec 0c             	sub    $0xc,%esp
 805a2a3:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805a2a6:	8b 31                	mov    (%ecx),%esi
 805a2a8:	8b 79 04             	mov    0x4(%ecx),%edi
 805a2ab:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805a2ae:	8b 59 04             	mov    0x4(%ecx),%ebx
 805a2b1:	8b 09                	mov    (%ecx),%ecx
 805a2b3:	89 f0                	mov    %esi,%eax
 805a2b5:	31 c8                	xor    %ecx,%eax
 805a2b7:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805a2ba:	89 f8                	mov    %edi,%eax
 805a2bc:	31 d8                	xor    %ebx,%eax
 805a2be:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805a2c1:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805a2c4:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805a2c7:	89 d0                	mov    %edx,%eax
 805a2c9:	09 c8                	or     %ecx,%eax
 805a2cb:	85 c0                	test   %eax,%eax
 805a2cd:	0f 94 c0             	sete   %al
 805a2d0:	0f b6 c0             	movzbl %al,%eax
 805a2d3:	83 c4 0c             	add    $0xc,%esp
 805a2d6:	5b                   	pop    %ebx
 805a2d7:	5e                   	pop    %esi
 805a2d8:	5f                   	pop    %edi
 805a2d9:	5d                   	pop    %ebp
 805a2da:	c3                   	ret    

0805a2db <map_clone_string>:
 805a2db:	55                   	push   %ebp
 805a2dc:	89 e5                	mov    %esp,%ebp
 805a2de:	53                   	push   %ebx
 805a2df:	83 ec 34             	sub    $0x34,%esp
 805a2e2:	8b 45 08             	mov    0x8(%ebp),%eax
 805a2e5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805a2e8:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a2eb:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805a2ee:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805a2f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805a2f7:	31 c0                	xor    %eax,%eax
 805a2f9:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805a2fc:	8b 10                	mov    (%eax),%edx
 805a2fe:	89 55 e8             	mov    %edx,-0x18(%ebp)
 805a301:	8b 50 04             	mov    0x4(%eax),%edx
 805a304:	89 55 ec             	mov    %edx,-0x14(%ebp)
 805a307:	8b 40 08             	mov    0x8(%eax),%eax
 805a30a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805a30d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
 805a310:	8d 45 c8             	lea    -0x38(%ebp),%eax
 805a313:	ff 75 f0             	pushl  -0x10(%ebp)
 805a316:	ff 75 ec             	pushl  -0x14(%ebp)
 805a319:	ff 75 e8             	pushl  -0x18(%ebp)
 805a31c:	50                   	push   %eax
 805a31d:	e8 dc 33 00 00       	call   805d6fe <string_clone>
 805a322:	83 c4 0c             	add    $0xc,%esp
 805a325:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805a328:	89 03                	mov    %eax,(%ebx)
 805a32a:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805a32d:	89 43 04             	mov    %eax,0x4(%ebx)
 805a330:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805a333:	89 43 08             	mov    %eax,0x8(%ebx)
 805a336:	90                   	nop
 805a337:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805a33a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805a341:	74 05                	je     805a348 <map_clone_string+0x6d>
 805a343:	e8 d8 e4 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805a348:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805a34b:	c9                   	leave  
 805a34c:	c3                   	ret    

0805a34d <map_clone_int_1>:
 805a34d:	55                   	push   %ebp
 805a34e:	89 e5                	mov    %esp,%ebp
 805a350:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a353:	0f b6 10             	movzbl (%eax),%edx
 805a356:	8b 45 08             	mov    0x8(%ebp),%eax
 805a359:	88 10                	mov    %dl,(%eax)
 805a35b:	90                   	nop
 805a35c:	5d                   	pop    %ebp
 805a35d:	c3                   	ret    

0805a35e <map_clone_int_2>:
 805a35e:	55                   	push   %ebp
 805a35f:	89 e5                	mov    %esp,%ebp
 805a361:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a364:	0f b7 10             	movzwl (%eax),%edx
 805a367:	8b 45 08             	mov    0x8(%ebp),%eax
 805a36a:	66 89 10             	mov    %dx,(%eax)
 805a36d:	90                   	nop
 805a36e:	5d                   	pop    %ebp
 805a36f:	c3                   	ret    

0805a370 <map_clone_int_4>:
 805a370:	55                   	push   %ebp
 805a371:	89 e5                	mov    %esp,%ebp
 805a373:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a376:	8b 10                	mov    (%eax),%edx
 805a378:	8b 45 08             	mov    0x8(%ebp),%eax
 805a37b:	89 10                	mov    %edx,(%eax)
 805a37d:	90                   	nop
 805a37e:	5d                   	pop    %ebp
 805a37f:	c3                   	ret    

0805a380 <map_clone_int_8>:
 805a380:	55                   	push   %ebp
 805a381:	89 e5                	mov    %esp,%ebp
 805a383:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a386:	8b 50 04             	mov    0x4(%eax),%edx
 805a389:	8b 00                	mov    (%eax),%eax
 805a38b:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805a38e:	89 01                	mov    %eax,(%ecx)
 805a390:	89 51 04             	mov    %edx,0x4(%ecx)
 805a393:	90                   	nop
 805a394:	5d                   	pop    %ebp
 805a395:	c3                   	ret    

0805a396 <map_free_string>:
 805a396:	55                   	push   %ebp
 805a397:	89 e5                	mov    %esp,%ebp
 805a399:	83 ec 08             	sub    $0x8,%esp
 805a39c:	83 ec 0c             	sub    $0xc,%esp
 805a39f:	ff 75 08             	pushl  0x8(%ebp)
 805a3a2:	e8 b1 67 00 00       	call   8060b58 <string_free>
 805a3a7:	83 c4 10             	add    $0x10,%esp
 805a3aa:	90                   	nop
 805a3ab:	c9                   	leave  
 805a3ac:	c3                   	ret    

0805a3ad <map_free_nop>:
 805a3ad:	55                   	push   %ebp
 805a3ae:	89 e5                	mov    %esp,%ebp
 805a3b0:	90                   	nop
 805a3b1:	5d                   	pop    %ebp
 805a3b2:	c3                   	ret    

0805a3b3 <new_map_2>:
 805a3b3:	55                   	push   %ebp
 805a3b4:	89 e5                	mov    %esp,%ebp
 805a3b6:	53                   	push   %ebx
 805a3b7:	83 ec 54             	sub    $0x54,%esp
 805a3ba:	8b 45 08             	mov    0x8(%ebp),%eax
 805a3bd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805a3c0:	8b 45 14             	mov    0x14(%ebp),%eax
 805a3c3:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805a3c6:	8b 45 18             	mov    0x18(%ebp),%eax
 805a3c9:	89 45 bc             	mov    %eax,-0x44(%ebp)
 805a3cc:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805a3cf:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805a3d2:	8b 45 20             	mov    0x20(%ebp),%eax
 805a3d5:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805a3d8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805a3de:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805a3e1:	31 c0                	xor    %eax,%eax
 805a3e3:	a1 78 32 07 08       	mov    0x8073278,%eax
 805a3e8:	83 c0 04             	add    $0x4,%eax
 805a3eb:	c1 e0 02             	shl    $0x2,%eax
 805a3ee:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805a3f1:	ff 75 0c             	pushl  0xc(%ebp)
 805a3f4:	6a 04                	push   $0x4
 805a3f6:	e8 72 e6 fe ff       	call   8048a6d <_us32_lt>
 805a3fb:	83 c4 08             	add    $0x8,%esp
 805a3fe:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805a401:	a1 90 31 07 08       	mov    0x8073190,%eax
 805a406:	89 c3                	mov    %eax,%ebx
 805a408:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 805a40b:	83 ec 04             	sub    $0x4,%esp
 805a40e:	ff 75 10             	pushl  0x10(%ebp)
 805a411:	ff 75 0c             	pushl  0xc(%ebp)
 805a414:	50                   	push   %eax
 805a415:	e8 2f fa ff ff       	call   8059e49 <new_dense_array>
 805a41a:	83 c4 0c             	add    $0xc,%esp
 805a41d:	83 ec 0c             	sub    $0xc,%esp
 805a420:	ff 75 cc             	pushl  -0x34(%ebp)
 805a423:	e8 30 d6 ff ff       	call   8057a58 <vcalloc>
 805a428:	83 c4 10             	add    $0x10,%esp
 805a42b:	89 c1                	mov    %eax,%ecx
 805a42d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a430:	8b 55 0c             	mov    0xc(%ebp),%edx
 805a433:	89 10                	mov    %edx,(%eax)
 805a435:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a438:	8b 55 10             	mov    0x10(%ebp),%edx
 805a43b:	89 50 04             	mov    %edx,0x4(%eax)
 805a43e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a441:	89 58 08             	mov    %ebx,0x8(%eax)
 805a444:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a447:	c6 40 0c 10          	movb   $0x10,0xc(%eax)
 805a44b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a44e:	c6 40 0d 05          	movb   $0x5,0xd(%eax)
 805a452:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a455:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805a458:	89 50 10             	mov    %edx,0x10(%eax)
 805a45b:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805a45e:	89 50 14             	mov    %edx,0x14(%eax)
 805a461:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805a464:	89 50 18             	mov    %edx,0x18(%eax)
 805a467:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805a46a:	89 50 1c             	mov    %edx,0x1c(%eax)
 805a46d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a470:	89 50 20             	mov    %edx,0x20(%eax)
 805a473:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805a476:	89 50 24             	mov    %edx,0x24(%eax)
 805a479:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805a47c:	89 50 28             	mov    %edx,0x28(%eax)
 805a47f:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805a482:	89 50 2c             	mov    %edx,0x2c(%eax)
 805a485:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a488:	89 48 30             	mov    %ecx,0x30(%eax)
 805a48b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a48e:	c7 40 34 04 00 00 00 	movl   $0x4,0x34(%eax)
 805a495:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a498:	8b 55 d0             	mov    -0x30(%ebp),%edx
 805a49b:	89 50 38             	mov    %edx,0x38(%eax)
 805a49e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a4a1:	8b 55 c0             	mov    -0x40(%ebp),%edx
 805a4a4:	89 50 3c             	mov    %edx,0x3c(%eax)
 805a4a7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a4aa:	8b 55 bc             	mov    -0x44(%ebp),%edx
 805a4ad:	89 50 40             	mov    %edx,0x40(%eax)
 805a4b0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a4b3:	8b 55 b8             	mov    -0x48(%ebp),%edx
 805a4b6:	89 50 44             	mov    %edx,0x44(%eax)
 805a4b9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a4bc:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 805a4bf:	89 50 48             	mov    %edx,0x48(%eax)
 805a4c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a4c5:	c7 40 4c 00 00 00 00 	movl   $0x0,0x4c(%eax)
 805a4cc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805a4cf:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805a4d2:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805a4d9:	74 05                	je     805a4e0 <new_map_2+0x12d>
 805a4db:	e8 40 e3 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805a4e0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805a4e3:	c9                   	leave  
 805a4e4:	c2 04 00             	ret    $0x4

0805a4e7 <new_map_init_2>:
 805a4e7:	55                   	push   %ebp
 805a4e8:	89 e5                	mov    %esp,%ebp
 805a4ea:	57                   	push   %edi
 805a4eb:	56                   	push   %esi
 805a4ec:	53                   	push   %ebx
 805a4ed:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
 805a4f3:	8b 45 08             	mov    0x8(%ebp),%eax
 805a4f6:	89 45 84             	mov    %eax,-0x7c(%ebp)
 805a4f9:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a4fc:	89 45 80             	mov    %eax,-0x80(%ebp)
 805a4ff:	8b 45 10             	mov    0x10(%ebp),%eax
 805a502:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 805a508:	8b 45 14             	mov    0x14(%ebp),%eax
 805a50b:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 805a511:	8b 45 18             	mov    0x18(%ebp),%eax
 805a514:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 805a51a:	8b 45 28             	mov    0x28(%ebp),%eax
 805a51d:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 805a523:	8b 45 2c             	mov    0x2c(%ebp),%eax
 805a526:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 805a52c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805a532:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805a535:	31 c0                	xor    %eax,%eax
 805a537:	8d 45 94             	lea    -0x6c(%ebp),%eax
 805a53a:	83 ec 04             	sub    $0x4,%esp
 805a53d:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 805a543:	ff b5 78 ff ff ff    	pushl  -0x88(%ebp)
 805a549:	ff b5 7c ff ff ff    	pushl  -0x84(%ebp)
 805a54f:	ff 75 80             	pushl  -0x80(%ebp)
 805a552:	ff 75 24             	pushl  0x24(%ebp)
 805a555:	ff 75 20             	pushl  0x20(%ebp)
 805a558:	50                   	push   %eax
 805a559:	e8 55 fe ff ff       	call   805a3b3 <new_map_2>
 805a55e:	83 c4 1c             	add    $0x1c,%esp
 805a561:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 805a567:	89 45 88             	mov    %eax,-0x78(%ebp)
 805a56a:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 805a570:	89 45 8c             	mov    %eax,-0x74(%ebp)
 805a573:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
 805a57a:	eb 25                	jmp    805a5a1 <new_map_init_2+0xba>
 805a57c:	83 ec 04             	sub    $0x4,%esp
 805a57f:	ff 75 8c             	pushl  -0x74(%ebp)
 805a582:	ff 75 88             	pushl  -0x78(%ebp)
 805a585:	8d 45 94             	lea    -0x6c(%ebp),%eax
 805a588:	50                   	push   %eax
 805a589:	e8 02 03 00 00       	call   805a890 <map_set_1>
 805a58e:	83 c4 10             	add    $0x10,%esp
 805a591:	8b 45 20             	mov    0x20(%ebp),%eax
 805a594:	01 45 88             	add    %eax,-0x78(%ebp)
 805a597:	8b 45 24             	mov    0x24(%ebp),%eax
 805a59a:	01 45 8c             	add    %eax,-0x74(%ebp)
 805a59d:	83 45 90 01          	addl   $0x1,-0x70(%ebp)
 805a5a1:	8b 45 90             	mov    -0x70(%ebp),%eax
 805a5a4:	3b 45 1c             	cmp    0x1c(%ebp),%eax
 805a5a7:	7c d3                	jl     805a57c <new_map_init_2+0x95>
 805a5a9:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805a5ac:	89 c3                	mov    %eax,%ebx
 805a5ae:	8d 45 94             	lea    -0x6c(%ebp),%eax
 805a5b1:	ba 14 00 00 00       	mov    $0x14,%edx
 805a5b6:	89 df                	mov    %ebx,%edi
 805a5b8:	89 c6                	mov    %eax,%esi
 805a5ba:	89 d1                	mov    %edx,%ecx
 805a5bc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 805a5be:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805a5c1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a5c4:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805a5cb:	74 05                	je     805a5d2 <new_map_init_2+0xeb>
 805a5cd:	e8 4e e2 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805a5d2:	8d 65 f4             	lea    -0xc(%ebp),%esp
 805a5d5:	5b                   	pop    %ebx
 805a5d6:	5e                   	pop    %esi
 805a5d7:	5f                   	pop    %edi
 805a5d8:	5d                   	pop    %ebp
 805a5d9:	c2 04 00             	ret    $0x4

0805a5dc <map_key_to_index>:
 805a5dc:	55                   	push   %ebp
 805a5dd:	89 e5                	mov    %esp,%ebp
 805a5df:	56                   	push   %esi
 805a5e0:	53                   	push   %ebx
 805a5e1:	83 ec 30             	sub    $0x30,%esp
 805a5e4:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a5e7:	8b 40 3c             	mov    0x3c(%eax),%eax
 805a5ea:	83 ec 0c             	sub    $0xc,%esp
 805a5ed:	ff 75 10             	pushl  0x10(%ebp)
 805a5f0:	ff d0                	call   *%eax
 805a5f2:	83 c4 10             	add    $0x10,%esp
 805a5f5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805a5f8:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 805a5fb:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a5fe:	8b 40 08             	mov    0x8(%eax),%eax
 805a601:	ba 00 00 00 00       	mov    $0x0,%edx
 805a606:	89 c1                	mov    %eax,%ecx
 805a608:	23 4d e0             	and    -0x20(%ebp),%ecx
 805a60b:	89 4d e8             	mov    %ecx,-0x18(%ebp)
 805a60e:	89 d0                	mov    %edx,%eax
 805a610:	23 45 e4             	and    -0x1c(%ebp),%eax
 805a613:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805a616:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a619:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
 805a61d:	0f b6 c8             	movzbl %al,%ecx
 805a620:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805a623:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a626:	0f ad d0             	shrd   %cl,%edx,%eax
 805a629:	d3 ea                	shr    %cl,%edx
 805a62b:	f6 c1 20             	test   $0x20,%cl
 805a62e:	74 04                	je     805a634 <map_key_to_index+0x58>
 805a630:	89 d0                	mov    %edx,%eax
 805a632:	31 d2                	xor    %edx,%edx
 805a634:	8b 0d 50 31 07 08    	mov    0x8073150,%ecx
 805a63a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 805a63d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 805a644:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 805a647:	21 c1                	and    %eax,%ecx
 805a649:	89 cb                	mov    %ecx,%ebx
 805a64b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 805a64e:	21 d1                	and    %edx,%ecx
 805a650:	89 ce                	mov    %ecx,%esi
 805a652:	a1 48 32 07 08       	mov    0x8073248,%eax
 805a657:	ba 00 00 00 00       	mov    $0x0,%edx
 805a65c:	89 d9                	mov    %ebx,%ecx
 805a65e:	09 c1                	or     %eax,%ecx
 805a660:	89 4d f0             	mov    %ecx,-0x10(%ebp)
 805a663:	09 d6                	or     %edx,%esi
 805a665:	89 f0                	mov    %esi,%eax
 805a667:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805a66a:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 805a66d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805a670:	8b 45 08             	mov    0x8(%ebp),%eax
 805a673:	89 08                	mov    %ecx,(%eax)
 805a675:	8b 45 08             	mov    0x8(%ebp),%eax
 805a678:	89 50 04             	mov    %edx,0x4(%eax)
 805a67b:	8b 45 08             	mov    0x8(%ebp),%eax
 805a67e:	8d 65 f8             	lea    -0x8(%ebp),%esp
 805a681:	5b                   	pop    %ebx
 805a682:	5e                   	pop    %esi
 805a683:	5d                   	pop    %ebp
 805a684:	c2 04 00             	ret    $0x4

0805a687 <map_meta_less>:
 805a687:	55                   	push   %ebp
 805a688:	89 e5                	mov    %esp,%ebp
 805a68a:	83 ec 10             	sub    $0x10,%esp
 805a68d:	8b 45 10             	mov    0x10(%ebp),%eax
 805a690:	89 45 f8             	mov    %eax,-0x8(%ebp)
 805a693:	8b 45 14             	mov    0x14(%ebp),%eax
 805a696:	89 45 fc             	mov    %eax,-0x4(%ebp)
 805a699:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a69c:	8b 40 30             	mov    0x30(%eax),%eax
 805a69f:	8b 55 f8             	mov    -0x8(%ebp),%edx
 805a6a2:	c1 e2 02             	shl    $0x2,%edx
 805a6a5:	01 d0                	add    %edx,%eax
 805a6a7:	8b 00                	mov    (%eax),%eax
 805a6a9:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 805a6ac:	76 0e                	jbe    805a6bc <map_meta_less+0x35>
 805a6ae:	83 45 f8 02          	addl   $0x2,-0x8(%ebp)
 805a6b2:	a1 48 32 07 08       	mov    0x8073248,%eax
 805a6b7:	01 45 fc             	add    %eax,-0x4(%ebp)
 805a6ba:	eb dd                	jmp    805a699 <map_meta_less+0x12>
 805a6bc:	90                   	nop
 805a6bd:	8b 45 08             	mov    0x8(%ebp),%eax
 805a6c0:	8b 55 f8             	mov    -0x8(%ebp),%edx
 805a6c3:	89 10                	mov    %edx,(%eax)
 805a6c5:	8b 45 08             	mov    0x8(%ebp),%eax
 805a6c8:	8b 55 fc             	mov    -0x4(%ebp),%edx
 805a6cb:	89 50 04             	mov    %edx,0x4(%eax)
 805a6ce:	8b 45 08             	mov    0x8(%ebp),%eax
 805a6d1:	c9                   	leave  
 805a6d2:	c2 04 00             	ret    $0x4

0805a6d5 <map_meta_greater>:
 805a6d5:	55                   	push   %ebp
 805a6d6:	89 e5                	mov    %esp,%ebp
 805a6d8:	83 ec 28             	sub    $0x28,%esp
 805a6db:	8b 45 10             	mov    0x10(%ebp),%eax
 805a6de:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805a6e1:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a6e4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805a6e7:	8b 45 14             	mov    0x14(%ebp),%eax
 805a6ea:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805a6ed:	8b 45 08             	mov    0x8(%ebp),%eax
 805a6f0:	8b 40 30             	mov    0x30(%eax),%eax
 805a6f3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a6f6:	c1 e2 02             	shl    $0x2,%edx
 805a6f9:	01 d0                	add    %edx,%eax
 805a6fb:	8b 00                	mov    (%eax),%eax
 805a6fd:	85 c0                	test   %eax,%eax
 805a6ff:	0f 84 84 00 00 00    	je     805a789 <map_meta_greater+0xb4>
 805a705:	8b 45 08             	mov    0x8(%ebp),%eax
 805a708:	8b 40 30             	mov    0x30(%eax),%eax
 805a70b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a70e:	c1 e2 02             	shl    $0x2,%edx
 805a711:	01 d0                	add    %edx,%eax
 805a713:	8b 00                	mov    (%eax),%eax
 805a715:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805a718:	73 5e                	jae    805a778 <map_meta_greater+0xa3>
 805a71a:	8b 45 08             	mov    0x8(%ebp),%eax
 805a71d:	8b 40 30             	mov    0x30(%eax),%eax
 805a720:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a723:	c1 e2 02             	shl    $0x2,%edx
 805a726:	01 d0                	add    %edx,%eax
 805a728:	8b 00                	mov    (%eax),%eax
 805a72a:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805a72d:	8b 45 08             	mov    0x8(%ebp),%eax
 805a730:	8b 40 30             	mov    0x30(%eax),%eax
 805a733:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a736:	c1 e2 02             	shl    $0x2,%edx
 805a739:	01 c2                	add    %eax,%edx
 805a73b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805a73e:	89 02                	mov    %eax,(%edx)
 805a740:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805a743:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805a746:	8b 45 08             	mov    0x8(%ebp),%eax
 805a749:	8b 40 30             	mov    0x30(%eax),%eax
 805a74c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a74f:	83 c2 01             	add    $0x1,%edx
 805a752:	c1 e2 02             	shl    $0x2,%edx
 805a755:	01 d0                	add    %edx,%eax
 805a757:	8b 00                	mov    (%eax),%eax
 805a759:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805a75c:	8b 45 08             	mov    0x8(%ebp),%eax
 805a75f:	8b 40 30             	mov    0x30(%eax),%eax
 805a762:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a765:	83 c2 01             	add    $0x1,%edx
 805a768:	c1 e2 02             	shl    $0x2,%edx
 805a76b:	01 c2                	add    %eax,%edx
 805a76d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805a770:	89 02                	mov    %eax,(%edx)
 805a772:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805a775:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805a778:	83 45 e4 02          	addl   $0x2,-0x1c(%ebp)
 805a77c:	a1 48 32 07 08       	mov    0x8073248,%eax
 805a781:	01 45 e0             	add    %eax,-0x20(%ebp)
 805a784:	e9 64 ff ff ff       	jmp    805a6ed <map_meta_greater+0x18>
 805a789:	90                   	nop
 805a78a:	8b 45 08             	mov    0x8(%ebp),%eax
 805a78d:	8b 40 30             	mov    0x30(%eax),%eax
 805a790:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a793:	c1 e2 02             	shl    $0x2,%edx
 805a796:	01 c2                	add    %eax,%edx
 805a798:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805a79b:	89 02                	mov    %eax,(%edx)
 805a79d:	8b 45 08             	mov    0x8(%ebp),%eax
 805a7a0:	8b 40 30             	mov    0x30(%eax),%eax
 805a7a3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a7a6:	83 c2 01             	add    $0x1,%edx
 805a7a9:	c1 e2 02             	shl    $0x2,%edx
 805a7ac:	01 c2                	add    %eax,%edx
 805a7ae:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805a7b1:	89 02                	mov    %eax,(%edx)
 805a7b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805a7b6:	c1 e8 18             	shr    $0x18,%eax
 805a7b9:	83 e8 01             	sub    $0x1,%eax
 805a7bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805a7bf:	83 ec 08             	sub    $0x8,%esp
 805a7c2:	ff 75 f4             	pushl  -0xc(%ebp)
 805a7c5:	ff 75 08             	pushl  0x8(%ebp)
 805a7c8:	e8 06 00 00 00       	call   805a7d3 <map_ensure_extra_metas>
 805a7cd:	83 c4 10             	add    $0x10,%esp
 805a7d0:	90                   	nop
 805a7d1:	c9                   	leave  
 805a7d2:	c3                   	ret    

0805a7d3 <map_ensure_extra_metas>:
 805a7d3:	55                   	push   %ebp
 805a7d4:	89 e5                	mov    %esp,%ebp
 805a7d6:	83 ec 28             	sub    $0x28,%esp
 805a7d9:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a7dc:	8d 14 00             	lea    (%eax,%eax,1),%edx
 805a7df:	8b 45 08             	mov    0x8(%ebp),%eax
 805a7e2:	8b 40 34             	mov    0x34(%eax),%eax
 805a7e5:	39 c2                	cmp    %eax,%edx
 805a7e7:	0f 85 a0 00 00 00    	jne    805a88d <map_ensure_extra_metas+0xba>
 805a7ed:	8b 45 08             	mov    0x8(%ebp),%eax
 805a7f0:	8b 40 34             	mov    0x34(%eax),%eax
 805a7f3:	8d 50 04             	lea    0x4(%eax),%edx
 805a7f6:	8b 45 08             	mov    0x8(%ebp),%eax
 805a7f9:	89 50 34             	mov    %edx,0x34(%eax)
 805a7fc:	8b 45 08             	mov    0x8(%ebp),%eax
 805a7ff:	8b 50 08             	mov    0x8(%eax),%edx
 805a802:	8b 45 08             	mov    0x8(%ebp),%eax
 805a805:	8b 40 34             	mov    0x34(%eax),%eax
 805a808:	01 d0                	add    %edx,%eax
 805a80a:	83 c0 02             	add    $0x2,%eax
 805a80d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805a810:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805a813:	c1 e0 02             	shl    $0x2,%eax
 805a816:	89 c2                	mov    %eax,%edx
 805a818:	8b 45 08             	mov    0x8(%ebp),%eax
 805a81b:	8b 40 30             	mov    0x30(%eax),%eax
 805a81e:	83 ec 08             	sub    $0x8,%esp
 805a821:	52                   	push   %edx
 805a822:	50                   	push   %eax
 805a823:	e8 9e d1 ff ff       	call   80579c6 <v_realloc>
 805a828:	83 c4 10             	add    $0x10,%esp
 805a82b:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805a82e:	8b 45 08             	mov    0x8(%ebp),%eax
 805a831:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805a834:	89 50 30             	mov    %edx,0x30(%eax)
 805a837:	8b 45 08             	mov    0x8(%ebp),%eax
 805a83a:	8b 40 30             	mov    0x30(%eax),%eax
 805a83d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805a840:	81 c2 fc ff ff 3f    	add    $0x3ffffffc,%edx
 805a846:	c1 e2 02             	shl    $0x2,%edx
 805a849:	01 d0                	add    %edx,%eax
 805a84b:	83 ec 04             	sub    $0x4,%esp
 805a84e:	6a 10                	push   $0x10
 805a850:	6a 00                	push   $0x0
 805a852:	50                   	push   %eax
 805a853:	e8 68 e0 fe ff       	call   80488c0 <memset@plt>
 805a858:	83 c4 10             	add    $0x10,%esp
 805a85b:	81 7d 0c fc 00 00 00 	cmpl   $0xfc,0xc(%ebp)
 805a862:	75 29                	jne    805a88d <map_ensure_extra_metas+0xba>
 805a864:	c7 45 ec c1 9d 06 08 	movl   $0x8069dc1,-0x14(%ebp)
 805a86b:	c7 45 f0 0e 00 00 00 	movl   $0xe,-0x10(%ebp)
 805a872:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805a879:	83 ec 04             	sub    $0x4,%esp
 805a87c:	ff 75 f4             	pushl  -0xc(%ebp)
 805a87f:	ff 75 f0             	pushl  -0x10(%ebp)
 805a882:	ff 75 ec             	pushl  -0x14(%ebp)
 805a885:	e8 0d cf ff ff       	call   8057797 <v_panic>
 805a88a:	83 c4 10             	add    $0x10,%esp
 805a88d:	90                   	nop
 805a88e:	c9                   	leave  
 805a88f:	c3                   	ret    

0805a890 <map_set_1>:
 805a890:	55                   	push   %ebp
 805a891:	89 e5                	mov    %esp,%ebp
 805a893:	83 ec 68             	sub    $0x68,%esp
 805a896:	8b 45 08             	mov    0x8(%ebp),%eax
 805a899:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805a89c:	8b 45 0c             	mov    0xc(%ebp),%eax
 805a89f:	89 45 b0             	mov    %eax,-0x50(%ebp)
 805a8a2:	8b 45 10             	mov    0x10(%ebp),%eax
 805a8a5:	89 45 ac             	mov    %eax,-0x54(%ebp)
 805a8a8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805a8ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805a8b1:	31 c0                	xor    %eax,%eax
 805a8b3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a8b6:	8b 40 4c             	mov    0x4c(%eax),%eax
 805a8b9:	01 c0                	add    %eax,%eax
 805a8bb:	89 45 a0             	mov    %eax,-0x60(%ebp)
 805a8be:	db 45 a0             	fildl  -0x60(%ebp)
 805a8c1:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a8c4:	8b 40 08             	mov    0x8(%eax),%eax
 805a8c7:	89 45 a0             	mov    %eax,-0x60(%ebp)
 805a8ca:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)
 805a8d1:	df 6d a0             	fildll -0x60(%ebp)
 805a8d4:	d9 5d a8             	fstps  -0x58(%ebp)
 805a8d7:	d9 45 a8             	flds   -0x58(%ebp)
 805a8da:	de f9                	fdivrp %st,%st(1)
 805a8dc:	d9 5d cc             	fstps  -0x34(%ebp)
 805a8df:	d9 45 cc             	flds   -0x34(%ebp)
 805a8e2:	dd 05 18 bd 06 08    	fldl   0x806bd18
 805a8e8:	d9 c9                	fxch   %st(1)
 805a8ea:	df e9                	fucomip %st(1),%st
 805a8ec:	dd d8                	fstp   %st(0)
 805a8ee:	76 0e                	jbe    805a8fe <map_set_1+0x6e>
 805a8f0:	83 ec 0c             	sub    $0xc,%esp
 805a8f3:	ff 75 b4             	pushl  -0x4c(%ebp)
 805a8f6:	e8 7e 01 00 00       	call   805aa79 <map_expand>
 805a8fb:	83 c4 10             	add    $0x10,%esp
 805a8fe:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805a901:	83 ec 04             	sub    $0x4,%esp
 805a904:	ff 75 b0             	pushl  -0x50(%ebp)
 805a907:	ff 75 b4             	pushl  -0x4c(%ebp)
 805a90a:	50                   	push   %eax
 805a90b:	e8 cc fc ff ff       	call   805a5dc <map_key_to_index>
 805a910:	83 c4 0c             	add    $0xc,%esp
 805a913:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805a916:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805a919:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805a91c:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805a91f:	8d 45 ec             	lea    -0x14(%ebp),%eax
 805a922:	ff 75 c8             	pushl  -0x38(%ebp)
 805a925:	ff 75 c4             	pushl  -0x3c(%ebp)
 805a928:	ff 75 b4             	pushl  -0x4c(%ebp)
 805a92b:	50                   	push   %eax
 805a92c:	e8 56 fd ff ff       	call   805a687 <map_meta_less>
 805a931:	83 c4 0c             	add    $0xc,%esp
 805a934:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805a937:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805a93a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805a93d:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805a940:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a943:	8b 40 30             	mov    0x30(%eax),%eax
 805a946:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 805a949:	c1 e2 02             	shl    $0x2,%edx
 805a94c:	01 d0                	add    %edx,%eax
 805a94e:	8b 00                	mov    (%eax),%eax
 805a950:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 805a953:	0f 85 83 00 00 00    	jne    805a9dc <map_set_1+0x14c>
 805a959:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a95c:	8b 40 30             	mov    0x30(%eax),%eax
 805a95f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 805a962:	83 c2 01             	add    $0x1,%edx
 805a965:	c1 e2 02             	shl    $0x2,%edx
 805a968:	01 d0                	add    %edx,%eax
 805a96a:	8b 00                	mov    (%eax),%eax
 805a96c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805a96f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a972:	83 c0 10             	add    $0x10,%eax
 805a975:	83 ec 08             	sub    $0x8,%esp
 805a978:	ff 75 d0             	pushl  -0x30(%ebp)
 805a97b:	50                   	push   %eax
 805a97c:	e8 43 f5 ff ff       	call   8059ec4 <DenseArray_key>
 805a981:	83 c4 10             	add    $0x10,%esp
 805a984:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805a987:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a98a:	8b 40 40             	mov    0x40(%eax),%eax
 805a98d:	83 ec 08             	sub    $0x8,%esp
 805a990:	ff 75 d4             	pushl  -0x2c(%ebp)
 805a993:	ff 75 b0             	pushl  -0x50(%ebp)
 805a996:	ff d0                	call   *%eax
 805a998:	83 c4 10             	add    $0x10,%esp
 805a99b:	85 c0                	test   %eax,%eax
 805a99d:	74 2c                	je     805a9cb <map_set_1+0x13b>
 805a99f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a9a2:	8b 00                	mov    (%eax),%eax
 805a9a4:	89 c2                	mov    %eax,%edx
 805a9a6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805a9a9:	01 d0                	add    %edx,%eax
 805a9ab:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805a9ae:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a9b1:	8b 40 04             	mov    0x4(%eax),%eax
 805a9b4:	83 ec 04             	sub    $0x4,%esp
 805a9b7:	50                   	push   %eax
 805a9b8:	ff 75 ac             	pushl  -0x54(%ebp)
 805a9bb:	ff 75 d8             	pushl  -0x28(%ebp)
 805a9be:	e8 fd dd fe ff       	call   80487c0 <memcpy@plt>
 805a9c3:	83 c4 10             	add    $0x10,%esp
 805a9c6:	e9 9b 00 00 00       	jmp    805aa66 <map_set_1+0x1d6>
 805a9cb:	83 45 c4 02          	addl   $0x2,-0x3c(%ebp)
 805a9cf:	a1 48 32 07 08       	mov    0x8073248,%eax
 805a9d4:	01 45 c8             	add    %eax,-0x38(%ebp)
 805a9d7:	e9 64 ff ff ff       	jmp    805a940 <map_set_1+0xb0>
 805a9dc:	90                   	nop
 805a9dd:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a9e0:	83 c0 10             	add    $0x10,%eax
 805a9e3:	83 ec 0c             	sub    $0xc,%esp
 805a9e6:	50                   	push   %eax
 805a9e7:	e8 3c f5 ff ff       	call   8059f28 <DenseArray_expand>
 805a9ec:	83 c4 10             	add    $0x10,%esp
 805a9ef:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805a9f2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805a9f5:	83 c0 10             	add    $0x10,%eax
 805a9f8:	83 ec 08             	sub    $0x8,%esp
 805a9fb:	ff 75 dc             	pushl  -0x24(%ebp)
 805a9fe:	50                   	push   %eax
 805a9ff:	e8 c0 f4 ff ff       	call   8059ec4 <DenseArray_key>
 805aa04:	83 c4 10             	add    $0x10,%esp
 805aa07:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805aa0a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805aa0d:	8b 40 44             	mov    0x44(%eax),%eax
 805aa10:	83 ec 08             	sub    $0x8,%esp
 805aa13:	ff 75 b0             	pushl  -0x50(%ebp)
 805aa16:	ff 75 e0             	pushl  -0x20(%ebp)
 805aa19:	ff d0                	call   *%eax
 805aa1b:	83 c4 10             	add    $0x10,%esp
 805aa1e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805aa21:	8b 40 04             	mov    0x4(%eax),%eax
 805aa24:	89 c2                	mov    %eax,%edx
 805aa26:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805aa29:	8b 00                	mov    (%eax),%eax
 805aa2b:	89 c1                	mov    %eax,%ecx
 805aa2d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805aa30:	01 c8                	add    %ecx,%eax
 805aa32:	83 ec 04             	sub    $0x4,%esp
 805aa35:	52                   	push   %edx
 805aa36:	ff 75 ac             	pushl  -0x54(%ebp)
 805aa39:	50                   	push   %eax
 805aa3a:	e8 81 dd fe ff       	call   80487c0 <memcpy@plt>
 805aa3f:	83 c4 10             	add    $0x10,%esp
 805aa42:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805aa45:	50                   	push   %eax
 805aa46:	ff 75 c8             	pushl  -0x38(%ebp)
 805aa49:	ff 75 c4             	pushl  -0x3c(%ebp)
 805aa4c:	ff 75 b4             	pushl  -0x4c(%ebp)
 805aa4f:	e8 81 fc ff ff       	call   805a6d5 <map_meta_greater>
 805aa54:	83 c4 10             	add    $0x10,%esp
 805aa57:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805aa5a:	8b 40 4c             	mov    0x4c(%eax),%eax
 805aa5d:	8d 50 01             	lea    0x1(%eax),%edx
 805aa60:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805aa63:	89 50 4c             	mov    %edx,0x4c(%eax)
 805aa66:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805aa69:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805aa70:	74 05                	je     805aa77 <map_set_1+0x1e7>
 805aa72:	e8 a9 dd fe ff       	call   8048820 <__stack_chk_fail@plt>
 805aa77:	c9                   	leave  
 805aa78:	c3                   	ret    

0805aa79 <map_expand>:
 805aa79:	55                   	push   %ebp
 805aa7a:	89 e5                	mov    %esp,%ebp
 805aa7c:	83 ec 18             	sub    $0x18,%esp
 805aa7f:	8b 45 08             	mov    0x8(%ebp),%eax
 805aa82:	8b 40 08             	mov    0x8(%eax),%eax
 805aa85:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805aa88:	8b 45 08             	mov    0x8(%ebp),%eax
 805aa8b:	8b 40 08             	mov    0x8(%eax),%eax
 805aa8e:	83 c0 02             	add    $0x2,%eax
 805aa91:	01 c0                	add    %eax,%eax
 805aa93:	8d 50 fe             	lea    -0x2(%eax),%edx
 805aa96:	8b 45 08             	mov    0x8(%ebp),%eax
 805aa99:	89 50 08             	mov    %edx,0x8(%eax)
 805aa9c:	8b 45 08             	mov    0x8(%ebp),%eax
 805aa9f:	0f b6 40 0c          	movzbl 0xc(%eax),%eax
 805aaa3:	84 c0                	test   %al,%al
 805aaa5:	75 27                	jne    805aace <map_expand+0x55>
 805aaa7:	8b 45 08             	mov    0x8(%ebp),%eax
 805aaaa:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
 805aaae:	8d 50 10             	lea    0x10(%eax),%edx
 805aab1:	8b 45 08             	mov    0x8(%ebp),%eax
 805aab4:	88 50 0d             	mov    %dl,0xd(%eax)
 805aab7:	8b 45 08             	mov    0x8(%ebp),%eax
 805aaba:	c6 40 0c 10          	movb   $0x10,0xc(%eax)
 805aabe:	83 ec 0c             	sub    $0xc,%esp
 805aac1:	ff 75 08             	pushl  0x8(%ebp)
 805aac4:	e8 29 00 00 00       	call   805aaf2 <map_rehash>
 805aac9:	83 c4 10             	add    $0x10,%esp
 805aacc:	eb 21                	jmp    805aaef <map_expand+0x76>
 805aace:	83 ec 08             	sub    $0x8,%esp
 805aad1:	ff 75 f4             	pushl  -0xc(%ebp)
 805aad4:	ff 75 08             	pushl  0x8(%ebp)
 805aad7:	e8 3b 01 00 00       	call   805ac17 <map_cached_rehash>
 805aadc:	83 c4 10             	add    $0x10,%esp
 805aadf:	8b 45 08             	mov    0x8(%ebp),%eax
 805aae2:	0f b6 40 0c          	movzbl 0xc(%eax),%eax
 805aae6:	8d 50 ff             	lea    -0x1(%eax),%edx
 805aae9:	8b 45 08             	mov    0x8(%ebp),%eax
 805aaec:	88 50 0c             	mov    %dl,0xc(%eax)
 805aaef:	90                   	nop
 805aaf0:	c9                   	leave  
 805aaf1:	c3                   	ret    

0805aaf2 <map_rehash>:
 805aaf2:	55                   	push   %ebp
 805aaf3:	89 e5                	mov    %esp,%ebp
 805aaf5:	83 ec 48             	sub    $0x48,%esp
 805aaf8:	8b 45 08             	mov    0x8(%ebp),%eax
 805aafb:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805aafe:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805ab04:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805ab07:	31 c0                	xor    %eax,%eax
 805ab09:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ab0c:	8b 50 08             	mov    0x8(%eax),%edx
 805ab0f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ab12:	8b 40 34             	mov    0x34(%eax),%eax
 805ab15:	01 d0                	add    %edx,%eax
 805ab17:	83 c0 02             	add    $0x2,%eax
 805ab1a:	c1 e0 02             	shl    $0x2,%eax
 805ab1d:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805ab20:	8b 55 d0             	mov    -0x30(%ebp),%edx
 805ab23:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ab26:	8b 40 30             	mov    0x30(%eax),%eax
 805ab29:	83 ec 08             	sub    $0x8,%esp
 805ab2c:	52                   	push   %edx
 805ab2d:	50                   	push   %eax
 805ab2e:	e8 93 ce ff ff       	call   80579c6 <v_realloc>
 805ab33:	83 c4 10             	add    $0x10,%esp
 805ab36:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805ab39:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ab3c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805ab3f:	89 50 30             	mov    %edx,0x30(%eax)
 805ab42:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ab45:	8b 40 30             	mov    0x30(%eax),%eax
 805ab48:	83 ec 04             	sub    $0x4,%esp
 805ab4b:	ff 75 d0             	pushl  -0x30(%ebp)
 805ab4e:	6a 00                	push   $0x0
 805ab50:	50                   	push   %eax
 805ab51:	e8 6a dd fe ff       	call   80488c0 <memset@plt>
 805ab56:	83 c4 10             	add    $0x10,%esp
 805ab59:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 805ab60:	e9 8f 00 00 00       	jmp    805abf4 <map_rehash+0x102>
 805ab65:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ab68:	83 c0 10             	add    $0x10,%eax
 805ab6b:	83 ec 08             	sub    $0x8,%esp
 805ab6e:	ff 75 cc             	pushl  -0x34(%ebp)
 805ab71:	50                   	push   %eax
 805ab72:	e8 84 f3 ff ff       	call   8059efb <DenseArray_has_index>
 805ab77:	83 c4 10             	add    $0x10,%esp
 805ab7a:	85 c0                	test   %eax,%eax
 805ab7c:	74 71                	je     805abef <map_rehash+0xfd>
 805ab7e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ab81:	83 c0 10             	add    $0x10,%eax
 805ab84:	83 ec 08             	sub    $0x8,%esp
 805ab87:	ff 75 cc             	pushl  -0x34(%ebp)
 805ab8a:	50                   	push   %eax
 805ab8b:	e8 34 f3 ff ff       	call   8059ec4 <DenseArray_key>
 805ab90:	83 c4 10             	add    $0x10,%esp
 805ab93:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805ab96:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805ab99:	83 ec 04             	sub    $0x4,%esp
 805ab9c:	ff 75 d8             	pushl  -0x28(%ebp)
 805ab9f:	ff 75 c4             	pushl  -0x3c(%ebp)
 805aba2:	50                   	push   %eax
 805aba3:	e8 34 fa ff ff       	call   805a5dc <map_key_to_index>
 805aba8:	83 c4 0c             	add    $0xc,%esp
 805abab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805abae:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805abb1:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805abb4:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805abb7:	8d 45 ec             	lea    -0x14(%ebp),%eax
 805abba:	ff 75 e0             	pushl  -0x20(%ebp)
 805abbd:	ff 75 dc             	pushl  -0x24(%ebp)
 805abc0:	ff 75 c4             	pushl  -0x3c(%ebp)
 805abc3:	50                   	push   %eax
 805abc4:	e8 be fa ff ff       	call   805a687 <map_meta_less>
 805abc9:	83 c4 0c             	add    $0xc,%esp
 805abcc:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805abcf:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805abd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805abd5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805abd8:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805abdb:	50                   	push   %eax
 805abdc:	ff 75 e0             	pushl  -0x20(%ebp)
 805abdf:	ff 75 dc             	pushl  -0x24(%ebp)
 805abe2:	ff 75 c4             	pushl  -0x3c(%ebp)
 805abe5:	e8 eb fa ff ff       	call   805a6d5 <map_meta_greater>
 805abea:	83 c4 10             	add    $0x10,%esp
 805abed:	eb 01                	jmp    805abf0 <map_rehash+0xfe>
 805abef:	90                   	nop
 805abf0:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 805abf4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805abf7:	8b 40 20             	mov    0x20(%eax),%eax
 805abfa:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 805abfd:	0f 8f 62 ff ff ff    	jg     805ab65 <map_rehash+0x73>
 805ac03:	90                   	nop
 805ac04:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ac07:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805ac0e:	74 05                	je     805ac15 <map_rehash+0x123>
 805ac10:	e8 0b dc fe ff       	call   8048820 <__stack_chk_fail@plt>
 805ac15:	c9                   	leave  
 805ac16:	c3                   	ret    

0805ac17 <map_cached_rehash>:
 805ac17:	55                   	push   %ebp
 805ac18:	89 e5                	mov    %esp,%ebp
 805ac1a:	83 ec 58             	sub    $0x58,%esp
 805ac1d:	8b 45 08             	mov    0x8(%ebp),%eax
 805ac20:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805ac23:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805ac29:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805ac2c:	31 c0                	xor    %eax,%eax
 805ac2e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ac31:	8b 40 30             	mov    0x30(%eax),%eax
 805ac34:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805ac37:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ac3a:	8b 50 08             	mov    0x8(%eax),%edx
 805ac3d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ac40:	8b 40 34             	mov    0x34(%eax),%eax
 805ac43:	01 d0                	add    %edx,%eax
 805ac45:	83 c0 02             	add    $0x2,%eax
 805ac48:	c1 e0 02             	shl    $0x2,%eax
 805ac4b:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805ac4e:	83 ec 0c             	sub    $0xc,%esp
 805ac51:	ff 75 cc             	pushl  -0x34(%ebp)
 805ac54:	e8 ff cd ff ff       	call   8057a58 <vcalloc>
 805ac59:	83 c4 10             	add    $0x10,%esp
 805ac5c:	89 c2                	mov    %eax,%edx
 805ac5e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ac61:	89 50 30             	mov    %edx,0x30(%eax)
 805ac64:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ac67:	8b 40 34             	mov    0x34(%eax),%eax
 805ac6a:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805ac6d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 805ac74:	e9 da 00 00 00       	jmp    805ad53 <map_cached_rehash+0x13c>
 805ac79:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ac7c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 805ac83:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805ac86:	01 d0                	add    %edx,%eax
 805ac88:	8b 00                	mov    (%eax),%eax
 805ac8a:	85 c0                	test   %eax,%eax
 805ac8c:	0f 84 bc 00 00 00    	je     805ad4e <map_cached_rehash+0x137>
 805ac92:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ac95:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 805ac9c:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805ac9f:	01 d0                	add    %edx,%eax
 805aca1:	8b 00                	mov    (%eax),%eax
 805aca3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805aca6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805aca9:	c1 e8 18             	shr    $0x18,%eax
 805acac:	83 e8 01             	sub    $0x1,%eax
 805acaf:	01 c0                	add    %eax,%eax
 805acb1:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805acb4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805acb7:	2b 45 d8             	sub    -0x28(%ebp),%eax
 805acba:	89 c2                	mov    %eax,%edx
 805acbc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805acbf:	8b 40 08             	mov    0x8(%eax),%eax
 805acc2:	d1 e8                	shr    %eax
 805acc4:	21 d0                	and    %edx,%eax
 805acc6:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805acc9:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805accc:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
 805acd0:	0f b6 c0             	movzbl %al,%eax
 805acd3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805acd6:	89 c1                	mov    %eax,%ecx
 805acd8:	d3 e2                	shl    %cl,%edx
 805acda:	89 d0                	mov    %edx,%eax
 805acdc:	0b 45 dc             	or     -0x24(%ebp),%eax
 805acdf:	89 c2                	mov    %eax,%edx
 805ace1:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ace4:	8b 40 08             	mov    0x8(%eax),%eax
 805ace7:	21 d0                	and    %edx,%eax
 805ace9:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805acec:	a1 50 31 07 08       	mov    0x8073150,%eax
 805acf1:	23 45 d4             	and    -0x2c(%ebp),%eax
 805acf4:	89 c2                	mov    %eax,%edx
 805acf6:	a1 48 32 07 08       	mov    0x8073248,%eax
 805acfb:	09 d0                	or     %edx,%eax
 805acfd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805ad00:	8d 45 ec             	lea    -0x14(%ebp),%eax
 805ad03:	ff 75 e4             	pushl  -0x1c(%ebp)
 805ad06:	ff 75 e0             	pushl  -0x20(%ebp)
 805ad09:	ff 75 b4             	pushl  -0x4c(%ebp)
 805ad0c:	50                   	push   %eax
 805ad0d:	e8 75 f9 ff ff       	call   805a687 <map_meta_less>
 805ad12:	83 c4 0c             	add    $0xc,%esp
 805ad15:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805ad18:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805ad1b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805ad1e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805ad21:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ad24:	83 c0 01             	add    $0x1,%eax
 805ad27:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 805ad2e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805ad31:	01 d0                	add    %edx,%eax
 805ad33:	8b 00                	mov    (%eax),%eax
 805ad35:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805ad38:	ff 75 e8             	pushl  -0x18(%ebp)
 805ad3b:	ff 75 e4             	pushl  -0x1c(%ebp)
 805ad3e:	ff 75 e0             	pushl  -0x20(%ebp)
 805ad41:	ff 75 b4             	pushl  -0x4c(%ebp)
 805ad44:	e8 8c f9 ff ff       	call   805a6d5 <map_meta_greater>
 805ad49:	83 c4 10             	add    $0x10,%esp
 805ad4c:	eb 01                	jmp    805ad4f <map_cached_rehash+0x138>
 805ad4e:	90                   	nop
 805ad4f:	83 45 c4 02          	addl   $0x2,-0x3c(%ebp)
 805ad53:	8b 55 0c             	mov    0xc(%ebp),%edx
 805ad56:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805ad59:	01 d0                	add    %edx,%eax
 805ad5b:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 805ad5e:	0f 83 15 ff ff ff    	jae    805ac79 <map_cached_rehash+0x62>
 805ad64:	83 ec 0c             	sub    $0xc,%esp
 805ad67:	ff 75 c8             	pushl  -0x38(%ebp)
 805ad6a:	e8 40 cd ff ff       	call   8057aaf <v_free>
 805ad6f:	83 c4 10             	add    $0x10,%esp
 805ad72:	90                   	nop
 805ad73:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ad76:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805ad7d:	74 05                	je     805ad84 <map_cached_rehash+0x16d>
 805ad7f:	e8 9c da fe ff       	call   8048820 <__stack_chk_fail@plt>
 805ad84:	c9                   	leave  
 805ad85:	c3                   	ret    

0805ad86 <map_get_and_set_1>:
 805ad86:	55                   	push   %ebp
 805ad87:	89 e5                	mov    %esp,%ebp
 805ad89:	81 ec 98 00 00 00    	sub    $0x98,%esp
 805ad8f:	8b 45 08             	mov    0x8(%ebp),%eax
 805ad92:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 805ad98:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ad9b:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 805ada1:	8b 45 10             	mov    0x10(%ebp),%eax
 805ada4:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 805adaa:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805adb0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805adb3:	31 c0                	xor    %eax,%eax
 805adb5:	8d 45 90             	lea    -0x70(%ebp),%eax
 805adb8:	83 ec 04             	sub    $0x4,%esp
 805adbb:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 805adc1:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 805adc7:	50                   	push   %eax
 805adc8:	e8 0f f8 ff ff       	call   805a5dc <map_key_to_index>
 805adcd:	83 c4 0c             	add    $0xc,%esp
 805add0:	8b 45 90             	mov    -0x70(%ebp),%eax
 805add3:	89 45 80             	mov    %eax,-0x80(%ebp)
 805add6:	8b 45 94             	mov    -0x6c(%ebp),%eax
 805add9:	89 45 84             	mov    %eax,-0x7c(%ebp)
 805addc:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805ade2:	8b 40 30             	mov    0x30(%eax),%eax
 805ade5:	8b 55 80             	mov    -0x80(%ebp),%edx
 805ade8:	c1 e2 02             	shl    $0x2,%edx
 805adeb:	01 d0                	add    %edx,%eax
 805aded:	8b 00                	mov    (%eax),%eax
 805adef:	3b 45 84             	cmp    -0x7c(%ebp),%eax
 805adf2:	75 70                	jne    805ae64 <map_get_and_set_1+0xde>
 805adf4:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805adfa:	8b 40 30             	mov    0x30(%eax),%eax
 805adfd:	8b 55 80             	mov    -0x80(%ebp),%edx
 805ae00:	83 c2 01             	add    $0x1,%edx
 805ae03:	c1 e2 02             	shl    $0x2,%edx
 805ae06:	01 d0                	add    %edx,%eax
 805ae08:	8b 00                	mov    (%eax),%eax
 805ae0a:	89 45 88             	mov    %eax,-0x78(%ebp)
 805ae0d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805ae13:	83 c0 10             	add    $0x10,%eax
 805ae16:	83 ec 08             	sub    $0x8,%esp
 805ae19:	ff 75 88             	pushl  -0x78(%ebp)
 805ae1c:	50                   	push   %eax
 805ae1d:	e8 a2 f0 ff ff       	call   8059ec4 <DenseArray_key>
 805ae22:	83 c4 10             	add    $0x10,%esp
 805ae25:	89 45 8c             	mov    %eax,-0x74(%ebp)
 805ae28:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805ae2e:	8b 40 40             	mov    0x40(%eax),%eax
 805ae31:	83 ec 08             	sub    $0x8,%esp
 805ae34:	ff 75 8c             	pushl  -0x74(%ebp)
 805ae37:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 805ae3d:	ff d0                	call   *%eax
 805ae3f:	83 c4 10             	add    $0x10,%esp
 805ae42:	85 c0                	test   %eax,%eax
 805ae44:	74 1e                	je     805ae64 <map_get_and_set_1+0xde>
 805ae46:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805ae4c:	8b 40 10             	mov    0x10(%eax),%eax
 805ae4f:	89 c2                	mov    %eax,%edx
 805ae51:	8b 45 8c             	mov    -0x74(%ebp),%eax
 805ae54:	01 d0                	add    %edx,%eax
 805ae56:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805ae59:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805ae60:	74 53                	je     805aeb5 <map_get_and_set_1+0x12f>
 805ae62:	eb 4c                	jmp    805aeb0 <map_get_and_set_1+0x12a>
 805ae64:	83 45 80 02          	addl   $0x2,-0x80(%ebp)
 805ae68:	a1 48 32 07 08       	mov    0x8073248,%eax
 805ae6d:	01 45 84             	add    %eax,-0x7c(%ebp)
 805ae70:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805ae76:	8b 40 30             	mov    0x30(%eax),%eax
 805ae79:	8b 55 80             	mov    -0x80(%ebp),%edx
 805ae7c:	c1 e2 02             	shl    $0x2,%edx
 805ae7f:	01 d0                	add    %edx,%eax
 805ae81:	8b 00                	mov    (%eax),%eax
 805ae83:	3b 45 84             	cmp    -0x7c(%ebp),%eax
 805ae86:	72 05                	jb     805ae8d <map_get_and_set_1+0x107>
 805ae88:	e9 4f ff ff ff       	jmp    805addc <map_get_and_set_1+0x56>
 805ae8d:	90                   	nop
 805ae8e:	83 ec 04             	sub    $0x4,%esp
 805ae91:	ff b5 6c ff ff ff    	pushl  -0x94(%ebp)
 805ae97:	ff b5 70 ff ff ff    	pushl  -0x90(%ebp)
 805ae9d:	ff b5 74 ff ff ff    	pushl  -0x8c(%ebp)
 805aea3:	e8 e8 f9 ff ff       	call   805a890 <map_set_1>
 805aea8:	83 c4 10             	add    $0x10,%esp
 805aeab:	e9 05 ff ff ff       	jmp    805adb5 <map_get_and_set_1+0x2f>
 805aeb0:	e8 6b d9 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805aeb5:	c9                   	leave  
 805aeb6:	c3                   	ret    

0805aeb7 <map_get_1>:
 805aeb7:	55                   	push   %ebp
 805aeb8:	89 e5                	mov    %esp,%ebp
 805aeba:	83 ec 38             	sub    $0x38,%esp
 805aebd:	8b 45 08             	mov    0x8(%ebp),%eax
 805aec0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805aec3:	8b 45 0c             	mov    0xc(%ebp),%eax
 805aec6:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805aec9:	8b 45 10             	mov    0x10(%ebp),%eax
 805aecc:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805aecf:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805aed5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805aed8:	31 c0                	xor    %eax,%eax
 805aeda:	8d 45 ec             	lea    -0x14(%ebp),%eax
 805aedd:	83 ec 04             	sub    $0x4,%esp
 805aee0:	ff 75 d0             	pushl  -0x30(%ebp)
 805aee3:	ff 75 d4             	pushl  -0x2c(%ebp)
 805aee6:	50                   	push   %eax
 805aee7:	e8 f0 f6 ff ff       	call   805a5dc <map_key_to_index>
 805aeec:	83 c4 0c             	add    $0xc,%esp
 805aeef:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805aef2:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805aef5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805aef8:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805aefb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805aefe:	8b 40 30             	mov    0x30(%eax),%eax
 805af01:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805af04:	c1 e2 02             	shl    $0x2,%edx
 805af07:	01 d0                	add    %edx,%eax
 805af09:	8b 00                	mov    (%eax),%eax
 805af0b:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805af0e:	75 55                	jne    805af65 <map_get_1+0xae>
 805af10:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805af13:	8b 40 30             	mov    0x30(%eax),%eax
 805af16:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805af19:	83 c2 01             	add    $0x1,%edx
 805af1c:	c1 e2 02             	shl    $0x2,%edx
 805af1f:	01 d0                	add    %edx,%eax
 805af21:	8b 00                	mov    (%eax),%eax
 805af23:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805af26:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805af29:	83 c0 10             	add    $0x10,%eax
 805af2c:	83 ec 08             	sub    $0x8,%esp
 805af2f:	ff 75 e4             	pushl  -0x1c(%ebp)
 805af32:	50                   	push   %eax
 805af33:	e8 8c ef ff ff       	call   8059ec4 <DenseArray_key>
 805af38:	83 c4 10             	add    $0x10,%esp
 805af3b:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805af3e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805af41:	8b 40 40             	mov    0x40(%eax),%eax
 805af44:	83 ec 08             	sub    $0x8,%esp
 805af47:	ff 75 e8             	pushl  -0x18(%ebp)
 805af4a:	ff 75 d0             	pushl  -0x30(%ebp)
 805af4d:	ff d0                	call   *%eax
 805af4f:	83 c4 10             	add    $0x10,%esp
 805af52:	85 c0                	test   %eax,%eax
 805af54:	74 0f                	je     805af65 <map_get_1+0xae>
 805af56:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805af59:	8b 40 10             	mov    0x10(%eax),%eax
 805af5c:	89 c2                	mov    %eax,%edx
 805af5e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805af61:	01 d0                	add    %edx,%eax
 805af63:	eb 2a                	jmp    805af8f <map_get_1+0xd8>
 805af65:	83 45 dc 02          	addl   $0x2,-0x24(%ebp)
 805af69:	a1 48 32 07 08       	mov    0x8073248,%eax
 805af6e:	01 45 e0             	add    %eax,-0x20(%ebp)
 805af71:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805af74:	8b 40 30             	mov    0x30(%eax),%eax
 805af77:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805af7a:	c1 e2 02             	shl    $0x2,%edx
 805af7d:	01 d0                	add    %edx,%eax
 805af7f:	8b 00                	mov    (%eax),%eax
 805af81:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805af84:	72 05                	jb     805af8b <map_get_1+0xd4>
 805af86:	e9 70 ff ff ff       	jmp    805aefb <map_get_1+0x44>
 805af8b:	90                   	nop
 805af8c:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805af8f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805af92:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805af99:	74 05                	je     805afa0 <map_get_1+0xe9>
 805af9b:	e8 80 d8 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805afa0:	c9                   	leave  
 805afa1:	c3                   	ret    

0805afa2 <map_exists_1>:
 805afa2:	55                   	push   %ebp
 805afa3:	89 e5                	mov    %esp,%ebp
 805afa5:	83 ec 38             	sub    $0x38,%esp
 805afa8:	8b 45 08             	mov    0x8(%ebp),%eax
 805afab:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805afae:	8b 45 0c             	mov    0xc(%ebp),%eax
 805afb1:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805afb4:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805afba:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805afbd:	31 c0                	xor    %eax,%eax
 805afbf:	8d 45 ec             	lea    -0x14(%ebp),%eax
 805afc2:	83 ec 04             	sub    $0x4,%esp
 805afc5:	ff 75 d0             	pushl  -0x30(%ebp)
 805afc8:	ff 75 d4             	pushl  -0x2c(%ebp)
 805afcb:	50                   	push   %eax
 805afcc:	e8 0b f6 ff ff       	call   805a5dc <map_key_to_index>
 805afd1:	83 c4 0c             	add    $0xc,%esp
 805afd4:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805afd7:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805afda:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805afdd:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805afe0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805afe3:	8b 40 30             	mov    0x30(%eax),%eax
 805afe6:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805afe9:	c1 e2 02             	shl    $0x2,%edx
 805afec:	01 d0                	add    %edx,%eax
 805afee:	8b 00                	mov    (%eax),%eax
 805aff0:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805aff3:	75 4d                	jne    805b042 <map_exists_1+0xa0>
 805aff5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805aff8:	8b 40 30             	mov    0x30(%eax),%eax
 805affb:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805affe:	83 c2 01             	add    $0x1,%edx
 805b001:	c1 e2 02             	shl    $0x2,%edx
 805b004:	01 d0                	add    %edx,%eax
 805b006:	8b 00                	mov    (%eax),%eax
 805b008:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805b00b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805b00e:	83 c0 10             	add    $0x10,%eax
 805b011:	83 ec 08             	sub    $0x8,%esp
 805b014:	ff 75 e4             	pushl  -0x1c(%ebp)
 805b017:	50                   	push   %eax
 805b018:	e8 a7 ee ff ff       	call   8059ec4 <DenseArray_key>
 805b01d:	83 c4 10             	add    $0x10,%esp
 805b020:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805b023:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805b026:	8b 40 40             	mov    0x40(%eax),%eax
 805b029:	83 ec 08             	sub    $0x8,%esp
 805b02c:	ff 75 e8             	pushl  -0x18(%ebp)
 805b02f:	ff 75 d0             	pushl  -0x30(%ebp)
 805b032:	ff d0                	call   *%eax
 805b034:	83 c4 10             	add    $0x10,%esp
 805b037:	85 c0                	test   %eax,%eax
 805b039:	74 07                	je     805b042 <map_exists_1+0xa0>
 805b03b:	b8 01 00 00 00       	mov    $0x1,%eax
 805b040:	eb 2c                	jmp    805b06e <map_exists_1+0xcc>
 805b042:	83 45 dc 02          	addl   $0x2,-0x24(%ebp)
 805b046:	a1 48 32 07 08       	mov    0x8073248,%eax
 805b04b:	01 45 e0             	add    %eax,-0x20(%ebp)
 805b04e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805b051:	8b 40 30             	mov    0x30(%eax),%eax
 805b054:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805b057:	c1 e2 02             	shl    $0x2,%edx
 805b05a:	01 d0                	add    %edx,%eax
 805b05c:	8b 00                	mov    (%eax),%eax
 805b05e:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805b061:	72 05                	jb     805b068 <map_exists_1+0xc6>
 805b063:	e9 78 ff ff ff       	jmp    805afe0 <map_exists_1+0x3e>
 805b068:	90                   	nop
 805b069:	b8 00 00 00 00       	mov    $0x0,%eax
 805b06e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805b071:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805b078:	74 05                	je     805b07f <map_exists_1+0xdd>
 805b07a:	e8 a1 d7 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805b07f:	c9                   	leave  
 805b080:	c3                   	ret    

0805b081 <DenseArray_delete>:
 805b081:	55                   	push   %ebp
 805b082:	89 e5                	mov    %esp,%ebp
 805b084:	83 ec 08             	sub    $0x8,%esp
 805b087:	8b 45 08             	mov    0x8(%ebp),%eax
 805b08a:	8b 40 14             	mov    0x14(%eax),%eax
 805b08d:	85 c0                	test   %eax,%eax
 805b08f:	75 1a                	jne    805b0ab <DenseArray_delete+0x2a>
 805b091:	8b 45 08             	mov    0x8(%ebp),%eax
 805b094:	8b 40 0c             	mov    0xc(%eax),%eax
 805b097:	83 ec 0c             	sub    $0xc,%esp
 805b09a:	50                   	push   %eax
 805b09b:	e8 b8 c9 ff ff       	call   8057a58 <vcalloc>
 805b0a0:	83 c4 10             	add    $0x10,%esp
 805b0a3:	89 c2                	mov    %eax,%edx
 805b0a5:	8b 45 08             	mov    0x8(%ebp),%eax
 805b0a8:	89 50 18             	mov    %edx,0x18(%eax)
 805b0ab:	8b 45 08             	mov    0x8(%ebp),%eax
 805b0ae:	8b 40 14             	mov    0x14(%eax),%eax
 805b0b1:	8d 50 01             	lea    0x1(%eax),%edx
 805b0b4:	8b 45 08             	mov    0x8(%ebp),%eax
 805b0b7:	89 50 14             	mov    %edx,0x14(%eax)
 805b0ba:	8b 45 08             	mov    0x8(%ebp),%eax
 805b0bd:	8b 50 18             	mov    0x18(%eax),%edx
 805b0c0:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b0c3:	01 d0                	add    %edx,%eax
 805b0c5:	c6 00 01             	movb   $0x1,(%eax)
 805b0c8:	90                   	nop
 805b0c9:	c9                   	leave  
 805b0ca:	c3                   	ret    

0805b0cb <map_delete>:
 805b0cb:	55                   	push   %ebp
 805b0cc:	89 e5                	mov    %esp,%ebp
 805b0ce:	83 ec 08             	sub    $0x8,%esp
 805b0d1:	83 ec 08             	sub    $0x8,%esp
 805b0d4:	8d 45 0c             	lea    0xc(%ebp),%eax
 805b0d7:	50                   	push   %eax
 805b0d8:	ff 75 08             	pushl  0x8(%ebp)
 805b0db:	e8 06 00 00 00       	call   805b0e6 <map_delete_1>
 805b0e0:	83 c4 10             	add    $0x10,%esp
 805b0e3:	90                   	nop
 805b0e4:	c9                   	leave  
 805b0e5:	c3                   	ret    

0805b0e6 <map_delete_1>:
 805b0e6:	55                   	push   %ebp
 805b0e7:	89 e5                	mov    %esp,%ebp
 805b0e9:	83 ec 48             	sub    $0x48,%esp
 805b0ec:	8b 45 08             	mov    0x8(%ebp),%eax
 805b0ef:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805b0f2:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b0f5:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805b0f8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805b0fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805b101:	31 c0                	xor    %eax,%eax
 805b103:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805b106:	83 ec 04             	sub    $0x4,%esp
 805b109:	ff 75 c0             	pushl  -0x40(%ebp)
 805b10c:	ff 75 c4             	pushl  -0x3c(%ebp)
 805b10f:	50                   	push   %eax
 805b110:	e8 c7 f4 ff ff       	call   805a5dc <map_key_to_index>
 805b115:	83 c4 0c             	add    $0xc,%esp
 805b118:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b11b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805b11e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805b121:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805b124:	8d 45 ec             	lea    -0x14(%ebp),%eax
 805b127:	ff 75 d8             	pushl  -0x28(%ebp)
 805b12a:	ff 75 d4             	pushl  -0x2c(%ebp)
 805b12d:	ff 75 c4             	pushl  -0x3c(%ebp)
 805b130:	50                   	push   %eax
 805b131:	e8 51 f5 ff ff       	call   805a687 <map_meta_less>
 805b136:	83 c4 0c             	add    $0xc,%esp
 805b139:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805b13c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805b13f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805b142:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805b145:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b148:	8b 40 30             	mov    0x30(%eax),%eax
 805b14b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805b14e:	c1 e2 02             	shl    $0x2,%edx
 805b151:	01 d0                	add    %edx,%eax
 805b153:	8b 00                	mov    (%eax),%eax
 805b155:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 805b158:	0f 85 7c 01 00 00    	jne    805b2da <map_delete_1+0x1f4>
 805b15e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b161:	8b 40 30             	mov    0x30(%eax),%eax
 805b164:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805b167:	83 c2 01             	add    $0x1,%edx
 805b16a:	c1 e2 02             	shl    $0x2,%edx
 805b16d:	01 d0                	add    %edx,%eax
 805b16f:	8b 00                	mov    (%eax),%eax
 805b171:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805b174:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b177:	83 c0 10             	add    $0x10,%eax
 805b17a:	83 ec 08             	sub    $0x8,%esp
 805b17d:	ff 75 dc             	pushl  -0x24(%ebp)
 805b180:	50                   	push   %eax
 805b181:	e8 3e ed ff ff       	call   8059ec4 <DenseArray_key>
 805b186:	83 c4 10             	add    $0x10,%esp
 805b189:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805b18c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b18f:	8b 40 40             	mov    0x40(%eax),%eax
 805b192:	83 ec 08             	sub    $0x8,%esp
 805b195:	ff 75 e0             	pushl  -0x20(%ebp)
 805b198:	ff 75 c0             	pushl  -0x40(%ebp)
 805b19b:	ff d0                	call   *%eax
 805b19d:	83 c4 10             	add    $0x10,%esp
 805b1a0:	85 c0                	test   %eax,%eax
 805b1a2:	0f 84 21 01 00 00    	je     805b2c9 <map_delete_1+0x1e3>
 805b1a8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b1ab:	8b 40 30             	mov    0x30(%eax),%eax
 805b1ae:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805b1b1:	83 c2 02             	add    $0x2,%edx
 805b1b4:	c1 e2 02             	shl    $0x2,%edx
 805b1b7:	01 d0                	add    %edx,%eax
 805b1b9:	8b 00                	mov    (%eax),%eax
 805b1bb:	c1 e8 18             	shr    $0x18,%eax
 805b1be:	83 f8 01             	cmp    $0x1,%eax
 805b1c1:	76 58                	jbe    805b21b <map_delete_1+0x135>
 805b1c3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b1c6:	8b 40 30             	mov    0x30(%eax),%eax
 805b1c9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805b1cc:	c1 e2 02             	shl    $0x2,%edx
 805b1cf:	01 c2                	add    %eax,%edx
 805b1d1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b1d4:	8b 40 30             	mov    0x30(%eax),%eax
 805b1d7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 805b1da:	83 c1 02             	add    $0x2,%ecx
 805b1dd:	c1 e1 02             	shl    $0x2,%ecx
 805b1e0:	01 c8                	add    %ecx,%eax
 805b1e2:	8b 08                	mov    (%eax),%ecx
 805b1e4:	a1 48 32 07 08       	mov    0x8073248,%eax
 805b1e9:	29 c1                	sub    %eax,%ecx
 805b1eb:	89 c8                	mov    %ecx,%eax
 805b1ed:	89 02                	mov    %eax,(%edx)
 805b1ef:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b1f2:	8b 40 30             	mov    0x30(%eax),%eax
 805b1f5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805b1f8:	83 c2 01             	add    $0x1,%edx
 805b1fb:	c1 e2 02             	shl    $0x2,%edx
 805b1fe:	01 c2                	add    %eax,%edx
 805b200:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b203:	8b 40 30             	mov    0x30(%eax),%eax
 805b206:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 805b209:	83 c1 03             	add    $0x3,%ecx
 805b20c:	c1 e1 02             	shl    $0x2,%ecx
 805b20f:	01 c8                	add    %ecx,%eax
 805b211:	8b 00                	mov    (%eax),%eax
 805b213:	89 02                	mov    %eax,(%edx)
 805b215:	83 45 d4 02          	addl   $0x2,-0x2c(%ebp)
 805b219:	eb 8d                	jmp    805b1a8 <map_delete_1+0xc2>
 805b21b:	90                   	nop
 805b21c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b21f:	8b 40 4c             	mov    0x4c(%eax),%eax
 805b222:	8d 50 ff             	lea    -0x1(%eax),%edx
 805b225:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b228:	89 50 4c             	mov    %edx,0x4c(%eax)
 805b22b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b22e:	83 c0 10             	add    $0x10,%eax
 805b231:	83 ec 08             	sub    $0x8,%esp
 805b234:	ff 75 dc             	pushl  -0x24(%ebp)
 805b237:	50                   	push   %eax
 805b238:	e8 44 fe ff ff       	call   805b081 <DenseArray_delete>
 805b23d:	83 c4 10             	add    $0x10,%esp
 805b240:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b243:	8b 40 30             	mov    0x30(%eax),%eax
 805b246:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805b249:	c1 e2 02             	shl    $0x2,%edx
 805b24c:	01 d0                	add    %edx,%eax
 805b24e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805b254:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b257:	8b 40 48             	mov    0x48(%eax),%eax
 805b25a:	83 ec 0c             	sub    $0xc,%esp
 805b25d:	ff 75 e0             	pushl  -0x20(%ebp)
 805b260:	ff d0                	call   *%eax
 805b262:	83 c4 10             	add    $0x10,%esp
 805b265:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b268:	8b 00                	mov    (%eax),%eax
 805b26a:	83 ec 04             	sub    $0x4,%esp
 805b26d:	50                   	push   %eax
 805b26e:	6a 00                	push   $0x0
 805b270:	ff 75 e0             	pushl  -0x20(%ebp)
 805b273:	e8 48 d6 fe ff       	call   80488c0 <memset@plt>
 805b278:	83 c4 10             	add    $0x10,%esp
 805b27b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b27e:	8b 40 20             	mov    0x20(%eax),%eax
 805b281:	83 f8 20             	cmp    $0x20,%eax
 805b284:	7e 57                	jle    805b2dd <map_delete_1+0x1f7>
 805b286:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b289:	8b 40 20             	mov    0x20(%eax),%eax
 805b28c:	d1 f8                	sar    %eax
 805b28e:	89 c2                	mov    %eax,%edx
 805b290:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b293:	8b 40 24             	mov    0x24(%eax),%eax
 805b296:	83 ec 08             	sub    $0x8,%esp
 805b299:	52                   	push   %edx
 805b29a:	50                   	push   %eax
 805b29b:	e8 ab d7 fe ff       	call   8048a4b <_us32_ge>
 805b2a0:	83 c4 10             	add    $0x10,%esp
 805b2a3:	85 c0                	test   %eax,%eax
 805b2a5:	74 39                	je     805b2e0 <map_delete_1+0x1fa>
 805b2a7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b2aa:	83 c0 10             	add    $0x10,%eax
 805b2ad:	83 ec 0c             	sub    $0xc,%esp
 805b2b0:	50                   	push   %eax
 805b2b1:	e8 5c ed ff ff       	call   805a012 <DenseArray_zeros_to_end>
 805b2b6:	83 c4 10             	add    $0x10,%esp
 805b2b9:	83 ec 0c             	sub    $0xc,%esp
 805b2bc:	ff 75 c4             	pushl  -0x3c(%ebp)
 805b2bf:	e8 2e f8 ff ff       	call   805aaf2 <map_rehash>
 805b2c4:	83 c4 10             	add    $0x10,%esp
 805b2c7:	eb 17                	jmp    805b2e0 <map_delete_1+0x1fa>
 805b2c9:	83 45 d4 02          	addl   $0x2,-0x2c(%ebp)
 805b2cd:	a1 48 32 07 08       	mov    0x8073248,%eax
 805b2d2:	01 45 d8             	add    %eax,-0x28(%ebp)
 805b2d5:	e9 6b fe ff ff       	jmp    805b145 <map_delete_1+0x5f>
 805b2da:	90                   	nop
 805b2db:	eb 04                	jmp    805b2e1 <map_delete_1+0x1fb>
 805b2dd:	90                   	nop
 805b2de:	eb 01                	jmp    805b2e1 <map_delete_1+0x1fb>
 805b2e0:	90                   	nop
 805b2e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805b2e4:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805b2eb:	74 05                	je     805b2f2 <map_delete_1+0x20c>
 805b2ed:	e8 2e d5 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805b2f2:	c9                   	leave  
 805b2f3:	c3                   	ret    

0805b2f4 <map_keys>:
 805b2f4:	55                   	push   %ebp
 805b2f5:	89 e5                	mov    %esp,%ebp
 805b2f7:	83 ec 48             	sub    $0x48,%esp
 805b2fa:	8b 45 08             	mov    0x8(%ebp),%eax
 805b2fd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805b300:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b303:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805b306:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805b30c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805b30f:	31 c0                	xor    %eax,%eax
 805b311:	c7 45 e8 34 97 06 08 	movl   $0x8069734,-0x18(%ebp)
 805b318:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805b31f:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 805b326:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b329:	8b 50 4c             	mov    0x4c(%eax),%edx
 805b32c:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805b32f:	83 ec 0c             	sub    $0xc,%esp
 805b332:	8d 4d e8             	lea    -0x18(%ebp),%ecx
 805b335:	51                   	push   %ecx
 805b336:	6a 0c                	push   $0xc
 805b338:	6a 00                	push   $0x0
 805b33a:	52                   	push   %edx
 805b33b:	50                   	push   %eax
 805b33c:	e8 28 a7 ff ff       	call   8055a69 <__new_array_with_default>
 805b341:	83 c4 1c             	add    $0x1c,%esp
 805b344:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805b347:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805b34a:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 805b351:	eb 54                	jmp    805b3a7 <map_keys+0xb3>
 805b353:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b356:	83 c0 10             	add    $0x10,%eax
 805b359:	83 ec 08             	sub    $0x8,%esp
 805b35c:	ff 75 d0             	pushl  -0x30(%ebp)
 805b35f:	50                   	push   %eax
 805b360:	e8 96 eb ff ff       	call   8059efb <DenseArray_has_index>
 805b365:	83 c4 10             	add    $0x10,%esp
 805b368:	85 c0                	test   %eax,%eax
 805b36a:	74 36                	je     805b3a2 <map_keys+0xae>
 805b36c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b36f:	83 c0 10             	add    $0x10,%eax
 805b372:	83 ec 08             	sub    $0x8,%esp
 805b375:	ff 75 d0             	pushl  -0x30(%ebp)
 805b378:	50                   	push   %eax
 805b379:	e8 46 eb ff ff       	call   8059ec4 <DenseArray_key>
 805b37e:	83 c4 10             	add    $0x10,%esp
 805b381:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805b384:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b387:	8b 40 44             	mov    0x44(%eax),%eax
 805b38a:	83 ec 08             	sub    $0x8,%esp
 805b38d:	ff 75 d4             	pushl  -0x2c(%ebp)
 805b390:	ff 75 cc             	pushl  -0x34(%ebp)
 805b393:	ff d0                	call   *%eax
 805b395:	83 c4 10             	add    $0x10,%esp
 805b398:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b39b:	8b 00                	mov    (%eax),%eax
 805b39d:	01 45 cc             	add    %eax,-0x34(%ebp)
 805b3a0:	eb 01                	jmp    805b3a3 <map_keys+0xaf>
 805b3a2:	90                   	nop
 805b3a3:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 805b3a7:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b3aa:	8b 40 20             	mov    0x20(%eax),%eax
 805b3ad:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 805b3b0:	7f a1                	jg     805b353 <map_keys+0x5f>
 805b3b2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b3b5:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805b3b8:	89 10                	mov    %edx,(%eax)
 805b3ba:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805b3bd:	89 50 04             	mov    %edx,0x4(%eax)
 805b3c0:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805b3c3:	89 50 08             	mov    %edx,0x8(%eax)
 805b3c6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805b3c9:	89 50 0c             	mov    %edx,0xc(%eax)
 805b3cc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b3cf:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805b3d2:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805b3d9:	74 05                	je     805b3e0 <map_keys+0xec>
 805b3db:	e8 40 d4 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805b3e0:	c9                   	leave  
 805b3e1:	c2 04 00             	ret    $0x4

0805b3e4 <map_keys_1>:
 805b3e4:	55                   	push   %ebp
 805b3e5:	89 e5                	mov    %esp,%ebp
 805b3e7:	83 ec 48             	sub    $0x48,%esp
 805b3ea:	8b 45 08             	mov    0x8(%ebp),%eax
 805b3ed:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805b3f0:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b3f3:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805b3f6:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805b3fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805b3ff:	31 c0                	xor    %eax,%eax
 805b401:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b404:	8b 08                	mov    (%eax),%ecx
 805b406:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b409:	8b 50 4c             	mov    0x4c(%eax),%edx
 805b40c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805b40f:	51                   	push   %ecx
 805b410:	6a 00                	push   $0x0
 805b412:	52                   	push   %edx
 805b413:	50                   	push   %eax
 805b414:	e8 f4 a5 ff ff       	call   8055a0d <__new_array>
 805b419:	83 c4 0c             	add    $0xc,%esp
 805b41c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805b41f:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805b422:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b425:	8b 40 24             	mov    0x24(%eax),%eax
 805b428:	85 c0                	test   %eax,%eax
 805b42a:	75 6b                	jne    805b497 <map_keys_1+0xb3>
 805b42c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 805b433:	eb 38                	jmp    805b46d <map_keys_1+0x89>
 805b435:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b438:	83 c0 10             	add    $0x10,%eax
 805b43b:	83 ec 08             	sub    $0x8,%esp
 805b43e:	ff 75 d4             	pushl  -0x2c(%ebp)
 805b441:	50                   	push   %eax
 805b442:	e8 7d ea ff ff       	call   8059ec4 <DenseArray_key>
 805b447:	83 c4 10             	add    $0x10,%esp
 805b44a:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805b44d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b450:	8b 40 44             	mov    0x44(%eax),%eax
 805b453:	83 ec 08             	sub    $0x8,%esp
 805b456:	ff 75 dc             	pushl  -0x24(%ebp)
 805b459:	ff 75 d0             	pushl  -0x30(%ebp)
 805b45c:	ff d0                	call   *%eax
 805b45e:	83 c4 10             	add    $0x10,%esp
 805b461:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b464:	8b 00                	mov    (%eax),%eax
 805b466:	01 45 d0             	add    %eax,-0x30(%ebp)
 805b469:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 805b46d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b470:	8b 40 20             	mov    0x20(%eax),%eax
 805b473:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 805b476:	7f bd                	jg     805b435 <map_keys_1+0x51>
 805b478:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b47b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805b47e:	89 10                	mov    %edx,(%eax)
 805b480:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805b483:	89 50 04             	mov    %edx,0x4(%eax)
 805b486:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805b489:	89 50 08             	mov    %edx,0x8(%eax)
 805b48c:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805b48f:	89 50 0c             	mov    %edx,0xc(%eax)
 805b492:	e9 82 00 00 00       	jmp    805b519 <map_keys_1+0x135>
 805b497:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 805b49e:	eb 54                	jmp    805b4f4 <map_keys_1+0x110>
 805b4a0:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b4a3:	83 c0 10             	add    $0x10,%eax
 805b4a6:	83 ec 08             	sub    $0x8,%esp
 805b4a9:	ff 75 d8             	pushl  -0x28(%ebp)
 805b4ac:	50                   	push   %eax
 805b4ad:	e8 49 ea ff ff       	call   8059efb <DenseArray_has_index>
 805b4b2:	83 c4 10             	add    $0x10,%esp
 805b4b5:	85 c0                	test   %eax,%eax
 805b4b7:	74 36                	je     805b4ef <map_keys_1+0x10b>
 805b4b9:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b4bc:	83 c0 10             	add    $0x10,%eax
 805b4bf:	83 ec 08             	sub    $0x8,%esp
 805b4c2:	ff 75 d8             	pushl  -0x28(%ebp)
 805b4c5:	50                   	push   %eax
 805b4c6:	e8 f9 e9 ff ff       	call   8059ec4 <DenseArray_key>
 805b4cb:	83 c4 10             	add    $0x10,%esp
 805b4ce:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805b4d1:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b4d4:	8b 40 44             	mov    0x44(%eax),%eax
 805b4d7:	83 ec 08             	sub    $0x8,%esp
 805b4da:	ff 75 e0             	pushl  -0x20(%ebp)
 805b4dd:	ff 75 d0             	pushl  -0x30(%ebp)
 805b4e0:	ff d0                	call   *%eax
 805b4e2:	83 c4 10             	add    $0x10,%esp
 805b4e5:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b4e8:	8b 00                	mov    (%eax),%eax
 805b4ea:	01 45 d0             	add    %eax,-0x30(%ebp)
 805b4ed:	eb 01                	jmp    805b4f0 <map_keys_1+0x10c>
 805b4ef:	90                   	nop
 805b4f0:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 805b4f4:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805b4f7:	8b 40 20             	mov    0x20(%eax),%eax
 805b4fa:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 805b4fd:	7f a1                	jg     805b4a0 <map_keys_1+0xbc>
 805b4ff:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b502:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805b505:	89 10                	mov    %edx,(%eax)
 805b507:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805b50a:	89 50 04             	mov    %edx,0x4(%eax)
 805b50d:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805b510:	89 50 08             	mov    %edx,0x8(%eax)
 805b513:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805b516:	89 50 0c             	mov    %edx,0xc(%eax)
 805b519:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b51c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805b51f:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805b526:	74 05                	je     805b52d <map_keys_1+0x149>
 805b528:	e8 f3 d2 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805b52d:	c9                   	leave  
 805b52e:	c2 04 00             	ret    $0x4

0805b531 <DenseArray_clone>:
 805b531:	55                   	push   %ebp
 805b532:	89 e5                	mov    %esp,%ebp
 805b534:	83 ec 28             	sub    $0x28,%esp
 805b537:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b53a:	8b 00                	mov    (%eax),%eax
 805b53c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805b53f:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b542:	8b 40 04             	mov    0x4(%eax),%eax
 805b545:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805b548:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b54b:	8b 40 08             	mov    0x8(%eax),%eax
 805b54e:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805b551:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b554:	8b 40 0c             	mov    0xc(%eax),%eax
 805b557:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805b55a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b55d:	8b 40 10             	mov    0x10(%eax),%eax
 805b560:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805b563:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b566:	8b 40 14             	mov    0x14(%eax),%eax
 805b569:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805b56c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 805b573:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805b57a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b57d:	8b 40 14             	mov    0x14(%eax),%eax
 805b580:	85 c0                	test   %eax,%eax
 805b582:	74 1c                	je     805b5a0 <DenseArray_clone+0x6f>
 805b584:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b587:	8b 50 0c             	mov    0xc(%eax),%edx
 805b58a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b58d:	8b 40 18             	mov    0x18(%eax),%eax
 805b590:	83 ec 08             	sub    $0x8,%esp
 805b593:	52                   	push   %edx
 805b594:	50                   	push   %eax
 805b595:	e8 2c c5 ff ff       	call   8057ac6 <memdup>
 805b59a:	83 c4 10             	add    $0x10,%esp
 805b59d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805b5a0:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b5a3:	8b 50 0c             	mov    0xc(%eax),%edx
 805b5a6:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b5a9:	8b 40 08             	mov    0x8(%eax),%eax
 805b5ac:	0f af d0             	imul   %eax,%edx
 805b5af:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b5b2:	8b 40 1c             	mov    0x1c(%eax),%eax
 805b5b5:	83 ec 08             	sub    $0x8,%esp
 805b5b8:	52                   	push   %edx
 805b5b9:	50                   	push   %eax
 805b5ba:	e8 07 c5 ff ff       	call   8057ac6 <memdup>
 805b5bf:	83 c4 10             	add    $0x10,%esp
 805b5c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805b5c5:	8b 45 08             	mov    0x8(%ebp),%eax
 805b5c8:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805b5cb:	89 10                	mov    %edx,(%eax)
 805b5cd:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805b5d0:	89 50 04             	mov    %edx,0x4(%eax)
 805b5d3:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805b5d6:	89 50 08             	mov    %edx,0x8(%eax)
 805b5d9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805b5dc:	89 50 0c             	mov    %edx,0xc(%eax)
 805b5df:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805b5e2:	89 50 10             	mov    %edx,0x10(%eax)
 805b5e5:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805b5e8:	89 50 14             	mov    %edx,0x14(%eax)
 805b5eb:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805b5ee:	89 50 18             	mov    %edx,0x18(%eax)
 805b5f1:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805b5f4:	89 50 1c             	mov    %edx,0x1c(%eax)
 805b5f7:	8b 45 08             	mov    0x8(%ebp),%eax
 805b5fa:	c9                   	leave  
 805b5fb:	c2 04 00             	ret    $0x4

0805b5fe <map_clone>:
 805b5fe:	55                   	push   %ebp
 805b5ff:	89 e5                	mov    %esp,%ebp
 805b601:	57                   	push   %edi
 805b602:	56                   	push   %esi
 805b603:	53                   	push   %ebx
 805b604:	83 ec 7c             	sub    $0x7c,%esp
 805b607:	8b 45 08             	mov    0x8(%ebp),%eax
 805b60a:	89 45 84             	mov    %eax,-0x7c(%ebp)
 805b60d:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b610:	89 45 80             	mov    %eax,-0x80(%ebp)
 805b613:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805b619:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805b61c:	31 c0                	xor    %eax,%eax
 805b61e:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b621:	8b 50 08             	mov    0x8(%eax),%edx
 805b624:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b627:	8b 40 34             	mov    0x34(%eax),%eax
 805b62a:	01 d0                	add    %edx,%eax
 805b62c:	83 c0 02             	add    $0x2,%eax
 805b62f:	c1 e0 02             	shl    $0x2,%eax
 805b632:	89 45 90             	mov    %eax,-0x70(%ebp)
 805b635:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b638:	8b 00                	mov    (%eax),%eax
 805b63a:	89 45 94             	mov    %eax,-0x6c(%ebp)
 805b63d:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b640:	8b 40 04             	mov    0x4(%eax),%eax
 805b643:	89 45 98             	mov    %eax,-0x68(%ebp)
 805b646:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b649:	8b 40 08             	mov    0x8(%eax),%eax
 805b64c:	89 45 9c             	mov    %eax,-0x64(%ebp)
 805b64f:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b652:	0f b6 40 0c          	movzbl 0xc(%eax),%eax
 805b656:	88 45 a0             	mov    %al,-0x60(%ebp)
 805b659:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b65c:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
 805b660:	88 45 a1             	mov    %al,-0x5f(%ebp)
 805b663:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b666:	8d 50 10             	lea    0x10(%eax),%edx
 805b669:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 805b66c:	83 ec 08             	sub    $0x8,%esp
 805b66f:	52                   	push   %edx
 805b670:	50                   	push   %eax
 805b671:	e8 bb fe ff ff       	call   805b531 <DenseArray_clone>
 805b676:	83 c4 0c             	add    $0xc,%esp
 805b679:	83 ec 0c             	sub    $0xc,%esp
 805b67c:	ff 75 90             	pushl  -0x70(%ebp)
 805b67f:	e8 a3 c2 ff ff       	call   8057927 <v_malloc>
 805b684:	83 c4 10             	add    $0x10,%esp
 805b687:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805b68a:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b68d:	8b 40 34             	mov    0x34(%eax),%eax
 805b690:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805b693:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b696:	8b 40 38             	mov    0x38(%eax),%eax
 805b699:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805b69c:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b69f:	8b 40 3c             	mov    0x3c(%eax),%eax
 805b6a2:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805b6a5:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b6a8:	8b 40 40             	mov    0x40(%eax),%eax
 805b6ab:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805b6ae:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b6b1:	8b 40 44             	mov    0x44(%eax),%eax
 805b6b4:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805b6b7:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b6ba:	8b 40 48             	mov    0x48(%eax),%eax
 805b6bd:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805b6c0:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b6c3:	8b 40 4c             	mov    0x4c(%eax),%eax
 805b6c6:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805b6c9:	8b 4d 90             	mov    -0x70(%ebp),%ecx
 805b6cc:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b6cf:	8b 50 30             	mov    0x30(%eax),%edx
 805b6d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805b6d5:	83 ec 04             	sub    $0x4,%esp
 805b6d8:	51                   	push   %ecx
 805b6d9:	52                   	push   %edx
 805b6da:	50                   	push   %eax
 805b6db:	e8 e0 d0 fe ff       	call   80487c0 <memcpy@plt>
 805b6e0:	83 c4 10             	add    $0x10,%esp
 805b6e3:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b6e6:	8b 40 38             	mov    0x38(%eax),%eax
 805b6e9:	85 c0                	test   %eax,%eax
 805b6eb:	75 1a                	jne    805b707 <map_clone+0x109>
 805b6ed:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805b6f0:	89 c3                	mov    %eax,%ebx
 805b6f2:	8d 45 94             	lea    -0x6c(%ebp),%eax
 805b6f5:	ba 14 00 00 00       	mov    $0x14,%edx
 805b6fa:	89 df                	mov    %ebx,%edi
 805b6fc:	89 c6                	mov    %eax,%esi
 805b6fe:	89 d1                	mov    %edx,%ecx
 805b700:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 805b702:	e9 85 00 00 00       	jmp    805b78c <map_clone+0x18e>
 805b707:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
 805b70e:	eb 5c                	jmp    805b76c <map_clone+0x16e>
 805b710:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b713:	83 c0 10             	add    $0x10,%eax
 805b716:	83 ec 08             	sub    $0x8,%esp
 805b719:	ff 75 8c             	pushl  -0x74(%ebp)
 805b71c:	50                   	push   %eax
 805b71d:	e8 d9 e7 ff ff       	call   8059efb <DenseArray_has_index>
 805b722:	83 c4 10             	add    $0x10,%esp
 805b725:	85 c0                	test   %eax,%eax
 805b727:	74 3e                	je     805b767 <map_clone+0x169>
 805b729:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b72c:	8b 58 44             	mov    0x44(%eax),%ebx
 805b72f:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b732:	83 c0 10             	add    $0x10,%eax
 805b735:	83 ec 08             	sub    $0x8,%esp
 805b738:	ff 75 8c             	pushl  -0x74(%ebp)
 805b73b:	50                   	push   %eax
 805b73c:	e8 83 e7 ff ff       	call   8059ec4 <DenseArray_key>
 805b741:	83 c4 10             	add    $0x10,%esp
 805b744:	89 c6                	mov    %eax,%esi
 805b746:	83 ec 08             	sub    $0x8,%esp
 805b749:	ff 75 8c             	pushl  -0x74(%ebp)
 805b74c:	8d 45 94             	lea    -0x6c(%ebp),%eax
 805b74f:	83 c0 10             	add    $0x10,%eax
 805b752:	50                   	push   %eax
 805b753:	e8 6c e7 ff ff       	call   8059ec4 <DenseArray_key>
 805b758:	83 c4 10             	add    $0x10,%esp
 805b75b:	83 ec 08             	sub    $0x8,%esp
 805b75e:	56                   	push   %esi
 805b75f:	50                   	push   %eax
 805b760:	ff d3                	call   *%ebx
 805b762:	83 c4 10             	add    $0x10,%esp
 805b765:	eb 01                	jmp    805b768 <map_clone+0x16a>
 805b767:	90                   	nop
 805b768:	83 45 8c 01          	addl   $0x1,-0x74(%ebp)
 805b76c:	8b 45 80             	mov    -0x80(%ebp),%eax
 805b76f:	8b 40 20             	mov    0x20(%eax),%eax
 805b772:	3b 45 8c             	cmp    -0x74(%ebp),%eax
 805b775:	7f 99                	jg     805b710 <map_clone+0x112>
 805b777:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805b77a:	89 c3                	mov    %eax,%ebx
 805b77c:	8d 45 94             	lea    -0x6c(%ebp),%eax
 805b77f:	ba 14 00 00 00       	mov    $0x14,%edx
 805b784:	89 df                	mov    %ebx,%edi
 805b786:	89 c6                	mov    %eax,%esi
 805b788:	89 d1                	mov    %edx,%ecx
 805b78a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 805b78c:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805b78f:	8b 7d e4             	mov    -0x1c(%ebp),%edi
 805b792:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 805b799:	74 05                	je     805b7a0 <map_clone+0x1a2>
 805b79b:	e8 80 d0 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805b7a0:	8d 65 f4             	lea    -0xc(%ebp),%esp
 805b7a3:	5b                   	pop    %ebx
 805b7a4:	5e                   	pop    %esi
 805b7a5:	5f                   	pop    %edi
 805b7a6:	5d                   	pop    %ebp
 805b7a7:	c2 04 00             	ret    $0x4

0805b7aa <map_free>:
 805b7aa:	55                   	push   %ebp
 805b7ab:	89 e5                	mov    %esp,%ebp
 805b7ad:	83 ec 18             	sub    $0x18,%esp
 805b7b0:	8b 45 08             	mov    0x8(%ebp),%eax
 805b7b3:	8b 40 30             	mov    0x30(%eax),%eax
 805b7b6:	83 ec 0c             	sub    $0xc,%esp
 805b7b9:	50                   	push   %eax
 805b7ba:	e8 f0 c2 ff ff       	call   8057aaf <v_free>
 805b7bf:	83 c4 10             	add    $0x10,%esp
 805b7c2:	8b 45 08             	mov    0x8(%ebp),%eax
 805b7c5:	8b 40 24             	mov    0x24(%eax),%eax
 805b7c8:	85 c0                	test   %eax,%eax
 805b7ca:	75 43                	jne    805b80f <map_free+0x65>
 805b7cc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 805b7d3:	eb 2d                	jmp    805b802 <map_free+0x58>
 805b7d5:	8b 45 08             	mov    0x8(%ebp),%eax
 805b7d8:	83 c0 10             	add    $0x10,%eax
 805b7db:	83 ec 08             	sub    $0x8,%esp
 805b7de:	ff 75 e8             	pushl  -0x18(%ebp)
 805b7e1:	50                   	push   %eax
 805b7e2:	e8 dd e6 ff ff       	call   8059ec4 <DenseArray_key>
 805b7e7:	83 c4 10             	add    $0x10,%esp
 805b7ea:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805b7ed:	8b 45 08             	mov    0x8(%ebp),%eax
 805b7f0:	8b 40 48             	mov    0x48(%eax),%eax
 805b7f3:	83 ec 0c             	sub    $0xc,%esp
 805b7f6:	ff 75 f0             	pushl  -0x10(%ebp)
 805b7f9:	ff d0                	call   *%eax
 805b7fb:	83 c4 10             	add    $0x10,%esp
 805b7fe:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 805b802:	8b 45 08             	mov    0x8(%ebp),%eax
 805b805:	8b 40 20             	mov    0x20(%eax),%eax
 805b808:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 805b80b:	7f c8                	jg     805b7d5 <map_free+0x2b>
 805b80d:	eb 6f                	jmp    805b87e <map_free+0xd4>
 805b80f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805b816:	eb 49                	jmp    805b861 <map_free+0xb7>
 805b818:	8b 45 08             	mov    0x8(%ebp),%eax
 805b81b:	83 c0 10             	add    $0x10,%eax
 805b81e:	83 ec 08             	sub    $0x8,%esp
 805b821:	ff 75 ec             	pushl  -0x14(%ebp)
 805b824:	50                   	push   %eax
 805b825:	e8 d1 e6 ff ff       	call   8059efb <DenseArray_has_index>
 805b82a:	83 c4 10             	add    $0x10,%esp
 805b82d:	85 c0                	test   %eax,%eax
 805b82f:	74 2b                	je     805b85c <map_free+0xb2>
 805b831:	8b 45 08             	mov    0x8(%ebp),%eax
 805b834:	83 c0 10             	add    $0x10,%eax
 805b837:	83 ec 08             	sub    $0x8,%esp
 805b83a:	ff 75 ec             	pushl  -0x14(%ebp)
 805b83d:	50                   	push   %eax
 805b83e:	e8 81 e6 ff ff       	call   8059ec4 <DenseArray_key>
 805b843:	83 c4 10             	add    $0x10,%esp
 805b846:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805b849:	8b 45 08             	mov    0x8(%ebp),%eax
 805b84c:	8b 40 48             	mov    0x48(%eax),%eax
 805b84f:	83 ec 0c             	sub    $0xc,%esp
 805b852:	ff 75 f4             	pushl  -0xc(%ebp)
 805b855:	ff d0                	call   *%eax
 805b857:	83 c4 10             	add    $0x10,%esp
 805b85a:	eb 01                	jmp    805b85d <map_free+0xb3>
 805b85c:	90                   	nop
 805b85d:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 805b861:	8b 45 08             	mov    0x8(%ebp),%eax
 805b864:	8b 40 20             	mov    0x20(%eax),%eax
 805b867:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 805b86a:	7f ac                	jg     805b818 <map_free+0x6e>
 805b86c:	8b 45 08             	mov    0x8(%ebp),%eax
 805b86f:	8b 40 28             	mov    0x28(%eax),%eax
 805b872:	83 ec 0c             	sub    $0xc,%esp
 805b875:	50                   	push   %eax
 805b876:	e8 34 c2 ff ff       	call   8057aaf <v_free>
 805b87b:	83 c4 10             	add    $0x10,%esp
 805b87e:	8b 45 08             	mov    0x8(%ebp),%eax
 805b881:	8b 40 2c             	mov    0x2c(%eax),%eax
 805b884:	83 ec 0c             	sub    $0xc,%esp
 805b887:	50                   	push   %eax
 805b888:	e8 22 c2 ff ff       	call   8057aaf <v_free>
 805b88d:	83 c4 10             	add    $0x10,%esp
 805b890:	90                   	nop
 805b891:	c9                   	leave  
 805b892:	c3                   	ret    

0805b893 <opt_ok2>:
 805b893:	55                   	push   %ebp
 805b894:	89 e5                	mov    %esp,%ebp
 805b896:	53                   	push   %ebx
 805b897:	83 ec 04             	sub    $0x4,%esp
 805b89a:	8b 55 0c             	mov    0xc(%ebp),%edx
 805b89d:	bb 00 00 00 00       	mov    $0x0,%ebx
 805b8a2:	b8 18 00 00 00       	mov    $0x18,%eax
 805b8a7:	83 e0 fc             	and    $0xfffffffc,%eax
 805b8aa:	89 c1                	mov    %eax,%ecx
 805b8ac:	b8 00 00 00 00       	mov    $0x0,%eax
 805b8b1:	89 1c 02             	mov    %ebx,(%edx,%eax,1)
 805b8b4:	83 c0 04             	add    $0x4,%eax
 805b8b7:	39 c8                	cmp    %ecx,%eax
 805b8b9:	72 f6                	jb     805b8b1 <opt_ok2+0x1e>
 805b8bb:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b8be:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 805b8c4:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b8c7:	c7 40 08 34 97 06 08 	movl   $0x8069734,0x8(%eax)
 805b8ce:	8b 45 10             	mov    0x10(%ebp),%eax
 805b8d1:	8b 55 0c             	mov    0xc(%ebp),%edx
 805b8d4:	83 c2 14             	add    $0x14,%edx
 805b8d7:	83 c2 04             	add    $0x4,%edx
 805b8da:	83 ec 04             	sub    $0x4,%esp
 805b8dd:	50                   	push   %eax
 805b8de:	ff 75 08             	pushl  0x8(%ebp)
 805b8e1:	52                   	push   %edx
 805b8e2:	e8 d9 ce fe ff       	call   80487c0 <memcpy@plt>
 805b8e7:	83 c4 10             	add    $0x10,%esp
 805b8ea:	90                   	nop
 805b8eb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805b8ee:	c9                   	leave  
 805b8ef:	c3                   	ret    

0805b8f0 <Option_str>:
 805b8f0:	55                   	push   %ebp
 805b8f1:	89 e5                	mov    %esp,%ebp
 805b8f3:	83 ec 28             	sub    $0x28,%esp
 805b8f6:	8b 45 08             	mov    0x8(%ebp),%eax
 805b8f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805b8fc:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805b902:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805b905:	31 c0                	xor    %eax,%eax
 805b907:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b90a:	85 c0                	test   %eax,%eax
 805b90c:	74 26                	je     805b934 <Option_str+0x44>
 805b90e:	8b 45 10             	mov    0x10(%ebp),%eax
 805b911:	85 c0                	test   %eax,%eax
 805b913:	75 1f                	jne    805b934 <Option_str+0x44>
 805b915:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b918:	c7 00 d0 9d 06 08    	movl   $0x8069dd0,(%eax)
 805b91e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b921:	c7 40 04 0c 00 00 00 	movl   $0xc,0x4(%eax)
 805b928:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b92b:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805b932:	eb 45                	jmp    805b979 <Option_str+0x89>
 805b934:	8b 45 10             	mov    0x10(%ebp),%eax
 805b937:	85 c0                	test   %eax,%eax
 805b939:	74 1f                	je     805b95a <Option_str+0x6a>
 805b93b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b93e:	c7 00 dd 9d 06 08    	movl   $0x8069ddd,(%eax)
 805b944:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b947:	c7 40 04 0e 00 00 00 	movl   $0xe,0x4(%eax)
 805b94e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b951:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805b958:	eb 1f                	jmp    805b979 <Option_str+0x89>
 805b95a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b95d:	83 ec 08             	sub    $0x8,%esp
 805b960:	ff 75 1c             	pushl  0x1c(%ebp)
 805b963:	ff 75 18             	pushl  0x18(%ebp)
 805b966:	ff 75 14             	pushl  0x14(%ebp)
 805b969:	6a 02                	push   $0x2
 805b96b:	68 ec 9d 06 08       	push   $0x8069dec
 805b970:	50                   	push   %eax
 805b971:	e8 4e db fe ff       	call   80494c4 <_STR>
 805b976:	83 c4 1c             	add    $0x1c,%esp
 805b979:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805b97c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805b97f:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805b986:	74 05                	je     805b98d <Option_str+0x9d>
 805b988:	e8 93 ce fe ff       	call   8048820 <__stack_chk_fail@plt>
 805b98d:	c9                   	leave  
 805b98e:	c2 04 00             	ret    $0x4

0805b991 <opt_none>:
 805b991:	55                   	push   %ebp
 805b992:	89 e5                	mov    %esp,%ebp
 805b994:	53                   	push   %ebx
 805b995:	8b 55 08             	mov    0x8(%ebp),%edx
 805b998:	bb 00 00 00 00       	mov    $0x0,%ebx
 805b99d:	b8 18 00 00 00       	mov    $0x18,%eax
 805b9a2:	83 e0 fc             	and    $0xfffffffc,%eax
 805b9a5:	89 c1                	mov    %eax,%ecx
 805b9a7:	b8 00 00 00 00       	mov    $0x0,%eax
 805b9ac:	89 1c 02             	mov    %ebx,(%edx,%eax,1)
 805b9af:	83 c0 04             	add    $0x4,%eax
 805b9b2:	39 c8                	cmp    %ecx,%eax
 805b9b4:	72 f6                	jb     805b9ac <opt_none+0x1b>
 805b9b6:	8b 45 08             	mov    0x8(%ebp),%eax
 805b9b9:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
 805b9c0:	8b 45 08             	mov    0x8(%ebp),%eax
 805b9c3:	c7 40 08 34 97 06 08 	movl   $0x8069734,0x8(%eax)
 805b9ca:	8b 45 08             	mov    0x8(%ebp),%eax
 805b9cd:	5b                   	pop    %ebx
 805b9ce:	5d                   	pop    %ebp
 805b9cf:	c2 04 00             	ret    $0x4

0805b9d2 <v_error>:
 805b9d2:	55                   	push   %ebp
 805b9d3:	89 e5                	mov    %esp,%ebp
 805b9d5:	8b 45 08             	mov    0x8(%ebp),%eax
 805b9d8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805b9de:	8b 45 08             	mov    0x8(%ebp),%eax
 805b9e1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805b9e8:	8b 45 08             	mov    0x8(%ebp),%eax
 805b9eb:	8b 55 0c             	mov    0xc(%ebp),%edx
 805b9ee:	89 50 08             	mov    %edx,0x8(%eax)
 805b9f1:	8b 55 10             	mov    0x10(%ebp),%edx
 805b9f4:	89 50 0c             	mov    %edx,0xc(%eax)
 805b9f7:	8b 55 14             	mov    0x14(%ebp),%edx
 805b9fa:	89 50 10             	mov    %edx,0x10(%eax)
 805b9fd:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba00:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
 805ba07:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba0a:	5d                   	pop    %ebp
 805ba0b:	c2 04 00             	ret    $0x4

0805ba0e <error_with_code>:
 805ba0e:	55                   	push   %ebp
 805ba0f:	89 e5                	mov    %esp,%ebp
 805ba11:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba14:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805ba1a:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba1d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805ba24:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba27:	8b 55 0c             	mov    0xc(%ebp),%edx
 805ba2a:	89 50 08             	mov    %edx,0x8(%eax)
 805ba2d:	8b 55 10             	mov    0x10(%ebp),%edx
 805ba30:	89 50 0c             	mov    %edx,0xc(%eax)
 805ba33:	8b 55 14             	mov    0x14(%ebp),%edx
 805ba36:	89 50 10             	mov    %edx,0x10(%eax)
 805ba39:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba3c:	8b 55 18             	mov    0x18(%ebp),%edx
 805ba3f:	89 50 14             	mov    %edx,0x14(%eax)
 805ba42:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba45:	5d                   	pop    %ebp
 805ba46:	c2 04 00             	ret    $0x4

0805ba49 <rune_str>:
 805ba49:	55                   	push   %ebp
 805ba4a:	89 e5                	mov    %esp,%ebp
 805ba4c:	83 ec 28             	sub    $0x28,%esp
 805ba4f:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba52:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805ba55:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805ba5b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805ba5e:	31 c0                	xor    %eax,%eax
 805ba60:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805ba63:	83 ec 08             	sub    $0x8,%esp
 805ba66:	ff 75 0c             	pushl  0xc(%ebp)
 805ba69:	50                   	push   %eax
 805ba6a:	e8 02 60 00 00       	call   8061a71 <utf32_to_str>
 805ba6f:	83 c4 0c             	add    $0xc,%esp
 805ba72:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805ba75:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805ba78:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805ba7f:	74 05                	je     805ba86 <rune_str+0x3d>
 805ba81:	e8 9a cd fe ff       	call   8048820 <__stack_chk_fail@plt>
 805ba86:	c9                   	leave  
 805ba87:	c2 04 00             	ret    $0x4

0805ba8a <byte_is_capital>:
 805ba8a:	55                   	push   %ebp
 805ba8b:	89 e5                	mov    %esp,%ebp
 805ba8d:	83 ec 04             	sub    $0x4,%esp
 805ba90:	8b 45 08             	mov    0x8(%ebp),%eax
 805ba93:	88 45 fc             	mov    %al,-0x4(%ebp)
 805ba96:	80 7d fc 40          	cmpb   $0x40,-0x4(%ebp)
 805ba9a:	76 0d                	jbe    805baa9 <byte_is_capital+0x1f>
 805ba9c:	80 7d fc 5a          	cmpb   $0x5a,-0x4(%ebp)
 805baa0:	77 07                	ja     805baa9 <byte_is_capital+0x1f>
 805baa2:	b8 01 00 00 00       	mov    $0x1,%eax
 805baa7:	eb 05                	jmp    805baae <byte_is_capital+0x24>
 805baa9:	b8 00 00 00 00       	mov    $0x0,%eax
 805baae:	c9                   	leave  
 805baaf:	c3                   	ret    

0805bab0 <array_byte_clone>:
 805bab0:	55                   	push   %ebp
 805bab1:	89 e5                	mov    %esp,%ebp
 805bab3:	83 ec 38             	sub    $0x38,%esp
 805bab6:	8b 45 08             	mov    0x8(%ebp),%eax
 805bab9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805babc:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805bac2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805bac5:	31 c0                	xor    %eax,%eax
 805bac7:	8b 55 14             	mov    0x14(%ebp),%edx
 805baca:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805bacd:	83 ec 0c             	sub    $0xc,%esp
 805bad0:	6a 00                	push   $0x0
 805bad2:	6a 01                	push   $0x1
 805bad4:	6a 00                	push   $0x0
 805bad6:	52                   	push   %edx
 805bad7:	50                   	push   %eax
 805bad8:	e8 8c 9f ff ff       	call   8055a69 <__new_array_with_default>
 805badd:	83 c4 1c             	add    $0x1c,%esp
 805bae0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 805bae7:	eb 3a                	jmp    805bb23 <array_byte_clone+0x73>
 805bae9:	83 ec 0c             	sub    $0xc,%esp
 805baec:	ff 75 dc             	pushl  -0x24(%ebp)
 805baef:	ff 75 18             	pushl  0x18(%ebp)
 805baf2:	ff 75 14             	pushl  0x14(%ebp)
 805baf5:	ff 75 10             	pushl  0x10(%ebp)
 805baf8:	ff 75 0c             	pushl  0xc(%ebp)
 805bafb:	e8 ba a7 ff ff       	call   80562ba <array_get>
 805bb00:	83 c4 20             	add    $0x20,%esp
 805bb03:	0f b6 00             	movzbl (%eax),%eax
 805bb06:	88 45 f3             	mov    %al,-0xd(%ebp)
 805bb09:	83 ec 04             	sub    $0x4,%esp
 805bb0c:	8d 45 f3             	lea    -0xd(%ebp),%eax
 805bb0f:	50                   	push   %eax
 805bb10:	ff 75 dc             	pushl  -0x24(%ebp)
 805bb13:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805bb16:	50                   	push   %eax
 805bb17:	e8 00 ae ff ff       	call   805691c <array_set>
 805bb1c:	83 c4 10             	add    $0x10,%esp
 805bb1f:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 805bb23:	8b 45 14             	mov    0x14(%ebp),%eax
 805bb26:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 805bb29:	7f be                	jg     805bae9 <array_byte_clone+0x39>
 805bb2b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805bb2e:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805bb31:	89 10                	mov    %edx,(%eax)
 805bb33:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805bb36:	89 50 04             	mov    %edx,0x4(%eax)
 805bb39:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805bb3c:	89 50 08             	mov    %edx,0x8(%eax)
 805bb3f:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805bb42:	89 50 0c             	mov    %edx,0xc(%eax)
 805bb45:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805bb48:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805bb4b:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805bb52:	74 05                	je     805bb59 <array_byte_clone+0xa9>
 805bb54:	e8 c7 cc fe ff       	call   8048820 <__stack_chk_fail@plt>
 805bb59:	c9                   	leave  
 805bb5a:	c2 04 00             	ret    $0x4

0805bb5d <array_byte_bytestr>:
 805bb5d:	55                   	push   %ebp
 805bb5e:	89 e5                	mov    %esp,%ebp
 805bb60:	83 ec 28             	sub    $0x28,%esp
 805bb63:	8b 45 08             	mov    0x8(%ebp),%eax
 805bb66:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805bb69:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805bb6f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805bb72:	31 c0                	xor    %eax,%eax
 805bb74:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bb77:	83 ec 0c             	sub    $0xc,%esp
 805bb7a:	ff 75 18             	pushl  0x18(%ebp)
 805bb7d:	ff 75 14             	pushl  0x14(%ebp)
 805bb80:	ff 75 10             	pushl  0x10(%ebp)
 805bb83:	ff 75 0c             	pushl  0xc(%ebp)
 805bb86:	50                   	push   %eax
 805bb87:	e8 1b 00 00 00       	call   805bba7 <bytes2string>
 805bb8c:	83 c4 1c             	add    $0x1c,%esp
 805bb8f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bb92:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805bb95:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805bb9c:	74 05                	je     805bba3 <array_byte_bytestr+0x46>
 805bb9e:	e8 7d cc fe ff       	call   8048820 <__stack_chk_fail@plt>
 805bba3:	c9                   	leave  
 805bba4:	c2 04 00             	ret    $0x4

0805bba7 <bytes2string>:
 805bba7:	55                   	push   %ebp
 805bba8:	89 e5                	mov    %esp,%ebp
 805bbaa:	83 ec 48             	sub    $0x48,%esp
 805bbad:	8b 45 08             	mov    0x8(%ebp),%eax
 805bbb0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805bbb3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805bbb9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805bbbc:	31 c0                	xor    %eax,%eax
 805bbbe:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805bbc1:	83 ec 08             	sub    $0x8,%esp
 805bbc4:	8d 55 0c             	lea    0xc(%ebp),%edx
 805bbc7:	52                   	push   %edx
 805bbc8:	50                   	push   %eax
 805bbc9:	e8 6c aa ff ff       	call   805663a <array_clone>
 805bbce:	83 c4 0c             	add    $0xc,%esp
 805bbd1:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
 805bbd5:	83 ec 08             	sub    $0x8,%esp
 805bbd8:	8d 45 f3             	lea    -0xd(%ebp),%eax
 805bbdb:	50                   	push   %eax
 805bbdc:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805bbdf:	50                   	push   %eax
 805bbe0:	e8 d5 ad ff ff       	call   80569ba <array_push>
 805bbe5:	83 c4 10             	add    $0x10,%esp
 805bbe8:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805bbeb:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805bbee:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805bbf1:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 805bbf4:	83 ec 04             	sub    $0x4,%esp
 805bbf7:	51                   	push   %ecx
 805bbf8:	52                   	push   %edx
 805bbf9:	50                   	push   %eax
 805bbfa:	e8 fb 16 00 00       	call   805d2fa <tos>
 805bbff:	83 c4 0c             	add    $0xc,%esp
 805bc02:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805bc05:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805bc08:	89 10                	mov    %edx,(%eax)
 805bc0a:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805bc0d:	89 50 04             	mov    %edx,0x4(%eax)
 805bc10:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805bc13:	89 50 08             	mov    %edx,0x8(%eax)
 805bc16:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805bc19:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805bc1c:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805bc23:	74 05                	je     805bc2a <bytes2string+0x83>
 805bc25:	e8 f6 cb fe ff       	call   8048820 <__stack_chk_fail@plt>
 805bc2a:	c9                   	leave  
 805bc2b:	c2 04 00             	ret    $0x4

0805bc2e <new_sorted_map>:
 805bc2e:	55                   	push   %ebp
 805bc2f:	89 e5                	mov    %esp,%ebp
 805bc31:	83 ec 08             	sub    $0x8,%esp
 805bc34:	e8 d4 00 00 00       	call   805bd0d <new_node>
 805bc39:	89 c1                	mov    %eax,%ecx
 805bc3b:	8b 45 08             	mov    0x8(%ebp),%eax
 805bc3e:	8b 55 10             	mov    0x10(%ebp),%edx
 805bc41:	89 10                	mov    %edx,(%eax)
 805bc43:	8b 45 08             	mov    0x8(%ebp),%eax
 805bc46:	89 48 04             	mov    %ecx,0x4(%eax)
 805bc49:	8b 45 08             	mov    0x8(%ebp),%eax
 805bc4c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805bc53:	8b 45 08             	mov    0x8(%ebp),%eax
 805bc56:	c9                   	leave  
 805bc57:	c2 04 00             	ret    $0x4

0805bc5a <new_sorted_map_init>:
 805bc5a:	55                   	push   %ebp
 805bc5b:	89 e5                	mov    %esp,%ebp
 805bc5d:	83 ec 38             	sub    $0x38,%esp
 805bc60:	8b 45 08             	mov    0x8(%ebp),%eax
 805bc63:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805bc66:	8b 45 14             	mov    0x14(%ebp),%eax
 805bc69:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805bc6c:	8b 45 18             	mov    0x18(%ebp),%eax
 805bc6f:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805bc72:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805bc78:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805bc7b:	31 c0                	xor    %eax,%eax
 805bc7d:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805bc80:	83 ec 04             	sub    $0x4,%esp
 805bc83:	ff 75 10             	pushl  0x10(%ebp)
 805bc86:	ff 75 0c             	pushl  0xc(%ebp)
 805bc89:	50                   	push   %eax
 805bc8a:	e8 9f ff ff ff       	call   805bc2e <new_sorted_map>
 805bc8f:	83 c4 0c             	add    $0xc,%esp
 805bc92:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 805bc99:	eb 3e                	jmp    805bcd9 <new_sorted_map_init+0x7f>
 805bc9b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bc9e:	0f af 45 10          	imul   0x10(%ebp),%eax
 805bca2:	89 c2                	mov    %eax,%edx
 805bca4:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805bca7:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 805bcaa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805bcad:	89 d0                	mov    %edx,%eax
 805bcaf:	01 c0                	add    %eax,%eax
 805bcb1:	01 d0                	add    %edx,%eax
 805bcb3:	c1 e0 02             	shl    $0x2,%eax
 805bcb6:	89 c2                	mov    %eax,%edx
 805bcb8:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805bcbb:	01 d0                	add    %edx,%eax
 805bcbd:	83 ec 0c             	sub    $0xc,%esp
 805bcc0:	51                   	push   %ecx
 805bcc1:	ff 70 08             	pushl  0x8(%eax)
 805bcc4:	ff 70 04             	pushl  0x4(%eax)
 805bcc7:	ff 30                	pushl  (%eax)
 805bcc9:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805bccc:	50                   	push   %eax
 805bccd:	e8 91 00 00 00       	call   805bd63 <SortedMap_set>
 805bcd2:	83 c4 20             	add    $0x20,%esp
 805bcd5:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 805bcd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bcdc:	3b 45 0c             	cmp    0xc(%ebp),%eax
 805bcdf:	7c ba                	jl     805bc9b <new_sorted_map_init+0x41>
 805bce1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805bce4:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805bce7:	89 10                	mov    %edx,(%eax)
 805bce9:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805bcec:	89 50 04             	mov    %edx,0x4(%eax)
 805bcef:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805bcf2:	89 50 08             	mov    %edx,0x8(%eax)
 805bcf5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805bcf8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805bcfb:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805bd02:	74 05                	je     805bd09 <new_sorted_map_init+0xaf>
 805bd04:	e8 17 cb fe ff       	call   8048820 <__stack_chk_fail@plt>
 805bd09:	c9                   	leave  
 805bd0a:	c2 04 00             	ret    $0x4

0805bd0d <new_node>:
 805bd0d:	55                   	push   %ebp
 805bd0e:	89 e5                	mov    %esp,%ebp
 805bd10:	57                   	push   %edi
 805bd11:	81 ec c4 00 00 00    	sub    $0xc4,%esp
 805bd17:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805bd1d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805bd20:	31 c0                	xor    %eax,%eax
 805bd22:	8d 95 3c ff ff ff    	lea    -0xc4(%ebp),%edx
 805bd28:	b8 00 00 00 00       	mov    $0x0,%eax
 805bd2d:	b9 2e 00 00 00       	mov    $0x2e,%ecx
 805bd32:	89 d7                	mov    %edx,%edi
 805bd34:	f3 ab                	rep stos %eax,%es:(%edi)
 805bd36:	83 ec 08             	sub    $0x8,%esp
 805bd39:	68 b8 00 00 00       	push   $0xb8
 805bd3e:	8d 85 3c ff ff ff    	lea    -0xc4(%ebp),%eax
 805bd44:	50                   	push   %eax
 805bd45:	e8 7c bd ff ff       	call   8057ac6 <memdup>
 805bd4a:	83 c4 10             	add    $0x10,%esp
 805bd4d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805bd50:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805bd57:	74 05                	je     805bd5e <new_node+0x51>
 805bd59:	e8 c2 ca fe ff       	call   8048820 <__stack_chk_fail@plt>
 805bd5e:	8b 7d fc             	mov    -0x4(%ebp),%edi
 805bd61:	c9                   	leave  
 805bd62:	c3                   	ret    

0805bd63 <SortedMap_set>:
 805bd63:	55                   	push   %ebp
 805bd64:	89 e5                	mov    %esp,%ebp
 805bd66:	53                   	push   %ebx
 805bd67:	83 ec 24             	sub    $0x24,%esp
 805bd6a:	8b 45 08             	mov    0x8(%ebp),%eax
 805bd6d:	8b 40 04             	mov    0x4(%eax),%eax
 805bd70:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805bd73:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 805bd7a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805bd81:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bd84:	8b 50 04             	mov    0x4(%eax),%edx
 805bd87:	a1 d8 30 07 08       	mov    0x80730d8,%eax
 805bd8c:	39 c2                	cmp    %eax,%edx
 805bd8e:	0f 85 ea 00 00 00    	jne    805be7e <SortedMap_set+0x11b>
 805bd94:	ff 75 ec             	pushl  -0x14(%ebp)
 805bd97:	e8 9a bd ff ff       	call   8057b36 <isnil>
 805bd9c:	83 c4 04             	add    $0x4,%esp
 805bd9f:	85 c0                	test   %eax,%eax
 805bda1:	74 11                	je     805bdb4 <SortedMap_set+0x51>
 805bda3:	e8 65 ff ff ff       	call   805bd0d <new_node>
 805bda8:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805bdab:	8b 45 08             	mov    0x8(%ebp),%eax
 805bdae:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805bdb1:	89 50 04             	mov    %edx,0x4(%eax)
 805bdb4:	83 ec 04             	sub    $0x4,%esp
 805bdb7:	ff 75 e4             	pushl  -0x1c(%ebp)
 805bdba:	ff 75 e8             	pushl  -0x18(%ebp)
 805bdbd:	ff 75 ec             	pushl  -0x14(%ebp)
 805bdc0:	e8 e0 02 00 00       	call   805c0a5 <mapnode_split_child>
 805bdc5:	83 c4 10             	add    $0x10,%esp
 805bdc8:	83 ec 08             	sub    $0x8,%esp
 805bdcb:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805bdce:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805bdd1:	89 d0                	mov    %edx,%eax
 805bdd3:	01 c0                	add    %eax,%eax
 805bdd5:	01 d0                	add    %edx,%eax
 805bdd7:	c1 e0 02             	shl    $0x2,%eax
 805bdda:	01 c8                	add    %ecx,%eax
 805bddc:	ff 70 10             	pushl  0x10(%eax)
 805bddf:	ff 70 0c             	pushl  0xc(%eax)
 805bde2:	ff 70 08             	pushl  0x8(%eax)
 805bde5:	ff 75 14             	pushl  0x14(%ebp)
 805bde8:	ff 75 10             	pushl  0x10(%ebp)
 805bdeb:	ff 75 0c             	pushl  0xc(%ebp)
 805bdee:	e8 61 22 00 00       	call   805e054 <string_eq>
 805bdf3:	83 c4 20             	add    $0x20,%esp
 805bdf6:	85 c0                	test   %eax,%eax
 805bdf8:	74 29                	je     805be23 <SortedMap_set+0xc0>
 805bdfa:	8b 45 08             	mov    0x8(%ebp),%eax
 805bdfd:	8b 00                	mov    (%eax),%eax
 805bdff:	89 c1                	mov    %eax,%ecx
 805be01:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805be04:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805be07:	83 c2 20             	add    $0x20,%edx
 805be0a:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 805be0e:	83 ec 04             	sub    $0x4,%esp
 805be11:	51                   	push   %ecx
 805be12:	ff 75 18             	pushl  0x18(%ebp)
 805be15:	50                   	push   %eax
 805be16:	e8 a5 c9 fe ff       	call   80487c0 <memcpy@plt>
 805be1b:	83 c4 10             	add    $0x10,%esp
 805be1e:	e9 7d 02 00 00       	jmp    805c0a0 <SortedMap_set+0x33d>
 805be23:	83 ec 08             	sub    $0x8,%esp
 805be26:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805be29:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805be2c:	89 d0                	mov    %edx,%eax
 805be2e:	01 c0                	add    %eax,%eax
 805be30:	01 d0                	add    %edx,%eax
 805be32:	c1 e0 02             	shl    $0x2,%eax
 805be35:	01 c8                	add    %ecx,%eax
 805be37:	ff 70 10             	pushl  0x10(%eax)
 805be3a:	ff 70 0c             	pushl  0xc(%eax)
 805be3d:	ff 70 08             	pushl  0x8(%eax)
 805be40:	ff 75 14             	pushl  0x14(%ebp)
 805be43:	ff 75 10             	pushl  0x10(%ebp)
 805be46:	ff 75 0c             	pushl  0xc(%ebp)
 805be49:	e8 9d 22 00 00       	call   805e0eb <string_lt>
 805be4e:	83 c4 20             	add    $0x20,%esp
 805be51:	85 c0                	test   %eax,%eax
 805be53:	74 14                	je     805be69 <SortedMap_set+0x106>
 805be55:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805be58:	8b 00                	mov    (%eax),%eax
 805be5a:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805be5d:	c1 e2 02             	shl    $0x2,%edx
 805be60:	01 d0                	add    %edx,%eax
 805be62:	8b 00                	mov    (%eax),%eax
 805be64:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805be67:	eb 15                	jmp    805be7e <SortedMap_set+0x11b>
 805be69:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805be6c:	8b 00                	mov    (%eax),%eax
 805be6e:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805be71:	83 c2 01             	add    $0x1,%edx
 805be74:	c1 e2 02             	shl    $0x2,%edx
 805be77:	01 d0                	add    %edx,%eax
 805be79:	8b 00                	mov    (%eax),%eax
 805be7b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805be7e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 805be85:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805be88:	8b 40 04             	mov    0x4(%eax),%eax
 805be8b:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805be8e:	7e 38                	jle    805bec8 <SortedMap_set+0x165>
 805be90:	83 ec 08             	sub    $0x8,%esp
 805be93:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 805be96:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805be99:	89 d0                	mov    %edx,%eax
 805be9b:	01 c0                	add    %eax,%eax
 805be9d:	01 d0                	add    %edx,%eax
 805be9f:	c1 e0 02             	shl    $0x2,%eax
 805bea2:	01 c8                	add    %ecx,%eax
 805bea4:	ff 70 10             	pushl  0x10(%eax)
 805bea7:	ff 70 0c             	pushl  0xc(%eax)
 805beaa:	ff 70 08             	pushl  0x8(%eax)
 805bead:	ff 75 14             	pushl  0x14(%ebp)
 805beb0:	ff 75 10             	pushl  0x10(%ebp)
 805beb3:	ff 75 0c             	pushl  0xc(%ebp)
 805beb6:	e8 2f 23 00 00       	call   805e1ea <string_gt>
 805bebb:	83 c4 20             	add    $0x20,%esp
 805bebe:	85 c0                	test   %eax,%eax
 805bec0:	74 06                	je     805bec8 <SortedMap_set+0x165>
 805bec2:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 805bec6:	eb bd                	jmp    805be85 <SortedMap_set+0x122>
 805bec8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805becb:	8b 40 04             	mov    0x4(%eax),%eax
 805bece:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805bed1:	74 5b                	je     805bf2e <SortedMap_set+0x1cb>
 805bed3:	83 ec 08             	sub    $0x8,%esp
 805bed6:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 805bed9:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805bedc:	89 d0                	mov    %edx,%eax
 805bede:	01 c0                	add    %eax,%eax
 805bee0:	01 d0                	add    %edx,%eax
 805bee2:	c1 e0 02             	shl    $0x2,%eax
 805bee5:	01 c8                	add    %ecx,%eax
 805bee7:	ff 70 10             	pushl  0x10(%eax)
 805beea:	ff 70 0c             	pushl  0xc(%eax)
 805beed:	ff 70 08             	pushl  0x8(%eax)
 805bef0:	ff 75 14             	pushl  0x14(%ebp)
 805bef3:	ff 75 10             	pushl  0x10(%ebp)
 805bef6:	ff 75 0c             	pushl  0xc(%ebp)
 805bef9:	e8 56 21 00 00       	call   805e054 <string_eq>
 805befe:	83 c4 20             	add    $0x20,%esp
 805bf01:	85 c0                	test   %eax,%eax
 805bf03:	74 29                	je     805bf2e <SortedMap_set+0x1cb>
 805bf05:	8b 45 08             	mov    0x8(%ebp),%eax
 805bf08:	8b 00                	mov    (%eax),%eax
 805bf0a:	89 c1                	mov    %eax,%ecx
 805bf0c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bf0f:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805bf12:	83 c2 20             	add    $0x20,%edx
 805bf15:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 805bf19:	83 ec 04             	sub    $0x4,%esp
 805bf1c:	51                   	push   %ecx
 805bf1d:	ff 75 18             	pushl  0x18(%ebp)
 805bf20:	50                   	push   %eax
 805bf21:	e8 9a c8 fe ff       	call   80487c0 <memcpy@plt>
 805bf26:	83 c4 10             	add    $0x10,%esp
 805bf29:	e9 72 01 00 00       	jmp    805c0a0 <SortedMap_set+0x33d>
 805bf2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bf31:	8b 00                	mov    (%eax),%eax
 805bf33:	83 ec 0c             	sub    $0xc,%esp
 805bf36:	50                   	push   %eax
 805bf37:	e8 fa bb ff ff       	call   8057b36 <isnil>
 805bf3c:	83 c4 10             	add    $0x10,%esp
 805bf3f:	85 c0                	test   %eax,%eax
 805bf41:	0f 84 36 01 00 00    	je     805c07d <SortedMap_set+0x31a>
 805bf47:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bf4a:	8b 40 04             	mov    0x4(%eax),%eax
 805bf4d:	83 e8 01             	sub    $0x1,%eax
 805bf50:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805bf53:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 805bf57:	0f 88 90 00 00 00    	js     805bfed <SortedMap_set+0x28a>
 805bf5d:	83 ec 08             	sub    $0x8,%esp
 805bf60:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 805bf63:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805bf66:	89 d0                	mov    %edx,%eax
 805bf68:	01 c0                	add    %eax,%eax
 805bf6a:	01 d0                	add    %edx,%eax
 805bf6c:	c1 e0 02             	shl    $0x2,%eax
 805bf6f:	01 c8                	add    %ecx,%eax
 805bf71:	ff 70 10             	pushl  0x10(%eax)
 805bf74:	ff 70 0c             	pushl  0xc(%eax)
 805bf77:	ff 70 08             	pushl  0x8(%eax)
 805bf7a:	ff 75 14             	pushl  0x14(%ebp)
 805bf7d:	ff 75 10             	pushl  0x10(%ebp)
 805bf80:	ff 75 0c             	pushl  0xc(%ebp)
 805bf83:	e8 63 21 00 00       	call   805e0eb <string_lt>
 805bf88:	83 c4 20             	add    $0x20,%esp
 805bf8b:	85 c0                	test   %eax,%eax
 805bf8d:	74 5e                	je     805bfed <SortedMap_set+0x28a>
 805bf8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805bf92:	8d 50 01             	lea    0x1(%eax),%edx
 805bf95:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 805bf98:	89 d0                	mov    %edx,%eax
 805bf9a:	01 c0                	add    %eax,%eax
 805bf9c:	01 d0                	add    %edx,%eax
 805bf9e:	c1 e0 02             	shl    $0x2,%eax
 805bfa1:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805bfa4:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
 805bfa7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805bfaa:	89 c8                	mov    %ecx,%eax
 805bfac:	01 c0                	add    %eax,%eax
 805bfae:	01 c8                	add    %ecx,%eax
 805bfb0:	c1 e0 02             	shl    $0x2,%eax
 805bfb3:	01 d8                	add    %ebx,%eax
 805bfb5:	8b 48 08             	mov    0x8(%eax),%ecx
 805bfb8:	89 4a 08             	mov    %ecx,0x8(%edx)
 805bfbb:	8b 48 0c             	mov    0xc(%eax),%ecx
 805bfbe:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805bfc1:	8b 40 10             	mov    0x10(%eax),%eax
 805bfc4:	89 42 10             	mov    %eax,0x10(%edx)
 805bfc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805bfca:	8d 48 01             	lea    0x1(%eax),%ecx
 805bfcd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bfd0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805bfd3:	83 c2 20             	add    $0x20,%edx
 805bfd6:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805bfda:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805bfdd:	83 c1 20             	add    $0x20,%ecx
 805bfe0:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805bfe4:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 805bfe8:	e9 66 ff ff ff       	jmp    805bf53 <SortedMap_set+0x1f0>
 805bfed:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805bff0:	8d 50 01             	lea    0x1(%eax),%edx
 805bff3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 805bff6:	89 d0                	mov    %edx,%eax
 805bff8:	01 c0                	add    %eax,%eax
 805bffa:	01 d0                	add    %edx,%eax
 805bffc:	c1 e0 02             	shl    $0x2,%eax
 805bfff:	01 c8                	add    %ecx,%eax
 805c001:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c004:	89 50 08             	mov    %edx,0x8(%eax)
 805c007:	8b 55 10             	mov    0x10(%ebp),%edx
 805c00a:	89 50 0c             	mov    %edx,0xc(%eax)
 805c00d:	8b 55 14             	mov    0x14(%ebp),%edx
 805c010:	89 50 10             	mov    %edx,0x10(%eax)
 805c013:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c016:	8d 58 01             	lea    0x1(%eax),%ebx
 805c019:	8b 45 08             	mov    0x8(%ebp),%eax
 805c01c:	8b 00                	mov    (%eax),%eax
 805c01e:	83 ec 0c             	sub    $0xc,%esp
 805c021:	50                   	push   %eax
 805c022:	e8 00 b9 ff ff       	call   8057927 <v_malloc>
 805c027:	83 c4 10             	add    $0x10,%esp
 805c02a:	89 c1                	mov    %eax,%ecx
 805c02c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805c02f:	8d 53 20             	lea    0x20(%ebx),%edx
 805c032:	89 4c 90 0c          	mov    %ecx,0xc(%eax,%edx,4)
 805c036:	8b 45 08             	mov    0x8(%ebp),%eax
 805c039:	8b 00                	mov    (%eax),%eax
 805c03b:	89 c1                	mov    %eax,%ecx
 805c03d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c040:	8d 50 01             	lea    0x1(%eax),%edx
 805c043:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805c046:	83 c2 20             	add    $0x20,%edx
 805c049:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 805c04d:	83 ec 04             	sub    $0x4,%esp
 805c050:	51                   	push   %ecx
 805c051:	ff 75 18             	pushl  0x18(%ebp)
 805c054:	50                   	push   %eax
 805c055:	e8 66 c7 fe ff       	call   80487c0 <memcpy@plt>
 805c05a:	83 c4 10             	add    $0x10,%esp
 805c05d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805c060:	8b 40 04             	mov    0x4(%eax),%eax
 805c063:	8d 50 01             	lea    0x1(%eax),%edx
 805c066:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805c069:	89 50 04             	mov    %edx,0x4(%eax)
 805c06c:	8b 45 08             	mov    0x8(%ebp),%eax
 805c06f:	8b 40 08             	mov    0x8(%eax),%eax
 805c072:	8d 50 01             	lea    0x1(%eax),%edx
 805c075:	8b 45 08             	mov    0x8(%ebp),%eax
 805c078:	89 50 08             	mov    %edx,0x8(%eax)
 805c07b:	eb 23                	jmp    805c0a0 <SortedMap_set+0x33d>
 805c07d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805c080:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805c083:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c086:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805c089:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805c08c:	8b 00                	mov    (%eax),%eax
 805c08e:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805c091:	c1 e2 02             	shl    $0x2,%edx
 805c094:	01 d0                	add    %edx,%eax
 805c096:	8b 00                	mov    (%eax),%eax
 805c098:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805c09b:	e9 e1 fc ff ff       	jmp    805bd81 <SortedMap_set+0x1e>
 805c0a0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805c0a3:	c9                   	leave  
 805c0a4:	c3                   	ret    

0805c0a5 <mapnode_split_child>:
 805c0a5:	55                   	push   %ebp
 805c0a6:	89 e5                	mov    %esp,%ebp
 805c0a8:	53                   	push   %ebx
 805c0a9:	83 ec 14             	sub    $0x14,%esp
 805c0ac:	e8 5c fc ff ff       	call   805bd0d <new_node>
 805c0b1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805c0b4:	8b 15 ec 30 07 08    	mov    0x80730ec,%edx
 805c0ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c0bd:	89 50 04             	mov    %edx,0x4(%eax)
 805c0c0:	8b 15 ec 30 07 08    	mov    0x80730ec,%edx
 805c0c6:	8b 45 10             	mov    0x10(%ebp),%eax
 805c0c9:	89 50 04             	mov    %edx,0x4(%eax)
 805c0cc:	a1 ec 30 07 08       	mov    0x80730ec,%eax
 805c0d1:	83 e8 01             	sub    $0x1,%eax
 805c0d4:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805c0d7:	eb 59                	jmp    805c132 <mapnode_split_child+0x8d>
 805c0d9:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805c0dc:	8d 48 06             	lea    0x6(%eax),%ecx
 805c0df:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 805c0e2:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805c0e5:	89 d0                	mov    %edx,%eax
 805c0e7:	01 c0                	add    %eax,%eax
 805c0e9:	01 d0                	add    %edx,%eax
 805c0eb:	c1 e0 02             	shl    $0x2,%eax
 805c0ee:	8d 14 03             	lea    (%ebx,%eax,1),%edx
 805c0f1:	8b 5d 10             	mov    0x10(%ebp),%ebx
 805c0f4:	89 c8                	mov    %ecx,%eax
 805c0f6:	01 c0                	add    %eax,%eax
 805c0f8:	01 c8                	add    %ecx,%eax
 805c0fa:	c1 e0 02             	shl    $0x2,%eax
 805c0fd:	01 d8                	add    %ebx,%eax
 805c0ff:	8b 48 08             	mov    0x8(%eax),%ecx
 805c102:	89 4a 08             	mov    %ecx,0x8(%edx)
 805c105:	8b 48 0c             	mov    0xc(%eax),%ecx
 805c108:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805c10b:	8b 40 10             	mov    0x10(%eax),%eax
 805c10e:	89 42 10             	mov    %eax,0x10(%edx)
 805c111:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805c114:	8d 50 06             	lea    0x6(%eax),%edx
 805c117:	8b 45 10             	mov    0x10(%ebp),%eax
 805c11a:	83 c2 20             	add    $0x20,%edx
 805c11d:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805c121:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c124:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 805c127:	83 c1 20             	add    $0x20,%ecx
 805c12a:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805c12e:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 805c132:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 805c136:	79 a1                	jns    805c0d9 <mapnode_split_child+0x34>
 805c138:	8b 45 10             	mov    0x10(%ebp),%eax
 805c13b:	8b 00                	mov    (%eax),%eax
 805c13d:	83 ec 0c             	sub    $0xc,%esp
 805c140:	50                   	push   %eax
 805c141:	e8 f0 b9 ff ff       	call   8057b36 <isnil>
 805c146:	83 c4 10             	add    $0x10,%esp
 805c149:	85 c0                	test   %eax,%eax
 805c14b:	75 4c                	jne    805c199 <mapnode_split_child+0xf4>
 805c14d:	a1 0c 32 07 08       	mov    0x807320c,%eax
 805c152:	83 ec 0c             	sub    $0xc,%esp
 805c155:	50                   	push   %eax
 805c156:	e8 cc b7 ff ff       	call   8057927 <v_malloc>
 805c15b:	83 c4 10             	add    $0x10,%esp
 805c15e:	89 c2                	mov    %eax,%edx
 805c160:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c163:	89 10                	mov    %edx,(%eax)
 805c165:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
 805c16c:	eb 25                	jmp    805c193 <mapnode_split_child+0xee>
 805c16e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c171:	8b 00                	mov    (%eax),%eax
 805c173:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805c176:	c1 e2 02             	shl    $0x2,%edx
 805c179:	01 c2                	add    %eax,%edx
 805c17b:	8b 45 10             	mov    0x10(%ebp),%eax
 805c17e:	8b 00                	mov    (%eax),%eax
 805c180:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805c183:	83 c1 06             	add    $0x6,%ecx
 805c186:	c1 e1 02             	shl    $0x2,%ecx
 805c189:	01 c8                	add    %ecx,%eax
 805c18b:	8b 00                	mov    (%eax),%eax
 805c18d:	89 02                	mov    %eax,(%edx)
 805c18f:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
 805c193:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 805c197:	79 d5                	jns    805c16e <mapnode_split_child+0xc9>
 805c199:	8b 45 08             	mov    0x8(%ebp),%eax
 805c19c:	8b 00                	mov    (%eax),%eax
 805c19e:	83 ec 0c             	sub    $0xc,%esp
 805c1a1:	50                   	push   %eax
 805c1a2:	e8 8f b9 ff ff       	call   8057b36 <isnil>
 805c1a7:	83 c4 10             	add    $0x10,%esp
 805c1aa:	85 c0                	test   %eax,%eax
 805c1ac:	74 18                	je     805c1c6 <mapnode_split_child+0x121>
 805c1ae:	a1 0c 32 07 08       	mov    0x807320c,%eax
 805c1b3:	83 ec 0c             	sub    $0xc,%esp
 805c1b6:	50                   	push   %eax
 805c1b7:	e8 6b b7 ff ff       	call   8057927 <v_malloc>
 805c1bc:	83 c4 10             	add    $0x10,%esp
 805c1bf:	89 c2                	mov    %eax,%edx
 805c1c1:	8b 45 08             	mov    0x8(%ebp),%eax
 805c1c4:	89 10                	mov    %edx,(%eax)
 805c1c6:	8b 45 08             	mov    0x8(%ebp),%eax
 805c1c9:	8b 10                	mov    (%eax),%edx
 805c1cb:	8b 45 08             	mov    0x8(%ebp),%eax
 805c1ce:	8b 40 04             	mov    0x4(%eax),%eax
 805c1d1:	83 c0 01             	add    $0x1,%eax
 805c1d4:	c1 e0 02             	shl    $0x2,%eax
 805c1d7:	01 c2                	add    %eax,%edx
 805c1d9:	8b 45 08             	mov    0x8(%ebp),%eax
 805c1dc:	8b 08                	mov    (%eax),%ecx
 805c1de:	8b 45 08             	mov    0x8(%ebp),%eax
 805c1e1:	8b 40 04             	mov    0x4(%eax),%eax
 805c1e4:	c1 e0 02             	shl    $0x2,%eax
 805c1e7:	01 c8                	add    %ecx,%eax
 805c1e9:	8b 00                	mov    (%eax),%eax
 805c1eb:	89 02                	mov    %eax,(%edx)
 805c1ed:	8b 45 08             	mov    0x8(%ebp),%eax
 805c1f0:	8b 40 04             	mov    0x4(%eax),%eax
 805c1f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805c1f6:	eb 7d                	jmp    805c275 <mapnode_split_child+0x1d0>
 805c1f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c1fb:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805c1fe:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805c201:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c204:	89 d0                	mov    %edx,%eax
 805c206:	01 c0                	add    %eax,%eax
 805c208:	01 d0                	add    %edx,%eax
 805c20a:	c1 e0 02             	shl    $0x2,%eax
 805c20d:	8d 14 03             	lea    (%ebx,%eax,1),%edx
 805c210:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805c213:	89 c8                	mov    %ecx,%eax
 805c215:	01 c0                	add    %eax,%eax
 805c217:	01 c8                	add    %ecx,%eax
 805c219:	c1 e0 02             	shl    $0x2,%eax
 805c21c:	01 d8                	add    %ebx,%eax
 805c21e:	8b 48 08             	mov    0x8(%eax),%ecx
 805c221:	89 4a 08             	mov    %ecx,0x8(%edx)
 805c224:	8b 48 0c             	mov    0xc(%eax),%ecx
 805c227:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805c22a:	8b 40 10             	mov    0x10(%eax),%eax
 805c22d:	89 42 10             	mov    %eax,0x10(%edx)
 805c230:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c233:	8d 50 ff             	lea    -0x1(%eax),%edx
 805c236:	8b 45 08             	mov    0x8(%ebp),%eax
 805c239:	83 c2 20             	add    $0x20,%edx
 805c23c:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805c240:	8b 45 08             	mov    0x8(%ebp),%eax
 805c243:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805c246:	83 c1 20             	add    $0x20,%ecx
 805c249:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805c24d:	8b 45 08             	mov    0x8(%ebp),%eax
 805c250:	8b 00                	mov    (%eax),%eax
 805c252:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c255:	c1 e2 02             	shl    $0x2,%edx
 805c258:	01 c2                	add    %eax,%edx
 805c25a:	8b 45 08             	mov    0x8(%ebp),%eax
 805c25d:	8b 00                	mov    (%eax),%eax
 805c25f:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805c262:	81 c1 ff ff ff 3f    	add    $0x3fffffff,%ecx
 805c268:	c1 e1 02             	shl    $0x2,%ecx
 805c26b:	01 c8                	add    %ecx,%eax
 805c26d:	8b 00                	mov    (%eax),%eax
 805c26f:	89 02                	mov    %eax,(%edx)
 805c271:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
 805c275:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c278:	3b 45 0c             	cmp    0xc(%ebp),%eax
 805c27b:	0f 8f 77 ff ff ff    	jg     805c1f8 <mapnode_split_child+0x153>
 805c281:	8b 0d ec 30 07 08    	mov    0x80730ec,%ecx
 805c287:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805c28a:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c28d:	89 d0                	mov    %edx,%eax
 805c28f:	01 c0                	add    %eax,%eax
 805c291:	01 d0                	add    %edx,%eax
 805c293:	c1 e0 02             	shl    $0x2,%eax
 805c296:	8d 14 03             	lea    (%ebx,%eax,1),%edx
 805c299:	8b 5d 10             	mov    0x10(%ebp),%ebx
 805c29c:	89 c8                	mov    %ecx,%eax
 805c29e:	01 c0                	add    %eax,%eax
 805c2a0:	01 c8                	add    %ecx,%eax
 805c2a2:	c1 e0 02             	shl    $0x2,%eax
 805c2a5:	01 d8                	add    %ebx,%eax
 805c2a7:	8b 48 08             	mov    0x8(%eax),%ecx
 805c2aa:	89 4a 08             	mov    %ecx,0x8(%edx)
 805c2ad:	8b 48 0c             	mov    0xc(%eax),%ecx
 805c2b0:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805c2b3:	8b 40 10             	mov    0x10(%eax),%eax
 805c2b6:	89 42 10             	mov    %eax,0x10(%edx)
 805c2b9:	8b 15 ec 30 07 08    	mov    0x80730ec,%edx
 805c2bf:	8b 45 10             	mov    0x10(%ebp),%eax
 805c2c2:	83 c2 20             	add    $0x20,%edx
 805c2c5:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805c2c9:	8b 45 08             	mov    0x8(%ebp),%eax
 805c2cc:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805c2cf:	83 c1 20             	add    $0x20,%ecx
 805c2d2:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805c2d6:	8b 45 08             	mov    0x8(%ebp),%eax
 805c2d9:	8b 00                	mov    (%eax),%eax
 805c2db:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c2de:	c1 e2 02             	shl    $0x2,%edx
 805c2e1:	01 c2                	add    %eax,%edx
 805c2e3:	8b 45 10             	mov    0x10(%ebp),%eax
 805c2e6:	89 02                	mov    %eax,(%edx)
 805c2e8:	8b 45 08             	mov    0x8(%ebp),%eax
 805c2eb:	8b 00                	mov    (%eax),%eax
 805c2ed:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c2f0:	83 c2 01             	add    $0x1,%edx
 805c2f3:	c1 e2 02             	shl    $0x2,%edx
 805c2f6:	01 c2                	add    %eax,%edx
 805c2f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c2fb:	89 02                	mov    %eax,(%edx)
 805c2fd:	8b 45 08             	mov    0x8(%ebp),%eax
 805c300:	8b 40 04             	mov    0x4(%eax),%eax
 805c303:	8d 50 01             	lea    0x1(%eax),%edx
 805c306:	8b 45 08             	mov    0x8(%ebp),%eax
 805c309:	89 50 04             	mov    %edx,0x4(%eax)
 805c30c:	90                   	nop
 805c30d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805c310:	c9                   	leave  
 805c311:	c3                   	ret    

0805c312 <SortedMap_get>:
 805c312:	55                   	push   %ebp
 805c313:	89 e5                	mov    %esp,%ebp
 805c315:	83 ec 18             	sub    $0x18,%esp
 805c318:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c31b:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805c31e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c321:	8b 40 04             	mov    0x4(%eax),%eax
 805c324:	83 e8 01             	sub    $0x1,%eax
 805c327:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805c32a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 805c32e:	78 38                	js     805c368 <SortedMap_get+0x56>
 805c330:	83 ec 08             	sub    $0x8,%esp
 805c333:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805c336:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c339:	89 d0                	mov    %edx,%eax
 805c33b:	01 c0                	add    %eax,%eax
 805c33d:	01 d0                	add    %edx,%eax
 805c33f:	c1 e0 02             	shl    $0x2,%eax
 805c342:	01 c8                	add    %ecx,%eax
 805c344:	ff 70 10             	pushl  0x10(%eax)
 805c347:	ff 70 0c             	pushl  0xc(%eax)
 805c34a:	ff 70 08             	pushl  0x8(%eax)
 805c34d:	ff 75 1c             	pushl  0x1c(%ebp)
 805c350:	ff 75 18             	pushl  0x18(%ebp)
 805c353:	ff 75 14             	pushl  0x14(%ebp)
 805c356:	e8 90 1d 00 00       	call   805e0eb <string_lt>
 805c35b:	83 c4 20             	add    $0x20,%esp
 805c35e:	85 c0                	test   %eax,%eax
 805c360:	74 06                	je     805c368 <SortedMap_get+0x56>
 805c362:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 805c366:	eb c2                	jmp    805c32a <SortedMap_get+0x18>
 805c368:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 805c36c:	74 5b                	je     805c3c9 <SortedMap_get+0xb7>
 805c36e:	83 ec 08             	sub    $0x8,%esp
 805c371:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805c374:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c377:	89 d0                	mov    %edx,%eax
 805c379:	01 c0                	add    %eax,%eax
 805c37b:	01 d0                	add    %edx,%eax
 805c37d:	c1 e0 02             	shl    $0x2,%eax
 805c380:	01 c8                	add    %ecx,%eax
 805c382:	ff 70 10             	pushl  0x10(%eax)
 805c385:	ff 70 0c             	pushl  0xc(%eax)
 805c388:	ff 70 08             	pushl  0x8(%eax)
 805c38b:	ff 75 1c             	pushl  0x1c(%ebp)
 805c38e:	ff 75 18             	pushl  0x18(%ebp)
 805c391:	ff 75 14             	pushl  0x14(%ebp)
 805c394:	e8 bb 1c 00 00       	call   805e054 <string_eq>
 805c399:	83 c4 20             	add    $0x20,%esp
 805c39c:	85 c0                	test   %eax,%eax
 805c39e:	74 29                	je     805c3c9 <SortedMap_get+0xb7>
 805c3a0:	8b 45 08             	mov    0x8(%ebp),%eax
 805c3a3:	89 c1                	mov    %eax,%ecx
 805c3a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c3a8:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c3ab:	83 c2 20             	add    $0x20,%edx
 805c3ae:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 805c3b2:	83 ec 04             	sub    $0x4,%esp
 805c3b5:	51                   	push   %ecx
 805c3b6:	50                   	push   %eax
 805c3b7:	ff 75 20             	pushl  0x20(%ebp)
 805c3ba:	e8 01 c4 fe ff       	call   80487c0 <memcpy@plt>
 805c3bf:	83 c4 10             	add    $0x10,%esp
 805c3c2:	b8 01 00 00 00       	mov    $0x1,%eax
 805c3c7:	eb 35                	jmp    805c3fe <SortedMap_get+0xec>
 805c3c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c3cc:	8b 00                	mov    (%eax),%eax
 805c3ce:	83 ec 0c             	sub    $0xc,%esp
 805c3d1:	50                   	push   %eax
 805c3d2:	e8 5f b7 ff ff       	call   8057b36 <isnil>
 805c3d7:	83 c4 10             	add    $0x10,%esp
 805c3da:	85 c0                	test   %eax,%eax
 805c3dc:	75 1a                	jne    805c3f8 <SortedMap_get+0xe6>
 805c3de:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c3e1:	8b 00                	mov    (%eax),%eax
 805c3e3:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c3e6:	83 c2 01             	add    $0x1,%edx
 805c3e9:	c1 e2 02             	shl    $0x2,%edx
 805c3ec:	01 d0                	add    %edx,%eax
 805c3ee:	8b 00                	mov    (%eax),%eax
 805c3f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805c3f3:	e9 26 ff ff ff       	jmp    805c31e <SortedMap_get+0xc>
 805c3f8:	90                   	nop
 805c3f9:	b8 00 00 00 00       	mov    $0x0,%eax
 805c3fe:	c9                   	leave  
 805c3ff:	c3                   	ret    

0805c400 <SortedMap_exists>:
 805c400:	55                   	push   %ebp
 805c401:	89 e5                	mov    %esp,%ebp
 805c403:	83 ec 18             	sub    $0x18,%esp
 805c406:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c409:	50                   	push   %eax
 805c40a:	e8 27 b7 ff ff       	call   8057b36 <isnil>
 805c40f:	83 c4 04             	add    $0x4,%esp
 805c412:	85 c0                	test   %eax,%eax
 805c414:	74 0a                	je     805c420 <SortedMap_exists+0x20>
 805c416:	b8 00 00 00 00       	mov    $0x0,%eax
 805c41b:	e9 c4 00 00 00       	jmp    805c4e4 <SortedMap_exists+0xe4>
 805c420:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c423:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805c426:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c429:	8b 40 04             	mov    0x4(%eax),%eax
 805c42c:	83 e8 01             	sub    $0x1,%eax
 805c42f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805c432:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 805c436:	78 38                	js     805c470 <SortedMap_exists+0x70>
 805c438:	83 ec 08             	sub    $0x8,%esp
 805c43b:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805c43e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c441:	89 d0                	mov    %edx,%eax
 805c443:	01 c0                	add    %eax,%eax
 805c445:	01 d0                	add    %edx,%eax
 805c447:	c1 e0 02             	shl    $0x2,%eax
 805c44a:	01 c8                	add    %ecx,%eax
 805c44c:	ff 70 10             	pushl  0x10(%eax)
 805c44f:	ff 70 0c             	pushl  0xc(%eax)
 805c452:	ff 70 08             	pushl  0x8(%eax)
 805c455:	ff 75 1c             	pushl  0x1c(%ebp)
 805c458:	ff 75 18             	pushl  0x18(%ebp)
 805c45b:	ff 75 14             	pushl  0x14(%ebp)
 805c45e:	e8 88 1c 00 00       	call   805e0eb <string_lt>
 805c463:	83 c4 20             	add    $0x20,%esp
 805c466:	85 c0                	test   %eax,%eax
 805c468:	74 06                	je     805c470 <SortedMap_exists+0x70>
 805c46a:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 805c46e:	eb c2                	jmp    805c432 <SortedMap_exists+0x32>
 805c470:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 805c474:	74 39                	je     805c4af <SortedMap_exists+0xaf>
 805c476:	83 ec 08             	sub    $0x8,%esp
 805c479:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805c47c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c47f:	89 d0                	mov    %edx,%eax
 805c481:	01 c0                	add    %eax,%eax
 805c483:	01 d0                	add    %edx,%eax
 805c485:	c1 e0 02             	shl    $0x2,%eax
 805c488:	01 c8                	add    %ecx,%eax
 805c48a:	ff 70 10             	pushl  0x10(%eax)
 805c48d:	ff 70 0c             	pushl  0xc(%eax)
 805c490:	ff 70 08             	pushl  0x8(%eax)
 805c493:	ff 75 1c             	pushl  0x1c(%ebp)
 805c496:	ff 75 18             	pushl  0x18(%ebp)
 805c499:	ff 75 14             	pushl  0x14(%ebp)
 805c49c:	e8 b3 1b 00 00       	call   805e054 <string_eq>
 805c4a1:	83 c4 20             	add    $0x20,%esp
 805c4a4:	85 c0                	test   %eax,%eax
 805c4a6:	74 07                	je     805c4af <SortedMap_exists+0xaf>
 805c4a8:	b8 01 00 00 00       	mov    $0x1,%eax
 805c4ad:	eb 35                	jmp    805c4e4 <SortedMap_exists+0xe4>
 805c4af:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c4b2:	8b 00                	mov    (%eax),%eax
 805c4b4:	83 ec 0c             	sub    $0xc,%esp
 805c4b7:	50                   	push   %eax
 805c4b8:	e8 79 b6 ff ff       	call   8057b36 <isnil>
 805c4bd:	83 c4 10             	add    $0x10,%esp
 805c4c0:	85 c0                	test   %eax,%eax
 805c4c2:	75 1a                	jne    805c4de <SortedMap_exists+0xde>
 805c4c4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805c4c7:	8b 00                	mov    (%eax),%eax
 805c4c9:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c4cc:	83 c2 01             	add    $0x1,%edx
 805c4cf:	c1 e2 02             	shl    $0x2,%edx
 805c4d2:	01 d0                	add    %edx,%eax
 805c4d4:	8b 00                	mov    (%eax),%eax
 805c4d6:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805c4d9:	e9 48 ff ff ff       	jmp    805c426 <SortedMap_exists+0x26>
 805c4de:	90                   	nop
 805c4df:	b8 00 00 00 00       	mov    $0x0,%eax
 805c4e4:	c9                   	leave  
 805c4e5:	c3                   	ret    

0805c4e6 <mapnode_find_key>:
 805c4e6:	55                   	push   %ebp
 805c4e7:	89 e5                	mov    %esp,%ebp
 805c4e9:	83 ec 18             	sub    $0x18,%esp
 805c4ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805c4f3:	8b 45 08             	mov    0x8(%ebp),%eax
 805c4f6:	8b 40 04             	mov    0x4(%eax),%eax
 805c4f9:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805c4fc:	7e 38                	jle    805c536 <mapnode_find_key+0x50>
 805c4fe:	83 ec 08             	sub    $0x8,%esp
 805c501:	ff 75 14             	pushl  0x14(%ebp)
 805c504:	ff 75 10             	pushl  0x10(%ebp)
 805c507:	ff 75 0c             	pushl  0xc(%ebp)
 805c50a:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805c50d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c510:	89 d0                	mov    %edx,%eax
 805c512:	01 c0                	add    %eax,%eax
 805c514:	01 d0                	add    %edx,%eax
 805c516:	c1 e0 02             	shl    $0x2,%eax
 805c519:	01 c8                	add    %ecx,%eax
 805c51b:	ff 70 10             	pushl  0x10(%eax)
 805c51e:	ff 70 0c             	pushl  0xc(%eax)
 805c521:	ff 70 08             	pushl  0x8(%eax)
 805c524:	e8 c2 1b 00 00       	call   805e0eb <string_lt>
 805c529:	83 c4 20             	add    $0x20,%esp
 805c52c:	85 c0                	test   %eax,%eax
 805c52e:	74 06                	je     805c536 <mapnode_find_key+0x50>
 805c530:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805c534:	eb bd                	jmp    805c4f3 <mapnode_find_key+0xd>
 805c536:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805c539:	c9                   	leave  
 805c53a:	c3                   	ret    

0805c53b <mapnode_remove_key>:
 805c53b:	55                   	push   %ebp
 805c53c:	89 e5                	mov    %esp,%ebp
 805c53e:	83 ec 18             	sub    $0x18,%esp
 805c541:	ff 75 14             	pushl  0x14(%ebp)
 805c544:	ff 75 10             	pushl  0x10(%ebp)
 805c547:	ff 75 0c             	pushl  0xc(%ebp)
 805c54a:	ff 75 08             	pushl  0x8(%ebp)
 805c54d:	e8 94 ff ff ff       	call   805c4e6 <mapnode_find_key>
 805c552:	83 c4 10             	add    $0x10,%esp
 805c555:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805c558:	8b 45 08             	mov    0x8(%ebp),%eax
 805c55b:	8b 40 04             	mov    0x4(%eax),%eax
 805c55e:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805c561:	7e 75                	jle    805c5d8 <mapnode_remove_key+0x9d>
 805c563:	83 ec 08             	sub    $0x8,%esp
 805c566:	ff 75 14             	pushl  0x14(%ebp)
 805c569:	ff 75 10             	pushl  0x10(%ebp)
 805c56c:	ff 75 0c             	pushl  0xc(%ebp)
 805c56f:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805c572:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c575:	89 d0                	mov    %edx,%eax
 805c577:	01 c0                	add    %eax,%eax
 805c579:	01 d0                	add    %edx,%eax
 805c57b:	c1 e0 02             	shl    $0x2,%eax
 805c57e:	01 c8                	add    %ecx,%eax
 805c580:	ff 70 10             	pushl  0x10(%eax)
 805c583:	ff 70 0c             	pushl  0xc(%eax)
 805c586:	ff 70 08             	pushl  0x8(%eax)
 805c589:	e8 c6 1a 00 00       	call   805e054 <string_eq>
 805c58e:	83 c4 20             	add    $0x20,%esp
 805c591:	85 c0                	test   %eax,%eax
 805c593:	74 43                	je     805c5d8 <mapnode_remove_key+0x9d>
 805c595:	8b 45 08             	mov    0x8(%ebp),%eax
 805c598:	8b 00                	mov    (%eax),%eax
 805c59a:	83 ec 0c             	sub    $0xc,%esp
 805c59d:	50                   	push   %eax
 805c59e:	e8 93 b5 ff ff       	call   8057b36 <isnil>
 805c5a3:	83 c4 10             	add    $0x10,%esp
 805c5a6:	85 c0                	test   %eax,%eax
 805c5a8:	74 13                	je     805c5bd <mapnode_remove_key+0x82>
 805c5aa:	83 ec 08             	sub    $0x8,%esp
 805c5ad:	ff 75 f0             	pushl  -0x10(%ebp)
 805c5b0:	ff 75 08             	pushl  0x8(%ebp)
 805c5b3:	e8 d3 00 00 00       	call   805c68b <mapnode_remove_from_leaf>
 805c5b8:	83 c4 10             	add    $0x10,%esp
 805c5bb:	eb 11                	jmp    805c5ce <mapnode_remove_key+0x93>
 805c5bd:	83 ec 08             	sub    $0x8,%esp
 805c5c0:	ff 75 f0             	pushl  -0x10(%ebp)
 805c5c3:	ff 75 08             	pushl  0x8(%ebp)
 805c5c6:	e8 4c 01 00 00       	call   805c717 <mapnode_remove_from_non_leaf>
 805c5cb:	83 c4 10             	add    $0x10,%esp
 805c5ce:	b8 01 00 00 00       	mov    $0x1,%eax
 805c5d3:	e9 b1 00 00 00       	jmp    805c689 <mapnode_remove_key+0x14e>
 805c5d8:	8b 45 08             	mov    0x8(%ebp),%eax
 805c5db:	8b 00                	mov    (%eax),%eax
 805c5dd:	83 ec 0c             	sub    $0xc,%esp
 805c5e0:	50                   	push   %eax
 805c5e1:	e8 50 b5 ff ff       	call   8057b36 <isnil>
 805c5e6:	83 c4 10             	add    $0x10,%esp
 805c5e9:	85 c0                	test   %eax,%eax
 805c5eb:	74 0a                	je     805c5f7 <mapnode_remove_key+0xbc>
 805c5ed:	b8 00 00 00 00       	mov    $0x0,%eax
 805c5f2:	e9 92 00 00 00       	jmp    805c689 <mapnode_remove_key+0x14e>
 805c5f7:	8b 45 08             	mov    0x8(%ebp),%eax
 805c5fa:	8b 40 04             	mov    0x4(%eax),%eax
 805c5fd:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805c600:	0f 94 c0             	sete   %al
 805c603:	0f b6 c0             	movzbl %al,%eax
 805c606:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805c609:	8b 45 08             	mov    0x8(%ebp),%eax
 805c60c:	8b 00                	mov    (%eax),%eax
 805c60e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c611:	c1 e2 02             	shl    $0x2,%edx
 805c614:	01 d0                	add    %edx,%eax
 805c616:	8b 00                	mov    (%eax),%eax
 805c618:	8b 40 04             	mov    0x4(%eax),%eax
 805c61b:	83 f8 05             	cmp    $0x5,%eax
 805c61e:	7f 11                	jg     805c631 <mapnode_remove_key+0xf6>
 805c620:	83 ec 08             	sub    $0x8,%esp
 805c623:	ff 75 f0             	pushl  -0x10(%ebp)
 805c626:	ff 75 08             	pushl  0x8(%ebp)
 805c629:	e8 08 03 00 00       	call   805c936 <mapnode_fill>
 805c62e:	83 c4 10             	add    $0x10,%esp
 805c631:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805c638:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 805c63c:	74 25                	je     805c663 <mapnode_remove_key+0x128>
 805c63e:	8b 45 08             	mov    0x8(%ebp),%eax
 805c641:	8b 40 04             	mov    0x4(%eax),%eax
 805c644:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805c647:	7d 1a                	jge    805c663 <mapnode_remove_key+0x128>
 805c649:	8b 45 08             	mov    0x8(%ebp),%eax
 805c64c:	8b 00                	mov    (%eax),%eax
 805c64e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c651:	81 c2 ff ff ff 3f    	add    $0x3fffffff,%edx
 805c657:	c1 e2 02             	shl    $0x2,%edx
 805c65a:	01 d0                	add    %edx,%eax
 805c65c:	8b 00                	mov    (%eax),%eax
 805c65e:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805c661:	eb 12                	jmp    805c675 <mapnode_remove_key+0x13a>
 805c663:	8b 45 08             	mov    0x8(%ebp),%eax
 805c666:	8b 00                	mov    (%eax),%eax
 805c668:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c66b:	c1 e2 02             	shl    $0x2,%edx
 805c66e:	01 d0                	add    %edx,%eax
 805c670:	8b 00                	mov    (%eax),%eax
 805c672:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805c675:	ff 75 14             	pushl  0x14(%ebp)
 805c678:	ff 75 10             	pushl  0x10(%ebp)
 805c67b:	ff 75 0c             	pushl  0xc(%ebp)
 805c67e:	ff 75 ec             	pushl  -0x14(%ebp)
 805c681:	e8 b5 fe ff ff       	call   805c53b <mapnode_remove_key>
 805c686:	83 c4 10             	add    $0x10,%esp
 805c689:	c9                   	leave  
 805c68a:	c3                   	ret    

0805c68b <mapnode_remove_from_leaf>:
 805c68b:	55                   	push   %ebp
 805c68c:	89 e5                	mov    %esp,%ebp
 805c68e:	53                   	push   %ebx
 805c68f:	83 ec 10             	sub    $0x10,%esp
 805c692:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c695:	83 c0 01             	add    $0x1,%eax
 805c698:	89 45 f8             	mov    %eax,-0x8(%ebp)
 805c69b:	eb 59                	jmp    805c6f6 <mapnode_remove_from_leaf+0x6b>
 805c69d:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805c6a0:	8d 50 ff             	lea    -0x1(%eax),%edx
 805c6a3:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805c6a6:	89 d0                	mov    %edx,%eax
 805c6a8:	01 c0                	add    %eax,%eax
 805c6aa:	01 d0                	add    %edx,%eax
 805c6ac:	c1 e0 02             	shl    $0x2,%eax
 805c6af:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805c6b2:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805c6b5:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 805c6b8:	89 c8                	mov    %ecx,%eax
 805c6ba:	01 c0                	add    %eax,%eax
 805c6bc:	01 c8                	add    %ecx,%eax
 805c6be:	c1 e0 02             	shl    $0x2,%eax
 805c6c1:	01 d8                	add    %ebx,%eax
 805c6c3:	8b 48 08             	mov    0x8(%eax),%ecx
 805c6c6:	89 4a 08             	mov    %ecx,0x8(%edx)
 805c6c9:	8b 48 0c             	mov    0xc(%eax),%ecx
 805c6cc:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805c6cf:	8b 40 10             	mov    0x10(%eax),%eax
 805c6d2:	89 42 10             	mov    %eax,0x10(%edx)
 805c6d5:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805c6d8:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805c6db:	8b 45 08             	mov    0x8(%ebp),%eax
 805c6de:	8b 55 f8             	mov    -0x8(%ebp),%edx
 805c6e1:	83 c2 20             	add    $0x20,%edx
 805c6e4:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805c6e8:	8b 45 08             	mov    0x8(%ebp),%eax
 805c6eb:	83 c1 20             	add    $0x20,%ecx
 805c6ee:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805c6f2:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 805c6f6:	8b 45 08             	mov    0x8(%ebp),%eax
 805c6f9:	8b 40 04             	mov    0x4(%eax),%eax
 805c6fc:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 805c6ff:	7f 9c                	jg     805c69d <mapnode_remove_from_leaf+0x12>
 805c701:	8b 45 08             	mov    0x8(%ebp),%eax
 805c704:	8b 40 04             	mov    0x4(%eax),%eax
 805c707:	8d 50 ff             	lea    -0x1(%eax),%edx
 805c70a:	8b 45 08             	mov    0x8(%ebp),%eax
 805c70d:	89 50 04             	mov    %edx,0x4(%eax)
 805c710:	90                   	nop
 805c711:	83 c4 10             	add    $0x10,%esp
 805c714:	5b                   	pop    %ebx
 805c715:	5d                   	pop    %ebp
 805c716:	c3                   	ret    

0805c717 <mapnode_remove_from_non_leaf>:
 805c717:	55                   	push   %ebp
 805c718:	89 e5                	mov    %esp,%ebp
 805c71a:	83 ec 38             	sub    $0x38,%esp
 805c71d:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805c720:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c723:	89 d0                	mov    %edx,%eax
 805c725:	01 c0                	add    %eax,%eax
 805c727:	01 d0                	add    %edx,%eax
 805c729:	c1 e0 02             	shl    $0x2,%eax
 805c72c:	01 c8                	add    %ecx,%eax
 805c72e:	8b 50 08             	mov    0x8(%eax),%edx
 805c731:	89 55 e0             	mov    %edx,-0x20(%ebp)
 805c734:	8b 50 0c             	mov    0xc(%eax),%edx
 805c737:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 805c73a:	8b 40 10             	mov    0x10(%eax),%eax
 805c73d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805c740:	8b 45 08             	mov    0x8(%ebp),%eax
 805c743:	8b 00                	mov    (%eax),%eax
 805c745:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c748:	c1 e2 02             	shl    $0x2,%edx
 805c74b:	01 d0                	add    %edx,%eax
 805c74d:	8b 00                	mov    (%eax),%eax
 805c74f:	8b 40 04             	mov    0x4(%eax),%eax
 805c752:	83 f8 05             	cmp    $0x5,%eax
 805c755:	0f 8e d3 00 00 00    	jle    805c82e <mapnode_remove_from_non_leaf+0x117>
 805c75b:	8b 45 08             	mov    0x8(%ebp),%eax
 805c75e:	8b 00                	mov    (%eax),%eax
 805c760:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c763:	c1 e2 02             	shl    $0x2,%edx
 805c766:	01 d0                	add    %edx,%eax
 805c768:	8b 00                	mov    (%eax),%eax
 805c76a:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805c76d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805c770:	8b 00                	mov    (%eax),%eax
 805c772:	50                   	push   %eax
 805c773:	e8 be b3 ff ff       	call   8057b36 <isnil>
 805c778:	83 c4 04             	add    $0x4,%esp
 805c77b:	85 c0                	test   %eax,%eax
 805c77d:	75 17                	jne    805c796 <mapnode_remove_from_non_leaf+0x7f>
 805c77f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805c782:	8b 10                	mov    (%eax),%edx
 805c784:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805c787:	8b 40 04             	mov    0x4(%eax),%eax
 805c78a:	c1 e0 02             	shl    $0x2,%eax
 805c78d:	01 d0                	add    %edx,%eax
 805c78f:	8b 00                	mov    (%eax),%eax
 805c791:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805c794:	eb d7                	jmp    805c76d <mapnode_remove_from_non_leaf+0x56>
 805c796:	90                   	nop
 805c797:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805c79a:	8b 40 04             	mov    0x4(%eax),%eax
 805c79d:	8d 50 ff             	lea    -0x1(%eax),%edx
 805c7a0:	8b 4d cc             	mov    -0x34(%ebp),%ecx
 805c7a3:	89 d0                	mov    %edx,%eax
 805c7a5:	01 c0                	add    %eax,%eax
 805c7a7:	01 d0                	add    %edx,%eax
 805c7a9:	c1 e0 02             	shl    $0x2,%eax
 805c7ac:	01 c8                	add    %ecx,%eax
 805c7ae:	8b 50 08             	mov    0x8(%eax),%edx
 805c7b1:	89 55 ec             	mov    %edx,-0x14(%ebp)
 805c7b4:	8b 50 0c             	mov    0xc(%eax),%edx
 805c7b7:	89 55 f0             	mov    %edx,-0x10(%ebp)
 805c7ba:	8b 40 10             	mov    0x10(%eax),%eax
 805c7bd:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805c7c0:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805c7c3:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c7c6:	89 d0                	mov    %edx,%eax
 805c7c8:	01 c0                	add    %eax,%eax
 805c7ca:	01 d0                	add    %edx,%eax
 805c7cc:	c1 e0 02             	shl    $0x2,%eax
 805c7cf:	01 c8                	add    %ecx,%eax
 805c7d1:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805c7d4:	89 50 08             	mov    %edx,0x8(%eax)
 805c7d7:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c7da:	89 50 0c             	mov    %edx,0xc(%eax)
 805c7dd:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c7e0:	89 50 10             	mov    %edx,0x10(%eax)
 805c7e3:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805c7e6:	8b 40 04             	mov    0x4(%eax),%eax
 805c7e9:	8d 50 ff             	lea    -0x1(%eax),%edx
 805c7ec:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805c7ef:	83 c2 20             	add    $0x20,%edx
 805c7f2:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805c7f6:	8b 45 08             	mov    0x8(%ebp),%eax
 805c7f9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805c7fc:	83 c1 20             	add    $0x20,%ecx
 805c7ff:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805c803:	8b 45 08             	mov    0x8(%ebp),%eax
 805c806:	8b 00                	mov    (%eax),%eax
 805c808:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c80b:	c1 e2 02             	shl    $0x2,%edx
 805c80e:	01 d0                	add    %edx,%eax
 805c810:	8b 00                	mov    (%eax),%eax
 805c812:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805c815:	ff 75 f4             	pushl  -0xc(%ebp)
 805c818:	ff 75 f0             	pushl  -0x10(%ebp)
 805c81b:	ff 75 ec             	pushl  -0x14(%ebp)
 805c81e:	ff 75 d4             	pushl  -0x2c(%ebp)
 805c821:	e8 15 fd ff ff       	call   805c53b <mapnode_remove_key>
 805c826:	83 c4 10             	add    $0x10,%esp
 805c829:	e9 05 01 00 00       	jmp    805c933 <mapnode_remove_from_non_leaf+0x21c>
 805c82e:	8b 45 08             	mov    0x8(%ebp),%eax
 805c831:	8b 00                	mov    (%eax),%eax
 805c833:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c836:	83 c2 01             	add    $0x1,%edx
 805c839:	c1 e2 02             	shl    $0x2,%edx
 805c83c:	01 d0                	add    %edx,%eax
 805c83e:	8b 00                	mov    (%eax),%eax
 805c840:	8b 40 04             	mov    0x4(%eax),%eax
 805c843:	83 f8 05             	cmp    $0x5,%eax
 805c846:	0f 8e b0 00 00 00    	jle    805c8fc <mapnode_remove_from_non_leaf+0x1e5>
 805c84c:	8b 45 08             	mov    0x8(%ebp),%eax
 805c84f:	8b 00                	mov    (%eax),%eax
 805c851:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c854:	83 c2 01             	add    $0x1,%edx
 805c857:	c1 e2 02             	shl    $0x2,%edx
 805c85a:	01 d0                	add    %edx,%eax
 805c85c:	8b 00                	mov    (%eax),%eax
 805c85e:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805c861:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805c864:	8b 00                	mov    (%eax),%eax
 805c866:	83 ec 0c             	sub    $0xc,%esp
 805c869:	50                   	push   %eax
 805c86a:	e8 c7 b2 ff ff       	call   8057b36 <isnil>
 805c86f:	83 c4 10             	add    $0x10,%esp
 805c872:	85 c0                	test   %eax,%eax
 805c874:	75 0c                	jne    805c882 <mapnode_remove_from_non_leaf+0x16b>
 805c876:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805c879:	8b 00                	mov    (%eax),%eax
 805c87b:	8b 00                	mov    (%eax),%eax
 805c87d:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805c880:	eb df                	jmp    805c861 <mapnode_remove_from_non_leaf+0x14a>
 805c882:	90                   	nop
 805c883:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805c886:	8b 50 08             	mov    0x8(%eax),%edx
 805c889:	89 55 ec             	mov    %edx,-0x14(%ebp)
 805c88c:	8b 50 0c             	mov    0xc(%eax),%edx
 805c88f:	89 55 f0             	mov    %edx,-0x10(%ebp)
 805c892:	8b 40 10             	mov    0x10(%eax),%eax
 805c895:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805c898:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805c89b:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c89e:	89 d0                	mov    %edx,%eax
 805c8a0:	01 c0                	add    %eax,%eax
 805c8a2:	01 d0                	add    %edx,%eax
 805c8a4:	c1 e0 02             	shl    $0x2,%eax
 805c8a7:	01 c8                	add    %ecx,%eax
 805c8a9:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805c8ac:	89 50 08             	mov    %edx,0x8(%eax)
 805c8af:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805c8b2:	89 50 0c             	mov    %edx,0xc(%eax)
 805c8b5:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805c8b8:	89 50 10             	mov    %edx,0x10(%eax)
 805c8bb:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805c8be:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx
 805c8c4:	8b 45 08             	mov    0x8(%ebp),%eax
 805c8c7:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805c8ca:	83 c1 20             	add    $0x20,%ecx
 805c8cd:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805c8d1:	8b 45 08             	mov    0x8(%ebp),%eax
 805c8d4:	8b 00                	mov    (%eax),%eax
 805c8d6:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c8d9:	83 c2 01             	add    $0x1,%edx
 805c8dc:	c1 e2 02             	shl    $0x2,%edx
 805c8df:	01 d0                	add    %edx,%eax
 805c8e1:	8b 00                	mov    (%eax),%eax
 805c8e3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805c8e6:	ff 75 f4             	pushl  -0xc(%ebp)
 805c8e9:	ff 75 f0             	pushl  -0x10(%ebp)
 805c8ec:	ff 75 ec             	pushl  -0x14(%ebp)
 805c8ef:	ff 75 d8             	pushl  -0x28(%ebp)
 805c8f2:	e8 44 fc ff ff       	call   805c53b <mapnode_remove_key>
 805c8f7:	83 c4 10             	add    $0x10,%esp
 805c8fa:	eb 37                	jmp    805c933 <mapnode_remove_from_non_leaf+0x21c>
 805c8fc:	83 ec 08             	sub    $0x8,%esp
 805c8ff:	ff 75 0c             	pushl  0xc(%ebp)
 805c902:	ff 75 08             	pushl  0x8(%ebp)
 805c905:	e8 7d 04 00 00       	call   805cd87 <mapnode_merge>
 805c90a:	83 c4 10             	add    $0x10,%esp
 805c90d:	8b 45 08             	mov    0x8(%ebp),%eax
 805c910:	8b 00                	mov    (%eax),%eax
 805c912:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c915:	c1 e2 02             	shl    $0x2,%edx
 805c918:	01 d0                	add    %edx,%eax
 805c91a:	8b 00                	mov    (%eax),%eax
 805c91c:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805c91f:	ff 75 e8             	pushl  -0x18(%ebp)
 805c922:	ff 75 e4             	pushl  -0x1c(%ebp)
 805c925:	ff 75 e0             	pushl  -0x20(%ebp)
 805c928:	ff 75 dc             	pushl  -0x24(%ebp)
 805c92b:	e8 0b fc ff ff       	call   805c53b <mapnode_remove_key>
 805c930:	83 c4 10             	add    $0x10,%esp
 805c933:	90                   	nop
 805c934:	c9                   	leave  
 805c935:	c3                   	ret    

0805c936 <mapnode_fill>:
 805c936:	55                   	push   %ebp
 805c937:	89 e5                	mov    %esp,%ebp
 805c939:	83 ec 08             	sub    $0x8,%esp
 805c93c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 805c940:	74 30                	je     805c972 <mapnode_fill+0x3c>
 805c942:	8b 45 08             	mov    0x8(%ebp),%eax
 805c945:	8b 00                	mov    (%eax),%eax
 805c947:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c94a:	81 c2 ff ff ff 3f    	add    $0x3fffffff,%edx
 805c950:	c1 e2 02             	shl    $0x2,%edx
 805c953:	01 d0                	add    %edx,%eax
 805c955:	8b 00                	mov    (%eax),%eax
 805c957:	8b 40 04             	mov    0x4(%eax),%eax
 805c95a:	83 f8 05             	cmp    $0x5,%eax
 805c95d:	7e 13                	jle    805c972 <mapnode_fill+0x3c>
 805c95f:	83 ec 08             	sub    $0x8,%esp
 805c962:	ff 75 0c             	pushl  0xc(%ebp)
 805c965:	ff 75 08             	pushl  0x8(%ebp)
 805c968:	e8 75 00 00 00       	call   805c9e2 <mapnode_borrow_from_prev>
 805c96d:	83 c4 10             	add    $0x10,%esp
 805c970:	eb 6d                	jmp    805c9df <mapnode_fill+0xa9>
 805c972:	8b 45 08             	mov    0x8(%ebp),%eax
 805c975:	8b 40 04             	mov    0x4(%eax),%eax
 805c978:	3b 45 0c             	cmp    0xc(%ebp),%eax
 805c97b:	74 2d                	je     805c9aa <mapnode_fill+0x74>
 805c97d:	8b 45 08             	mov    0x8(%ebp),%eax
 805c980:	8b 00                	mov    (%eax),%eax
 805c982:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c985:	83 c2 01             	add    $0x1,%edx
 805c988:	c1 e2 02             	shl    $0x2,%edx
 805c98b:	01 d0                	add    %edx,%eax
 805c98d:	8b 00                	mov    (%eax),%eax
 805c98f:	8b 40 04             	mov    0x4(%eax),%eax
 805c992:	83 f8 05             	cmp    $0x5,%eax
 805c995:	7e 13                	jle    805c9aa <mapnode_fill+0x74>
 805c997:	83 ec 08             	sub    $0x8,%esp
 805c99a:	ff 75 0c             	pushl  0xc(%ebp)
 805c99d:	ff 75 08             	pushl  0x8(%ebp)
 805c9a0:	e8 15 02 00 00       	call   805cbba <mapnode_borrow_from_next>
 805c9a5:	83 c4 10             	add    $0x10,%esp
 805c9a8:	eb 35                	jmp    805c9df <mapnode_fill+0xa9>
 805c9aa:	8b 45 08             	mov    0x8(%ebp),%eax
 805c9ad:	8b 40 04             	mov    0x4(%eax),%eax
 805c9b0:	3b 45 0c             	cmp    0xc(%ebp),%eax
 805c9b3:	74 13                	je     805c9c8 <mapnode_fill+0x92>
 805c9b5:	83 ec 08             	sub    $0x8,%esp
 805c9b8:	ff 75 0c             	pushl  0xc(%ebp)
 805c9bb:	ff 75 08             	pushl  0x8(%ebp)
 805c9be:	e8 c4 03 00 00       	call   805cd87 <mapnode_merge>
 805c9c3:	83 c4 10             	add    $0x10,%esp
 805c9c6:	eb 17                	jmp    805c9df <mapnode_fill+0xa9>
 805c9c8:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c9cb:	83 e8 01             	sub    $0x1,%eax
 805c9ce:	83 ec 08             	sub    $0x8,%esp
 805c9d1:	50                   	push   %eax
 805c9d2:	ff 75 08             	pushl  0x8(%ebp)
 805c9d5:	e8 ad 03 00 00       	call   805cd87 <mapnode_merge>
 805c9da:	83 c4 10             	add    $0x10,%esp
 805c9dd:	eb 00                	jmp    805c9df <mapnode_fill+0xa9>
 805c9df:	90                   	nop
 805c9e0:	c9                   	leave  
 805c9e1:	c3                   	ret    

0805c9e2 <mapnode_borrow_from_prev>:
 805c9e2:	55                   	push   %ebp
 805c9e3:	89 e5                	mov    %esp,%ebp
 805c9e5:	53                   	push   %ebx
 805c9e6:	83 ec 10             	sub    $0x10,%esp
 805c9e9:	8b 45 08             	mov    0x8(%ebp),%eax
 805c9ec:	8b 00                	mov    (%eax),%eax
 805c9ee:	8b 55 0c             	mov    0xc(%ebp),%edx
 805c9f1:	c1 e2 02             	shl    $0x2,%edx
 805c9f4:	01 d0                	add    %edx,%eax
 805c9f6:	8b 00                	mov    (%eax),%eax
 805c9f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805c9fb:	8b 45 08             	mov    0x8(%ebp),%eax
 805c9fe:	8b 00                	mov    (%eax),%eax
 805ca00:	8b 55 0c             	mov    0xc(%ebp),%edx
 805ca03:	81 c2 ff ff ff 3f    	add    $0x3fffffff,%edx
 805ca09:	c1 e2 02             	shl    $0x2,%edx
 805ca0c:	01 d0                	add    %edx,%eax
 805ca0e:	8b 00                	mov    (%eax),%eax
 805ca10:	89 45 f8             	mov    %eax,-0x8(%ebp)
 805ca13:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ca16:	8b 40 04             	mov    0x4(%eax),%eax
 805ca19:	83 e8 01             	sub    $0x1,%eax
 805ca1c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805ca1f:	eb 59                	jmp    805ca7a <mapnode_borrow_from_prev+0x98>
 805ca21:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805ca24:	8d 50 01             	lea    0x1(%eax),%edx
 805ca27:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805ca2a:	89 d0                	mov    %edx,%eax
 805ca2c:	01 c0                	add    %eax,%eax
 805ca2e:	01 d0                	add    %edx,%eax
 805ca30:	c1 e0 02             	shl    $0x2,%eax
 805ca33:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805ca36:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 805ca39:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805ca3c:	89 c8                	mov    %ecx,%eax
 805ca3e:	01 c0                	add    %eax,%eax
 805ca40:	01 c8                	add    %ecx,%eax
 805ca42:	c1 e0 02             	shl    $0x2,%eax
 805ca45:	01 d8                	add    %ebx,%eax
 805ca47:	8b 48 08             	mov    0x8(%eax),%ecx
 805ca4a:	89 4a 08             	mov    %ecx,0x8(%edx)
 805ca4d:	8b 48 0c             	mov    0xc(%eax),%ecx
 805ca50:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805ca53:	8b 40 10             	mov    0x10(%eax),%eax
 805ca56:	89 42 10             	mov    %eax,0x10(%edx)
 805ca59:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805ca5c:	8d 48 01             	lea    0x1(%eax),%ecx
 805ca5f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ca62:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805ca65:	83 c2 20             	add    $0x20,%edx
 805ca68:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805ca6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ca6f:	83 c1 20             	add    $0x20,%ecx
 805ca72:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805ca76:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
 805ca7a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 805ca7e:	79 a1                	jns    805ca21 <mapnode_borrow_from_prev+0x3f>
 805ca80:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ca83:	8b 00                	mov    (%eax),%eax
 805ca85:	50                   	push   %eax
 805ca86:	e8 ab b0 ff ff       	call   8057b36 <isnil>
 805ca8b:	83 c4 04             	add    $0x4,%esp
 805ca8e:	85 c0                	test   %eax,%eax
 805ca90:	75 36                	jne    805cac8 <mapnode_borrow_from_prev+0xe6>
 805ca92:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ca95:	8b 40 04             	mov    0x4(%eax),%eax
 805ca98:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805ca9b:	eb 25                	jmp    805cac2 <mapnode_borrow_from_prev+0xe0>
 805ca9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805caa0:	8b 00                	mov    (%eax),%eax
 805caa2:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805caa5:	83 c2 01             	add    $0x1,%edx
 805caa8:	c1 e2 02             	shl    $0x2,%edx
 805caab:	01 c2                	add    %eax,%edx
 805caad:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cab0:	8b 00                	mov    (%eax),%eax
 805cab2:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805cab5:	c1 e1 02             	shl    $0x2,%ecx
 805cab8:	01 c8                	add    %ecx,%eax
 805caba:	8b 00                	mov    (%eax),%eax
 805cabc:	89 02                	mov    %eax,(%edx)
 805cabe:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
 805cac2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 805cac6:	79 d5                	jns    805ca9d <mapnode_borrow_from_prev+0xbb>
 805cac8:	8b 45 0c             	mov    0xc(%ebp),%eax
 805cacb:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805cace:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805cad1:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805cad4:	89 c8                	mov    %ecx,%eax
 805cad6:	01 c0                	add    %eax,%eax
 805cad8:	01 c8                	add    %ecx,%eax
 805cada:	c1 e0 02             	shl    $0x2,%eax
 805cadd:	01 d8                	add    %ebx,%eax
 805cadf:	8b 48 08             	mov    0x8(%eax),%ecx
 805cae2:	89 4a 08             	mov    %ecx,0x8(%edx)
 805cae5:	8b 48 0c             	mov    0xc(%eax),%ecx
 805cae8:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805caeb:	8b 40 10             	mov    0x10(%eax),%eax
 805caee:	89 42 10             	mov    %eax,0x10(%edx)
 805caf1:	8b 45 0c             	mov    0xc(%ebp),%eax
 805caf4:	8d 50 ff             	lea    -0x1(%eax),%edx
 805caf7:	8b 45 08             	mov    0x8(%ebp),%eax
 805cafa:	83 c2 20             	add    $0x20,%edx
 805cafd:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805cb01:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cb04:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)
 805cb0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cb0d:	8b 00                	mov    (%eax),%eax
 805cb0f:	50                   	push   %eax
 805cb10:	e8 21 b0 ff ff       	call   8057b36 <isnil>
 805cb15:	83 c4 04             	add    $0x4,%esp
 805cb18:	85 c0                	test   %eax,%eax
 805cb1a:	75 19                	jne    805cb35 <mapnode_borrow_from_prev+0x153>
 805cb1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cb1f:	8b 00                	mov    (%eax),%eax
 805cb21:	8b 55 f8             	mov    -0x8(%ebp),%edx
 805cb24:	8b 0a                	mov    (%edx),%ecx
 805cb26:	8b 55 f8             	mov    -0x8(%ebp),%edx
 805cb29:	8b 52 04             	mov    0x4(%edx),%edx
 805cb2c:	c1 e2 02             	shl    $0x2,%edx
 805cb2f:	01 ca                	add    %ecx,%edx
 805cb31:	8b 12                	mov    (%edx),%edx
 805cb33:	89 10                	mov    %edx,(%eax)
 805cb35:	8b 45 0c             	mov    0xc(%ebp),%eax
 805cb38:	8d 50 ff             	lea    -0x1(%eax),%edx
 805cb3b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cb3e:	8b 40 04             	mov    0x4(%eax),%eax
 805cb41:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805cb44:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805cb47:	89 d0                	mov    %edx,%eax
 805cb49:	01 c0                	add    %eax,%eax
 805cb4b:	01 d0                	add    %edx,%eax
 805cb4d:	c1 e0 02             	shl    $0x2,%eax
 805cb50:	8d 14 03             	lea    (%ebx,%eax,1),%edx
 805cb53:	8b 5d f8             	mov    -0x8(%ebp),%ebx
 805cb56:	89 c8                	mov    %ecx,%eax
 805cb58:	01 c0                	add    %eax,%eax
 805cb5a:	01 c8                	add    %ecx,%eax
 805cb5c:	c1 e0 02             	shl    $0x2,%eax
 805cb5f:	01 d8                	add    %ebx,%eax
 805cb61:	8b 48 08             	mov    0x8(%eax),%ecx
 805cb64:	89 4a 08             	mov    %ecx,0x8(%edx)
 805cb67:	8b 48 0c             	mov    0xc(%eax),%ecx
 805cb6a:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805cb6d:	8b 40 10             	mov    0x10(%eax),%eax
 805cb70:	89 42 10             	mov    %eax,0x10(%edx)
 805cb73:	8b 45 0c             	mov    0xc(%ebp),%eax
 805cb76:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805cb79:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cb7c:	8b 40 04             	mov    0x4(%eax),%eax
 805cb7f:	8d 50 ff             	lea    -0x1(%eax),%edx
 805cb82:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cb85:	83 c2 20             	add    $0x20,%edx
 805cb88:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805cb8c:	8b 45 08             	mov    0x8(%ebp),%eax
 805cb8f:	83 c1 20             	add    $0x20,%ecx
 805cb92:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805cb96:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cb99:	8b 40 04             	mov    0x4(%eax),%eax
 805cb9c:	8d 50 01             	lea    0x1(%eax),%edx
 805cb9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cba2:	89 50 04             	mov    %edx,0x4(%eax)
 805cba5:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cba8:	8b 40 04             	mov    0x4(%eax),%eax
 805cbab:	8d 50 ff             	lea    -0x1(%eax),%edx
 805cbae:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cbb1:	89 50 04             	mov    %edx,0x4(%eax)
 805cbb4:	90                   	nop
 805cbb5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805cbb8:	c9                   	leave  
 805cbb9:	c3                   	ret    

0805cbba <mapnode_borrow_from_next>:
 805cbba:	55                   	push   %ebp
 805cbbb:	89 e5                	mov    %esp,%ebp
 805cbbd:	53                   	push   %ebx
 805cbbe:	83 ec 10             	sub    $0x10,%esp
 805cbc1:	8b 45 08             	mov    0x8(%ebp),%eax
 805cbc4:	8b 00                	mov    (%eax),%eax
 805cbc6:	8b 55 0c             	mov    0xc(%ebp),%edx
 805cbc9:	c1 e2 02             	shl    $0x2,%edx
 805cbcc:	01 d0                	add    %edx,%eax
 805cbce:	8b 00                	mov    (%eax),%eax
 805cbd0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805cbd3:	8b 45 08             	mov    0x8(%ebp),%eax
 805cbd6:	8b 00                	mov    (%eax),%eax
 805cbd8:	8b 55 0c             	mov    0xc(%ebp),%edx
 805cbdb:	83 c2 01             	add    $0x1,%edx
 805cbde:	c1 e2 02             	shl    $0x2,%edx
 805cbe1:	01 d0                	add    %edx,%eax
 805cbe3:	8b 00                	mov    (%eax),%eax
 805cbe5:	89 45 f8             	mov    %eax,-0x8(%ebp)
 805cbe8:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cbeb:	8b 50 04             	mov    0x4(%eax),%edx
 805cbee:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805cbf1:	89 d0                	mov    %edx,%eax
 805cbf3:	01 c0                	add    %eax,%eax
 805cbf5:	01 d0                	add    %edx,%eax
 805cbf7:	c1 e0 02             	shl    $0x2,%eax
 805cbfa:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805cbfd:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805cc00:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805cc03:	89 c8                	mov    %ecx,%eax
 805cc05:	01 c0                	add    %eax,%eax
 805cc07:	01 c8                	add    %ecx,%eax
 805cc09:	c1 e0 02             	shl    $0x2,%eax
 805cc0c:	01 d8                	add    %ebx,%eax
 805cc0e:	8b 48 08             	mov    0x8(%eax),%ecx
 805cc11:	89 4a 08             	mov    %ecx,0x8(%edx)
 805cc14:	8b 48 0c             	mov    0xc(%eax),%ecx
 805cc17:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805cc1a:	8b 40 10             	mov    0x10(%eax),%eax
 805cc1d:	89 42 10             	mov    %eax,0x10(%edx)
 805cc20:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cc23:	8b 48 04             	mov    0x4(%eax),%ecx
 805cc26:	8b 45 08             	mov    0x8(%ebp),%eax
 805cc29:	8b 55 0c             	mov    0xc(%ebp),%edx
 805cc2c:	83 c2 20             	add    $0x20,%edx
 805cc2f:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805cc33:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cc36:	83 c1 20             	add    $0x20,%ecx
 805cc39:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805cc3d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cc40:	8b 00                	mov    (%eax),%eax
 805cc42:	50                   	push   %eax
 805cc43:	e8 ee ae ff ff       	call   8057b36 <isnil>
 805cc48:	83 c4 04             	add    $0x4,%esp
 805cc4b:	85 c0                	test   %eax,%eax
 805cc4d:	75 1c                	jne    805cc6b <mapnode_borrow_from_next+0xb1>
 805cc4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cc52:	8b 10                	mov    (%eax),%edx
 805cc54:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cc57:	8b 40 04             	mov    0x4(%eax),%eax
 805cc5a:	83 c0 01             	add    $0x1,%eax
 805cc5d:	c1 e0 02             	shl    $0x2,%eax
 805cc60:	01 c2                	add    %eax,%edx
 805cc62:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cc65:	8b 00                	mov    (%eax),%eax
 805cc67:	8b 00                	mov    (%eax),%eax
 805cc69:	89 02                	mov    %eax,(%edx)
 805cc6b:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805cc6e:	8b 55 0c             	mov    0xc(%ebp),%edx
 805cc71:	89 d0                	mov    %edx,%eax
 805cc73:	01 c0                	add    %eax,%eax
 805cc75:	01 d0                	add    %edx,%eax
 805cc77:	c1 e0 02             	shl    $0x2,%eax
 805cc7a:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805cc7d:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cc80:	8b 48 08             	mov    0x8(%eax),%ecx
 805cc83:	89 4a 08             	mov    %ecx,0x8(%edx)
 805cc86:	8b 48 0c             	mov    0xc(%eax),%ecx
 805cc89:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805cc8c:	8b 40 10             	mov    0x10(%eax),%eax
 805cc8f:	89 42 10             	mov    %eax,0x10(%edx)
 805cc92:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cc95:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx
 805cc9b:	8b 45 08             	mov    0x8(%ebp),%eax
 805cc9e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805cca1:	83 c1 20             	add    $0x20,%ecx
 805cca4:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805cca8:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 805ccaf:	eb 59                	jmp    805cd0a <mapnode_borrow_from_next+0x150>
 805ccb1:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805ccb4:	8d 50 ff             	lea    -0x1(%eax),%edx
 805ccb7:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 805ccba:	89 d0                	mov    %edx,%eax
 805ccbc:	01 c0                	add    %eax,%eax
 805ccbe:	01 d0                	add    %edx,%eax
 805ccc0:	c1 e0 02             	shl    $0x2,%eax
 805ccc3:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805ccc6:	8b 5d f8             	mov    -0x8(%ebp),%ebx
 805ccc9:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805cccc:	89 c8                	mov    %ecx,%eax
 805ccce:	01 c0                	add    %eax,%eax
 805ccd0:	01 c8                	add    %ecx,%eax
 805ccd2:	c1 e0 02             	shl    $0x2,%eax
 805ccd5:	01 d8                	add    %ebx,%eax
 805ccd7:	8b 48 08             	mov    0x8(%eax),%ecx
 805ccda:	89 4a 08             	mov    %ecx,0x8(%edx)
 805ccdd:	8b 48 0c             	mov    0xc(%eax),%ecx
 805cce0:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805cce3:	8b 40 10             	mov    0x10(%eax),%eax
 805cce6:	89 42 10             	mov    %eax,0x10(%edx)
 805cce9:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805ccec:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805ccef:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805ccf2:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805ccf5:	83 c2 20             	add    $0x20,%edx
 805ccf8:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805ccfc:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805ccff:	83 c1 20             	add    $0x20,%ecx
 805cd02:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805cd06:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 805cd0a:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cd0d:	8b 40 04             	mov    0x4(%eax),%eax
 805cd10:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 805cd13:	7f 9c                	jg     805ccb1 <mapnode_borrow_from_next+0xf7>
 805cd15:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cd18:	8b 00                	mov    (%eax),%eax
 805cd1a:	50                   	push   %eax
 805cd1b:	e8 16 ae ff ff       	call   8057b36 <isnil>
 805cd20:	83 c4 04             	add    $0x4,%esp
 805cd23:	85 c0                	test   %eax,%eax
 805cd25:	75 3c                	jne    805cd63 <mapnode_borrow_from_next+0x1a9>
 805cd27:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 805cd2e:	eb 28                	jmp    805cd58 <mapnode_borrow_from_next+0x19e>
 805cd30:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cd33:	8b 00                	mov    (%eax),%eax
 805cd35:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805cd38:	81 c2 ff ff ff 3f    	add    $0x3fffffff,%edx
 805cd3e:	c1 e2 02             	shl    $0x2,%edx
 805cd41:	01 c2                	add    %eax,%edx
 805cd43:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cd46:	8b 00                	mov    (%eax),%eax
 805cd48:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805cd4b:	c1 e1 02             	shl    $0x2,%ecx
 805cd4e:	01 c8                	add    %ecx,%eax
 805cd50:	8b 00                	mov    (%eax),%eax
 805cd52:	89 02                	mov    %eax,(%edx)
 805cd54:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 805cd58:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cd5b:	8b 40 04             	mov    0x4(%eax),%eax
 805cd5e:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805cd61:	7d cd                	jge    805cd30 <mapnode_borrow_from_next+0x176>
 805cd63:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cd66:	8b 40 04             	mov    0x4(%eax),%eax
 805cd69:	8d 50 01             	lea    0x1(%eax),%edx
 805cd6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cd6f:	89 50 04             	mov    %edx,0x4(%eax)
 805cd72:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cd75:	8b 40 04             	mov    0x4(%eax),%eax
 805cd78:	8d 50 ff             	lea    -0x1(%eax),%edx
 805cd7b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cd7e:	89 50 04             	mov    %edx,0x4(%eax)
 805cd81:	90                   	nop
 805cd82:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805cd85:	c9                   	leave  
 805cd86:	c3                   	ret    

0805cd87 <mapnode_merge>:
 805cd87:	55                   	push   %ebp
 805cd88:	89 e5                	mov    %esp,%ebp
 805cd8a:	53                   	push   %ebx
 805cd8b:	83 ec 20             	sub    $0x20,%esp
 805cd8e:	8b 45 08             	mov    0x8(%ebp),%eax
 805cd91:	8b 00                	mov    (%eax),%eax
 805cd93:	8b 55 0c             	mov    0xc(%ebp),%edx
 805cd96:	c1 e2 02             	shl    $0x2,%edx
 805cd99:	01 d0                	add    %edx,%eax
 805cd9b:	8b 00                	mov    (%eax),%eax
 805cd9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805cda0:	8b 45 08             	mov    0x8(%ebp),%eax
 805cda3:	8b 00                	mov    (%eax),%eax
 805cda5:	8b 55 0c             	mov    0xc(%ebp),%edx
 805cda8:	83 c2 01             	add    $0x1,%edx
 805cdab:	c1 e2 02             	shl    $0x2,%edx
 805cdae:	01 d0                	add    %edx,%eax
 805cdb0:	8b 00                	mov    (%eax),%eax
 805cdb2:	89 45 f8             	mov    %eax,-0x8(%ebp)
 805cdb5:	8b 15 ec 30 07 08    	mov    0x80730ec,%edx
 805cdbb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805cdbe:	89 d0                	mov    %edx,%eax
 805cdc0:	01 c0                	add    %eax,%eax
 805cdc2:	01 d0                	add    %edx,%eax
 805cdc4:	c1 e0 02             	shl    $0x2,%eax
 805cdc7:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805cdca:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805cdcd:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805cdd0:	89 c8                	mov    %ecx,%eax
 805cdd2:	01 c0                	add    %eax,%eax
 805cdd4:	01 c8                	add    %ecx,%eax
 805cdd6:	c1 e0 02             	shl    $0x2,%eax
 805cdd9:	01 d8                	add    %ebx,%eax
 805cddb:	8b 48 08             	mov    0x8(%eax),%ecx
 805cdde:	89 4a 08             	mov    %ecx,0x8(%edx)
 805cde1:	8b 48 0c             	mov    0xc(%eax),%ecx
 805cde4:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805cde7:	8b 40 10             	mov    0x10(%eax),%eax
 805cdea:	89 42 10             	mov    %eax,0x10(%edx)
 805cded:	8b 0d ec 30 07 08    	mov    0x80730ec,%ecx
 805cdf3:	8b 45 08             	mov    0x8(%ebp),%eax
 805cdf6:	8b 55 0c             	mov    0xc(%ebp),%edx
 805cdf9:	83 c2 20             	add    $0x20,%edx
 805cdfc:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805ce00:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ce03:	83 c1 20             	add    $0x20,%ecx
 805ce06:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805ce0a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 805ce11:	eb 59                	jmp    805ce6c <mapnode_merge+0xe5>
 805ce13:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805ce16:	8d 50 06             	lea    0x6(%eax),%edx
 805ce19:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805ce1c:	89 d0                	mov    %edx,%eax
 805ce1e:	01 c0                	add    %eax,%eax
 805ce20:	01 d0                	add    %edx,%eax
 805ce22:	c1 e0 02             	shl    $0x2,%eax
 805ce25:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805ce28:	8b 5d f8             	mov    -0x8(%ebp),%ebx
 805ce2b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 805ce2e:	89 c8                	mov    %ecx,%eax
 805ce30:	01 c0                	add    %eax,%eax
 805ce32:	01 c8                	add    %ecx,%eax
 805ce34:	c1 e0 02             	shl    $0x2,%eax
 805ce37:	01 d8                	add    %ebx,%eax
 805ce39:	8b 48 08             	mov    0x8(%eax),%ecx
 805ce3c:	89 4a 08             	mov    %ecx,0x8(%edx)
 805ce3f:	8b 48 0c             	mov    0xc(%eax),%ecx
 805ce42:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805ce45:	8b 40 10             	mov    0x10(%eax),%eax
 805ce48:	89 42 10             	mov    %eax,0x10(%edx)
 805ce4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805ce4e:	8d 48 06             	lea    0x6(%eax),%ecx
 805ce51:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805ce54:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805ce57:	83 c2 20             	add    $0x20,%edx
 805ce5a:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805ce5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ce61:	83 c1 20             	add    $0x20,%ecx
 805ce64:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805ce68:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 805ce6c:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805ce6f:	8b 40 04             	mov    0x4(%eax),%eax
 805ce72:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 805ce75:	7f 9c                	jg     805ce13 <mapnode_merge+0x8c>
 805ce77:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ce7a:	8b 00                	mov    (%eax),%eax
 805ce7c:	50                   	push   %eax
 805ce7d:	e8 b4 ac ff ff       	call   8057b36 <isnil>
 805ce82:	83 c4 04             	add    $0x4,%esp
 805ce85:	85 c0                	test   %eax,%eax
 805ce87:	75 39                	jne    805cec2 <mapnode_merge+0x13b>
 805ce89:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 805ce90:	eb 25                	jmp    805ceb7 <mapnode_merge+0x130>
 805ce92:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ce95:	8b 00                	mov    (%eax),%eax
 805ce97:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805ce9a:	83 c2 06             	add    $0x6,%edx
 805ce9d:	c1 e2 02             	shl    $0x2,%edx
 805cea0:	01 c2                	add    %eax,%edx
 805cea2:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cea5:	8b 00                	mov    (%eax),%eax
 805cea7:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 805ceaa:	c1 e1 02             	shl    $0x2,%ecx
 805cead:	01 c8                	add    %ecx,%eax
 805ceaf:	8b 00                	mov    (%eax),%eax
 805ceb1:	89 02                	mov    %eax,(%edx)
 805ceb3:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 805ceb7:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805ceba:	8b 40 04             	mov    0x4(%eax),%eax
 805cebd:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 805cec0:	7d d0                	jge    805ce92 <mapnode_merge+0x10b>
 805cec2:	8b 45 0c             	mov    0xc(%ebp),%eax
 805cec5:	83 c0 01             	add    $0x1,%eax
 805cec8:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805cecb:	eb 59                	jmp    805cf26 <mapnode_merge+0x19f>
 805cecd:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805ced0:	8d 50 ff             	lea    -0x1(%eax),%edx
 805ced3:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805ced6:	89 d0                	mov    %edx,%eax
 805ced8:	01 c0                	add    %eax,%eax
 805ceda:	01 d0                	add    %edx,%eax
 805cedc:	c1 e0 02             	shl    $0x2,%eax
 805cedf:	8d 14 01             	lea    (%ecx,%eax,1),%edx
 805cee2:	8b 5d 08             	mov    0x8(%ebp),%ebx
 805cee5:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805cee8:	89 c8                	mov    %ecx,%eax
 805ceea:	01 c0                	add    %eax,%eax
 805ceec:	01 c8                	add    %ecx,%eax
 805ceee:	c1 e0 02             	shl    $0x2,%eax
 805cef1:	01 d8                	add    %ebx,%eax
 805cef3:	8b 48 08             	mov    0x8(%eax),%ecx
 805cef6:	89 4a 08             	mov    %ecx,0x8(%edx)
 805cef9:	8b 48 0c             	mov    0xc(%eax),%ecx
 805cefc:	89 4a 0c             	mov    %ecx,0xc(%edx)
 805ceff:	8b 40 10             	mov    0x10(%eax),%eax
 805cf02:	89 42 10             	mov    %eax,0x10(%edx)
 805cf05:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805cf08:	8d 48 ff             	lea    -0x1(%eax),%ecx
 805cf0b:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf0e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805cf11:	83 c2 20             	add    $0x20,%edx
 805cf14:	8b 54 90 0c          	mov    0xc(%eax,%edx,4),%edx
 805cf18:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf1b:	83 c1 20             	add    $0x20,%ecx
 805cf1e:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 805cf22:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 805cf26:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf29:	8b 40 04             	mov    0x4(%eax),%eax
 805cf2c:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 805cf2f:	7f 9c                	jg     805cecd <mapnode_merge+0x146>
 805cf31:	8b 45 0c             	mov    0xc(%ebp),%eax
 805cf34:	83 c0 02             	add    $0x2,%eax
 805cf37:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805cf3a:	eb 28                	jmp    805cf64 <mapnode_merge+0x1dd>
 805cf3c:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf3f:	8b 00                	mov    (%eax),%eax
 805cf41:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805cf44:	81 c2 ff ff ff 3f    	add    $0x3fffffff,%edx
 805cf4a:	c1 e2 02             	shl    $0x2,%edx
 805cf4d:	01 c2                	add    %eax,%edx
 805cf4f:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf52:	8b 00                	mov    (%eax),%eax
 805cf54:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805cf57:	c1 e1 02             	shl    $0x2,%ecx
 805cf5a:	01 c8                	add    %ecx,%eax
 805cf5c:	8b 00                	mov    (%eax),%eax
 805cf5e:	89 02                	mov    %eax,(%edx)
 805cf60:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 805cf64:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf67:	8b 40 04             	mov    0x4(%eax),%eax
 805cf6a:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805cf6d:	7d cd                	jge    805cf3c <mapnode_merge+0x1b5>
 805cf6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cf72:	8b 50 04             	mov    0x4(%eax),%edx
 805cf75:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805cf78:	8b 40 04             	mov    0x4(%eax),%eax
 805cf7b:	83 c0 01             	add    $0x1,%eax
 805cf7e:	01 c2                	add    %eax,%edx
 805cf80:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805cf83:	89 50 04             	mov    %edx,0x4(%eax)
 805cf86:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf89:	8b 40 04             	mov    0x4(%eax),%eax
 805cf8c:	8d 50 ff             	lea    -0x1(%eax),%edx
 805cf8f:	8b 45 08             	mov    0x8(%ebp),%eax
 805cf92:	89 50 04             	mov    %edx,0x4(%eax)
 805cf95:	90                   	nop
 805cf96:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805cf99:	c9                   	leave  
 805cf9a:	c3                   	ret    

0805cf9b <SortedMap_delete>:
 805cf9b:	55                   	push   %ebp
 805cf9c:	89 e5                	mov    %esp,%ebp
 805cf9e:	83 ec 18             	sub    $0x18,%esp
 805cfa1:	8b 45 08             	mov    0x8(%ebp),%eax
 805cfa4:	8b 40 04             	mov    0x4(%eax),%eax
 805cfa7:	8b 40 04             	mov    0x4(%eax),%eax
 805cfaa:	85 c0                	test   %eax,%eax
 805cfac:	74 67                	je     805d015 <SortedMap_delete+0x7a>
 805cfae:	8b 45 08             	mov    0x8(%ebp),%eax
 805cfb1:	8b 40 04             	mov    0x4(%eax),%eax
 805cfb4:	ff 75 14             	pushl  0x14(%ebp)
 805cfb7:	ff 75 10             	pushl  0x10(%ebp)
 805cfba:	ff 75 0c             	pushl  0xc(%ebp)
 805cfbd:	50                   	push   %eax
 805cfbe:	e8 78 f5 ff ff       	call   805c53b <mapnode_remove_key>
 805cfc3:	83 c4 10             	add    $0x10,%esp
 805cfc6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805cfc9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 805cfcd:	74 0f                	je     805cfde <SortedMap_delete+0x43>
 805cfcf:	8b 45 08             	mov    0x8(%ebp),%eax
 805cfd2:	8b 40 08             	mov    0x8(%eax),%eax
 805cfd5:	8d 50 ff             	lea    -0x1(%eax),%edx
 805cfd8:	8b 45 08             	mov    0x8(%ebp),%eax
 805cfdb:	89 50 08             	mov    %edx,0x8(%eax)
 805cfde:	8b 45 08             	mov    0x8(%ebp),%eax
 805cfe1:	8b 40 04             	mov    0x4(%eax),%eax
 805cfe4:	8b 40 04             	mov    0x4(%eax),%eax
 805cfe7:	85 c0                	test   %eax,%eax
 805cfe9:	75 2e                	jne    805d019 <SortedMap_delete+0x7e>
 805cfeb:	8b 45 08             	mov    0x8(%ebp),%eax
 805cfee:	8b 40 04             	mov    0x4(%eax),%eax
 805cff1:	8b 00                	mov    (%eax),%eax
 805cff3:	83 ec 0c             	sub    $0xc,%esp
 805cff6:	50                   	push   %eax
 805cff7:	e8 3a ab ff ff       	call   8057b36 <isnil>
 805cffc:	83 c4 10             	add    $0x10,%esp
 805cfff:	85 c0                	test   %eax,%eax
 805d001:	75 15                	jne    805d018 <SortedMap_delete+0x7d>
 805d003:	8b 45 08             	mov    0x8(%ebp),%eax
 805d006:	8b 40 04             	mov    0x4(%eax),%eax
 805d009:	8b 00                	mov    (%eax),%eax
 805d00b:	8b 10                	mov    (%eax),%edx
 805d00d:	8b 45 08             	mov    0x8(%ebp),%eax
 805d010:	89 50 04             	mov    %edx,0x4(%eax)
 805d013:	eb 04                	jmp    805d019 <SortedMap_delete+0x7e>
 805d015:	90                   	nop
 805d016:	eb 01                	jmp    805d019 <SortedMap_delete+0x7e>
 805d018:	90                   	nop
 805d019:	c9                   	leave  
 805d01a:	c3                   	ret    

0805d01b <mapnode_subkeys>:
 805d01b:	55                   	push   %ebp
 805d01c:	89 e5                	mov    %esp,%ebp
 805d01e:	83 ec 48             	sub    $0x48,%esp
 805d021:	8b 45 08             	mov    0x8(%ebp),%eax
 805d024:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805d027:	8b 45 0c             	mov    0xc(%ebp),%eax
 805d02a:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805d02d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d033:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d036:	31 c0                	xor    %eax,%eax
 805d038:	8b 45 10             	mov    0x10(%ebp),%eax
 805d03b:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805d03e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d041:	8b 00                	mov    (%eax),%eax
 805d043:	50                   	push   %eax
 805d044:	e8 ed aa ff ff       	call   8057b36 <isnil>
 805d049:	83 c4 04             	add    $0x4,%esp
 805d04c:	85 c0                	test   %eax,%eax
 805d04e:	0f 85 ab 00 00 00    	jne    805d0ff <mapnode_subkeys+0xe4>
 805d054:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 805d05b:	eb 69                	jmp    805d0c6 <mapnode_subkeys+0xab>
 805d05d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d060:	8b 00                	mov    (%eax),%eax
 805d062:	8b 55 cc             	mov    -0x34(%ebp),%edx
 805d065:	c1 e2 02             	shl    $0x2,%edx
 805d068:	01 d0                	add    %edx,%eax
 805d06a:	8b 00                	mov    (%eax),%eax
 805d06c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805d06f:	83 ec 04             	sub    $0x4,%esp
 805d072:	ff 75 c8             	pushl  -0x38(%ebp)
 805d075:	ff 75 c0             	pushl  -0x40(%ebp)
 805d078:	ff 75 d4             	pushl  -0x2c(%ebp)
 805d07b:	e8 9b ff ff ff       	call   805d01b <mapnode_subkeys>
 805d080:	83 c4 10             	add    $0x10,%esp
 805d083:	01 45 c8             	add    %eax,-0x38(%ebp)
 805d086:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
 805d089:	8b 55 cc             	mov    -0x34(%ebp),%edx
 805d08c:	89 d0                	mov    %edx,%eax
 805d08e:	01 c0                	add    %eax,%eax
 805d090:	01 d0                	add    %edx,%eax
 805d092:	c1 e0 02             	shl    $0x2,%eax
 805d095:	01 c8                	add    %ecx,%eax
 805d097:	8b 50 08             	mov    0x8(%eax),%edx
 805d09a:	89 55 dc             	mov    %edx,-0x24(%ebp)
 805d09d:	8b 50 0c             	mov    0xc(%eax),%edx
 805d0a0:	89 55 e0             	mov    %edx,-0x20(%ebp)
 805d0a3:	8b 40 10             	mov    0x10(%eax),%eax
 805d0a6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805d0a9:	83 ec 04             	sub    $0x4,%esp
 805d0ac:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805d0af:	50                   	push   %eax
 805d0b0:	ff 75 c8             	pushl  -0x38(%ebp)
 805d0b3:	ff 75 c0             	pushl  -0x40(%ebp)
 805d0b6:	e8 61 98 ff ff       	call   805691c <array_set>
 805d0bb:	83 c4 10             	add    $0x10,%esp
 805d0be:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 805d0c2:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 805d0c6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d0c9:	8b 40 04             	mov    0x4(%eax),%eax
 805d0cc:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 805d0cf:	7f 8c                	jg     805d05d <mapnode_subkeys+0x42>
 805d0d1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d0d4:	8b 10                	mov    (%eax),%edx
 805d0d6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d0d9:	8b 40 04             	mov    0x4(%eax),%eax
 805d0dc:	c1 e0 02             	shl    $0x2,%eax
 805d0df:	01 d0                	add    %edx,%eax
 805d0e1:	8b 00                	mov    (%eax),%eax
 805d0e3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805d0e6:	83 ec 04             	sub    $0x4,%esp
 805d0e9:	ff 75 c8             	pushl  -0x38(%ebp)
 805d0ec:	ff 75 c0             	pushl  -0x40(%ebp)
 805d0ef:	ff 75 d8             	pushl  -0x28(%ebp)
 805d0f2:	e8 24 ff ff ff       	call   805d01b <mapnode_subkeys>
 805d0f7:	83 c4 10             	add    $0x10,%esp
 805d0fa:	01 45 c8             	add    %eax,-0x38(%ebp)
 805d0fd:	eb 5f                	jmp    805d15e <mapnode_subkeys+0x143>
 805d0ff:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 805d106:	eb 42                	jmp    805d14a <mapnode_subkeys+0x12f>
 805d108:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
 805d10b:	8b 55 d0             	mov    -0x30(%ebp),%edx
 805d10e:	89 d0                	mov    %edx,%eax
 805d110:	01 c0                	add    %eax,%eax
 805d112:	01 d0                	add    %edx,%eax
 805d114:	c1 e0 02             	shl    $0x2,%eax
 805d117:	01 c8                	add    %ecx,%eax
 805d119:	8b 50 08             	mov    0x8(%eax),%edx
 805d11c:	89 55 e8             	mov    %edx,-0x18(%ebp)
 805d11f:	8b 50 0c             	mov    0xc(%eax),%edx
 805d122:	89 55 ec             	mov    %edx,-0x14(%ebp)
 805d125:	8b 40 10             	mov    0x10(%eax),%eax
 805d128:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805d12b:	8b 55 c8             	mov    -0x38(%ebp),%edx
 805d12e:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805d131:	01 c2                	add    %eax,%edx
 805d133:	83 ec 04             	sub    $0x4,%esp
 805d136:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805d139:	50                   	push   %eax
 805d13a:	52                   	push   %edx
 805d13b:	ff 75 c0             	pushl  -0x40(%ebp)
 805d13e:	e8 d9 97 ff ff       	call   805691c <array_set>
 805d143:	83 c4 10             	add    $0x10,%esp
 805d146:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 805d14a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d14d:	8b 40 04             	mov    0x4(%eax),%eax
 805d150:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 805d153:	7f b3                	jg     805d108 <mapnode_subkeys+0xed>
 805d155:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d158:	8b 40 04             	mov    0x4(%eax),%eax
 805d15b:	01 45 c8             	add    %eax,-0x38(%ebp)
 805d15e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805d161:	2b 45 10             	sub    0x10(%ebp),%eax
 805d164:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805d167:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805d16e:	74 05                	je     805d175 <mapnode_subkeys+0x15a>
 805d170:	e8 ab b6 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d175:	c9                   	leave  
 805d176:	c3                   	ret    

0805d177 <SortedMap_keys>:
 805d177:	55                   	push   %ebp
 805d178:	89 e5                	mov    %esp,%ebp
 805d17a:	83 ec 38             	sub    $0x38,%esp
 805d17d:	8b 45 08             	mov    0x8(%ebp),%eax
 805d180:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805d183:	8b 45 0c             	mov    0xc(%ebp),%eax
 805d186:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805d189:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d18f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d192:	31 c0                	xor    %eax,%eax
 805d194:	c7 45 e8 34 97 06 08 	movl   $0x8069734,-0x18(%ebp)
 805d19b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805d1a2:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 805d1a9:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805d1ac:	8b 50 08             	mov    0x8(%eax),%edx
 805d1af:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805d1b2:	83 ec 0c             	sub    $0xc,%esp
 805d1b5:	8d 4d e8             	lea    -0x18(%ebp),%ecx
 805d1b8:	51                   	push   %ecx
 805d1b9:	6a 0c                	push   $0xc
 805d1bb:	6a 00                	push   $0x0
 805d1bd:	52                   	push   %edx
 805d1be:	50                   	push   %eax
 805d1bf:	e8 a5 88 ff ff       	call   8055a69 <__new_array_with_default>
 805d1c4:	83 c4 1c             	add    $0x1c,%esp
 805d1c7:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805d1ca:	8b 40 04             	mov    0x4(%eax),%eax
 805d1cd:	83 ec 0c             	sub    $0xc,%esp
 805d1d0:	50                   	push   %eax
 805d1d1:	e8 60 a9 ff ff       	call   8057b36 <isnil>
 805d1d6:	83 c4 10             	add    $0x10,%esp
 805d1d9:	85 c0                	test   %eax,%eax
 805d1db:	75 0d                	jne    805d1ea <SortedMap_keys+0x73>
 805d1dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805d1e0:	8b 40 04             	mov    0x4(%eax),%eax
 805d1e3:	8b 40 04             	mov    0x4(%eax),%eax
 805d1e6:	85 c0                	test   %eax,%eax
 805d1e8:	75 1c                	jne    805d206 <SortedMap_keys+0x8f>
 805d1ea:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805d1ed:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805d1f0:	89 10                	mov    %edx,(%eax)
 805d1f2:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805d1f5:	89 50 04             	mov    %edx,0x4(%eax)
 805d1f8:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805d1fb:	89 50 08             	mov    %edx,0x8(%eax)
 805d1fe:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805d201:	89 50 0c             	mov    %edx,0xc(%eax)
 805d204:	eb 32                	jmp    805d238 <SortedMap_keys+0xc1>
 805d206:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805d209:	8b 40 04             	mov    0x4(%eax),%eax
 805d20c:	83 ec 04             	sub    $0x4,%esp
 805d20f:	6a 00                	push   $0x0
 805d211:	8d 55 d8             	lea    -0x28(%ebp),%edx
 805d214:	52                   	push   %edx
 805d215:	50                   	push   %eax
 805d216:	e8 00 fe ff ff       	call   805d01b <mapnode_subkeys>
 805d21b:	83 c4 10             	add    $0x10,%esp
 805d21e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805d221:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805d224:	89 10                	mov    %edx,(%eax)
 805d226:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805d229:	89 50 04             	mov    %edx,0x4(%eax)
 805d22c:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805d22f:	89 50 08             	mov    %edx,0x8(%eax)
 805d232:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805d235:	89 50 0c             	mov    %edx,0xc(%eax)
 805d238:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805d23b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805d23e:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805d245:	74 05                	je     805d24c <SortedMap_keys+0xd5>
 805d247:	e8 d4 b5 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d24c:	c9                   	leave  
 805d24d:	c2 04 00             	ret    $0x4

0805d250 <mapnode_free>:
 805d250:	55                   	push   %ebp
 805d251:	89 e5                	mov    %esp,%ebp
 805d253:	83 ec 18             	sub    $0x18,%esp
 805d256:	c7 45 ec 05 9e 06 08 	movl   $0x8069e05,-0x14(%ebp)
 805d25d:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)
 805d264:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805d26b:	83 ec 04             	sub    $0x4,%esp
 805d26e:	ff 75 f4             	pushl  -0xc(%ebp)
 805d271:	ff 75 f0             	pushl  -0x10(%ebp)
 805d274:	ff 75 ec             	pushl  -0x14(%ebp)
 805d277:	e8 8a a6 ff ff       	call   8057906 <println>
 805d27c:	83 c4 10             	add    $0x10,%esp
 805d27f:	90                   	nop
 805d280:	c9                   	leave  
 805d281:	c3                   	ret    

0805d282 <SortedMap_free>:
 805d282:	55                   	push   %ebp
 805d283:	89 e5                	mov    %esp,%ebp
 805d285:	83 ec 08             	sub    $0x8,%esp
 805d288:	8b 45 08             	mov    0x8(%ebp),%eax
 805d28b:	8b 40 04             	mov    0x4(%eax),%eax
 805d28e:	50                   	push   %eax
 805d28f:	e8 a2 a8 ff ff       	call   8057b36 <isnil>
 805d294:	83 c4 04             	add    $0x4,%esp
 805d297:	85 c0                	test   %eax,%eax
 805d299:	75 14                	jne    805d2af <SortedMap_free+0x2d>
 805d29b:	8b 45 08             	mov    0x8(%ebp),%eax
 805d29e:	8b 40 04             	mov    0x4(%eax),%eax
 805d2a1:	83 ec 0c             	sub    $0xc,%esp
 805d2a4:	50                   	push   %eax
 805d2a5:	e8 a6 ff ff ff       	call   805d250 <mapnode_free>
 805d2aa:	83 c4 10             	add    $0x10,%esp
 805d2ad:	eb 01                	jmp    805d2b0 <SortedMap_free+0x2e>
 805d2af:	90                   	nop
 805d2b0:	c9                   	leave  
 805d2b1:	c3                   	ret    

0805d2b2 <SortedMap_print>:
 805d2b2:	55                   	push   %ebp
 805d2b3:	89 e5                	mov    %esp,%ebp
 805d2b5:	83 ec 18             	sub    $0x18,%esp
 805d2b8:	c7 45 ec 05 9e 06 08 	movl   $0x8069e05,-0x14(%ebp)
 805d2bf:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)
 805d2c6:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805d2cd:	83 ec 04             	sub    $0x4,%esp
 805d2d0:	ff 75 f4             	pushl  -0xc(%ebp)
 805d2d3:	ff 75 f0             	pushl  -0x10(%ebp)
 805d2d6:	ff 75 ec             	pushl  -0x14(%ebp)
 805d2d9:	e8 28 a6 ff ff       	call   8057906 <println>
 805d2de:	83 c4 10             	add    $0x10,%esp
 805d2e1:	90                   	nop
 805d2e2:	c9                   	leave  
 805d2e3:	c3                   	ret    

0805d2e4 <vstrlen>:
 805d2e4:	55                   	push   %ebp
 805d2e5:	89 e5                	mov    %esp,%ebp
 805d2e7:	83 ec 08             	sub    $0x8,%esp
 805d2ea:	83 ec 0c             	sub    $0xc,%esp
 805d2ed:	ff 75 08             	pushl  0x8(%ebp)
 805d2f0:	e8 8b b5 fe ff       	call   8048880 <strlen@plt>
 805d2f5:	83 c4 10             	add    $0x10,%esp
 805d2f8:	c9                   	leave  
 805d2f9:	c3                   	ret    

0805d2fa <tos>:
 805d2fa:	55                   	push   %ebp
 805d2fb:	89 e5                	mov    %esp,%ebp
 805d2fd:	83 ec 18             	sub    $0x18,%esp
 805d300:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 805d304:	75 29                	jne    805d32f <tos+0x35>
 805d306:	c7 45 ec 0a 9e 06 08 	movl   $0x8069e0a,-0x14(%ebp)
 805d30d:	c7 45 f0 11 00 00 00 	movl   $0x11,-0x10(%ebp)
 805d314:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805d31b:	83 ec 04             	sub    $0x4,%esp
 805d31e:	ff 75 f4             	pushl  -0xc(%ebp)
 805d321:	ff 75 f0             	pushl  -0x10(%ebp)
 805d324:	ff 75 ec             	pushl  -0x14(%ebp)
 805d327:	e8 6b a4 ff ff       	call   8057797 <v_panic>
 805d32c:	83 c4 10             	add    $0x10,%esp
 805d32f:	8b 45 08             	mov    0x8(%ebp),%eax
 805d332:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805d338:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d33f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805d346:	8b 45 08             	mov    0x8(%ebp),%eax
 805d349:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d34c:	89 10                	mov    %edx,(%eax)
 805d34e:	8b 45 08             	mov    0x8(%ebp),%eax
 805d351:	8b 55 10             	mov    0x10(%ebp),%edx
 805d354:	89 50 04             	mov    %edx,0x4(%eax)
 805d357:	8b 45 08             	mov    0x8(%ebp),%eax
 805d35a:	c9                   	leave  
 805d35b:	c2 04 00             	ret    $0x4

0805d35e <tos_clone>:
 805d35e:	55                   	push   %ebp
 805d35f:	89 e5                	mov    %esp,%ebp
 805d361:	83 ec 28             	sub    $0x28,%esp
 805d364:	8b 45 08             	mov    0x8(%ebp),%eax
 805d367:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805d36a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805d36d:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805d370:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d376:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d379:	31 c0                	xor    %eax,%eax
 805d37b:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805d37e:	83 ec 08             	sub    $0x8,%esp
 805d381:	ff 75 e0             	pushl  -0x20(%ebp)
 805d384:	50                   	push   %eax
 805d385:	e8 30 00 00 00       	call   805d3ba <tos2>
 805d38a:	83 c4 0c             	add    $0xc,%esp
 805d38d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d390:	ff 75 f0             	pushl  -0x10(%ebp)
 805d393:	ff 75 ec             	pushl  -0x14(%ebp)
 805d396:	ff 75 e8             	pushl  -0x18(%ebp)
 805d399:	50                   	push   %eax
 805d39a:	e8 5f 03 00 00       	call   805d6fe <string_clone>
 805d39f:	83 c4 0c             	add    $0xc,%esp
 805d3a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d3a5:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805d3a8:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805d3af:	74 05                	je     805d3b6 <tos_clone+0x58>
 805d3b1:	e8 6a b4 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d3b6:	c9                   	leave  
 805d3b7:	c2 04 00             	ret    $0x4

0805d3ba <tos2>:
 805d3ba:	55                   	push   %ebp
 805d3bb:	89 e5                	mov    %esp,%ebp
 805d3bd:	83 ec 18             	sub    $0x18,%esp
 805d3c0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 805d3c4:	75 29                	jne    805d3ef <tos2+0x35>
 805d3c6:	c7 45 ec 1c 9e 06 08 	movl   $0x8069e1c,-0x14(%ebp)
 805d3cd:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
 805d3d4:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805d3db:	83 ec 04             	sub    $0x4,%esp
 805d3de:	ff 75 f4             	pushl  -0xc(%ebp)
 805d3e1:	ff 75 f0             	pushl  -0x10(%ebp)
 805d3e4:	ff 75 ec             	pushl  -0x14(%ebp)
 805d3e7:	e8 ab a3 ff ff       	call   8057797 <v_panic>
 805d3ec:	83 c4 10             	add    $0x10,%esp
 805d3ef:	83 ec 0c             	sub    $0xc,%esp
 805d3f2:	ff 75 0c             	pushl  0xc(%ebp)
 805d3f5:	e8 ea fe ff ff       	call   805d2e4 <vstrlen>
 805d3fa:	83 c4 10             	add    $0x10,%esp
 805d3fd:	89 c1                	mov    %eax,%ecx
 805d3ff:	8b 45 08             	mov    0x8(%ebp),%eax
 805d402:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805d408:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d40f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805d416:	8b 45 08             	mov    0x8(%ebp),%eax
 805d419:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d41c:	89 10                	mov    %edx,(%eax)
 805d41e:	8b 45 08             	mov    0x8(%ebp),%eax
 805d421:	89 48 04             	mov    %ecx,0x4(%eax)
 805d424:	8b 45 08             	mov    0x8(%ebp),%eax
 805d427:	c9                   	leave  
 805d428:	c2 04 00             	ret    $0x4

0805d42b <tos3>:
 805d42b:	55                   	push   %ebp
 805d42c:	89 e5                	mov    %esp,%ebp
 805d42e:	83 ec 18             	sub    $0x18,%esp
 805d431:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 805d435:	75 29                	jne    805d460 <tos3+0x35>
 805d437:	c7 45 ec 2d 9e 06 08 	movl   $0x8069e2d,-0x14(%ebp)
 805d43e:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
 805d445:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805d44c:	83 ec 04             	sub    $0x4,%esp
 805d44f:	ff 75 f4             	pushl  -0xc(%ebp)
 805d452:	ff 75 f0             	pushl  -0x10(%ebp)
 805d455:	ff 75 ec             	pushl  -0x14(%ebp)
 805d458:	e8 3a a3 ff ff       	call   8057797 <v_panic>
 805d45d:	83 c4 10             	add    $0x10,%esp
 805d460:	83 ec 0c             	sub    $0xc,%esp
 805d463:	ff 75 0c             	pushl  0xc(%ebp)
 805d466:	e8 15 b4 fe ff       	call   8048880 <strlen@plt>
 805d46b:	83 c4 10             	add    $0x10,%esp
 805d46e:	89 c1                	mov    %eax,%ecx
 805d470:	8b 45 08             	mov    0x8(%ebp),%eax
 805d473:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805d479:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d480:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805d487:	8b 45 08             	mov    0x8(%ebp),%eax
 805d48a:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d48d:	89 10                	mov    %edx,(%eax)
 805d48f:	8b 45 08             	mov    0x8(%ebp),%eax
 805d492:	89 48 04             	mov    %ecx,0x4(%eax)
 805d495:	8b 45 08             	mov    0x8(%ebp),%eax
 805d498:	c9                   	leave  
 805d499:	c2 04 00             	ret    $0x4

0805d49c <tos4>:
 805d49c:	55                   	push   %ebp
 805d49d:	89 e5                	mov    %esp,%ebp
 805d49f:	83 ec 28             	sub    $0x28,%esp
 805d4a2:	8b 45 08             	mov    0x8(%ebp),%eax
 805d4a5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805d4a8:	8b 45 0c             	mov    0xc(%ebp),%eax
 805d4ab:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805d4ae:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d4b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d4b7:	31 c0                	xor    %eax,%eax
 805d4b9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 805d4bd:	75 1f                	jne    805d4de <tos4+0x42>
 805d4bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d4c2:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805d4c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d4cb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d4d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d4d5:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805d4dc:	eb 12                	jmp    805d4f0 <tos4+0x54>
 805d4de:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d4e1:	83 ec 08             	sub    $0x8,%esp
 805d4e4:	ff 75 e0             	pushl  -0x20(%ebp)
 805d4e7:	50                   	push   %eax
 805d4e8:	e8 cd fe ff ff       	call   805d3ba <tos2>
 805d4ed:	83 c4 0c             	add    $0xc,%esp
 805d4f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d4f3:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805d4f6:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805d4fd:	74 05                	je     805d504 <tos4+0x68>
 805d4ff:	e8 1c b3 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d504:	c9                   	leave  
 805d505:	c2 04 00             	ret    $0x4

0805d508 <tos5>:
 805d508:	55                   	push   %ebp
 805d509:	89 e5                	mov    %esp,%ebp
 805d50b:	83 ec 28             	sub    $0x28,%esp
 805d50e:	8b 45 08             	mov    0x8(%ebp),%eax
 805d511:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805d514:	8b 45 0c             	mov    0xc(%ebp),%eax
 805d517:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805d51a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d520:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d523:	31 c0                	xor    %eax,%eax
 805d525:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 805d529:	75 1f                	jne    805d54a <tos5+0x42>
 805d52b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d52e:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805d534:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d537:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d53e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d541:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805d548:	eb 12                	jmp    805d55c <tos5+0x54>
 805d54a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d54d:	83 ec 08             	sub    $0x8,%esp
 805d550:	ff 75 e0             	pushl  -0x20(%ebp)
 805d553:	50                   	push   %eax
 805d554:	e8 d2 fe ff ff       	call   805d42b <tos3>
 805d559:	83 c4 0c             	add    $0xc,%esp
 805d55c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d55f:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805d562:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805d569:	74 05                	je     805d570 <tos5+0x68>
 805d56b:	e8 b0 b2 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d570:	c9                   	leave  
 805d571:	c2 04 00             	ret    $0x4

0805d574 <tos_lit>:
 805d574:	55                   	push   %ebp
 805d575:	89 e5                	mov    %esp,%ebp
 805d577:	83 ec 18             	sub    $0x18,%esp
 805d57a:	c7 45 ec 40 9e 06 08 	movl   $0x8069e40,-0x14(%ebp)
 805d581:	c7 45 f0 3b 00 00 00 	movl   $0x3b,-0x10(%ebp)
 805d588:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805d58f:	83 ec 04             	sub    $0x4,%esp
 805d592:	ff 75 f4             	pushl  -0xc(%ebp)
 805d595:	ff 75 f0             	pushl  -0x10(%ebp)
 805d598:	ff 75 ec             	pushl  -0x14(%ebp)
 805d59b:	e8 52 a2 ff ff       	call   80577f2 <eprintln>
 805d5a0:	83 c4 10             	add    $0x10,%esp
 805d5a3:	83 ec 0c             	sub    $0xc,%esp
 805d5a6:	ff 75 0c             	pushl  0xc(%ebp)
 805d5a9:	e8 d2 b2 fe ff       	call   8048880 <strlen@plt>
 805d5ae:	83 c4 10             	add    $0x10,%esp
 805d5b1:	89 c1                	mov    %eax,%ecx
 805d5b3:	8b 45 08             	mov    0x8(%ebp),%eax
 805d5b6:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d5b9:	89 10                	mov    %edx,(%eax)
 805d5bb:	8b 45 08             	mov    0x8(%ebp),%eax
 805d5be:	89 48 04             	mov    %ecx,0x4(%eax)
 805d5c1:	8b 45 08             	mov    0x8(%ebp),%eax
 805d5c4:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805d5cb:	8b 45 08             	mov    0x8(%ebp),%eax
 805d5ce:	c9                   	leave  
 805d5cf:	c2 04 00             	ret    $0x4

0805d5d2 <byteptr_vstring>:
 805d5d2:	55                   	push   %ebp
 805d5d3:	89 e5                	mov    %esp,%ebp
 805d5d5:	83 ec 08             	sub    $0x8,%esp
 805d5d8:	83 ec 0c             	sub    $0xc,%esp
 805d5db:	ff 75 0c             	pushl  0xc(%ebp)
 805d5de:	e8 9d b2 fe ff       	call   8048880 <strlen@plt>
 805d5e3:	83 c4 10             	add    $0x10,%esp
 805d5e6:	89 c1                	mov    %eax,%ecx
 805d5e8:	8b 45 08             	mov    0x8(%ebp),%eax
 805d5eb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805d5f1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d5f8:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805d5ff:	8b 45 08             	mov    0x8(%ebp),%eax
 805d602:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d605:	89 10                	mov    %edx,(%eax)
 805d607:	8b 45 08             	mov    0x8(%ebp),%eax
 805d60a:	89 48 04             	mov    %ecx,0x4(%eax)
 805d60d:	8b 45 08             	mov    0x8(%ebp),%eax
 805d610:	c9                   	leave  
 805d611:	c2 04 00             	ret    $0x4

0805d614 <byteptr_vstring_with_len>:
 805d614:	55                   	push   %ebp
 805d615:	89 e5                	mov    %esp,%ebp
 805d617:	8b 45 08             	mov    0x8(%ebp),%eax
 805d61a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805d620:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d627:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805d62e:	8b 45 08             	mov    0x8(%ebp),%eax
 805d631:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d634:	89 10                	mov    %edx,(%eax)
 805d636:	8b 45 08             	mov    0x8(%ebp),%eax
 805d639:	8b 55 10             	mov    0x10(%ebp),%edx
 805d63c:	89 50 04             	mov    %edx,0x4(%eax)
 805d63f:	8b 45 08             	mov    0x8(%ebp),%eax
 805d642:	5d                   	pop    %ebp
 805d643:	c2 04 00             	ret    $0x4

0805d646 <charptr_vstring>:
 805d646:	55                   	push   %ebp
 805d647:	89 e5                	mov    %esp,%ebp
 805d649:	83 ec 08             	sub    $0x8,%esp
 805d64c:	83 ec 0c             	sub    $0xc,%esp
 805d64f:	ff 75 0c             	pushl  0xc(%ebp)
 805d652:	e8 29 b2 fe ff       	call   8048880 <strlen@plt>
 805d657:	83 c4 10             	add    $0x10,%esp
 805d65a:	89 c1                	mov    %eax,%ecx
 805d65c:	8b 45 08             	mov    0x8(%ebp),%eax
 805d65f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805d665:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d66c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805d673:	8b 45 08             	mov    0x8(%ebp),%eax
 805d676:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d679:	89 10                	mov    %edx,(%eax)
 805d67b:	8b 45 08             	mov    0x8(%ebp),%eax
 805d67e:	89 48 04             	mov    %ecx,0x4(%eax)
 805d681:	8b 45 08             	mov    0x8(%ebp),%eax
 805d684:	c9                   	leave  
 805d685:	c2 04 00             	ret    $0x4

0805d688 <charptr_vstring_with_len>:
 805d688:	55                   	push   %ebp
 805d689:	89 e5                	mov    %esp,%ebp
 805d68b:	8b 45 08             	mov    0x8(%ebp),%eax
 805d68e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 805d694:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d69b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805d6a2:	8b 45 08             	mov    0x8(%ebp),%eax
 805d6a5:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d6a8:	89 10                	mov    %edx,(%eax)
 805d6aa:	8b 45 08             	mov    0x8(%ebp),%eax
 805d6ad:	8b 55 10             	mov    0x10(%ebp),%edx
 805d6b0:	89 50 04             	mov    %edx,0x4(%eax)
 805d6b3:	8b 45 08             	mov    0x8(%ebp),%eax
 805d6b6:	5d                   	pop    %ebp
 805d6b7:	c2 04 00             	ret    $0x4

0805d6ba <string_clone_static>:
 805d6ba:	55                   	push   %ebp
 805d6bb:	89 e5                	mov    %esp,%ebp
 805d6bd:	83 ec 28             	sub    $0x28,%esp
 805d6c0:	8b 45 08             	mov    0x8(%ebp),%eax
 805d6c3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805d6c6:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d6cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d6cf:	31 c0                	xor    %eax,%eax
 805d6d1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d6d4:	ff 75 14             	pushl  0x14(%ebp)
 805d6d7:	ff 75 10             	pushl  0x10(%ebp)
 805d6da:	ff 75 0c             	pushl  0xc(%ebp)
 805d6dd:	50                   	push   %eax
 805d6de:	e8 1b 00 00 00       	call   805d6fe <string_clone>
 805d6e3:	83 c4 0c             	add    $0xc,%esp
 805d6e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d6e9:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805d6ec:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805d6f3:	74 05                	je     805d6fa <string_clone_static+0x40>
 805d6f5:	e8 26 b1 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d6fa:	c9                   	leave  
 805d6fb:	c2 04 00             	ret    $0x4

0805d6fe <string_clone>:
 805d6fe:	55                   	push   %ebp
 805d6ff:	89 e5                	mov    %esp,%ebp
 805d701:	83 ec 18             	sub    $0x18,%esp
 805d704:	8b 45 10             	mov    0x10(%ebp),%eax
 805d707:	85 c0                	test   %eax,%eax
 805d709:	75 1f                	jne    805d72a <string_clone+0x2c>
 805d70b:	8b 45 08             	mov    0x8(%ebp),%eax
 805d70e:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805d714:	8b 45 08             	mov    0x8(%ebp),%eax
 805d717:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805d71e:	8b 45 08             	mov    0x8(%ebp),%eax
 805d721:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805d728:	eb 68                	jmp    805d792 <string_clone+0x94>
 805d72a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805d731:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 805d738:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805d73f:	8b 45 10             	mov    0x10(%ebp),%eax
 805d742:	83 c0 01             	add    $0x1,%eax
 805d745:	83 ec 0c             	sub    $0xc,%esp
 805d748:	50                   	push   %eax
 805d749:	e8 d9 a1 ff ff       	call   8057927 <v_malloc>
 805d74e:	83 c4 10             	add    $0x10,%esp
 805d751:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805d754:	8b 45 10             	mov    0x10(%ebp),%eax
 805d757:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805d75a:	8b 45 10             	mov    0x10(%ebp),%eax
 805d75d:	89 c1                	mov    %eax,%ecx
 805d75f:	8b 55 0c             	mov    0xc(%ebp),%edx
 805d762:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805d765:	83 ec 04             	sub    $0x4,%esp
 805d768:	51                   	push   %ecx
 805d769:	52                   	push   %edx
 805d76a:	50                   	push   %eax
 805d76b:	e8 50 b0 fe ff       	call   80487c0 <memcpy@plt>
 805d770:	83 c4 10             	add    $0x10,%esp
 805d773:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805d776:	8b 55 10             	mov    0x10(%ebp),%edx
 805d779:	01 d0                	add    %edx,%eax
 805d77b:	c6 00 00             	movb   $0x0,(%eax)
 805d77e:	8b 45 08             	mov    0x8(%ebp),%eax
 805d781:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805d784:	89 10                	mov    %edx,(%eax)
 805d786:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805d789:	89 50 04             	mov    %edx,0x4(%eax)
 805d78c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805d78f:	89 50 08             	mov    %edx,0x8(%eax)
 805d792:	8b 45 08             	mov    0x8(%ebp),%eax
 805d795:	c9                   	leave  
 805d796:	c2 04 00             	ret    $0x4

0805d799 <cstring_to_vstring>:
 805d799:	55                   	push   %ebp
 805d79a:	89 e5                	mov    %esp,%ebp
 805d79c:	83 ec 28             	sub    $0x28,%esp
 805d79f:	8b 45 08             	mov    0x8(%ebp),%eax
 805d7a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805d7a5:	8b 45 0c             	mov    0xc(%ebp),%eax
 805d7a8:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805d7ab:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d7b1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d7b4:	31 c0                	xor    %eax,%eax
 805d7b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d7b9:	83 ec 08             	sub    $0x8,%esp
 805d7bc:	ff 75 e0             	pushl  -0x20(%ebp)
 805d7bf:	50                   	push   %eax
 805d7c0:	e8 99 fb ff ff       	call   805d35e <tos_clone>
 805d7c5:	83 c4 0c             	add    $0xc,%esp
 805d7c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805d7cb:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805d7ce:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805d7d5:	74 05                	je     805d7dc <cstring_to_vstring+0x43>
 805d7d7:	e8 44 b0 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d7dc:	c9                   	leave  
 805d7dd:	c2 04 00             	ret    $0x4

0805d7e0 <string_replace_once>:
 805d7e0:	55                   	push   %ebp
 805d7e1:	89 e5                	mov    %esp,%ebp
 805d7e3:	83 ec 48             	sub    $0x48,%esp
 805d7e6:	8b 45 08             	mov    0x8(%ebp),%eax
 805d7e9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805d7ec:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d7f2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d7f5:	31 c0                	xor    %eax,%eax
 805d7f7:	83 ec 08             	sub    $0x8,%esp
 805d7fa:	ff 75 20             	pushl  0x20(%ebp)
 805d7fd:	ff 75 1c             	pushl  0x1c(%ebp)
 805d800:	ff 75 18             	pushl  0x18(%ebp)
 805d803:	ff 75 14             	pushl  0x14(%ebp)
 805d806:	ff 75 10             	pushl  0x10(%ebp)
 805d809:	ff 75 0c             	pushl  0xc(%ebp)
 805d80c:	e8 e1 11 00 00       	call   805e9f2 <string_index_>
 805d811:	83 c4 20             	add    $0x20,%esp
 805d814:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805d817:	83 7d cc ff          	cmpl   $0xffffffff,-0x34(%ebp)
 805d81b:	75 1a                	jne    805d837 <string_replace_once+0x57>
 805d81d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d820:	ff 75 14             	pushl  0x14(%ebp)
 805d823:	ff 75 10             	pushl  0x10(%ebp)
 805d826:	ff 75 0c             	pushl  0xc(%ebp)
 805d829:	50                   	push   %eax
 805d82a:	e8 cf fe ff ff       	call   805d6fe <string_clone>
 805d82f:	83 c4 0c             	add    $0xc,%esp
 805d832:	e9 84 00 00 00       	jmp    805d8bb <string_replace_once+0xdb>
 805d837:	8b 55 10             	mov    0x10(%ebp),%edx
 805d83a:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
 805d83d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805d840:	01 c1                	add    %eax,%ecx
 805d842:	8d 45 d0             	lea    -0x30(%ebp),%eax
 805d845:	83 ec 08             	sub    $0x8,%esp
 805d848:	52                   	push   %edx
 805d849:	51                   	push   %ecx
 805d84a:	ff 75 14             	pushl  0x14(%ebp)
 805d84d:	ff 75 10             	pushl  0x10(%ebp)
 805d850:	ff 75 0c             	pushl  0xc(%ebp)
 805d853:	50                   	push   %eax
 805d854:	e8 68 10 00 00       	call   805e8c1 <string_substr>
 805d859:	83 c4 1c             	add    $0x1c,%esp
 805d85c:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805d85f:	83 ec 08             	sub    $0x8,%esp
 805d862:	ff 75 cc             	pushl  -0x34(%ebp)
 805d865:	6a 00                	push   $0x0
 805d867:	ff 75 14             	pushl  0x14(%ebp)
 805d86a:	ff 75 10             	pushl  0x10(%ebp)
 805d86d:	ff 75 0c             	pushl  0xc(%ebp)
 805d870:	50                   	push   %eax
 805d871:	e8 4b 10 00 00       	call   805e8c1 <string_substr>
 805d876:	83 c4 1c             	add    $0x1c,%esp
 805d879:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805d87c:	83 ec 04             	sub    $0x4,%esp
 805d87f:	ff 75 2c             	pushl  0x2c(%ebp)
 805d882:	ff 75 28             	pushl  0x28(%ebp)
 805d885:	ff 75 24             	pushl  0x24(%ebp)
 805d888:	ff 75 e4             	pushl  -0x1c(%ebp)
 805d88b:	ff 75 e0             	pushl  -0x20(%ebp)
 805d88e:	ff 75 dc             	pushl  -0x24(%ebp)
 805d891:	50                   	push   %eax
 805d892:	e8 ad 09 00 00       	call   805e244 <string_add>
 805d897:	83 c4 1c             	add    $0x1c,%esp
 805d89a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d89d:	83 ec 04             	sub    $0x4,%esp
 805d8a0:	ff 75 d8             	pushl  -0x28(%ebp)
 805d8a3:	ff 75 d4             	pushl  -0x2c(%ebp)
 805d8a6:	ff 75 d0             	pushl  -0x30(%ebp)
 805d8a9:	ff 75 f0             	pushl  -0x10(%ebp)
 805d8ac:	ff 75 ec             	pushl  -0x14(%ebp)
 805d8af:	ff 75 e8             	pushl  -0x18(%ebp)
 805d8b2:	50                   	push   %eax
 805d8b3:	e8 8c 09 00 00       	call   805e244 <string_add>
 805d8b8:	83 c4 1c             	add    $0x1c,%esp
 805d8bb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805d8be:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805d8c1:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805d8c8:	74 05                	je     805d8cf <string_replace_once+0xef>
 805d8ca:	e8 51 af fe ff       	call   8048820 <__stack_chk_fail@plt>
 805d8cf:	c9                   	leave  
 805d8d0:	c2 04 00             	ret    $0x4

0805d8d3 <string_replace>:
 805d8d3:	55                   	push   %ebp
 805d8d4:	89 e5                	mov    %esp,%ebp
 805d8d6:	53                   	push   %ebx
 805d8d7:	83 ec 54             	sub    $0x54,%esp
 805d8da:	8b 45 08             	mov    0x8(%ebp),%eax
 805d8dd:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805d8e0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805d8e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805d8e9:	31 c0                	xor    %eax,%eax
 805d8eb:	8b 45 10             	mov    0x10(%ebp),%eax
 805d8ee:	85 c0                	test   %eax,%eax
 805d8f0:	74 07                	je     805d8f9 <string_replace+0x26>
 805d8f2:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805d8f5:	85 c0                	test   %eax,%eax
 805d8f7:	75 1a                	jne    805d913 <string_replace+0x40>
 805d8f9:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805d8fc:	ff 75 14             	pushl  0x14(%ebp)
 805d8ff:	ff 75 10             	pushl  0x10(%ebp)
 805d902:	ff 75 0c             	pushl  0xc(%ebp)
 805d905:	50                   	push   %eax
 805d906:	e8 f3 fd ff ff       	call   805d6fe <string_clone>
 805d90b:	83 c4 0c             	add    $0xc,%esp
 805d90e:	e9 d7 01 00 00       	jmp    805daea <string_replace+0x217>
 805d913:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805d916:	83 ec 0c             	sub    $0xc,%esp
 805d919:	6a 00                	push   $0x0
 805d91b:	6a 04                	push   $0x4
 805d91d:	6a 00                	push   $0x0
 805d91f:	6a 00                	push   $0x0
 805d921:	50                   	push   %eax
 805d922:	e8 42 81 ff ff       	call   8055a69 <__new_array_with_default>
 805d927:	83 c4 1c             	add    $0x1c,%esp
 805d92a:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 805d931:	83 ec 04             	sub    $0x4,%esp
 805d934:	ff 75 c0             	pushl  -0x40(%ebp)
 805d937:	ff 75 20             	pushl  0x20(%ebp)
 805d93a:	ff 75 1c             	pushl  0x1c(%ebp)
 805d93d:	ff 75 18             	pushl  0x18(%ebp)
 805d940:	ff 75 14             	pushl  0x14(%ebp)
 805d943:	ff 75 10             	pushl  0x10(%ebp)
 805d946:	ff 75 0c             	pushl  0xc(%ebp)
 805d949:	e8 da 15 00 00       	call   805ef28 <string_index_after>
 805d94e:	83 c4 20             	add    $0x20,%esp
 805d951:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805d954:	83 7d c0 ff          	cmpl   $0xffffffff,-0x40(%ebp)
 805d958:	74 21                	je     805d97b <string_replace+0xa8>
 805d95a:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805d95d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805d960:	83 ec 08             	sub    $0x8,%esp
 805d963:	8d 45 f0             	lea    -0x10(%ebp),%eax
 805d966:	50                   	push   %eax
 805d967:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805d96a:	50                   	push   %eax
 805d96b:	e8 4a 90 ff ff       	call   80569ba <array_push>
 805d970:	83 c4 10             	add    $0x10,%esp
 805d973:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805d976:	01 45 c0             	add    %eax,-0x40(%ebp)
 805d979:	eb b6                	jmp    805d931 <string_replace+0x5e>
 805d97b:	90                   	nop
 805d97c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805d97f:	85 c0                	test   %eax,%eax
 805d981:	75 29                	jne    805d9ac <string_replace+0xd9>
 805d983:	83 ec 0c             	sub    $0xc,%esp
 805d986:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805d989:	50                   	push   %eax
 805d98a:	e8 cd 93 ff ff       	call   8056d5c <array_free>
 805d98f:	83 c4 10             	add    $0x10,%esp
 805d992:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805d995:	ff 75 14             	pushl  0x14(%ebp)
 805d998:	ff 75 10             	pushl  0x10(%ebp)
 805d99b:	ff 75 0c             	pushl  0xc(%ebp)
 805d99e:	50                   	push   %eax
 805d99f:	e8 5a fd ff ff       	call   805d6fe <string_clone>
 805d9a4:	83 c4 0c             	add    $0xc,%esp
 805d9a7:	e9 3e 01 00 00       	jmp    805daea <string_replace+0x217>
 805d9ac:	8b 55 10             	mov    0x10(%ebp),%edx
 805d9af:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805d9b2:	8b 5d 28             	mov    0x28(%ebp),%ebx
 805d9b5:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
 805d9b8:	29 cb                	sub    %ecx,%ebx
 805d9ba:	89 d9                	mov    %ebx,%ecx
 805d9bc:	0f af c1             	imul   %ecx,%eax
 805d9bf:	01 d0                	add    %edx,%eax
 805d9c1:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805d9c4:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805d9c7:	83 c0 01             	add    $0x1,%eax
 805d9ca:	83 ec 0c             	sub    $0xc,%esp
 805d9cd:	50                   	push   %eax
 805d9ce:	e8 54 9f ff ff       	call   8057927 <v_malloc>
 805d9d3:	83 c4 10             	add    $0x10,%esp
 805d9d6:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805d9d9:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 805d9e0:	83 ec 0c             	sub    $0xc,%esp
 805d9e3:	ff 75 c4             	pushl  -0x3c(%ebp)
 805d9e6:	ff 75 ec             	pushl  -0x14(%ebp)
 805d9e9:	ff 75 e8             	pushl  -0x18(%ebp)
 805d9ec:	ff 75 e4             	pushl  -0x1c(%ebp)
 805d9ef:	ff 75 e0             	pushl  -0x20(%ebp)
 805d9f2:	e8 c3 88 ff ff       	call   80562ba <array_get>
 805d9f7:	83 c4 20             	add    $0x20,%esp
 805d9fa:	8b 00                	mov    (%eax),%eax
 805d9fc:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805d9ff:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 805da06:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 805da0d:	e9 9d 00 00 00       	jmp    805daaf <string_replace+0x1dc>
 805da12:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805da15:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 805da18:	75 6e                	jne    805da88 <string_replace+0x1b5>
 805da1a:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 805da21:	eb 27                	jmp    805da4a <string_replace+0x177>
 805da23:	8b 55 cc             	mov    -0x34(%ebp),%edx
 805da26:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805da29:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 805da2c:	ff 75 d4             	pushl  -0x2c(%ebp)
 805da2f:	ff 75 2c             	pushl  0x2c(%ebp)
 805da32:	ff 75 28             	pushl  0x28(%ebp)
 805da35:	ff 75 24             	pushl  0x24(%ebp)
 805da38:	e8 fd 2e 00 00       	call   806093a <string_at>
 805da3d:	83 c4 10             	add    $0x10,%esp
 805da40:	88 03                	mov    %al,(%ebx)
 805da42:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 805da46:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 805da4a:	8b 45 28             	mov    0x28(%ebp),%eax
 805da4d:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 805da50:	7f d1                	jg     805da23 <string_replace+0x150>
 805da52:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805da55:	83 e8 01             	sub    $0x1,%eax
 805da58:	01 45 d0             	add    %eax,-0x30(%ebp)
 805da5b:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 805da5f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805da62:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 805da65:	7e 44                	jle    805daab <string_replace+0x1d8>
 805da67:	83 ec 0c             	sub    $0xc,%esp
 805da6a:	ff 75 c4             	pushl  -0x3c(%ebp)
 805da6d:	ff 75 ec             	pushl  -0x14(%ebp)
 805da70:	ff 75 e8             	pushl  -0x18(%ebp)
 805da73:	ff 75 e4             	pushl  -0x1c(%ebp)
 805da76:	ff 75 e0             	pushl  -0x20(%ebp)
 805da79:	e8 3c 88 ff ff       	call   80562ba <array_get>
 805da7e:	83 c4 20             	add    $0x20,%esp
 805da81:	8b 00                	mov    (%eax),%eax
 805da83:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805da86:	eb 23                	jmp    805daab <string_replace+0x1d8>
 805da88:	8b 55 cc             	mov    -0x34(%ebp),%edx
 805da8b:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805da8e:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 805da91:	ff 75 d0             	pushl  -0x30(%ebp)
 805da94:	ff 75 14             	pushl  0x14(%ebp)
 805da97:	ff 75 10             	pushl  0x10(%ebp)
 805da9a:	ff 75 0c             	pushl  0xc(%ebp)
 805da9d:	e8 98 2e 00 00       	call   806093a <string_at>
 805daa2:	83 c4 10             	add    $0x10,%esp
 805daa5:	88 03                	mov    %al,(%ebx)
 805daa7:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 805daab:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 805daaf:	8b 45 10             	mov    0x10(%ebp),%eax
 805dab2:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 805dab5:	0f 8f 57 ff ff ff    	jg     805da12 <string_replace+0x13f>
 805dabb:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805dabe:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805dac1:	01 d0                	add    %edx,%eax
 805dac3:	c6 00 00             	movb   $0x0,(%eax)
 805dac6:	83 ec 0c             	sub    $0xc,%esp
 805dac9:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805dacc:	50                   	push   %eax
 805dacd:	e8 8a 92 ff ff       	call   8056d5c <array_free>
 805dad2:	83 c4 10             	add    $0x10,%esp
 805dad5:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805dad8:	83 ec 04             	sub    $0x4,%esp
 805dadb:	ff 75 d8             	pushl  -0x28(%ebp)
 805dade:	ff 75 dc             	pushl  -0x24(%ebp)
 805dae1:	50                   	push   %eax
 805dae2:	e8 13 f8 ff ff       	call   805d2fa <tos>
 805dae7:	83 c4 0c             	add    $0xc,%esp
 805daea:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805daed:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805daf0:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805daf7:	74 05                	je     805dafe <string_replace+0x22b>
 805daf9:	e8 22 ad fe ff       	call   8048820 <__stack_chk_fail@plt>
 805dafe:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805db01:	c9                   	leave  
 805db02:	c2 04 00             	ret    $0x4

0805db05 <compare_rep_index>:
 805db05:	55                   	push   %ebp
 805db06:	89 e5                	mov    %esp,%ebp
 805db08:	8b 45 08             	mov    0x8(%ebp),%eax
 805db0b:	8b 10                	mov    (%eax),%edx
 805db0d:	8b 45 0c             	mov    0xc(%ebp),%eax
 805db10:	8b 00                	mov    (%eax),%eax
 805db12:	39 c2                	cmp    %eax,%edx
 805db14:	7d 07                	jge    805db1d <compare_rep_index+0x18>
 805db16:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805db1b:	eb 1a                	jmp    805db37 <compare_rep_index+0x32>
 805db1d:	8b 45 08             	mov    0x8(%ebp),%eax
 805db20:	8b 10                	mov    (%eax),%edx
 805db22:	8b 45 0c             	mov    0xc(%ebp),%eax
 805db25:	8b 00                	mov    (%eax),%eax
 805db27:	39 c2                	cmp    %eax,%edx
 805db29:	7e 07                	jle    805db32 <compare_rep_index+0x2d>
 805db2b:	b8 01 00 00 00       	mov    $0x1,%eax
 805db30:	eb 05                	jmp    805db37 <compare_rep_index+0x32>
 805db32:	b8 00 00 00 00       	mov    $0x0,%eax
 805db37:	5d                   	pop    %ebp
 805db38:	c3                   	ret    

0805db39 <array_RepIndex_sort2>:
 805db39:	55                   	push   %ebp
 805db3a:	89 e5                	mov    %esp,%ebp
 805db3c:	83 ec 08             	sub    $0x8,%esp
 805db3f:	83 ec 08             	sub    $0x8,%esp
 805db42:	68 05 db 05 08       	push   $0x805db05
 805db47:	ff 75 08             	pushl  0x8(%ebp)
 805db4a:	e8 a0 83 ff ff       	call   8055eef <array_sort_with_compare>
 805db4f:	83 c4 10             	add    $0x10,%esp
 805db52:	90                   	nop
 805db53:	c9                   	leave  
 805db54:	c3                   	ret    

0805db55 <string_replace_each>:
 805db55:	55                   	push   %ebp
 805db56:	89 e5                	mov    %esp,%ebp
 805db58:	53                   	push   %ebx
 805db59:	83 ec 74             	sub    $0x74,%esp
 805db5c:	8b 45 08             	mov    0x8(%ebp),%eax
 805db5f:	89 45 94             	mov    %eax,-0x6c(%ebp)
 805db62:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805db68:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805db6b:	31 c0                	xor    %eax,%eax
 805db6d:	8b 45 10             	mov    0x10(%ebp),%eax
 805db70:	85 c0                	test   %eax,%eax
 805db72:	74 07                	je     805db7b <string_replace_each+0x26>
 805db74:	8b 45 20             	mov    0x20(%ebp),%eax
 805db77:	85 c0                	test   %eax,%eax
 805db79:	75 19                	jne    805db94 <string_replace_each+0x3f>
 805db7b:	8b 45 94             	mov    -0x6c(%ebp),%eax
 805db7e:	8b 55 0c             	mov    0xc(%ebp),%edx
 805db81:	89 10                	mov    %edx,(%eax)
 805db83:	8b 55 10             	mov    0x10(%ebp),%edx
 805db86:	89 50 04             	mov    %edx,0x4(%eax)
 805db89:	8b 55 14             	mov    0x14(%ebp),%edx
 805db8c:	89 50 08             	mov    %edx,0x8(%eax)
 805db8f:	e9 eb 02 00 00       	jmp    805de7f <string_replace_each+0x32a>
 805db94:	8b 45 20             	mov    0x20(%ebp),%eax
 805db97:	83 e0 01             	and    $0x1,%eax
 805db9a:	85 c0                	test   %eax,%eax
 805db9c:	74 42                	je     805dbe0 <string_replace_each+0x8b>
 805db9e:	c7 45 dc 7c 9e 06 08 	movl   $0x8069e7c,-0x24(%ebp)
 805dba5:	c7 45 e0 2c 00 00 00 	movl   $0x2c,-0x20(%ebp)
 805dbac:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 805dbb3:	83 ec 04             	sub    $0x4,%esp
 805dbb6:	ff 75 e4             	pushl  -0x1c(%ebp)
 805dbb9:	ff 75 e0             	pushl  -0x20(%ebp)
 805dbbc:	ff 75 dc             	pushl  -0x24(%ebp)
 805dbbf:	e8 42 9d ff ff       	call   8057906 <println>
 805dbc4:	83 c4 10             	add    $0x10,%esp
 805dbc7:	8b 45 94             	mov    -0x6c(%ebp),%eax
 805dbca:	8b 55 0c             	mov    0xc(%ebp),%edx
 805dbcd:	89 10                	mov    %edx,(%eax)
 805dbcf:	8b 55 10             	mov    0x10(%ebp),%edx
 805dbd2:	89 50 04             	mov    %edx,0x4(%eax)
 805dbd5:	8b 55 14             	mov    0x14(%ebp),%edx
 805dbd8:	89 50 08             	mov    %edx,0x8(%eax)
 805dbdb:	e9 9f 02 00 00       	jmp    805de7f <string_replace_each+0x32a>
 805dbe0:	8b 45 10             	mov    0x10(%ebp),%eax
 805dbe3:	89 45 9c             	mov    %eax,-0x64(%ebp)
 805dbe6:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805dbe9:	83 ec 0c             	sub    $0xc,%esp
 805dbec:	6a 00                	push   $0x0
 805dbee:	6a 08                	push   $0x8
 805dbf0:	6a 00                	push   $0x0
 805dbf2:	6a 00                	push   $0x0
 805dbf4:	50                   	push   %eax
 805dbf5:	e8 6f 7e ff ff       	call   8055a69 <__new_array_with_default>
 805dbfa:	83 c4 1c             	add    $0x1c,%esp
 805dbfd:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 805dc04:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)
 805dc0b:	e9 bc 00 00 00       	jmp    805dccc <string_replace_each+0x177>
 805dc10:	83 ec 0c             	sub    $0xc,%esp
 805dc13:	ff 75 a4             	pushl  -0x5c(%ebp)
 805dc16:	ff 75 24             	pushl  0x24(%ebp)
 805dc19:	ff 75 20             	pushl  0x20(%ebp)
 805dc1c:	ff 75 1c             	pushl  0x1c(%ebp)
 805dc1f:	ff 75 18             	pushl  0x18(%ebp)
 805dc22:	e8 93 86 ff ff       	call   80562ba <array_get>
 805dc27:	83 c4 20             	add    $0x20,%esp
 805dc2a:	8b 10                	mov    (%eax),%edx
 805dc2c:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 805dc2f:	8b 50 04             	mov    0x4(%eax),%edx
 805dc32:	89 55 c8             	mov    %edx,-0x38(%ebp)
 805dc35:	8b 40 08             	mov    0x8(%eax),%eax
 805dc38:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805dc3b:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 805dc3e:	83 c0 01             	add    $0x1,%eax
 805dc41:	83 ec 0c             	sub    $0xc,%esp
 805dc44:	50                   	push   %eax
 805dc45:	ff 75 24             	pushl  0x24(%ebp)
 805dc48:	ff 75 20             	pushl  0x20(%ebp)
 805dc4b:	ff 75 1c             	pushl  0x1c(%ebp)
 805dc4e:	ff 75 18             	pushl  0x18(%ebp)
 805dc51:	e8 64 86 ff ff       	call   80562ba <array_get>
 805dc56:	83 c4 20             	add    $0x20,%esp
 805dc59:	8b 10                	mov    (%eax),%edx
 805dc5b:	89 55 d0             	mov    %edx,-0x30(%ebp)
 805dc5e:	8b 50 04             	mov    0x4(%eax),%edx
 805dc61:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 805dc64:	8b 40 08             	mov    0x8(%eax),%eax
 805dc67:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805dc6a:	83 ec 04             	sub    $0x4,%esp
 805dc6d:	ff 75 a0             	pushl  -0x60(%ebp)
 805dc70:	ff 75 cc             	pushl  -0x34(%ebp)
 805dc73:	ff 75 c8             	pushl  -0x38(%ebp)
 805dc76:	ff 75 c4             	pushl  -0x3c(%ebp)
 805dc79:	ff 75 14             	pushl  0x14(%ebp)
 805dc7c:	ff 75 10             	pushl  0x10(%ebp)
 805dc7f:	ff 75 0c             	pushl  0xc(%ebp)
 805dc82:	e8 a1 12 00 00       	call   805ef28 <string_index_after>
 805dc87:	83 c4 20             	add    $0x20,%esp
 805dc8a:	89 45 a0             	mov    %eax,-0x60(%ebp)
 805dc8d:	83 7d a0 ff          	cmpl   $0xffffffff,-0x60(%ebp)
 805dc91:	74 34                	je     805dcc7 <string_replace_each+0x172>
 805dc93:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805dc96:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805dc99:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 805dc9c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805dc9f:	83 ec 08             	sub    $0x8,%esp
 805dca2:	8d 45 ec             	lea    -0x14(%ebp),%eax
 805dca5:	50                   	push   %eax
 805dca6:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805dca9:	50                   	push   %eax
 805dcaa:	e8 0b 8d ff ff       	call   80569ba <array_push>
 805dcaf:	83 c4 10             	add    $0x10,%esp
 805dcb2:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805dcb5:	01 45 a0             	add    %eax,-0x60(%ebp)
 805dcb8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805dcbb:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805dcbe:	29 c2                	sub    %eax,%edx
 805dcc0:	89 d0                	mov    %edx,%eax
 805dcc2:	01 45 9c             	add    %eax,-0x64(%ebp)
 805dcc5:	eb a3                	jmp    805dc6a <string_replace_each+0x115>
 805dcc7:	90                   	nop
 805dcc8:	83 45 a4 02          	addl   $0x2,-0x5c(%ebp)
 805dccc:	8b 45 20             	mov    0x20(%ebp),%eax
 805dccf:	3b 45 a4             	cmp    -0x5c(%ebp),%eax
 805dcd2:	0f 8f 38 ff ff ff    	jg     805dc10 <string_replace_each+0xbb>
 805dcd8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805dcdb:	85 c0                	test   %eax,%eax
 805dcdd:	75 19                	jne    805dcf8 <string_replace_each+0x1a3>
 805dcdf:	8b 45 94             	mov    -0x6c(%ebp),%eax
 805dce2:	8b 55 0c             	mov    0xc(%ebp),%edx
 805dce5:	89 10                	mov    %edx,(%eax)
 805dce7:	8b 55 10             	mov    0x10(%ebp),%edx
 805dcea:	89 50 04             	mov    %edx,0x4(%eax)
 805dced:	8b 55 14             	mov    0x14(%ebp),%edx
 805dcf0:	89 50 08             	mov    %edx,0x8(%eax)
 805dcf3:	e9 87 01 00 00       	jmp    805de7f <string_replace_each+0x32a>
 805dcf8:	83 ec 0c             	sub    $0xc,%esp
 805dcfb:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805dcfe:	50                   	push   %eax
 805dcff:	e8 35 fe ff ff       	call   805db39 <array_RepIndex_sort2>
 805dd04:	83 c4 10             	add    $0x10,%esp
 805dd07:	8b 45 9c             	mov    -0x64(%ebp),%eax
 805dd0a:	83 c0 01             	add    $0x1,%eax
 805dd0d:	83 ec 0c             	sub    $0xc,%esp
 805dd10:	50                   	push   %eax
 805dd11:	e8 11 9c ff ff       	call   8057927 <v_malloc>
 805dd16:	83 c4 10             	add    $0x10,%esp
 805dd19:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805dd1c:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)
 805dd23:	83 ec 0c             	sub    $0xc,%esp
 805dd26:	ff 75 a8             	pushl  -0x58(%ebp)
 805dd29:	ff 75 e8             	pushl  -0x18(%ebp)
 805dd2c:	ff 75 e4             	pushl  -0x1c(%ebp)
 805dd2f:	ff 75 e0             	pushl  -0x20(%ebp)
 805dd32:	ff 75 dc             	pushl  -0x24(%ebp)
 805dd35:	e8 80 85 ff ff       	call   80562ba <array_get>
 805dd3a:	83 c4 20             	add    $0x20,%esp
 805dd3d:	8b 50 04             	mov    0x4(%eax),%edx
 805dd40:	8b 00                	mov    (%eax),%eax
 805dd42:	89 45 bc             	mov    %eax,-0x44(%ebp)
 805dd45:	89 55 c0             	mov    %edx,-0x40(%ebp)
 805dd48:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 805dd4f:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 805dd56:	e9 f8 00 00 00       	jmp    805de53 <string_replace_each+0x2fe>
 805dd5b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805dd5e:	3b 45 b0             	cmp    -0x50(%ebp),%eax
 805dd61:	0f 85 cf 00 00 00    	jne    805de36 <string_replace_each+0x2e1>
 805dd67:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805dd6a:	83 ec 0c             	sub    $0xc,%esp
 805dd6d:	50                   	push   %eax
 805dd6e:	ff 75 24             	pushl  0x24(%ebp)
 805dd71:	ff 75 20             	pushl  0x20(%ebp)
 805dd74:	ff 75 1c             	pushl  0x1c(%ebp)
 805dd77:	ff 75 18             	pushl  0x18(%ebp)
 805dd7a:	e8 3b 85 ff ff       	call   80562ba <array_get>
 805dd7f:	83 c4 20             	add    $0x20,%esp
 805dd82:	8b 10                	mov    (%eax),%edx
 805dd84:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 805dd87:	8b 50 04             	mov    0x4(%eax),%edx
 805dd8a:	89 55 c8             	mov    %edx,-0x38(%ebp)
 805dd8d:	8b 40 08             	mov    0x8(%eax),%eax
 805dd90:	89 45 cc             	mov    %eax,-0x34(%ebp)
 805dd93:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805dd96:	83 c0 01             	add    $0x1,%eax
 805dd99:	83 ec 0c             	sub    $0xc,%esp
 805dd9c:	50                   	push   %eax
 805dd9d:	ff 75 24             	pushl  0x24(%ebp)
 805dda0:	ff 75 20             	pushl  0x20(%ebp)
 805dda3:	ff 75 1c             	pushl  0x1c(%ebp)
 805dda6:	ff 75 18             	pushl  0x18(%ebp)
 805dda9:	e8 0c 85 ff ff       	call   80562ba <array_get>
 805ddae:	83 c4 20             	add    $0x20,%esp
 805ddb1:	8b 10                	mov    (%eax),%edx
 805ddb3:	89 55 d0             	mov    %edx,-0x30(%ebp)
 805ddb6:	8b 50 04             	mov    0x4(%eax),%edx
 805ddb9:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 805ddbc:	8b 40 08             	mov    0x8(%eax),%eax
 805ddbf:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805ddc2:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 805ddc9:	eb 27                	jmp    805ddf2 <string_replace_each+0x29d>
 805ddcb:	8b 55 ac             	mov    -0x54(%ebp),%edx
 805ddce:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805ddd1:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 805ddd4:	ff 75 b4             	pushl  -0x4c(%ebp)
 805ddd7:	ff 75 d8             	pushl  -0x28(%ebp)
 805ddda:	ff 75 d4             	pushl  -0x2c(%ebp)
 805dddd:	ff 75 d0             	pushl  -0x30(%ebp)
 805dde0:	e8 55 2b 00 00       	call   806093a <string_at>
 805dde5:	83 c4 10             	add    $0x10,%esp
 805dde8:	88 03                	mov    %al,(%ebx)
 805ddea:	83 45 ac 01          	addl   $0x1,-0x54(%ebp)
 805ddee:	83 45 b4 01          	addl   $0x1,-0x4c(%ebp)
 805ddf2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ddf5:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 805ddf8:	7f d1                	jg     805ddcb <string_replace_each+0x276>
 805ddfa:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805ddfd:	83 e8 01             	sub    $0x1,%eax
 805de00:	01 45 b0             	add    %eax,-0x50(%ebp)
 805de03:	83 45 a8 01          	addl   $0x1,-0x58(%ebp)
 805de07:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805de0a:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 805de0d:	7e 40                	jle    805de4f <string_replace_each+0x2fa>
 805de0f:	83 ec 0c             	sub    $0xc,%esp
 805de12:	ff 75 a8             	pushl  -0x58(%ebp)
 805de15:	ff 75 e8             	pushl  -0x18(%ebp)
 805de18:	ff 75 e4             	pushl  -0x1c(%ebp)
 805de1b:	ff 75 e0             	pushl  -0x20(%ebp)
 805de1e:	ff 75 dc             	pushl  -0x24(%ebp)
 805de21:	e8 94 84 ff ff       	call   80562ba <array_get>
 805de26:	83 c4 20             	add    $0x20,%esp
 805de29:	8b 50 04             	mov    0x4(%eax),%edx
 805de2c:	8b 00                	mov    (%eax),%eax
 805de2e:	89 45 bc             	mov    %eax,-0x44(%ebp)
 805de31:	89 55 c0             	mov    %edx,-0x40(%ebp)
 805de34:	eb 19                	jmp    805de4f <string_replace_each+0x2fa>
 805de36:	8b 55 ac             	mov    -0x54(%ebp),%edx
 805de39:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805de3c:	01 c2                	add    %eax,%edx
 805de3e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805de41:	8b 45 b0             	mov    -0x50(%ebp),%eax
 805de44:	01 c8                	add    %ecx,%eax
 805de46:	0f b6 00             	movzbl (%eax),%eax
 805de49:	88 02                	mov    %al,(%edx)
 805de4b:	83 45 ac 01          	addl   $0x1,-0x54(%ebp)
 805de4f:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 805de53:	8b 45 10             	mov    0x10(%ebp),%eax
 805de56:	3b 45 b0             	cmp    -0x50(%ebp),%eax
 805de59:	0f 8f fc fe ff ff    	jg     805dd5b <string_replace_each+0x206>
 805de5f:	8b 55 9c             	mov    -0x64(%ebp),%edx
 805de62:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805de65:	01 d0                	add    %edx,%eax
 805de67:	c6 00 00             	movb   $0x0,(%eax)
 805de6a:	8b 45 94             	mov    -0x6c(%ebp),%eax
 805de6d:	83 ec 04             	sub    $0x4,%esp
 805de70:	ff 75 9c             	pushl  -0x64(%ebp)
 805de73:	ff 75 b8             	pushl  -0x48(%ebp)
 805de76:	50                   	push   %eax
 805de77:	e8 7e f4 ff ff       	call   805d2fa <tos>
 805de7c:	83 c4 0c             	add    $0xc,%esp
 805de7f:	8b 45 94             	mov    -0x6c(%ebp),%eax
 805de82:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805de85:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805de8c:	74 05                	je     805de93 <string_replace_each+0x33e>
 805de8e:	e8 8d a9 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805de93:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805de96:	c9                   	leave  
 805de97:	c2 04 00             	ret    $0x4

0805de9a <string_bool>:
 805de9a:	55                   	push   %ebp
 805de9b:	89 e5                	mov    %esp,%ebp
 805de9d:	83 ec 28             	sub    $0x28,%esp
 805dea0:	c7 45 e0 8b 9d 06 08 	movl   $0x8069d8b,-0x20(%ebp)
 805dea7:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)
 805deae:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 805deb5:	83 ec 08             	sub    $0x8,%esp
 805deb8:	ff 75 e8             	pushl  -0x18(%ebp)
 805debb:	ff 75 e4             	pushl  -0x1c(%ebp)
 805debe:	ff 75 e0             	pushl  -0x20(%ebp)
 805dec1:	ff 75 10             	pushl  0x10(%ebp)
 805dec4:	ff 75 0c             	pushl  0xc(%ebp)
 805dec7:	ff 75 08             	pushl  0x8(%ebp)
 805deca:	e8 85 01 00 00       	call   805e054 <string_eq>
 805decf:	83 c4 20             	add    $0x20,%esp
 805ded2:	85 c0                	test   %eax,%eax
 805ded4:	75 36                	jne    805df0c <string_bool+0x72>
 805ded6:	c7 45 ec a9 9e 06 08 	movl   $0x8069ea9,-0x14(%ebp)
 805dedd:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 805dee4:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805deeb:	83 ec 08             	sub    $0x8,%esp
 805deee:	ff 75 f4             	pushl  -0xc(%ebp)
 805def1:	ff 75 f0             	pushl  -0x10(%ebp)
 805def4:	ff 75 ec             	pushl  -0x14(%ebp)
 805def7:	ff 75 10             	pushl  0x10(%ebp)
 805defa:	ff 75 0c             	pushl  0xc(%ebp)
 805defd:	ff 75 08             	pushl  0x8(%ebp)
 805df00:	e8 4f 01 00 00       	call   805e054 <string_eq>
 805df05:	83 c4 20             	add    $0x20,%esp
 805df08:	85 c0                	test   %eax,%eax
 805df0a:	74 07                	je     805df13 <string_bool+0x79>
 805df0c:	b8 01 00 00 00       	mov    $0x1,%eax
 805df11:	eb 05                	jmp    805df18 <string_bool+0x7e>
 805df13:	b8 00 00 00 00       	mov    $0x0,%eax
 805df18:	c9                   	leave  
 805df19:	c3                   	ret    

0805df1a <string_int>:
 805df1a:	55                   	push   %ebp
 805df1b:	89 e5                	mov    %esp,%ebp
 805df1d:	83 ec 08             	sub    $0x8,%esp
 805df20:	83 ec 04             	sub    $0x4,%esp
 805df23:	6a 00                	push   $0x0
 805df25:	6a 00                	push   $0x0
 805df27:	6a 20                	push   $0x20
 805df29:	6a 00                	push   $0x0
 805df2b:	ff 75 10             	pushl  0x10(%ebp)
 805df2e:	ff 75 0c             	pushl  0xc(%ebp)
 805df31:	ff 75 08             	pushl  0x8(%ebp)
 805df34:	e8 75 12 ff ff       	call   804f1ae <strconv__common_parse_int>
 805df39:	83 c4 20             	add    $0x20,%esp
 805df3c:	c9                   	leave  
 805df3d:	c3                   	ret    

0805df3e <string_i64>:
 805df3e:	55                   	push   %ebp
 805df3f:	89 e5                	mov    %esp,%ebp
 805df41:	83 ec 08             	sub    $0x8,%esp
 805df44:	83 ec 04             	sub    $0x4,%esp
 805df47:	6a 00                	push   $0x0
 805df49:	6a 00                	push   $0x0
 805df4b:	6a 40                	push   $0x40
 805df4d:	6a 00                	push   $0x0
 805df4f:	ff 75 10             	pushl  0x10(%ebp)
 805df52:	ff 75 0c             	pushl  0xc(%ebp)
 805df55:	ff 75 08             	pushl  0x8(%ebp)
 805df58:	e8 51 12 ff ff       	call   804f1ae <strconv__common_parse_int>
 805df5d:	83 c4 20             	add    $0x20,%esp
 805df60:	c9                   	leave  
 805df61:	c3                   	ret    

0805df62 <string_i8>:
 805df62:	55                   	push   %ebp
 805df63:	89 e5                	mov    %esp,%ebp
 805df65:	83 ec 08             	sub    $0x8,%esp
 805df68:	83 ec 04             	sub    $0x4,%esp
 805df6b:	6a 00                	push   $0x0
 805df6d:	6a 00                	push   $0x0
 805df6f:	6a 08                	push   $0x8
 805df71:	6a 00                	push   $0x0
 805df73:	ff 75 10             	pushl  0x10(%ebp)
 805df76:	ff 75 0c             	pushl  0xc(%ebp)
 805df79:	ff 75 08             	pushl  0x8(%ebp)
 805df7c:	e8 2d 12 ff ff       	call   804f1ae <strconv__common_parse_int>
 805df81:	83 c4 20             	add    $0x20,%esp
 805df84:	c9                   	leave  
 805df85:	c3                   	ret    

0805df86 <string_i16>:
 805df86:	55                   	push   %ebp
 805df87:	89 e5                	mov    %esp,%ebp
 805df89:	83 ec 08             	sub    $0x8,%esp
 805df8c:	83 ec 04             	sub    $0x4,%esp
 805df8f:	6a 00                	push   $0x0
 805df91:	6a 00                	push   $0x0
 805df93:	6a 10                	push   $0x10
 805df95:	6a 00                	push   $0x0
 805df97:	ff 75 10             	pushl  0x10(%ebp)
 805df9a:	ff 75 0c             	pushl  0xc(%ebp)
 805df9d:	ff 75 08             	pushl  0x8(%ebp)
 805dfa0:	e8 09 12 ff ff       	call   804f1ae <strconv__common_parse_int>
 805dfa5:	83 c4 20             	add    $0x20,%esp
 805dfa8:	c9                   	leave  
 805dfa9:	c3                   	ret    

0805dfaa <string_f32>:
 805dfaa:	55                   	push   %ebp
 805dfab:	89 e5                	mov    %esp,%ebp
 805dfad:	83 ec 18             	sub    $0x18,%esp
 805dfb0:	83 ec 04             	sub    $0x4,%esp
 805dfb3:	ff 75 10             	pushl  0x10(%ebp)
 805dfb6:	ff 75 0c             	pushl  0xc(%ebp)
 805dfb9:	ff 75 08             	pushl  0x8(%ebp)
 805dfbc:	e8 e2 06 ff ff       	call   804e6a3 <strconv__atof64>
 805dfc1:	83 c4 10             	add    $0x10,%esp
 805dfc4:	d9 5d f4             	fstps  -0xc(%ebp)
 805dfc7:	d9 45 f4             	flds   -0xc(%ebp)
 805dfca:	c9                   	leave  
 805dfcb:	c3                   	ret    

0805dfcc <string_f64>:
 805dfcc:	55                   	push   %ebp
 805dfcd:	89 e5                	mov    %esp,%ebp
 805dfcf:	83 ec 08             	sub    $0x8,%esp
 805dfd2:	83 ec 04             	sub    $0x4,%esp
 805dfd5:	ff 75 10             	pushl  0x10(%ebp)
 805dfd8:	ff 75 0c             	pushl  0xc(%ebp)
 805dfdb:	ff 75 08             	pushl  0x8(%ebp)
 805dfde:	e8 c0 06 ff ff       	call   804e6a3 <strconv__atof64>
 805dfe3:	83 c4 10             	add    $0x10,%esp
 805dfe6:	c9                   	leave  
 805dfe7:	c3                   	ret    

0805dfe8 <string_u16>:
 805dfe8:	55                   	push   %ebp
 805dfe9:	89 e5                	mov    %esp,%ebp
 805dfeb:	83 ec 08             	sub    $0x8,%esp
 805dfee:	83 ec 04             	sub    $0x4,%esp
 805dff1:	6a 00                	push   $0x0
 805dff3:	6a 00                	push   $0x0
 805dff5:	6a 10                	push   $0x10
 805dff7:	6a 00                	push   $0x0
 805dff9:	ff 75 10             	pushl  0x10(%ebp)
 805dffc:	ff 75 0c             	pushl  0xc(%ebp)
 805dfff:	ff 75 08             	pushl  0x8(%ebp)
 805e002:	e8 d1 0c ff ff       	call   804ecd8 <strconv__common_parse_uint>
 805e007:	83 c4 20             	add    $0x20,%esp
 805e00a:	c9                   	leave  
 805e00b:	c3                   	ret    

0805e00c <string_u32>:
 805e00c:	55                   	push   %ebp
 805e00d:	89 e5                	mov    %esp,%ebp
 805e00f:	83 ec 08             	sub    $0x8,%esp
 805e012:	83 ec 04             	sub    $0x4,%esp
 805e015:	6a 00                	push   $0x0
 805e017:	6a 00                	push   $0x0
 805e019:	6a 20                	push   $0x20
 805e01b:	6a 00                	push   $0x0
 805e01d:	ff 75 10             	pushl  0x10(%ebp)
 805e020:	ff 75 0c             	pushl  0xc(%ebp)
 805e023:	ff 75 08             	pushl  0x8(%ebp)
 805e026:	e8 ad 0c ff ff       	call   804ecd8 <strconv__common_parse_uint>
 805e02b:	83 c4 20             	add    $0x20,%esp
 805e02e:	c9                   	leave  
 805e02f:	c3                   	ret    

0805e030 <string_u64>:
 805e030:	55                   	push   %ebp
 805e031:	89 e5                	mov    %esp,%ebp
 805e033:	83 ec 08             	sub    $0x8,%esp
 805e036:	83 ec 04             	sub    $0x4,%esp
 805e039:	6a 00                	push   $0x0
 805e03b:	6a 00                	push   $0x0
 805e03d:	6a 40                	push   $0x40
 805e03f:	6a 00                	push   $0x0
 805e041:	ff 75 10             	pushl  0x10(%ebp)
 805e044:	ff 75 0c             	pushl  0xc(%ebp)
 805e047:	ff 75 08             	pushl  0x8(%ebp)
 805e04a:	e8 89 0c ff ff       	call   804ecd8 <strconv__common_parse_uint>
 805e04f:	83 c4 20             	add    $0x20,%esp
 805e052:	c9                   	leave  
 805e053:	c3                   	ret    

0805e054 <string_eq>:
 805e054:	55                   	push   %ebp
 805e055:	89 e5                	mov    %esp,%ebp
 805e057:	83 ec 18             	sub    $0x18,%esp
 805e05a:	8b 45 08             	mov    0x8(%ebp),%eax
 805e05d:	85 c0                	test   %eax,%eax
 805e05f:	75 29                	jne    805e08a <string_eq+0x36>
 805e061:	c7 45 ec ab 9e 06 08 	movl   $0x8069eab,-0x14(%ebp)
 805e068:	c7 45 f0 17 00 00 00 	movl   $0x17,-0x10(%ebp)
 805e06f:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805e076:	83 ec 04             	sub    $0x4,%esp
 805e079:	ff 75 f4             	pushl  -0xc(%ebp)
 805e07c:	ff 75 f0             	pushl  -0x10(%ebp)
 805e07f:	ff 75 ec             	pushl  -0x14(%ebp)
 805e082:	e8 10 97 ff ff       	call   8057797 <v_panic>
 805e087:	83 c4 10             	add    $0x10,%esp
 805e08a:	8b 55 0c             	mov    0xc(%ebp),%edx
 805e08d:	8b 45 18             	mov    0x18(%ebp),%eax
 805e090:	39 c2                	cmp    %eax,%edx
 805e092:	74 07                	je     805e09b <string_eq+0x47>
 805e094:	b8 00 00 00 00       	mov    $0x0,%eax
 805e099:	eb 21                	jmp    805e0bc <string_eq+0x68>
 805e09b:	8b 45 18             	mov    0x18(%ebp),%eax
 805e09e:	89 c1                	mov    %eax,%ecx
 805e0a0:	8b 55 14             	mov    0x14(%ebp),%edx
 805e0a3:	8b 45 08             	mov    0x8(%ebp),%eax
 805e0a6:	83 ec 04             	sub    $0x4,%esp
 805e0a9:	51                   	push   %ecx
 805e0aa:	52                   	push   %edx
 805e0ab:	50                   	push   %eax
 805e0ac:	e8 4f a7 fe ff       	call   8048800 <memcmp@plt>
 805e0b1:	83 c4 10             	add    $0x10,%esp
 805e0b4:	85 c0                	test   %eax,%eax
 805e0b6:	0f 94 c0             	sete   %al
 805e0b9:	0f b6 c0             	movzbl %al,%eax
 805e0bc:	c9                   	leave  
 805e0bd:	c3                   	ret    

0805e0be <string_ne>:
 805e0be:	55                   	push   %ebp
 805e0bf:	89 e5                	mov    %esp,%ebp
 805e0c1:	83 ec 08             	sub    $0x8,%esp
 805e0c4:	83 ec 08             	sub    $0x8,%esp
 805e0c7:	ff 75 1c             	pushl  0x1c(%ebp)
 805e0ca:	ff 75 18             	pushl  0x18(%ebp)
 805e0cd:	ff 75 14             	pushl  0x14(%ebp)
 805e0d0:	ff 75 10             	pushl  0x10(%ebp)
 805e0d3:	ff 75 0c             	pushl  0xc(%ebp)
 805e0d6:	ff 75 08             	pushl  0x8(%ebp)
 805e0d9:	e8 76 ff ff ff       	call   805e054 <string_eq>
 805e0de:	83 c4 20             	add    $0x20,%esp
 805e0e1:	85 c0                	test   %eax,%eax
 805e0e3:	0f 94 c0             	sete   %al
 805e0e6:	0f b6 c0             	movzbl %al,%eax
 805e0e9:	c9                   	leave  
 805e0ea:	c3                   	ret    

0805e0eb <string_lt>:
 805e0eb:	55                   	push   %ebp
 805e0ec:	89 e5                	mov    %esp,%ebp
 805e0ee:	53                   	push   %ebx
 805e0ef:	83 ec 14             	sub    $0x14,%esp
 805e0f2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805e0f9:	eb 76                	jmp    805e171 <string_lt+0x86>
 805e0fb:	8b 45 18             	mov    0x18(%ebp),%eax
 805e0fe:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805e101:	7e 2e                	jle    805e131 <string_lt+0x46>
 805e103:	ff 75 f4             	pushl  -0xc(%ebp)
 805e106:	ff 75 10             	pushl  0x10(%ebp)
 805e109:	ff 75 0c             	pushl  0xc(%ebp)
 805e10c:	ff 75 08             	pushl  0x8(%ebp)
 805e10f:	e8 26 28 00 00       	call   806093a <string_at>
 805e114:	83 c4 10             	add    $0x10,%esp
 805e117:	89 c3                	mov    %eax,%ebx
 805e119:	ff 75 f4             	pushl  -0xc(%ebp)
 805e11c:	ff 75 1c             	pushl  0x1c(%ebp)
 805e11f:	ff 75 18             	pushl  0x18(%ebp)
 805e122:	ff 75 14             	pushl  0x14(%ebp)
 805e125:	e8 10 28 00 00       	call   806093a <string_at>
 805e12a:	83 c4 10             	add    $0x10,%esp
 805e12d:	38 c3                	cmp    %al,%bl
 805e12f:	76 07                	jbe    805e138 <string_lt+0x4d>
 805e131:	b8 00 00 00 00       	mov    $0x0,%eax
 805e136:	eb 57                	jmp    805e18f <string_lt+0xa4>
 805e138:	ff 75 f4             	pushl  -0xc(%ebp)
 805e13b:	ff 75 10             	pushl  0x10(%ebp)
 805e13e:	ff 75 0c             	pushl  0xc(%ebp)
 805e141:	ff 75 08             	pushl  0x8(%ebp)
 805e144:	e8 f1 27 00 00       	call   806093a <string_at>
 805e149:	83 c4 10             	add    $0x10,%esp
 805e14c:	89 c3                	mov    %eax,%ebx
 805e14e:	ff 75 f4             	pushl  -0xc(%ebp)
 805e151:	ff 75 1c             	pushl  0x1c(%ebp)
 805e154:	ff 75 18             	pushl  0x18(%ebp)
 805e157:	ff 75 14             	pushl  0x14(%ebp)
 805e15a:	e8 db 27 00 00       	call   806093a <string_at>
 805e15f:	83 c4 10             	add    $0x10,%esp
 805e162:	38 c3                	cmp    %al,%bl
 805e164:	73 07                	jae    805e16d <string_lt+0x82>
 805e166:	b8 01 00 00 00       	mov    $0x1,%eax
 805e16b:	eb 22                	jmp    805e18f <string_lt+0xa4>
 805e16d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805e171:	8b 45 0c             	mov    0xc(%ebp),%eax
 805e174:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805e177:	7f 82                	jg     805e0fb <string_lt+0x10>
 805e179:	8b 55 0c             	mov    0xc(%ebp),%edx
 805e17c:	8b 45 18             	mov    0x18(%ebp),%eax
 805e17f:	39 c2                	cmp    %eax,%edx
 805e181:	7d 07                	jge    805e18a <string_lt+0x9f>
 805e183:	b8 01 00 00 00       	mov    $0x1,%eax
 805e188:	eb 05                	jmp    805e18f <string_lt+0xa4>
 805e18a:	b8 00 00 00 00       	mov    $0x0,%eax
 805e18f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805e192:	c9                   	leave  
 805e193:	c3                   	ret    

0805e194 <string_le>:
 805e194:	55                   	push   %ebp
 805e195:	89 e5                	mov    %esp,%ebp
 805e197:	83 ec 08             	sub    $0x8,%esp
 805e19a:	83 ec 08             	sub    $0x8,%esp
 805e19d:	ff 75 1c             	pushl  0x1c(%ebp)
 805e1a0:	ff 75 18             	pushl  0x18(%ebp)
 805e1a3:	ff 75 14             	pushl  0x14(%ebp)
 805e1a6:	ff 75 10             	pushl  0x10(%ebp)
 805e1a9:	ff 75 0c             	pushl  0xc(%ebp)
 805e1ac:	ff 75 08             	pushl  0x8(%ebp)
 805e1af:	e8 37 ff ff ff       	call   805e0eb <string_lt>
 805e1b4:	83 c4 20             	add    $0x20,%esp
 805e1b7:	85 c0                	test   %eax,%eax
 805e1b9:	75 21                	jne    805e1dc <string_le+0x48>
 805e1bb:	83 ec 08             	sub    $0x8,%esp
 805e1be:	ff 75 1c             	pushl  0x1c(%ebp)
 805e1c1:	ff 75 18             	pushl  0x18(%ebp)
 805e1c4:	ff 75 14             	pushl  0x14(%ebp)
 805e1c7:	ff 75 10             	pushl  0x10(%ebp)
 805e1ca:	ff 75 0c             	pushl  0xc(%ebp)
 805e1cd:	ff 75 08             	pushl  0x8(%ebp)
 805e1d0:	e8 7f fe ff ff       	call   805e054 <string_eq>
 805e1d5:	83 c4 20             	add    $0x20,%esp
 805e1d8:	85 c0                	test   %eax,%eax
 805e1da:	74 07                	je     805e1e3 <string_le+0x4f>
 805e1dc:	b8 01 00 00 00       	mov    $0x1,%eax
 805e1e1:	eb 05                	jmp    805e1e8 <string_le+0x54>
 805e1e3:	b8 00 00 00 00       	mov    $0x0,%eax
 805e1e8:	c9                   	leave  
 805e1e9:	c3                   	ret    

0805e1ea <string_gt>:
 805e1ea:	55                   	push   %ebp
 805e1eb:	89 e5                	mov    %esp,%ebp
 805e1ed:	83 ec 08             	sub    $0x8,%esp
 805e1f0:	83 ec 08             	sub    $0x8,%esp
 805e1f3:	ff 75 1c             	pushl  0x1c(%ebp)
 805e1f6:	ff 75 18             	pushl  0x18(%ebp)
 805e1f9:	ff 75 14             	pushl  0x14(%ebp)
 805e1fc:	ff 75 10             	pushl  0x10(%ebp)
 805e1ff:	ff 75 0c             	pushl  0xc(%ebp)
 805e202:	ff 75 08             	pushl  0x8(%ebp)
 805e205:	e8 8a ff ff ff       	call   805e194 <string_le>
 805e20a:	83 c4 20             	add    $0x20,%esp
 805e20d:	85 c0                	test   %eax,%eax
 805e20f:	0f 94 c0             	sete   %al
 805e212:	0f b6 c0             	movzbl %al,%eax
 805e215:	c9                   	leave  
 805e216:	c3                   	ret    

0805e217 <string_ge>:
 805e217:	55                   	push   %ebp
 805e218:	89 e5                	mov    %esp,%ebp
 805e21a:	83 ec 08             	sub    $0x8,%esp
 805e21d:	83 ec 08             	sub    $0x8,%esp
 805e220:	ff 75 1c             	pushl  0x1c(%ebp)
 805e223:	ff 75 18             	pushl  0x18(%ebp)
 805e226:	ff 75 14             	pushl  0x14(%ebp)
 805e229:	ff 75 10             	pushl  0x10(%ebp)
 805e22c:	ff 75 0c             	pushl  0xc(%ebp)
 805e22f:	ff 75 08             	pushl  0x8(%ebp)
 805e232:	e8 b4 fe ff ff       	call   805e0eb <string_lt>
 805e237:	83 c4 20             	add    $0x20,%esp
 805e23a:	85 c0                	test   %eax,%eax
 805e23c:	0f 94 c0             	sete   %al
 805e23f:	0f b6 c0             	movzbl %al,%eax
 805e242:	c9                   	leave  
 805e243:	c3                   	ret    

0805e244 <string_add>:
 805e244:	55                   	push   %ebp
 805e245:	89 e5                	mov    %esp,%ebp
 805e247:	83 ec 28             	sub    $0x28,%esp
 805e24a:	8b 55 1c             	mov    0x1c(%ebp),%edx
 805e24d:	8b 45 10             	mov    0x10(%ebp),%eax
 805e250:	01 d0                	add    %edx,%eax
 805e252:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805e255:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805e25c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 805e263:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805e26a:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805e26d:	83 c0 01             	add    $0x1,%eax
 805e270:	83 ec 0c             	sub    $0xc,%esp
 805e273:	50                   	push   %eax
 805e274:	e8 ae 96 ff ff       	call   8057927 <v_malloc>
 805e279:	83 c4 10             	add    $0x10,%esp
 805e27c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805e27f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805e282:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805e285:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 805e28c:	eb 19                	jmp    805e2a7 <string_add+0x63>
 805e28e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805e291:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805e294:	01 c2                	add    %eax,%edx
 805e296:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805e299:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805e29c:	01 c8                	add    %ecx,%eax
 805e29e:	0f b6 00             	movzbl (%eax),%eax
 805e2a1:	88 02                	mov    %al,(%edx)
 805e2a3:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 805e2a7:	8b 45 10             	mov    0x10(%ebp),%eax
 805e2aa:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805e2ad:	7f df                	jg     805e28e <string_add+0x4a>
 805e2af:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 805e2b6:	eb 1e                	jmp    805e2d6 <string_add+0x92>
 805e2b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805e2bb:	8b 4d 10             	mov    0x10(%ebp),%ecx
 805e2be:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805e2c1:	01 ca                	add    %ecx,%edx
 805e2c3:	01 c2                	add    %eax,%edx
 805e2c5:	8b 4d 18             	mov    0x18(%ebp),%ecx
 805e2c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e2cb:	01 c8                	add    %ecx,%eax
 805e2cd:	0f b6 00             	movzbl (%eax),%eax
 805e2d0:	88 02                	mov    %al,(%edx)
 805e2d2:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 805e2d6:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805e2d9:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 805e2dc:	7f da                	jg     805e2b8 <string_add+0x74>
 805e2de:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805e2e1:	8b 45 e8             	mov    -0x18(%ebp),%eax
 805e2e4:	01 d0                	add    %edx,%eax
 805e2e6:	c6 00 00             	movb   $0x0,(%eax)
 805e2e9:	8b 45 08             	mov    0x8(%ebp),%eax
 805e2ec:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805e2ef:	89 10                	mov    %edx,(%eax)
 805e2f1:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805e2f4:	89 50 04             	mov    %edx,0x4(%eax)
 805e2f7:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805e2fa:	89 50 08             	mov    %edx,0x8(%eax)
 805e2fd:	8b 45 08             	mov    0x8(%ebp),%eax
 805e300:	c9                   	leave  
 805e301:	c2 04 00             	ret    $0x4

0805e304 <string_split>:
 805e304:	55                   	push   %ebp
 805e305:	89 e5                	mov    %esp,%ebp
 805e307:	83 ec 28             	sub    $0x28,%esp
 805e30a:	8b 45 08             	mov    0x8(%ebp),%eax
 805e30d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805e310:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e316:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805e319:	31 c0                	xor    %eax,%eax
 805e31b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e31e:	6a 00                	push   $0x0
 805e320:	ff 75 20             	pushl  0x20(%ebp)
 805e323:	ff 75 1c             	pushl  0x1c(%ebp)
 805e326:	ff 75 18             	pushl  0x18(%ebp)
 805e329:	ff 75 14             	pushl  0x14(%ebp)
 805e32c:	ff 75 10             	pushl  0x10(%ebp)
 805e32f:	ff 75 0c             	pushl  0xc(%ebp)
 805e332:	50                   	push   %eax
 805e333:	e8 1b 00 00 00       	call   805e353 <string_split_nth>
 805e338:	83 c4 1c             	add    $0x1c,%esp
 805e33b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e33e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805e341:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805e348:	74 05                	je     805e34f <string_split+0x4b>
 805e34a:	e8 d1 a4 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805e34f:	c9                   	leave  
 805e350:	c2 04 00             	ret    $0x4

0805e353 <string_split_nth>:
 805e353:	55                   	push   %ebp
 805e354:	89 e5                	mov    %esp,%ebp
 805e356:	81 ec 98 00 00 00    	sub    $0x98,%esp
 805e35c:	8b 45 08             	mov    0x8(%ebp),%eax
 805e35f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 805e365:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e36b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805e36e:	31 c0                	xor    %eax,%eax
 805e370:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 805e373:	83 ec 0c             	sub    $0xc,%esp
 805e376:	6a 00                	push   $0x0
 805e378:	6a 0c                	push   $0xc
 805e37a:	6a 00                	push   $0x0
 805e37c:	6a 00                	push   $0x0
 805e37e:	50                   	push   %eax
 805e37f:	e8 e5 76 ff ff       	call   8055a69 <__new_array_with_default>
 805e384:	83 c4 1c             	add    $0x1c,%esp
 805e387:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
 805e38e:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805e391:	85 c0                	test   %eax,%eax
 805e393:	0f 85 b9 00 00 00    	jne    805e452 <string_split_nth+0xff>
 805e399:	c7 45 88 01 00 00 00 	movl   $0x1,-0x78(%ebp)
 805e3a0:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
 805e3a7:	eb 7b                	jmp    805e424 <string_split_nth+0xd1>
 805e3a9:	8b 55 0c             	mov    0xc(%ebp),%edx
 805e3ac:	8b 45 8c             	mov    -0x74(%ebp),%eax
 805e3af:	01 d0                	add    %edx,%eax
 805e3b1:	0f b6 00             	movzbl (%eax),%eax
 805e3b4:	88 45 87             	mov    %al,-0x79(%ebp)
 805e3b7:	83 7d 24 00          	cmpl   $0x0,0x24(%ebp)
 805e3bb:	7e 38                	jle    805e3f5 <string_split_nth+0xa2>
 805e3bd:	8b 45 88             	mov    -0x78(%ebp),%eax
 805e3c0:	3b 45 24             	cmp    0x24(%ebp),%eax
 805e3c3:	7c 30                	jl     805e3f5 <string_split_nth+0xa2>
 805e3c5:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 805e3c8:	83 ec 0c             	sub    $0xc,%esp
 805e3cb:	ff 75 88             	pushl  -0x78(%ebp)
 805e3ce:	ff 75 14             	pushl  0x14(%ebp)
 805e3d1:	ff 75 10             	pushl  0x10(%ebp)
 805e3d4:	ff 75 0c             	pushl  0xc(%ebp)
 805e3d7:	50                   	push   %eax
 805e3d8:	e8 11 04 00 00       	call   805e7ee <string_right>
 805e3dd:	83 c4 1c             	add    $0x1c,%esp
 805e3e0:	83 ec 08             	sub    $0x8,%esp
 805e3e3:	8d 45 c4             	lea    -0x3c(%ebp),%eax
 805e3e6:	50                   	push   %eax
 805e3e7:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 805e3ea:	50                   	push   %eax
 805e3eb:	e8 ca 85 ff ff       	call   80569ba <array_push>
 805e3f0:	83 c4 10             	add    $0x10,%esp
 805e3f3:	eb 3b                	jmp    805e430 <string_split_nth+0xdd>
 805e3f5:	0f b6 55 87          	movzbl -0x79(%ebp),%edx
 805e3f9:	8d 45 d0             	lea    -0x30(%ebp),%eax
 805e3fc:	83 ec 08             	sub    $0x8,%esp
 805e3ff:	52                   	push   %edx
 805e400:	50                   	push   %eax
 805e401:	e8 eb b7 ff ff       	call   8059bf1 <byte_ascii_str>
 805e406:	83 c4 0c             	add    $0xc,%esp
 805e409:	83 ec 08             	sub    $0x8,%esp
 805e40c:	8d 45 d0             	lea    -0x30(%ebp),%eax
 805e40f:	50                   	push   %eax
 805e410:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 805e413:	50                   	push   %eax
 805e414:	e8 a1 85 ff ff       	call   80569ba <array_push>
 805e419:	83 c4 10             	add    $0x10,%esp
 805e41c:	83 45 88 01          	addl   $0x1,-0x78(%ebp)
 805e420:	83 45 8c 01          	addl   $0x1,-0x74(%ebp)
 805e424:	8b 45 10             	mov    0x10(%ebp),%eax
 805e427:	3b 45 8c             	cmp    -0x74(%ebp),%eax
 805e42a:	0f 8f 79 ff ff ff    	jg     805e3a9 <string_split_nth+0x56>
 805e430:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805e436:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 805e439:	89 10                	mov    %edx,(%eax)
 805e43b:	8b 55 b8             	mov    -0x48(%ebp),%edx
 805e43e:	89 50 04             	mov    %edx,0x4(%eax)
 805e441:	8b 55 bc             	mov    -0x44(%ebp),%edx
 805e444:	89 50 08             	mov    %edx,0x8(%eax)
 805e447:	8b 55 c0             	mov    -0x40(%ebp),%edx
 805e44a:	89 50 0c             	mov    %edx,0xc(%eax)
 805e44d:	e9 67 01 00 00       	jmp    805e5b9 <string_split_nth+0x266>
 805e452:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
 805e459:	8b 45 10             	mov    0x10(%ebp),%eax
 805e45c:	3b 45 88             	cmp    -0x78(%ebp),%eax
 805e45f:	0f 8c f7 00 00 00    	jl     805e55c <string_split_nth+0x209>
 805e465:	8b 55 1c             	mov    0x1c(%ebp),%edx
 805e468:	8b 45 88             	mov    -0x78(%ebp),%eax
 805e46b:	01 c2                	add    %eax,%edx
 805e46d:	8b 45 10             	mov    0x10(%ebp),%eax
 805e470:	39 c2                	cmp    %eax,%edx
 805e472:	7f 4c                	jg     805e4c0 <string_split_nth+0x16d>
 805e474:	8b 55 1c             	mov    0x1c(%ebp),%edx
 805e477:	8b 45 88             	mov    -0x78(%ebp),%eax
 805e47a:	01 c2                	add    %eax,%edx
 805e47c:	8d 45 a8             	lea    -0x58(%ebp),%eax
 805e47f:	83 ec 08             	sub    $0x8,%esp
 805e482:	52                   	push   %edx
 805e483:	ff 75 88             	pushl  -0x78(%ebp)
 805e486:	ff 75 14             	pushl  0x14(%ebp)
 805e489:	ff 75 10             	pushl  0x10(%ebp)
 805e48c:	ff 75 0c             	pushl  0xc(%ebp)
 805e48f:	50                   	push   %eax
 805e490:	e8 2c 04 00 00       	call   805e8c1 <string_substr>
 805e495:	83 c4 1c             	add    $0x1c,%esp
 805e498:	83 ec 08             	sub    $0x8,%esp
 805e49b:	ff 75 20             	pushl  0x20(%ebp)
 805e49e:	ff 75 1c             	pushl  0x1c(%ebp)
 805e4a1:	ff 75 18             	pushl  0x18(%ebp)
 805e4a4:	ff 75 b0             	pushl  -0x50(%ebp)
 805e4a7:	ff 75 ac             	pushl  -0x54(%ebp)
 805e4aa:	ff 75 a8             	pushl  -0x58(%ebp)
 805e4ad:	e8 a2 fb ff ff       	call   805e054 <string_eq>
 805e4b2:	83 c4 20             	add    $0x20,%esp
 805e4b5:	85 c0                	test   %eax,%eax
 805e4b7:	74 07                	je     805e4c0 <string_split_nth+0x16d>
 805e4b9:	b8 01 00 00 00       	mov    $0x1,%eax
 805e4be:	eb 05                	jmp    805e4c5 <string_split_nth+0x172>
 805e4c0:	b8 00 00 00 00       	mov    $0x0,%eax
 805e4c5:	89 45 94             	mov    %eax,-0x6c(%ebp)
 805e4c8:	83 7d 94 00          	cmpl   $0x0,-0x6c(%ebp)
 805e4cc:	0f 84 81 00 00 00    	je     805e553 <string_split_nth+0x200>
 805e4d2:	8d 45 9c             	lea    -0x64(%ebp),%eax
 805e4d5:	83 ec 08             	sub    $0x8,%esp
 805e4d8:	ff 75 88             	pushl  -0x78(%ebp)
 805e4db:	ff 75 90             	pushl  -0x70(%ebp)
 805e4de:	ff 75 14             	pushl  0x14(%ebp)
 805e4e1:	ff 75 10             	pushl  0x10(%ebp)
 805e4e4:	ff 75 0c             	pushl  0xc(%ebp)
 805e4e7:	50                   	push   %eax
 805e4e8:	e8 d4 03 00 00       	call   805e8c1 <string_substr>
 805e4ed:	83 c4 1c             	add    $0x1c,%esp
 805e4f0:	83 7d 24 00          	cmpl   $0x0,0x24(%ebp)
 805e4f4:	7e 14                	jle    805e50a <string_split_nth+0x1b7>
 805e4f6:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805e4f9:	8b 55 24             	mov    0x24(%ebp),%edx
 805e4fc:	83 ea 01             	sub    $0x1,%edx
 805e4ff:	39 d0                	cmp    %edx,%eax
 805e501:	75 07                	jne    805e50a <string_split_nth+0x1b7>
 805e503:	b8 01 00 00 00       	mov    $0x1,%eax
 805e508:	eb 05                	jmp    805e50f <string_split_nth+0x1bc>
 805e50a:	b8 00 00 00 00       	mov    $0x0,%eax
 805e50f:	89 45 98             	mov    %eax,-0x68(%ebp)
 805e512:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)
 805e516:	75 47                	jne    805e55f <string_split_nth+0x20c>
 805e518:	8b 45 9c             	mov    -0x64(%ebp),%eax
 805e51b:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805e51e:	8b 45 a0             	mov    -0x60(%ebp),%eax
 805e521:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805e524:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 805e527:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805e52a:	83 ec 08             	sub    $0x8,%esp
 805e52d:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805e530:	50                   	push   %eax
 805e531:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 805e534:	50                   	push   %eax
 805e535:	e8 80 84 ff ff       	call   80569ba <array_push>
 805e53a:	83 c4 10             	add    $0x10,%esp
 805e53d:	8b 55 1c             	mov    0x1c(%ebp),%edx
 805e540:	8b 45 88             	mov    -0x78(%ebp),%eax
 805e543:	01 d0                	add    %edx,%eax
 805e545:	89 45 90             	mov    %eax,-0x70(%ebp)
 805e548:	8b 45 90             	mov    -0x70(%ebp),%eax
 805e54b:	89 45 88             	mov    %eax,-0x78(%ebp)
 805e54e:	e9 06 ff ff ff       	jmp    805e459 <string_split_nth+0x106>
 805e553:	83 45 88 01          	addl   $0x1,-0x78(%ebp)
 805e557:	e9 fd fe ff ff       	jmp    805e459 <string_split_nth+0x106>
 805e55c:	90                   	nop
 805e55d:	eb 01                	jmp    805e560 <string_split_nth+0x20d>
 805e55f:	90                   	nop
 805e560:	83 7d 24 00          	cmpl   $0x0,0x24(%ebp)
 805e564:	7e 08                	jle    805e56e <string_split_nth+0x21b>
 805e566:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805e569:	3b 45 24             	cmp    0x24(%ebp),%eax
 805e56c:	7d 2e                	jge    805e59c <string_split_nth+0x249>
 805e56e:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805e571:	83 ec 0c             	sub    $0xc,%esp
 805e574:	ff 75 90             	pushl  -0x70(%ebp)
 805e577:	ff 75 14             	pushl  0x14(%ebp)
 805e57a:	ff 75 10             	pushl  0x10(%ebp)
 805e57d:	ff 75 0c             	pushl  0xc(%ebp)
 805e580:	50                   	push   %eax
 805e581:	e8 68 02 00 00       	call   805e7ee <string_right>
 805e586:	83 c4 1c             	add    $0x1c,%esp
 805e589:	83 ec 08             	sub    $0x8,%esp
 805e58c:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805e58f:	50                   	push   %eax
 805e590:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 805e593:	50                   	push   %eax
 805e594:	e8 21 84 ff ff       	call   80569ba <array_push>
 805e599:	83 c4 10             	add    $0x10,%esp
 805e59c:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805e5a2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 805e5a5:	89 10                	mov    %edx,(%eax)
 805e5a7:	8b 55 b8             	mov    -0x48(%ebp),%edx
 805e5aa:	89 50 04             	mov    %edx,0x4(%eax)
 805e5ad:	8b 55 bc             	mov    -0x44(%ebp),%edx
 805e5b0:	89 50 08             	mov    %edx,0x8(%eax)
 805e5b3:	8b 55 c0             	mov    -0x40(%ebp),%edx
 805e5b6:	89 50 0c             	mov    %edx,0xc(%eax)
 805e5b9:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 805e5bf:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805e5c2:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805e5c9:	74 05                	je     805e5d0 <string_split_nth+0x27d>
 805e5cb:	e8 50 a2 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805e5d0:	c9                   	leave  
 805e5d1:	c2 04 00             	ret    $0x4

0805e5d4 <string_split_into_lines>:
 805e5d4:	55                   	push   %ebp
 805e5d5:	89 e5                	mov    %esp,%ebp
 805e5d7:	83 ec 68             	sub    $0x68,%esp
 805e5da:	8b 45 08             	mov    0x8(%ebp),%eax
 805e5dd:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 805e5e0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e5e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805e5e9:	31 c0                	xor    %eax,%eax
 805e5eb:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805e5ee:	83 ec 0c             	sub    $0xc,%esp
 805e5f1:	6a 00                	push   $0x0
 805e5f3:	6a 0c                	push   $0xc
 805e5f5:	6a 00                	push   $0x0
 805e5f7:	6a 00                	push   $0x0
 805e5f9:	50                   	push   %eax
 805e5fa:	e8 6a 74 ff ff       	call   8055a69 <__new_array_with_default>
 805e5ff:	83 c4 1c             	add    $0x1c,%esp
 805e602:	8b 45 10             	mov    0x10(%ebp),%eax
 805e605:	85 c0                	test   %eax,%eax
 805e607:	75 1f                	jne    805e628 <string_split_into_lines+0x54>
 805e609:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 805e60c:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805e60f:	89 10                	mov    %edx,(%eax)
 805e611:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805e614:	89 50 04             	mov    %edx,0x4(%eax)
 805e617:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805e61a:	89 50 08             	mov    %edx,0x8(%eax)
 805e61d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805e620:	89 50 0c             	mov    %edx,0xc(%eax)
 805e623:	e9 44 01 00 00       	jmp    805e76c <string_split_into_lines+0x198>
 805e628:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 805e62f:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 805e636:	e9 0b 01 00 00       	jmp    805e746 <string_split_into_lines+0x172>
 805e63b:	8b 55 0c             	mov    0xc(%ebp),%edx
 805e63e:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805e641:	01 d0                	add    %edx,%eax
 805e643:	0f b6 00             	movzbl (%eax),%eax
 805e646:	3c 0a                	cmp    $0xa,%al
 805e648:	0f 94 c0             	sete   %al
 805e64b:	0f b6 c0             	movzbl %al,%eax
 805e64e:	89 45 bc             	mov    %eax,-0x44(%ebp)
 805e651:	8b 45 10             	mov    0x10(%ebp),%eax
 805e654:	83 e8 01             	sub    $0x1,%eax
 805e657:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 805e65a:	74 28                	je     805e684 <string_split_into_lines+0xb0>
 805e65c:	8b 55 0c             	mov    0xc(%ebp),%edx
 805e65f:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805e662:	01 d0                	add    %edx,%eax
 805e664:	0f b6 00             	movzbl (%eax),%eax
 805e667:	3c 0d                	cmp    $0xd,%al
 805e669:	75 19                	jne    805e684 <string_split_into_lines+0xb0>
 805e66b:	8b 45 0c             	mov    0xc(%ebp),%eax
 805e66e:	8b 55 b8             	mov    -0x48(%ebp),%edx
 805e671:	83 c2 01             	add    $0x1,%edx
 805e674:	01 d0                	add    %edx,%eax
 805e676:	0f b6 00             	movzbl (%eax),%eax
 805e679:	3c 0a                	cmp    $0xa,%al
 805e67b:	75 07                	jne    805e684 <string_split_into_lines+0xb0>
 805e67d:	b8 01 00 00 00       	mov    $0x1,%eax
 805e682:	eb 05                	jmp    805e689 <string_split_into_lines+0xb5>
 805e684:	b8 00 00 00 00       	mov    $0x0,%eax
 805e689:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805e68c:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
 805e690:	75 06                	jne    805e698 <string_split_into_lines+0xc4>
 805e692:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)
 805e696:	74 07                	je     805e69f <string_split_into_lines+0xcb>
 805e698:	b8 01 00 00 00       	mov    $0x1,%eax
 805e69d:	eb 05                	jmp    805e6a4 <string_split_into_lines+0xd0>
 805e69f:	b8 00 00 00 00       	mov    $0x0,%eax
 805e6a4:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805e6a7:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)
 805e6ab:	74 11                	je     805e6be <string_split_into_lines+0xea>
 805e6ad:	8b 45 10             	mov    0x10(%ebp),%eax
 805e6b0:	83 e8 02             	sub    $0x2,%eax
 805e6b3:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 805e6b6:	0f 94 c0             	sete   %al
 805e6b9:	0f b6 c0             	movzbl %al,%eax
 805e6bc:	eb 0f                	jmp    805e6cd <string_split_into_lines+0xf9>
 805e6be:	8b 45 10             	mov    0x10(%ebp),%eax
 805e6c1:	83 e8 01             	sub    $0x1,%eax
 805e6c4:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 805e6c7:	0f 94 c0             	sete   %al
 805e6ca:	0f b6 c0             	movzbl %al,%eax
 805e6cd:	89 45 c8             	mov    %eax,-0x38(%ebp)
 805e6d0:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 805e6d4:	75 06                	jne    805e6dc <string_split_into_lines+0x108>
 805e6d6:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 805e6da:	74 66                	je     805e742 <string_split_into_lines+0x16e>
 805e6dc:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 805e6e0:	74 0a                	je     805e6ec <string_split_into_lines+0x118>
 805e6e2:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 805e6e6:	75 04                	jne    805e6ec <string_split_into_lines+0x118>
 805e6e8:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 805e6ec:	8d 45 cc             	lea    -0x34(%ebp),%eax
 805e6ef:	83 ec 08             	sub    $0x8,%esp
 805e6f2:	ff 75 b8             	pushl  -0x48(%ebp)
 805e6f5:	ff 75 b4             	pushl  -0x4c(%ebp)
 805e6f8:	ff 75 14             	pushl  0x14(%ebp)
 805e6fb:	ff 75 10             	pushl  0x10(%ebp)
 805e6fe:	ff 75 0c             	pushl  0xc(%ebp)
 805e701:	50                   	push   %eax
 805e702:	e8 ba 01 00 00       	call   805e8c1 <string_substr>
 805e707:	83 c4 1c             	add    $0x1c,%esp
 805e70a:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805e70d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805e710:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805e713:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805e716:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805e719:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805e71c:	83 ec 08             	sub    $0x8,%esp
 805e71f:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805e722:	50                   	push   %eax
 805e723:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805e726:	50                   	push   %eax
 805e727:	e8 8e 82 ff ff       	call   80569ba <array_push>
 805e72c:	83 c4 10             	add    $0x10,%esp
 805e72f:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)
 805e733:	74 04                	je     805e739 <string_split_into_lines+0x165>
 805e735:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 805e739:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805e73c:	83 c0 01             	add    $0x1,%eax
 805e73f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805e742:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 805e746:	8b 45 10             	mov    0x10(%ebp),%eax
 805e749:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 805e74c:	0f 8f e9 fe ff ff    	jg     805e63b <string_split_into_lines+0x67>
 805e752:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 805e755:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805e758:	89 10                	mov    %edx,(%eax)
 805e75a:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805e75d:	89 50 04             	mov    %edx,0x4(%eax)
 805e760:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805e763:	89 50 08             	mov    %edx,0x8(%eax)
 805e766:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805e769:	89 50 0c             	mov    %edx,0xc(%eax)
 805e76c:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 805e76f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805e772:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805e779:	74 05                	je     805e780 <string_split_into_lines+0x1ac>
 805e77b:	e8 a0 a0 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805e780:	c9                   	leave  
 805e781:	c2 04 00             	ret    $0x4

0805e784 <string_left>:
 805e784:	55                   	push   %ebp
 805e785:	89 e5                	mov    %esp,%ebp
 805e787:	83 ec 28             	sub    $0x28,%esp
 805e78a:	8b 45 08             	mov    0x8(%ebp),%eax
 805e78d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805e790:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e796:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805e799:	31 c0                	xor    %eax,%eax
 805e79b:	8b 45 10             	mov    0x10(%ebp),%eax
 805e79e:	3b 45 18             	cmp    0x18(%ebp),%eax
 805e7a1:	7f 16                	jg     805e7b9 <string_left+0x35>
 805e7a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e7a6:	8b 55 0c             	mov    0xc(%ebp),%edx
 805e7a9:	89 10                	mov    %edx,(%eax)
 805e7ab:	8b 55 10             	mov    0x10(%ebp),%edx
 805e7ae:	89 50 04             	mov    %edx,0x4(%eax)
 805e7b1:	8b 55 14             	mov    0x14(%ebp),%edx
 805e7b4:	89 50 08             	mov    %edx,0x8(%eax)
 805e7b7:	eb 1d                	jmp    805e7d6 <string_left+0x52>
 805e7b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e7bc:	83 ec 08             	sub    $0x8,%esp
 805e7bf:	ff 75 18             	pushl  0x18(%ebp)
 805e7c2:	6a 00                	push   $0x0
 805e7c4:	ff 75 14             	pushl  0x14(%ebp)
 805e7c7:	ff 75 10             	pushl  0x10(%ebp)
 805e7ca:	ff 75 0c             	pushl  0xc(%ebp)
 805e7cd:	50                   	push   %eax
 805e7ce:	e8 ee 00 00 00       	call   805e8c1 <string_substr>
 805e7d3:	83 c4 1c             	add    $0x1c,%esp
 805e7d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e7d9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805e7dc:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805e7e3:	74 05                	je     805e7ea <string_left+0x66>
 805e7e5:	e8 36 a0 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805e7ea:	c9                   	leave  
 805e7eb:	c2 04 00             	ret    $0x4

0805e7ee <string_right>:
 805e7ee:	55                   	push   %ebp
 805e7ef:	89 e5                	mov    %esp,%ebp
 805e7f1:	83 ec 28             	sub    $0x28,%esp
 805e7f4:	8b 45 08             	mov    0x8(%ebp),%eax
 805e7f7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805e7fa:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e800:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805e803:	31 c0                	xor    %eax,%eax
 805e805:	8b 45 10             	mov    0x10(%ebp),%eax
 805e808:	3b 45 18             	cmp    0x18(%ebp),%eax
 805e80b:	7f 1f                	jg     805e82c <string_right+0x3e>
 805e80d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e810:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805e816:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e819:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805e820:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e823:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805e82a:	eb 1f                	jmp    805e84b <string_right+0x5d>
 805e82c:	8b 55 10             	mov    0x10(%ebp),%edx
 805e82f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e832:	83 ec 08             	sub    $0x8,%esp
 805e835:	52                   	push   %edx
 805e836:	ff 75 18             	pushl  0x18(%ebp)
 805e839:	ff 75 14             	pushl  0x14(%ebp)
 805e83c:	ff 75 10             	pushl  0x10(%ebp)
 805e83f:	ff 75 0c             	pushl  0xc(%ebp)
 805e842:	50                   	push   %eax
 805e843:	e8 79 00 00 00       	call   805e8c1 <string_substr>
 805e848:	83 c4 1c             	add    $0x1c,%esp
 805e84b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e84e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805e851:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805e858:	74 05                	je     805e85f <string_right+0x71>
 805e85a:	e8 c1 9f fe ff       	call   8048820 <__stack_chk_fail@plt>
 805e85f:	c9                   	leave  
 805e860:	c2 04 00             	ret    $0x4

0805e863 <string_substr2>:
 805e863:	55                   	push   %ebp
 805e864:	89 e5                	mov    %esp,%ebp
 805e866:	83 ec 28             	sub    $0x28,%esp
 805e869:	8b 45 08             	mov    0x8(%ebp),%eax
 805e86c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805e86f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e875:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805e878:	31 c0                	xor    %eax,%eax
 805e87a:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)
 805e87e:	74 05                	je     805e885 <string_substr2+0x22>
 805e880:	8b 45 10             	mov    0x10(%ebp),%eax
 805e883:	eb 03                	jmp    805e888 <string_substr2+0x25>
 805e885:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805e888:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805e88b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e88e:	83 ec 08             	sub    $0x8,%esp
 805e891:	ff 75 f0             	pushl  -0x10(%ebp)
 805e894:	ff 75 18             	pushl  0x18(%ebp)
 805e897:	ff 75 14             	pushl  0x14(%ebp)
 805e89a:	ff 75 10             	pushl  0x10(%ebp)
 805e89d:	ff 75 0c             	pushl  0xc(%ebp)
 805e8a0:	50                   	push   %eax
 805e8a1:	e8 1b 00 00 00       	call   805e8c1 <string_substr>
 805e8a6:	83 c4 1c             	add    $0x1c,%esp
 805e8a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e8ac:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805e8af:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805e8b6:	74 05                	je     805e8bd <string_substr2+0x5a>
 805e8b8:	e8 63 9f fe ff       	call   8048820 <__stack_chk_fail@plt>
 805e8bd:	c9                   	leave  
 805e8be:	c2 04 00             	ret    $0x4

0805e8c1 <string_substr>:
 805e8c1:	55                   	push   %ebp
 805e8c2:	89 e5                	mov    %esp,%ebp
 805e8c4:	53                   	push   %ebx
 805e8c5:	83 ec 44             	sub    $0x44,%esp
 805e8c8:	8b 45 08             	mov    0x8(%ebp),%eax
 805e8cb:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805e8ce:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e8d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805e8d7:	31 c0                	xor    %eax,%eax
 805e8d9:	8b 45 18             	mov    0x18(%ebp),%eax
 805e8dc:	3b 45 1c             	cmp    0x1c(%ebp),%eax
 805e8df:	7f 1c                	jg     805e8fd <string_substr+0x3c>
 805e8e1:	8b 45 10             	mov    0x10(%ebp),%eax
 805e8e4:	3b 45 18             	cmp    0x18(%ebp),%eax
 805e8e7:	7c 14                	jl     805e8fd <string_substr+0x3c>
 805e8e9:	8b 45 10             	mov    0x10(%ebp),%eax
 805e8ec:	3b 45 1c             	cmp    0x1c(%ebp),%eax
 805e8ef:	7c 0c                	jl     805e8fd <string_substr+0x3c>
 805e8f1:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 805e8f5:	78 06                	js     805e8fd <string_substr+0x3c>
 805e8f7:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
 805e8fb:	79 34                	jns    805e931 <string_substr+0x70>
 805e8fd:	8b 55 10             	mov    0x10(%ebp),%edx
 805e900:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805e903:	83 ec 08             	sub    $0x8,%esp
 805e906:	52                   	push   %edx
 805e907:	ff 75 1c             	pushl  0x1c(%ebp)
 805e90a:	ff 75 18             	pushl  0x18(%ebp)
 805e90d:	6a 04                	push   $0x4
 805e90f:	68 c4 9e 06 08       	push   $0x8069ec4
 805e914:	50                   	push   %eax
 805e915:	e8 aa ab fe ff       	call   80494c4 <_STR>
 805e91a:	83 c4 1c             	add    $0x1c,%esp
 805e91d:	83 ec 04             	sub    $0x4,%esp
 805e920:	ff 75 f0             	pushl  -0x10(%ebp)
 805e923:	ff 75 ec             	pushl  -0x14(%ebp)
 805e926:	ff 75 e8             	pushl  -0x18(%ebp)
 805e929:	e8 69 8e ff ff       	call   8057797 <v_panic>
 805e92e:	83 c4 10             	add    $0x10,%esp
 805e931:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805e934:	2b 45 18             	sub    0x18(%ebp),%eax
 805e937:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805e93a:	8b 45 10             	mov    0x10(%ebp),%eax
 805e93d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 805e940:	75 17                	jne    805e959 <string_substr+0x98>
 805e942:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805e945:	ff 75 14             	pushl  0x14(%ebp)
 805e948:	ff 75 10             	pushl  0x10(%ebp)
 805e94b:	ff 75 0c             	pushl  0xc(%ebp)
 805e94e:	50                   	push   %eax
 805e94f:	e8 aa ed ff ff       	call   805d6fe <string_clone>
 805e954:	83 c4 0c             	add    $0xc,%esp
 805e957:	eb 7e                	jmp    805e9d7 <string_substr+0x116>
 805e959:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 805e960:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 805e967:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 805e96e:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805e971:	83 c0 01             	add    $0x1,%eax
 805e974:	83 ec 0c             	sub    $0xc,%esp
 805e977:	50                   	push   %eax
 805e978:	e8 aa 8f ff ff       	call   8057927 <v_malloc>
 805e97d:	83 c4 10             	add    $0x10,%esp
 805e980:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805e983:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805e986:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805e989:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 805e990:	eb 1e                	jmp    805e9b0 <string_substr+0xef>
 805e992:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805e995:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805e998:	01 c2                	add    %eax,%edx
 805e99a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805e99d:	8b 5d 18             	mov    0x18(%ebp),%ebx
 805e9a0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 805e9a3:	01 d9                	add    %ebx,%ecx
 805e9a5:	01 c8                	add    %ecx,%eax
 805e9a7:	0f b6 00             	movzbl (%eax),%eax
 805e9aa:	88 02                	mov    %al,(%edx)
 805e9ac:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 805e9b0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805e9b3:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 805e9b6:	7c da                	jl     805e992 <string_substr+0xd1>
 805e9b8:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805e9bb:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805e9be:	01 d0                	add    %edx,%eax
 805e9c0:	c6 00 00             	movb   $0x0,(%eax)
 805e9c3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805e9c6:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805e9c9:	89 10                	mov    %edx,(%eax)
 805e9cb:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805e9ce:	89 50 04             	mov    %edx,0x4(%eax)
 805e9d1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805e9d4:	89 50 08             	mov    %edx,0x8(%eax)
 805e9d7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805e9da:	8b 5d f4             	mov    -0xc(%ebp),%ebx
 805e9dd:	65 33 1d 14 00 00 00 	xor    %gs:0x14,%ebx
 805e9e4:	74 05                	je     805e9eb <string_substr+0x12a>
 805e9e6:	e8 35 9e fe ff       	call   8048820 <__stack_chk_fail@plt>
 805e9eb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805e9ee:	c9                   	leave  
 805e9ef:	c2 04 00             	ret    $0x4

0805e9f2 <string_index_>:
 805e9f2:	55                   	push   %ebp
 805e9f3:	89 e5                	mov    %esp,%ebp
 805e9f5:	83 ec 18             	sub    $0x18,%esp
 805e9f8:	8b 55 18             	mov    0x18(%ebp),%edx
 805e9fb:	8b 45 0c             	mov    0xc(%ebp),%eax
 805e9fe:	39 c2                	cmp    %eax,%edx
 805ea00:	7f 07                	jg     805ea09 <string_index_+0x17>
 805ea02:	8b 45 18             	mov    0x18(%ebp),%eax
 805ea05:	85 c0                	test   %eax,%eax
 805ea07:	75 0a                	jne    805ea13 <string_index_+0x21>
 805ea09:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805ea0e:	e9 83 00 00 00       	jmp    805ea96 <string_index_+0xa4>
 805ea13:	8b 45 18             	mov    0x18(%ebp),%eax
 805ea16:	83 f8 02             	cmp    $0x2,%eax
 805ea19:	7e 1f                	jle    805ea3a <string_index_+0x48>
 805ea1b:	83 ec 08             	sub    $0x8,%esp
 805ea1e:	ff 75 1c             	pushl  0x1c(%ebp)
 805ea21:	ff 75 18             	pushl  0x18(%ebp)
 805ea24:	ff 75 14             	pushl  0x14(%ebp)
 805ea27:	ff 75 10             	pushl  0x10(%ebp)
 805ea2a:	ff 75 0c             	pushl  0xc(%ebp)
 805ea2d:	ff 75 08             	pushl  0x8(%ebp)
 805ea30:	e8 60 01 00 00       	call   805eb95 <string_index_kmp>
 805ea35:	83 c4 20             	add    $0x20,%esp
 805ea38:	eb 5c                	jmp    805ea96 <string_index_+0xa4>
 805ea3a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 805ea41:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ea44:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 805ea47:	7e 47                	jle    805ea90 <string_index_+0x9e>
 805ea49:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805ea50:	8b 45 18             	mov    0x18(%ebp),%eax
 805ea53:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805ea56:	7e 25                	jle    805ea7d <string_index_+0x8b>
 805ea58:	8b 45 08             	mov    0x8(%ebp),%eax
 805ea5b:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 805ea5e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805ea61:	01 ca                	add    %ecx,%edx
 805ea63:	01 d0                	add    %edx,%eax
 805ea65:	0f b6 10             	movzbl (%eax),%edx
 805ea68:	8b 4d 14             	mov    0x14(%ebp),%ecx
 805ea6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ea6e:	01 c8                	add    %ecx,%eax
 805ea70:	0f b6 00             	movzbl (%eax),%eax
 805ea73:	38 c2                	cmp    %al,%dl
 805ea75:	75 06                	jne    805ea7d <string_index_+0x8b>
 805ea77:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805ea7b:	eb d3                	jmp    805ea50 <string_index_+0x5e>
 805ea7d:	8b 45 18             	mov    0x18(%ebp),%eax
 805ea80:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805ea83:	75 05                	jne    805ea8a <string_index_+0x98>
 805ea85:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805ea88:	eb 0c                	jmp    805ea96 <string_index_+0xa4>
 805ea8a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 805ea8e:	eb b1                	jmp    805ea41 <string_index_+0x4f>
 805ea90:	90                   	nop
 805ea91:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805ea96:	c9                   	leave  
 805ea97:	c3                   	ret    

0805ea98 <string_index>:
 805ea98:	55                   	push   %ebp
 805ea99:	89 e5                	mov    %esp,%ebp
 805ea9b:	83 ec 58             	sub    $0x58,%esp
 805ea9e:	8b 45 08             	mov    0x8(%ebp),%eax
 805eaa1:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805eaa4:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805eaaa:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805eaad:	31 c0                	xor    %eax,%eax
 805eaaf:	83 ec 08             	sub    $0x8,%esp
 805eab2:	ff 75 20             	pushl  0x20(%ebp)
 805eab5:	ff 75 1c             	pushl  0x1c(%ebp)
 805eab8:	ff 75 18             	pushl  0x18(%ebp)
 805eabb:	ff 75 14             	pushl  0x14(%ebp)
 805eabe:	ff 75 10             	pushl  0x10(%ebp)
 805eac1:	ff 75 0c             	pushl  0xc(%ebp)
 805eac4:	e8 29 ff ff ff       	call   805e9f2 <string_index_>
 805eac9:	83 c4 20             	add    $0x20,%esp
 805eacc:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805eacf:	83 7d b8 ff          	cmpl   $0xffffffff,-0x48(%ebp)
 805ead3:	75 61                	jne    805eb36 <string_index+0x9e>
 805ead5:	8d 45 bc             	lea    -0x44(%ebp),%eax
 805ead8:	83 ec 0c             	sub    $0xc,%esp
 805eadb:	50                   	push   %eax
 805eadc:	e8 b0 ce ff ff       	call   805b991 <opt_none>
 805eae1:	83 c4 0c             	add    $0xc,%esp
 805eae4:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805eae7:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805eaea:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805eaed:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805eaf0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805eaf3:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805eaf6:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805eaf9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805eafc:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805eaff:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805eb02:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805eb05:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805eb08:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805eb0b:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805eb0e:	89 10                	mov    %edx,(%eax)
 805eb10:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805eb13:	89 50 04             	mov    %edx,0x4(%eax)
 805eb16:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805eb19:	89 50 08             	mov    %edx,0x8(%eax)
 805eb1c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805eb1f:	89 50 0c             	mov    %edx,0xc(%eax)
 805eb22:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805eb25:	89 50 10             	mov    %edx,0x10(%eax)
 805eb28:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805eb2b:	89 50 14             	mov    %edx,0x14(%eax)
 805eb2e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805eb31:	89 50 18             	mov    %edx,0x18(%eax)
 805eb34:	eb 47                	jmp    805eb7d <string_index+0xe5>
 805eb36:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805eb39:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805eb3c:	83 ec 04             	sub    $0x4,%esp
 805eb3f:	6a 04                	push   $0x4
 805eb41:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805eb44:	50                   	push   %eax
 805eb45:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 805eb48:	50                   	push   %eax
 805eb49:	e8 45 cd ff ff       	call   805b893 <opt_ok2>
 805eb4e:	83 c4 10             	add    $0x10,%esp
 805eb51:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805eb54:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805eb57:	89 10                	mov    %edx,(%eax)
 805eb59:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805eb5c:	89 50 04             	mov    %edx,0x4(%eax)
 805eb5f:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805eb62:	89 50 08             	mov    %edx,0x8(%eax)
 805eb65:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805eb68:	89 50 0c             	mov    %edx,0xc(%eax)
 805eb6b:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805eb6e:	89 50 10             	mov    %edx,0x10(%eax)
 805eb71:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805eb74:	89 50 14             	mov    %edx,0x14(%eax)
 805eb77:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805eb7a:	89 50 18             	mov    %edx,0x18(%eax)
 805eb7d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805eb80:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805eb83:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805eb8a:	74 05                	je     805eb91 <string_index+0xf9>
 805eb8c:	e8 8f 9c fe ff       	call   8048820 <__stack_chk_fail@plt>
 805eb91:	c9                   	leave  
 805eb92:	c2 04 00             	ret    $0x4

0805eb95 <string_index_kmp>:
 805eb95:	55                   	push   %ebp
 805eb96:	89 e5                	mov    %esp,%ebp
 805eb98:	83 ec 38             	sub    $0x38,%esp
 805eb9b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805eba1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805eba4:	31 c0                	xor    %eax,%eax
 805eba6:	8b 55 18             	mov    0x18(%ebp),%edx
 805eba9:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ebac:	39 c2                	cmp    %eax,%edx
 805ebae:	7e 0a                	jle    805ebba <string_index_kmp+0x25>
 805ebb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805ebb5:	e9 5a 01 00 00       	jmp    805ed14 <string_index_kmp+0x17f>
 805ebba:	8b 55 18             	mov    0x18(%ebp),%edx
 805ebbd:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805ebc0:	83 ec 0c             	sub    $0xc,%esp
 805ebc3:	6a 00                	push   $0x0
 805ebc5:	6a 04                	push   $0x4
 805ebc7:	6a 00                	push   $0x0
 805ebc9:	52                   	push   %edx
 805ebca:	50                   	push   %eax
 805ebcb:	e8 99 6e ff ff       	call   8055a69 <__new_array_with_default>
 805ebd0:	83 c4 1c             	add    $0x1c,%esp
 805ebd3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 805ebda:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 805ebe1:	e9 83 00 00 00       	jmp    805ec69 <string_index_kmp+0xd4>
 805ebe6:	8b 55 14             	mov    0x14(%ebp),%edx
 805ebe9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ebec:	01 d0                	add    %edx,%eax
 805ebee:	0f b6 10             	movzbl (%eax),%edx
 805ebf1:	8b 4d 14             	mov    0x14(%ebp),%ecx
 805ebf4:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805ebf7:	01 c8                	add    %ecx,%eax
 805ebf9:	0f b6 00             	movzbl (%eax),%eax
 805ebfc:	38 c2                	cmp    %al,%dl
 805ebfe:	74 2b                	je     805ec2b <string_index_kmp+0x96>
 805ec00:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 805ec04:	7e 25                	jle    805ec2b <string_index_kmp+0x96>
 805ec06:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ec09:	83 e8 01             	sub    $0x1,%eax
 805ec0c:	83 ec 0c             	sub    $0xc,%esp
 805ec0f:	50                   	push   %eax
 805ec10:	ff 75 ec             	pushl  -0x14(%ebp)
 805ec13:	ff 75 e8             	pushl  -0x18(%ebp)
 805ec16:	ff 75 e4             	pushl  -0x1c(%ebp)
 805ec19:	ff 75 e0             	pushl  -0x20(%ebp)
 805ec1c:	e8 99 76 ff ff       	call   80562ba <array_get>
 805ec21:	83 c4 20             	add    $0x20,%esp
 805ec24:	8b 00                	mov    (%eax),%eax
 805ec26:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805ec29:	eb bb                	jmp    805ebe6 <string_index_kmp+0x51>
 805ec2b:	8b 55 14             	mov    0x14(%ebp),%edx
 805ec2e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ec31:	01 d0                	add    %edx,%eax
 805ec33:	0f b6 10             	movzbl (%eax),%edx
 805ec36:	8b 4d 14             	mov    0x14(%ebp),%ecx
 805ec39:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805ec3c:	01 c8                	add    %ecx,%eax
 805ec3e:	0f b6 00             	movzbl (%eax),%eax
 805ec41:	38 c2                	cmp    %al,%dl
 805ec43:	75 04                	jne    805ec49 <string_index_kmp+0xb4>
 805ec45:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 805ec49:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ec4c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805ec4f:	83 ec 04             	sub    $0x4,%esp
 805ec52:	8d 45 f0             	lea    -0x10(%ebp),%eax
 805ec55:	50                   	push   %eax
 805ec56:	ff 75 d8             	pushl  -0x28(%ebp)
 805ec59:	8d 45 e0             	lea    -0x20(%ebp),%eax
 805ec5c:	50                   	push   %eax
 805ec5d:	e8 ba 7c ff ff       	call   805691c <array_set>
 805ec62:	83 c4 10             	add    $0x10,%esp
 805ec65:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 805ec69:	8b 45 18             	mov    0x18(%ebp),%eax
 805ec6c:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 805ec6f:	0f 8f 71 ff ff ff    	jg     805ebe6 <string_index_kmp+0x51>
 805ec75:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 805ec7c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 805ec83:	eb 7e                	jmp    805ed03 <string_index_kmp+0x16e>
 805ec85:	8b 55 14             	mov    0x14(%ebp),%edx
 805ec88:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ec8b:	01 d0                	add    %edx,%eax
 805ec8d:	0f b6 10             	movzbl (%eax),%edx
 805ec90:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805ec93:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805ec96:	01 c8                	add    %ecx,%eax
 805ec98:	0f b6 00             	movzbl (%eax),%eax
 805ec9b:	38 c2                	cmp    %al,%dl
 805ec9d:	74 2b                	je     805ecca <string_index_kmp+0x135>
 805ec9f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 805eca3:	7e 25                	jle    805ecca <string_index_kmp+0x135>
 805eca5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805eca8:	83 e8 01             	sub    $0x1,%eax
 805ecab:	83 ec 0c             	sub    $0xc,%esp
 805ecae:	50                   	push   %eax
 805ecaf:	ff 75 ec             	pushl  -0x14(%ebp)
 805ecb2:	ff 75 e8             	pushl  -0x18(%ebp)
 805ecb5:	ff 75 e4             	pushl  -0x1c(%ebp)
 805ecb8:	ff 75 e0             	pushl  -0x20(%ebp)
 805ecbb:	e8 fa 75 ff ff       	call   80562ba <array_get>
 805ecc0:	83 c4 20             	add    $0x20,%esp
 805ecc3:	8b 00                	mov    (%eax),%eax
 805ecc5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805ecc8:	eb bb                	jmp    805ec85 <string_index_kmp+0xf0>
 805ecca:	8b 55 14             	mov    0x14(%ebp),%edx
 805eccd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ecd0:	01 d0                	add    %edx,%eax
 805ecd2:	0f b6 10             	movzbl (%eax),%edx
 805ecd5:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805ecd8:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805ecdb:	01 c8                	add    %ecx,%eax
 805ecdd:	0f b6 00             	movzbl (%eax),%eax
 805ece0:	38 c2                	cmp    %al,%dl
 805ece2:	75 04                	jne    805ece8 <string_index_kmp+0x153>
 805ece4:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 805ece8:	8b 45 18             	mov    0x18(%ebp),%eax
 805eceb:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 805ecee:	75 0f                	jne    805ecff <string_index_kmp+0x16a>
 805ecf0:	8b 45 18             	mov    0x18(%ebp),%eax
 805ecf3:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805ecf6:	29 c2                	sub    %eax,%edx
 805ecf8:	89 d0                	mov    %edx,%eax
 805ecfa:	83 c0 01             	add    $0x1,%eax
 805ecfd:	eb 15                	jmp    805ed14 <string_index_kmp+0x17f>
 805ecff:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 805ed03:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ed06:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 805ed09:	0f 8f 76 ff ff ff    	jg     805ec85 <string_index_kmp+0xf0>
 805ed0f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805ed14:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805ed17:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805ed1e:	74 05                	je     805ed25 <string_index_kmp+0x190>
 805ed20:	e8 fb 9a fe ff       	call   8048820 <__stack_chk_fail@plt>
 805ed25:	c9                   	leave  
 805ed26:	c3                   	ret    

0805ed27 <string_index_any>:
 805ed27:	55                   	push   %ebp
 805ed28:	89 e5                	mov    %esp,%ebp
 805ed2a:	83 ec 28             	sub    $0x28,%esp
 805ed2d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805ed33:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805ed36:	31 c0                	xor    %eax,%eax
 805ed38:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 805ed3f:	eb 53                	jmp    805ed94 <string_index_any+0x6d>
 805ed41:	8b 55 14             	mov    0x14(%ebp),%edx
 805ed44:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805ed47:	01 d0                	add    %edx,%eax
 805ed49:	0f b6 00             	movzbl (%eax),%eax
 805ed4c:	88 45 df             	mov    %al,-0x21(%ebp)
 805ed4f:	0f b6 55 df          	movzbl -0x21(%ebp),%edx
 805ed53:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805ed56:	83 ec 08             	sub    $0x8,%esp
 805ed59:	52                   	push   %edx
 805ed5a:	50                   	push   %eax
 805ed5b:	e8 91 ae ff ff       	call   8059bf1 <byte_ascii_str>
 805ed60:	83 c4 0c             	add    $0xc,%esp
 805ed63:	83 ec 08             	sub    $0x8,%esp
 805ed66:	ff 75 f0             	pushl  -0x10(%ebp)
 805ed69:	ff 75 ec             	pushl  -0x14(%ebp)
 805ed6c:	ff 75 e8             	pushl  -0x18(%ebp)
 805ed6f:	ff 75 10             	pushl  0x10(%ebp)
 805ed72:	ff 75 0c             	pushl  0xc(%ebp)
 805ed75:	ff 75 08             	pushl  0x8(%ebp)
 805ed78:	e8 75 fc ff ff       	call   805e9f2 <string_index_>
 805ed7d:	83 c4 20             	add    $0x20,%esp
 805ed80:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805ed83:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
 805ed87:	75 06                	jne    805ed8f <string_index_any+0x68>
 805ed89:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 805ed8d:	eb 05                	jmp    805ed94 <string_index_any+0x6d>
 805ed8f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805ed92:	eb 0d                	jmp    805eda1 <string_index_any+0x7a>
 805ed94:	8b 45 18             	mov    0x18(%ebp),%eax
 805ed97:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805ed9a:	7f a5                	jg     805ed41 <string_index_any+0x1a>
 805ed9c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805eda1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805eda4:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805edab:	74 05                	je     805edb2 <string_index_any+0x8b>
 805edad:	e8 6e 9a fe ff       	call   8048820 <__stack_chk_fail@plt>
 805edb2:	c9                   	leave  
 805edb3:	c3                   	ret    

0805edb4 <string_last_index_>:
 805edb4:	55                   	push   %ebp
 805edb5:	89 e5                	mov    %esp,%ebp
 805edb7:	83 ec 10             	sub    $0x10,%esp
 805edba:	8b 55 18             	mov    0x18(%ebp),%edx
 805edbd:	8b 45 0c             	mov    0xc(%ebp),%eax
 805edc0:	39 c2                	cmp    %eax,%edx
 805edc2:	7f 07                	jg     805edcb <string_last_index_+0x17>
 805edc4:	8b 45 18             	mov    0x18(%ebp),%eax
 805edc7:	85 c0                	test   %eax,%eax
 805edc9:	75 07                	jne    805edd2 <string_last_index_+0x1e>
 805edcb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805edd0:	eb 60                	jmp    805ee32 <string_last_index_+0x7e>
 805edd2:	8b 55 0c             	mov    0xc(%ebp),%edx
 805edd5:	8b 45 18             	mov    0x18(%ebp),%eax
 805edd8:	29 c2                	sub    %eax,%edx
 805edda:	89 d0                	mov    %edx,%eax
 805eddc:	89 45 f8             	mov    %eax,-0x8(%ebp)
 805eddf:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 805ede3:	78 47                	js     805ee2c <string_last_index_+0x78>
 805ede5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 805edec:	8b 45 18             	mov    0x18(%ebp),%eax
 805edef:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 805edf2:	7e 25                	jle    805ee19 <string_last_index_+0x65>
 805edf4:	8b 45 08             	mov    0x8(%ebp),%eax
 805edf7:	8b 4d f8             	mov    -0x8(%ebp),%ecx
 805edfa:	8b 55 fc             	mov    -0x4(%ebp),%edx
 805edfd:	01 ca                	add    %ecx,%edx
 805edff:	01 d0                	add    %edx,%eax
 805ee01:	0f b6 10             	movzbl (%eax),%edx
 805ee04:	8b 4d 14             	mov    0x14(%ebp),%ecx
 805ee07:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805ee0a:	01 c8                	add    %ecx,%eax
 805ee0c:	0f b6 00             	movzbl (%eax),%eax
 805ee0f:	38 c2                	cmp    %al,%dl
 805ee11:	75 06                	jne    805ee19 <string_last_index_+0x65>
 805ee13:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 805ee17:	eb d3                	jmp    805edec <string_last_index_+0x38>
 805ee19:	8b 45 18             	mov    0x18(%ebp),%eax
 805ee1c:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 805ee1f:	75 05                	jne    805ee26 <string_last_index_+0x72>
 805ee21:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805ee24:	eb 0c                	jmp    805ee32 <string_last_index_+0x7e>
 805ee26:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
 805ee2a:	eb b3                	jmp    805eddf <string_last_index_+0x2b>
 805ee2c:	90                   	nop
 805ee2d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805ee32:	c9                   	leave  
 805ee33:	c3                   	ret    

0805ee34 <string_last_index>:
 805ee34:	55                   	push   %ebp
 805ee35:	89 e5                	mov    %esp,%ebp
 805ee37:	83 ec 58             	sub    $0x58,%esp
 805ee3a:	8b 45 08             	mov    0x8(%ebp),%eax
 805ee3d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805ee40:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805ee46:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805ee49:	31 c0                	xor    %eax,%eax
 805ee4b:	ff 75 20             	pushl  0x20(%ebp)
 805ee4e:	ff 75 1c             	pushl  0x1c(%ebp)
 805ee51:	ff 75 18             	pushl  0x18(%ebp)
 805ee54:	ff 75 14             	pushl  0x14(%ebp)
 805ee57:	ff 75 10             	pushl  0x10(%ebp)
 805ee5a:	ff 75 0c             	pushl  0xc(%ebp)
 805ee5d:	e8 52 ff ff ff       	call   805edb4 <string_last_index_>
 805ee62:	83 c4 18             	add    $0x18,%esp
 805ee65:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805ee68:	83 7d b8 ff          	cmpl   $0xffffffff,-0x48(%ebp)
 805ee6c:	75 5b                	jne    805eec9 <string_last_index+0x95>
 805ee6e:	8d 45 bc             	lea    -0x44(%ebp),%eax
 805ee71:	50                   	push   %eax
 805ee72:	e8 1a cb ff ff       	call   805b991 <opt_none>
 805ee77:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805ee7a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805ee7d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805ee80:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805ee83:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805ee86:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805ee89:	8b 45 c8             	mov    -0x38(%ebp),%eax
 805ee8c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805ee8f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 805ee92:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805ee95:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805ee98:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805ee9b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ee9e:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805eea1:	89 10                	mov    %edx,(%eax)
 805eea3:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805eea6:	89 50 04             	mov    %edx,0x4(%eax)
 805eea9:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805eeac:	89 50 08             	mov    %edx,0x8(%eax)
 805eeaf:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805eeb2:	89 50 0c             	mov    %edx,0xc(%eax)
 805eeb5:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805eeb8:	89 50 10             	mov    %edx,0x10(%eax)
 805eebb:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805eebe:	89 50 14             	mov    %edx,0x14(%eax)
 805eec1:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805eec4:	89 50 18             	mov    %edx,0x18(%eax)
 805eec7:	eb 47                	jmp    805ef10 <string_last_index+0xdc>
 805eec9:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805eecc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805eecf:	83 ec 04             	sub    $0x4,%esp
 805eed2:	6a 04                	push   $0x4
 805eed4:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805eed7:	50                   	push   %eax
 805eed8:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 805eedb:	50                   	push   %eax
 805eedc:	e8 b2 c9 ff ff       	call   805b893 <opt_ok2>
 805eee1:	83 c4 10             	add    $0x10,%esp
 805eee4:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805eee7:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805eeea:	89 10                	mov    %edx,(%eax)
 805eeec:	8b 55 dc             	mov    -0x24(%ebp),%edx
 805eeef:	89 50 04             	mov    %edx,0x4(%eax)
 805eef2:	8b 55 e0             	mov    -0x20(%ebp),%edx
 805eef5:	89 50 08             	mov    %edx,0x8(%eax)
 805eef8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 805eefb:	89 50 0c             	mov    %edx,0xc(%eax)
 805eefe:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805ef01:	89 50 10             	mov    %edx,0x10(%eax)
 805ef04:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805ef07:	89 50 14             	mov    %edx,0x14(%eax)
 805ef0a:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805ef0d:	89 50 18             	mov    %edx,0x18(%eax)
 805ef10:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 805ef13:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805ef16:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805ef1d:	74 05                	je     805ef24 <string_last_index+0xf0>
 805ef1f:	e8 fc 98 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805ef24:	c9                   	leave  
 805ef25:	c2 04 00             	ret    $0x4

0805ef28 <string_index_after>:
 805ef28:	55                   	push   %ebp
 805ef29:	89 e5                	mov    %esp,%ebp
 805ef2b:	83 ec 10             	sub    $0x10,%esp
 805ef2e:	8b 55 18             	mov    0x18(%ebp),%edx
 805ef31:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ef34:	39 c2                	cmp    %eax,%edx
 805ef36:	7e 0a                	jle    805ef42 <string_index_after+0x1a>
 805ef38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805ef3d:	e9 82 00 00 00       	jmp    805efc4 <string_index_after+0x9c>
 805ef42:	8b 45 20             	mov    0x20(%ebp),%eax
 805ef45:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805ef48:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)
 805ef4c:	79 07                	jns    805ef55 <string_index_after+0x2d>
 805ef4e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 805ef55:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ef58:	3b 45 20             	cmp    0x20(%ebp),%eax
 805ef5b:	7f 07                	jg     805ef64 <string_index_after+0x3c>
 805ef5d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805ef62:	eb 60                	jmp    805efc4 <string_index_after+0x9c>
 805ef64:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805ef67:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805ef6a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ef6d:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805ef70:	7e 4c                	jle    805efbe <string_index_after+0x96>
 805ef72:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 805ef79:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805ef7c:	89 45 fc             	mov    %eax,-0x4(%ebp)
 805ef7f:	8b 45 18             	mov    0x18(%ebp),%eax
 805ef82:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 805ef85:	7e 24                	jle    805efab <string_index_after+0x83>
 805ef87:	8b 55 08             	mov    0x8(%ebp),%edx
 805ef8a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805ef8d:	01 d0                	add    %edx,%eax
 805ef8f:	0f b6 10             	movzbl (%eax),%edx
 805ef92:	8b 4d 14             	mov    0x14(%ebp),%ecx
 805ef95:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805ef98:	01 c8                	add    %ecx,%eax
 805ef9a:	0f b6 00             	movzbl (%eax),%eax
 805ef9d:	38 c2                	cmp    %al,%dl
 805ef9f:	75 0a                	jne    805efab <string_index_after+0x83>
 805efa1:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 805efa5:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 805efa9:	eb d4                	jmp    805ef7f <string_index_after+0x57>
 805efab:	8b 45 18             	mov    0x18(%ebp),%eax
 805efae:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 805efb1:	75 05                	jne    805efb8 <string_index_after+0x90>
 805efb3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805efb6:	eb 0c                	jmp    805efc4 <string_index_after+0x9c>
 805efb8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805efbc:	eb ac                	jmp    805ef6a <string_index_after+0x42>
 805efbe:	90                   	nop
 805efbf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805efc4:	c9                   	leave  
 805efc5:	c3                   	ret    

0805efc6 <string_index_byte>:
 805efc6:	55                   	push   %ebp
 805efc7:	89 e5                	mov    %esp,%ebp
 805efc9:	83 ec 14             	sub    $0x14,%esp
 805efcc:	8b 45 14             	mov    0x14(%ebp),%eax
 805efcf:	88 45 ec             	mov    %al,-0x14(%ebp)
 805efd2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 805efd9:	eb 19                	jmp    805eff4 <string_index_byte+0x2e>
 805efdb:	8b 55 08             	mov    0x8(%ebp),%edx
 805efde:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805efe1:	01 d0                	add    %edx,%eax
 805efe3:	0f b6 00             	movzbl (%eax),%eax
 805efe6:	3a 45 ec             	cmp    -0x14(%ebp),%al
 805efe9:	75 05                	jne    805eff0 <string_index_byte+0x2a>
 805efeb:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805efee:	eb 11                	jmp    805f001 <string_index_byte+0x3b>
 805eff0:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 805eff4:	8b 45 0c             	mov    0xc(%ebp),%eax
 805eff7:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 805effa:	7f df                	jg     805efdb <string_index_byte+0x15>
 805effc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805f001:	c9                   	leave  
 805f002:	c3                   	ret    

0805f003 <string_last_index_byte>:
 805f003:	55                   	push   %ebp
 805f004:	89 e5                	mov    %esp,%ebp
 805f006:	83 ec 14             	sub    $0x14,%esp
 805f009:	8b 45 14             	mov    0x14(%ebp),%eax
 805f00c:	88 45 ec             	mov    %al,-0x14(%ebp)
 805f00f:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f012:	83 e8 01             	sub    $0x1,%eax
 805f015:	89 45 fc             	mov    %eax,-0x4(%ebp)
 805f018:	eb 19                	jmp    805f033 <string_last_index_byte+0x30>
 805f01a:	8b 55 08             	mov    0x8(%ebp),%edx
 805f01d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805f020:	01 d0                	add    %edx,%eax
 805f022:	0f b6 00             	movzbl (%eax),%eax
 805f025:	3a 45 ec             	cmp    -0x14(%ebp),%al
 805f028:	75 05                	jne    805f02f <string_last_index_byte+0x2c>
 805f02a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805f02d:	eb 0f                	jmp    805f03e <string_last_index_byte+0x3b>
 805f02f:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)
 805f033:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
 805f037:	79 e1                	jns    805f01a <string_last_index_byte+0x17>
 805f039:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805f03e:	c9                   	leave  
 805f03f:	c3                   	ret    

0805f040 <string_count>:
 805f040:	55                   	push   %ebp
 805f041:	89 e5                	mov    %esp,%ebp
 805f043:	83 ec 10             	sub    $0x10,%esp
 805f046:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f049:	85 c0                	test   %eax,%eax
 805f04b:	74 07                	je     805f054 <string_count+0x14>
 805f04d:	8b 45 18             	mov    0x18(%ebp),%eax
 805f050:	85 c0                	test   %eax,%eax
 805f052:	75 07                	jne    805f05b <string_count+0x1b>
 805f054:	b8 00 00 00 00       	mov    $0x0,%eax
 805f059:	eb 56                	jmp    805f0b1 <string_count+0x71>
 805f05b:	8b 55 18             	mov    0x18(%ebp),%edx
 805f05e:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f061:	39 c2                	cmp    %eax,%edx
 805f063:	7e 07                	jle    805f06c <string_count+0x2c>
 805f065:	b8 00 00 00 00       	mov    $0x0,%eax
 805f06a:	eb 45                	jmp    805f0b1 <string_count+0x71>
 805f06c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 805f073:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 805f07a:	ff 75 fc             	pushl  -0x4(%ebp)
 805f07d:	ff 75 1c             	pushl  0x1c(%ebp)
 805f080:	ff 75 18             	pushl  0x18(%ebp)
 805f083:	ff 75 14             	pushl  0x14(%ebp)
 805f086:	ff 75 10             	pushl  0x10(%ebp)
 805f089:	ff 75 0c             	pushl  0xc(%ebp)
 805f08c:	ff 75 08             	pushl  0x8(%ebp)
 805f08f:	e8 94 fe ff ff       	call   805ef28 <string_index_after>
 805f094:	83 c4 1c             	add    $0x1c,%esp
 805f097:	89 45 fc             	mov    %eax,-0x4(%ebp)
 805f09a:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%ebp)
 805f09e:	75 05                	jne    805f0a5 <string_count+0x65>
 805f0a0:	8b 45 f8             	mov    -0x8(%ebp),%eax
 805f0a3:	eb 0c                	jmp    805f0b1 <string_count+0x71>
 805f0a5:	8b 45 18             	mov    0x18(%ebp),%eax
 805f0a8:	01 45 fc             	add    %eax,-0x4(%ebp)
 805f0ab:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 805f0af:	eb c9                	jmp    805f07a <string_count+0x3a>
 805f0b1:	c9                   	leave  
 805f0b2:	c3                   	ret    

0805f0b3 <string_contains>:
 805f0b3:	55                   	push   %ebp
 805f0b4:	89 e5                	mov    %esp,%ebp
 805f0b6:	83 ec 08             	sub    $0x8,%esp
 805f0b9:	8b 45 18             	mov    0x18(%ebp),%eax
 805f0bc:	85 c0                	test   %eax,%eax
 805f0be:	75 07                	jne    805f0c7 <string_contains+0x14>
 805f0c0:	b8 01 00 00 00       	mov    $0x1,%eax
 805f0c5:	eb 2e                	jmp    805f0f5 <string_contains+0x42>
 805f0c7:	83 ec 08             	sub    $0x8,%esp
 805f0ca:	ff 75 1c             	pushl  0x1c(%ebp)
 805f0cd:	ff 75 18             	pushl  0x18(%ebp)
 805f0d0:	ff 75 14             	pushl  0x14(%ebp)
 805f0d3:	ff 75 10             	pushl  0x10(%ebp)
 805f0d6:	ff 75 0c             	pushl  0xc(%ebp)
 805f0d9:	ff 75 08             	pushl  0x8(%ebp)
 805f0dc:	e8 11 f9 ff ff       	call   805e9f2 <string_index_>
 805f0e1:	83 c4 20             	add    $0x20,%esp
 805f0e4:	83 f8 ff             	cmp    $0xffffffff,%eax
 805f0e7:	75 07                	jne    805f0f0 <string_contains+0x3d>
 805f0e9:	b8 00 00 00 00       	mov    $0x0,%eax
 805f0ee:	eb 05                	jmp    805f0f5 <string_contains+0x42>
 805f0f0:	b8 01 00 00 00       	mov    $0x1,%eax
 805f0f5:	c9                   	leave  
 805f0f6:	c3                   	ret    

0805f0f7 <string_contains_any>:
 805f0f7:	55                   	push   %ebp
 805f0f8:	89 e5                	mov    %esp,%ebp
 805f0fa:	83 ec 28             	sub    $0x28,%esp
 805f0fd:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f103:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f106:	31 c0                	xor    %eax,%eax
 805f108:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 805f10f:	eb 4e                	jmp    805f15f <string_contains_any+0x68>
 805f111:	8b 55 14             	mov    0x14(%ebp),%edx
 805f114:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805f117:	01 d0                	add    %edx,%eax
 805f119:	0f b6 00             	movzbl (%eax),%eax
 805f11c:	88 45 e3             	mov    %al,-0x1d(%ebp)
 805f11f:	0f b6 55 e3          	movzbl -0x1d(%ebp),%edx
 805f123:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805f126:	83 ec 08             	sub    $0x8,%esp
 805f129:	52                   	push   %edx
 805f12a:	50                   	push   %eax
 805f12b:	e8 c1 aa ff ff       	call   8059bf1 <byte_ascii_str>
 805f130:	83 c4 0c             	add    $0xc,%esp
 805f133:	83 ec 08             	sub    $0x8,%esp
 805f136:	ff 75 f0             	pushl  -0x10(%ebp)
 805f139:	ff 75 ec             	pushl  -0x14(%ebp)
 805f13c:	ff 75 e8             	pushl  -0x18(%ebp)
 805f13f:	ff 75 10             	pushl  0x10(%ebp)
 805f142:	ff 75 0c             	pushl  0xc(%ebp)
 805f145:	ff 75 08             	pushl  0x8(%ebp)
 805f148:	e8 66 ff ff ff       	call   805f0b3 <string_contains>
 805f14d:	83 c4 20             	add    $0x20,%esp
 805f150:	85 c0                	test   %eax,%eax
 805f152:	74 07                	je     805f15b <string_contains_any+0x64>
 805f154:	b8 01 00 00 00       	mov    $0x1,%eax
 805f159:	eb 11                	jmp    805f16c <string_contains_any+0x75>
 805f15b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 805f15f:	8b 45 18             	mov    0x18(%ebp),%eax
 805f162:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 805f165:	7f aa                	jg     805f111 <string_contains_any+0x1a>
 805f167:	b8 00 00 00 00       	mov    $0x0,%eax
 805f16c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805f16f:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805f176:	74 05                	je     805f17d <string_contains_any+0x86>
 805f178:	e8 a3 96 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f17d:	c9                   	leave  
 805f17e:	c3                   	ret    

0805f17f <string_contains_any_substr>:
 805f17f:	55                   	push   %ebp
 805f180:	89 e5                	mov    %esp,%ebp
 805f182:	83 ec 28             	sub    $0x28,%esp
 805f185:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805f188:	85 c0                	test   %eax,%eax
 805f18a:	75 07                	jne    805f193 <string_contains_any_substr+0x14>
 805f18c:	b8 01 00 00 00       	mov    $0x1,%eax
 805f191:	eb 7c                	jmp    805f20f <string_contains_any_substr+0x90>
 805f193:	8b 45 14             	mov    0x14(%ebp),%eax
 805f196:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805f199:	8b 45 18             	mov    0x18(%ebp),%eax
 805f19c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805f19f:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805f1a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805f1a5:	8b 45 20             	mov    0x20(%ebp),%eax
 805f1a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f1ab:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 805f1b2:	eb 4e                	jmp    805f202 <string_contains_any_substr+0x83>
 805f1b4:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 805f1b7:	8b 55 d8             	mov    -0x28(%ebp),%edx
 805f1ba:	89 d0                	mov    %edx,%eax
 805f1bc:	01 c0                	add    %eax,%eax
 805f1be:	01 d0                	add    %edx,%eax
 805f1c0:	c1 e0 02             	shl    $0x2,%eax
 805f1c3:	01 c8                	add    %ecx,%eax
 805f1c5:	8b 10                	mov    (%eax),%edx
 805f1c7:	89 55 dc             	mov    %edx,-0x24(%ebp)
 805f1ca:	8b 50 04             	mov    0x4(%eax),%edx
 805f1cd:	89 55 e0             	mov    %edx,-0x20(%ebp)
 805f1d0:	8b 40 08             	mov    0x8(%eax),%eax
 805f1d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805f1d6:	83 ec 08             	sub    $0x8,%esp
 805f1d9:	ff 75 e4             	pushl  -0x1c(%ebp)
 805f1dc:	ff 75 e0             	pushl  -0x20(%ebp)
 805f1df:	ff 75 dc             	pushl  -0x24(%ebp)
 805f1e2:	ff 75 10             	pushl  0x10(%ebp)
 805f1e5:	ff 75 0c             	pushl  0xc(%ebp)
 805f1e8:	ff 75 08             	pushl  0x8(%ebp)
 805f1eb:	e8 c3 fe ff ff       	call   805f0b3 <string_contains>
 805f1f0:	83 c4 20             	add    $0x20,%esp
 805f1f3:	85 c0                	test   %eax,%eax
 805f1f5:	74 07                	je     805f1fe <string_contains_any_substr+0x7f>
 805f1f7:	b8 01 00 00 00       	mov    $0x1,%eax
 805f1fc:	eb 11                	jmp    805f20f <string_contains_any_substr+0x90>
 805f1fe:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 805f202:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805f205:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 805f208:	7f aa                	jg     805f1b4 <string_contains_any_substr+0x35>
 805f20a:	b8 00 00 00 00       	mov    $0x0,%eax
 805f20f:	c9                   	leave  
 805f210:	c3                   	ret    

0805f211 <string_starts_with>:
 805f211:	55                   	push   %ebp
 805f212:	89 e5                	mov    %esp,%ebp
 805f214:	83 ec 10             	sub    $0x10,%esp
 805f217:	8b 55 18             	mov    0x18(%ebp),%edx
 805f21a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f21d:	39 c2                	cmp    %eax,%edx
 805f21f:	7e 07                	jle    805f228 <string_starts_with+0x17>
 805f221:	b8 00 00 00 00       	mov    $0x0,%eax
 805f226:	eb 3b                	jmp    805f263 <string_starts_with+0x52>
 805f228:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 805f22f:	eb 25                	jmp    805f256 <string_starts_with+0x45>
 805f231:	8b 55 08             	mov    0x8(%ebp),%edx
 805f234:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805f237:	01 d0                	add    %edx,%eax
 805f239:	0f b6 10             	movzbl (%eax),%edx
 805f23c:	8b 4d 14             	mov    0x14(%ebp),%ecx
 805f23f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 805f242:	01 c8                	add    %ecx,%eax
 805f244:	0f b6 00             	movzbl (%eax),%eax
 805f247:	38 c2                	cmp    %al,%dl
 805f249:	74 07                	je     805f252 <string_starts_with+0x41>
 805f24b:	b8 00 00 00 00       	mov    $0x0,%eax
 805f250:	eb 11                	jmp    805f263 <string_starts_with+0x52>
 805f252:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 805f256:	8b 45 18             	mov    0x18(%ebp),%eax
 805f259:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 805f25c:	7f d3                	jg     805f231 <string_starts_with+0x20>
 805f25e:	b8 01 00 00 00       	mov    $0x1,%eax
 805f263:	c9                   	leave  
 805f264:	c3                   	ret    

0805f265 <string_ends_with>:
 805f265:	55                   	push   %ebp
 805f266:	89 e5                	mov    %esp,%ebp
 805f268:	53                   	push   %ebx
 805f269:	83 ec 14             	sub    $0x14,%esp
 805f26c:	8b 55 18             	mov    0x18(%ebp),%edx
 805f26f:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f272:	39 c2                	cmp    %eax,%edx
 805f274:	7e 07                	jle    805f27d <string_ends_with+0x18>
 805f276:	b8 00 00 00 00       	mov    $0x0,%eax
 805f27b:	eb 5a                	jmp    805f2d7 <string_ends_with+0x72>
 805f27d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805f284:	eb 44                	jmp    805f2ca <string_ends_with+0x65>
 805f286:	ff 75 f4             	pushl  -0xc(%ebp)
 805f289:	ff 75 1c             	pushl  0x1c(%ebp)
 805f28c:	ff 75 18             	pushl  0x18(%ebp)
 805f28f:	ff 75 14             	pushl  0x14(%ebp)
 805f292:	e8 a3 16 00 00       	call   806093a <string_at>
 805f297:	83 c4 10             	add    $0x10,%esp
 805f29a:	89 c3                	mov    %eax,%ebx
 805f29c:	8b 55 0c             	mov    0xc(%ebp),%edx
 805f29f:	8b 45 18             	mov    0x18(%ebp),%eax
 805f2a2:	29 c2                	sub    %eax,%edx
 805f2a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805f2a7:	01 d0                	add    %edx,%eax
 805f2a9:	50                   	push   %eax
 805f2aa:	ff 75 10             	pushl  0x10(%ebp)
 805f2ad:	ff 75 0c             	pushl  0xc(%ebp)
 805f2b0:	ff 75 08             	pushl  0x8(%ebp)
 805f2b3:	e8 82 16 00 00       	call   806093a <string_at>
 805f2b8:	83 c4 10             	add    $0x10,%esp
 805f2bb:	38 c3                	cmp    %al,%bl
 805f2bd:	74 07                	je     805f2c6 <string_ends_with+0x61>
 805f2bf:	b8 00 00 00 00       	mov    $0x0,%eax
 805f2c4:	eb 11                	jmp    805f2d7 <string_ends_with+0x72>
 805f2c6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805f2ca:	8b 45 18             	mov    0x18(%ebp),%eax
 805f2cd:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805f2d0:	7f b4                	jg     805f286 <string_ends_with+0x21>
 805f2d2:	b8 01 00 00 00       	mov    $0x1,%eax
 805f2d7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805f2da:	c9                   	leave  
 805f2db:	c3                   	ret    

0805f2dc <string_to_lower>:
 805f2dc:	55                   	push   %ebp
 805f2dd:	89 e5                	mov    %esp,%ebp
 805f2df:	53                   	push   %ebx
 805f2e0:	83 ec 24             	sub    $0x24,%esp
 805f2e3:	8b 45 08             	mov    0x8(%ebp),%eax
 805f2e6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805f2e9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f2ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f2f2:	31 c0                	xor    %eax,%eax
 805f2f4:	8b 45 10             	mov    0x10(%ebp),%eax
 805f2f7:	83 c0 01             	add    $0x1,%eax
 805f2fa:	83 ec 0c             	sub    $0xc,%esp
 805f2fd:	50                   	push   %eax
 805f2fe:	e8 24 86 ff ff       	call   8057927 <v_malloc>
 805f303:	83 c4 10             	add    $0x10,%esp
 805f306:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805f309:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805f310:	eb 29                	jmp    805f33b <string_to_lower+0x5f>
 805f312:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805f315:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805f318:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 805f31b:	8b 55 0c             	mov    0xc(%ebp),%edx
 805f31e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805f321:	01 d0                	add    %edx,%eax
 805f323:	0f b6 00             	movzbl (%eax),%eax
 805f326:	0f b6 c0             	movzbl %al,%eax
 805f329:	83 ec 0c             	sub    $0xc,%esp
 805f32c:	50                   	push   %eax
 805f32d:	e8 be 94 fe ff       	call   80487f0 <tolower@plt>
 805f332:	83 c4 10             	add    $0x10,%esp
 805f335:	88 03                	mov    %al,(%ebx)
 805f337:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 805f33b:	8b 45 10             	mov    0x10(%ebp),%eax
 805f33e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 805f341:	7f cf                	jg     805f312 <string_to_lower+0x36>
 805f343:	8b 55 10             	mov    0x10(%ebp),%edx
 805f346:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805f349:	83 ec 04             	sub    $0x4,%esp
 805f34c:	52                   	push   %edx
 805f34d:	ff 75 f0             	pushl  -0x10(%ebp)
 805f350:	50                   	push   %eax
 805f351:	e8 a4 df ff ff       	call   805d2fa <tos>
 805f356:	83 c4 0c             	add    $0xc,%esp
 805f359:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805f35c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805f35f:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805f366:	74 05                	je     805f36d <string_to_lower+0x91>
 805f368:	e8 b3 94 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f36d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805f370:	c9                   	leave  
 805f371:	c2 04 00             	ret    $0x4

0805f374 <string_is_lower>:
 805f374:	55                   	push   %ebp
 805f375:	89 e5                	mov    %esp,%ebp
 805f377:	83 ec 18             	sub    $0x18,%esp
 805f37a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805f381:	eb 3b                	jmp    805f3be <string_is_lower+0x4a>
 805f383:	ff 75 f4             	pushl  -0xc(%ebp)
 805f386:	ff 75 10             	pushl  0x10(%ebp)
 805f389:	ff 75 0c             	pushl  0xc(%ebp)
 805f38c:	ff 75 08             	pushl  0x8(%ebp)
 805f38f:	e8 a6 15 00 00       	call   806093a <string_at>
 805f394:	83 c4 10             	add    $0x10,%esp
 805f397:	3c 40                	cmp    $0x40,%al
 805f399:	76 1f                	jbe    805f3ba <string_is_lower+0x46>
 805f39b:	ff 75 f4             	pushl  -0xc(%ebp)
 805f39e:	ff 75 10             	pushl  0x10(%ebp)
 805f3a1:	ff 75 0c             	pushl  0xc(%ebp)
 805f3a4:	ff 75 08             	pushl  0x8(%ebp)
 805f3a7:	e8 8e 15 00 00       	call   806093a <string_at>
 805f3ac:	83 c4 10             	add    $0x10,%esp
 805f3af:	3c 5a                	cmp    $0x5a,%al
 805f3b1:	77 07                	ja     805f3ba <string_is_lower+0x46>
 805f3b3:	b8 00 00 00 00       	mov    $0x0,%eax
 805f3b8:	eb 11                	jmp    805f3cb <string_is_lower+0x57>
 805f3ba:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805f3be:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f3c1:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805f3c4:	7f bd                	jg     805f383 <string_is_lower+0xf>
 805f3c6:	b8 01 00 00 00       	mov    $0x1,%eax
 805f3cb:	c9                   	leave  
 805f3cc:	c3                   	ret    

0805f3cd <string_to_upper>:
 805f3cd:	55                   	push   %ebp
 805f3ce:	89 e5                	mov    %esp,%ebp
 805f3d0:	53                   	push   %ebx
 805f3d1:	83 ec 24             	sub    $0x24,%esp
 805f3d4:	8b 45 08             	mov    0x8(%ebp),%eax
 805f3d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805f3da:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f3e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f3e3:	31 c0                	xor    %eax,%eax
 805f3e5:	8b 45 10             	mov    0x10(%ebp),%eax
 805f3e8:	83 c0 01             	add    $0x1,%eax
 805f3eb:	83 ec 0c             	sub    $0xc,%esp
 805f3ee:	50                   	push   %eax
 805f3ef:	e8 33 85 ff ff       	call   8057927 <v_malloc>
 805f3f4:	83 c4 10             	add    $0x10,%esp
 805f3f7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805f3fa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 805f401:	eb 29                	jmp    805f42c <string_to_upper+0x5f>
 805f403:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805f406:	8b 45 f0             	mov    -0x10(%ebp),%eax
 805f409:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 805f40c:	8b 55 0c             	mov    0xc(%ebp),%edx
 805f40f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805f412:	01 d0                	add    %edx,%eax
 805f414:	0f b6 00             	movzbl (%eax),%eax
 805f417:	0f b6 c0             	movzbl %al,%eax
 805f41a:	83 ec 0c             	sub    $0xc,%esp
 805f41d:	50                   	push   %eax
 805f41e:	e8 bd 94 fe ff       	call   80488e0 <toupper@plt>
 805f423:	83 c4 10             	add    $0x10,%esp
 805f426:	88 03                	mov    %al,(%ebx)
 805f428:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 805f42c:	8b 45 10             	mov    0x10(%ebp),%eax
 805f42f:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 805f432:	7f cf                	jg     805f403 <string_to_upper+0x36>
 805f434:	8b 55 10             	mov    0x10(%ebp),%edx
 805f437:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805f43a:	83 ec 04             	sub    $0x4,%esp
 805f43d:	52                   	push   %edx
 805f43e:	ff 75 f0             	pushl  -0x10(%ebp)
 805f441:	50                   	push   %eax
 805f442:	e8 b3 de ff ff       	call   805d2fa <tos>
 805f447:	83 c4 0c             	add    $0xc,%esp
 805f44a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805f44d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805f450:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805f457:	74 05                	je     805f45e <string_to_upper+0x91>
 805f459:	e8 c2 93 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f45e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 805f461:	c9                   	leave  
 805f462:	c2 04 00             	ret    $0x4

0805f465 <string_is_upper>:
 805f465:	55                   	push   %ebp
 805f466:	89 e5                	mov    %esp,%ebp
 805f468:	83 ec 18             	sub    $0x18,%esp
 805f46b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 805f472:	eb 3b                	jmp    805f4af <string_is_upper+0x4a>
 805f474:	ff 75 f4             	pushl  -0xc(%ebp)
 805f477:	ff 75 10             	pushl  0x10(%ebp)
 805f47a:	ff 75 0c             	pushl  0xc(%ebp)
 805f47d:	ff 75 08             	pushl  0x8(%ebp)
 805f480:	e8 b5 14 00 00       	call   806093a <string_at>
 805f485:	83 c4 10             	add    $0x10,%esp
 805f488:	3c 60                	cmp    $0x60,%al
 805f48a:	76 1f                	jbe    805f4ab <string_is_upper+0x46>
 805f48c:	ff 75 f4             	pushl  -0xc(%ebp)
 805f48f:	ff 75 10             	pushl  0x10(%ebp)
 805f492:	ff 75 0c             	pushl  0xc(%ebp)
 805f495:	ff 75 08             	pushl  0x8(%ebp)
 805f498:	e8 9d 14 00 00       	call   806093a <string_at>
 805f49d:	83 c4 10             	add    $0x10,%esp
 805f4a0:	3c 7a                	cmp    $0x7a,%al
 805f4a2:	77 07                	ja     805f4ab <string_is_upper+0x46>
 805f4a4:	b8 00 00 00 00       	mov    $0x0,%eax
 805f4a9:	eb 11                	jmp    805f4bc <string_is_upper+0x57>
 805f4ab:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805f4af:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f4b2:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805f4b5:	7f bd                	jg     805f474 <string_is_upper+0xf>
 805f4b7:	b8 01 00 00 00       	mov    $0x1,%eax
 805f4bc:	c9                   	leave  
 805f4bd:	c3                   	ret    

0805f4be <string_capitalize>:
 805f4be:	55                   	push   %ebp
 805f4bf:	89 e5                	mov    %esp,%ebp
 805f4c1:	83 ec 48             	sub    $0x48,%esp
 805f4c4:	8b 45 08             	mov    0x8(%ebp),%eax
 805f4c7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805f4ca:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f4d0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f4d3:	31 c0                	xor    %eax,%eax
 805f4d5:	8b 45 10             	mov    0x10(%ebp),%eax
 805f4d8:	85 c0                	test   %eax,%eax
 805f4da:	75 1f                	jne    805f4fb <string_capitalize+0x3d>
 805f4dc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805f4df:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805f4e5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805f4e8:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805f4ef:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805f4f2:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805f4f9:	eb 7a                	jmp    805f575 <string_capitalize+0xb7>
 805f4fb:	8b 55 10             	mov    0x10(%ebp),%edx
 805f4fe:	8d 45 d0             	lea    -0x30(%ebp),%eax
 805f501:	83 ec 08             	sub    $0x8,%esp
 805f504:	52                   	push   %edx
 805f505:	6a 01                	push   $0x1
 805f507:	ff 75 14             	pushl  0x14(%ebp)
 805f50a:	ff 75 10             	pushl  0x10(%ebp)
 805f50d:	ff 75 0c             	pushl  0xc(%ebp)
 805f510:	50                   	push   %eax
 805f511:	e8 ab f3 ff ff       	call   805e8c1 <string_substr>
 805f516:	83 c4 1c             	add    $0x1c,%esp
 805f519:	6a 00                	push   $0x0
 805f51b:	ff 75 14             	pushl  0x14(%ebp)
 805f51e:	ff 75 10             	pushl  0x10(%ebp)
 805f521:	ff 75 0c             	pushl  0xc(%ebp)
 805f524:	e8 11 14 00 00       	call   806093a <string_at>
 805f529:	83 c4 10             	add    $0x10,%esp
 805f52c:	0f b6 d0             	movzbl %al,%edx
 805f52f:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805f532:	83 ec 08             	sub    $0x8,%esp
 805f535:	52                   	push   %edx
 805f536:	50                   	push   %eax
 805f537:	e8 b5 a6 ff ff       	call   8059bf1 <byte_ascii_str>
 805f53c:	83 c4 0c             	add    $0xc,%esp
 805f53f:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805f542:	ff 75 e4             	pushl  -0x1c(%ebp)
 805f545:	ff 75 e0             	pushl  -0x20(%ebp)
 805f548:	ff 75 dc             	pushl  -0x24(%ebp)
 805f54b:	50                   	push   %eax
 805f54c:	e8 7c fe ff ff       	call   805f3cd <string_to_upper>
 805f551:	83 c4 0c             	add    $0xc,%esp
 805f554:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805f557:	83 ec 04             	sub    $0x4,%esp
 805f55a:	ff 75 d8             	pushl  -0x28(%ebp)
 805f55d:	ff 75 d4             	pushl  -0x2c(%ebp)
 805f560:	ff 75 d0             	pushl  -0x30(%ebp)
 805f563:	ff 75 f0             	pushl  -0x10(%ebp)
 805f566:	ff 75 ec             	pushl  -0x14(%ebp)
 805f569:	ff 75 e8             	pushl  -0x18(%ebp)
 805f56c:	50                   	push   %eax
 805f56d:	e8 d2 ec ff ff       	call   805e244 <string_add>
 805f572:	83 c4 1c             	add    $0x1c,%esp
 805f575:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805f578:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805f57b:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805f582:	74 05                	je     805f589 <string_capitalize+0xcb>
 805f584:	e8 97 92 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f589:	c9                   	leave  
 805f58a:	c2 04 00             	ret    $0x4

0805f58d <string_is_capital>:
 805f58d:	55                   	push   %ebp
 805f58e:	89 e5                	mov    %esp,%ebp
 805f590:	83 ec 18             	sub    $0x18,%esp
 805f593:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f596:	85 c0                	test   %eax,%eax
 805f598:	74 2e                	je     805f5c8 <string_is_capital+0x3b>
 805f59a:	6a 00                	push   $0x0
 805f59c:	ff 75 10             	pushl  0x10(%ebp)
 805f59f:	ff 75 0c             	pushl  0xc(%ebp)
 805f5a2:	ff 75 08             	pushl  0x8(%ebp)
 805f5a5:	e8 90 13 00 00       	call   806093a <string_at>
 805f5aa:	83 c4 10             	add    $0x10,%esp
 805f5ad:	3c 40                	cmp    $0x40,%al
 805f5af:	76 17                	jbe    805f5c8 <string_is_capital+0x3b>
 805f5b1:	6a 00                	push   $0x0
 805f5b3:	ff 75 10             	pushl  0x10(%ebp)
 805f5b6:	ff 75 0c             	pushl  0xc(%ebp)
 805f5b9:	ff 75 08             	pushl  0x8(%ebp)
 805f5bc:	e8 79 13 00 00       	call   806093a <string_at>
 805f5c1:	83 c4 10             	add    $0x10,%esp
 805f5c4:	3c 5a                	cmp    $0x5a,%al
 805f5c6:	76 07                	jbe    805f5cf <string_is_capital+0x42>
 805f5c8:	b8 00 00 00 00       	mov    $0x0,%eax
 805f5cd:	eb 51                	jmp    805f620 <string_is_capital+0x93>
 805f5cf:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 805f5d6:	eb 3b                	jmp    805f613 <string_is_capital+0x86>
 805f5d8:	ff 75 f4             	pushl  -0xc(%ebp)
 805f5db:	ff 75 10             	pushl  0x10(%ebp)
 805f5de:	ff 75 0c             	pushl  0xc(%ebp)
 805f5e1:	ff 75 08             	pushl  0x8(%ebp)
 805f5e4:	e8 51 13 00 00       	call   806093a <string_at>
 805f5e9:	83 c4 10             	add    $0x10,%esp
 805f5ec:	3c 40                	cmp    $0x40,%al
 805f5ee:	76 1f                	jbe    805f60f <string_is_capital+0x82>
 805f5f0:	ff 75 f4             	pushl  -0xc(%ebp)
 805f5f3:	ff 75 10             	pushl  0x10(%ebp)
 805f5f6:	ff 75 0c             	pushl  0xc(%ebp)
 805f5f9:	ff 75 08             	pushl  0x8(%ebp)
 805f5fc:	e8 39 13 00 00       	call   806093a <string_at>
 805f601:	83 c4 10             	add    $0x10,%esp
 805f604:	3c 5a                	cmp    $0x5a,%al
 805f606:	77 07                	ja     805f60f <string_is_capital+0x82>
 805f608:	b8 00 00 00 00       	mov    $0x0,%eax
 805f60d:	eb 11                	jmp    805f620 <string_is_capital+0x93>
 805f60f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 805f613:	8b 45 0c             	mov    0xc(%ebp),%eax
 805f616:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 805f619:	7f bd                	jg     805f5d8 <string_is_capital+0x4b>
 805f61b:	b8 01 00 00 00       	mov    $0x1,%eax
 805f620:	c9                   	leave  
 805f621:	c3                   	ret    

0805f622 <string_title>:
 805f622:	55                   	push   %ebp
 805f623:	89 e5                	mov    %esp,%ebp
 805f625:	81 ec 88 00 00 00    	sub    $0x88,%esp
 805f62b:	8b 45 08             	mov    0x8(%ebp),%eax
 805f62e:	89 45 84             	mov    %eax,-0x7c(%ebp)
 805f631:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f637:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f63a:	31 c0                	xor    %eax,%eax
 805f63c:	c7 45 94 97 97 06 08 	movl   $0x8069797,-0x6c(%ebp)
 805f643:	c7 45 98 01 00 00 00 	movl   $0x1,-0x68(%ebp)
 805f64a:	c7 45 9c 01 00 00 00 	movl   $0x1,-0x64(%ebp)
 805f651:	8d 45 b8             	lea    -0x48(%ebp),%eax
 805f654:	83 ec 04             	sub    $0x4,%esp
 805f657:	ff 75 9c             	pushl  -0x64(%ebp)
 805f65a:	ff 75 98             	pushl  -0x68(%ebp)
 805f65d:	ff 75 94             	pushl  -0x6c(%ebp)
 805f660:	ff 75 14             	pushl  0x14(%ebp)
 805f663:	ff 75 10             	pushl  0x10(%ebp)
 805f666:	ff 75 0c             	pushl  0xc(%ebp)
 805f669:	50                   	push   %eax
 805f66a:	e8 95 ec ff ff       	call   805e304 <string_split>
 805f66f:	83 c4 1c             	add    $0x1c,%esp
 805f672:	8d 45 c8             	lea    -0x38(%ebp),%eax
 805f675:	83 ec 0c             	sub    $0xc,%esp
 805f678:	6a 00                	push   $0x0
 805f67a:	6a 0c                	push   $0xc
 805f67c:	6a 00                	push   $0x0
 805f67e:	6a 00                	push   $0x0
 805f680:	50                   	push   %eax
 805f681:	e8 e3 63 ff ff       	call   8055a69 <__new_array_with_default>
 805f686:	83 c4 1c             	add    $0x1c,%esp
 805f689:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805f68c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 805f68f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 805f692:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805f695:	8b 45 c0             	mov    -0x40(%ebp),%eax
 805f698:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805f69b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 805f69e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805f6a1:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
 805f6a8:	eb 4e                	jmp    805f6f8 <string_title+0xd6>
 805f6aa:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 805f6ad:	8b 55 90             	mov    -0x70(%ebp),%edx
 805f6b0:	89 d0                	mov    %edx,%eax
 805f6b2:	01 c0                	add    %eax,%eax
 805f6b4:	01 d0                	add    %edx,%eax
 805f6b6:	c1 e0 02             	shl    $0x2,%eax
 805f6b9:	01 c8                	add    %ecx,%eax
 805f6bb:	8b 10                	mov    (%eax),%edx
 805f6bd:	89 55 ac             	mov    %edx,-0x54(%ebp)
 805f6c0:	8b 50 04             	mov    0x4(%eax),%edx
 805f6c3:	89 55 b0             	mov    %edx,-0x50(%ebp)
 805f6c6:	8b 40 08             	mov    0x8(%eax),%eax
 805f6c9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 805f6cc:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805f6cf:	ff 75 b4             	pushl  -0x4c(%ebp)
 805f6d2:	ff 75 b0             	pushl  -0x50(%ebp)
 805f6d5:	ff 75 ac             	pushl  -0x54(%ebp)
 805f6d8:	50                   	push   %eax
 805f6d9:	e8 e0 fd ff ff       	call   805f4be <string_capitalize>
 805f6de:	83 c4 0c             	add    $0xc,%esp
 805f6e1:	83 ec 08             	sub    $0x8,%esp
 805f6e4:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805f6e7:	50                   	push   %eax
 805f6e8:	8d 45 c8             	lea    -0x38(%ebp),%eax
 805f6eb:	50                   	push   %eax
 805f6ec:	e8 c9 72 ff ff       	call   80569ba <array_push>
 805f6f1:	83 c4 10             	add    $0x10,%esp
 805f6f4:	83 45 90 01          	addl   $0x1,-0x70(%ebp)
 805f6f8:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805f6fb:	3b 45 90             	cmp    -0x70(%ebp),%eax
 805f6fe:	7f aa                	jg     805f6aa <string_title+0x88>
 805f700:	c7 45 ac 97 97 06 08 	movl   $0x8069797,-0x54(%ebp)
 805f707:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
 805f70e:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)
 805f715:	8d 45 a0             	lea    -0x60(%ebp),%eax
 805f718:	ff 75 b4             	pushl  -0x4c(%ebp)
 805f71b:	ff 75 b0             	pushl  -0x50(%ebp)
 805f71e:	ff 75 ac             	pushl  -0x54(%ebp)
 805f721:	ff 75 d4             	pushl  -0x2c(%ebp)
 805f724:	ff 75 d0             	pushl  -0x30(%ebp)
 805f727:	ff 75 cc             	pushl  -0x34(%ebp)
 805f72a:	ff 75 c8             	pushl  -0x38(%ebp)
 805f72d:	50                   	push   %eax
 805f72e:	e8 98 17 00 00       	call   8060ecb <array_string_join>
 805f733:	83 c4 1c             	add    $0x1c,%esp
 805f736:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805f739:	8b 55 a0             	mov    -0x60(%ebp),%edx
 805f73c:	89 10                	mov    %edx,(%eax)
 805f73e:	8b 55 a4             	mov    -0x5c(%ebp),%edx
 805f741:	89 50 04             	mov    %edx,0x4(%eax)
 805f744:	8b 55 a8             	mov    -0x58(%ebp),%edx
 805f747:	89 50 08             	mov    %edx,0x8(%eax)
 805f74a:	8b 45 84             	mov    -0x7c(%ebp),%eax
 805f74d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805f750:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805f757:	74 05                	je     805f75e <string_title+0x13c>
 805f759:	e8 c2 90 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f75e:	c9                   	leave  
 805f75f:	c2 04 00             	ret    $0x4

0805f762 <string_is_title>:
 805f762:	55                   	push   %ebp
 805f763:	89 e5                	mov    %esp,%ebp
 805f765:	83 ec 48             	sub    $0x48,%esp
 805f768:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f76e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f771:	31 c0                	xor    %eax,%eax
 805f773:	c7 45 bc 97 97 06 08 	movl   $0x8069797,-0x44(%ebp)
 805f77a:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)
 805f781:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)
 805f788:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 805f78b:	83 ec 04             	sub    $0x4,%esp
 805f78e:	ff 75 c4             	pushl  -0x3c(%ebp)
 805f791:	ff 75 c0             	pushl  -0x40(%ebp)
 805f794:	ff 75 bc             	pushl  -0x44(%ebp)
 805f797:	ff 75 10             	pushl  0x10(%ebp)
 805f79a:	ff 75 0c             	pushl  0xc(%ebp)
 805f79d:	ff 75 08             	pushl  0x8(%ebp)
 805f7a0:	50                   	push   %eax
 805f7a1:	e8 5e eb ff ff       	call   805e304 <string_split>
 805f7a6:	83 c4 1c             	add    $0x1c,%esp
 805f7a9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f7ac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805f7af:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805f7b2:	89 45 e8             	mov    %eax,-0x18(%ebp)
 805f7b5:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805f7b8:	89 45 ec             	mov    %eax,-0x14(%ebp)
 805f7bb:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805f7be:	89 45 f0             	mov    %eax,-0x10(%ebp)
 805f7c1:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 805f7c8:	eb 45                	jmp    805f80f <string_is_title+0xad>
 805f7ca:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 805f7cd:	8b 55 b8             	mov    -0x48(%ebp),%edx
 805f7d0:	89 d0                	mov    %edx,%eax
 805f7d2:	01 c0                	add    %eax,%eax
 805f7d4:	01 d0                	add    %edx,%eax
 805f7d6:	c1 e0 02             	shl    $0x2,%eax
 805f7d9:	01 c8                	add    %ecx,%eax
 805f7db:	8b 10                	mov    (%eax),%edx
 805f7dd:	89 55 c8             	mov    %edx,-0x38(%ebp)
 805f7e0:	8b 50 04             	mov    0x4(%eax),%edx
 805f7e3:	89 55 cc             	mov    %edx,-0x34(%ebp)
 805f7e6:	8b 40 08             	mov    0x8(%eax),%eax
 805f7e9:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805f7ec:	83 ec 04             	sub    $0x4,%esp
 805f7ef:	ff 75 d0             	pushl  -0x30(%ebp)
 805f7f2:	ff 75 cc             	pushl  -0x34(%ebp)
 805f7f5:	ff 75 c8             	pushl  -0x38(%ebp)
 805f7f8:	e8 90 fd ff ff       	call   805f58d <string_is_capital>
 805f7fd:	83 c4 10             	add    $0x10,%esp
 805f800:	85 c0                	test   %eax,%eax
 805f802:	75 07                	jne    805f80b <string_is_title+0xa9>
 805f804:	b8 00 00 00 00       	mov    $0x0,%eax
 805f809:	eb 11                	jmp    805f81c <string_is_title+0xba>
 805f80b:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 805f80f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 805f812:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 805f815:	7f b3                	jg     805f7ca <string_is_title+0x68>
 805f817:	b8 01 00 00 00       	mov    $0x1,%eax
 805f81c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805f81f:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805f826:	74 05                	je     805f82d <string_is_title+0xcb>
 805f828:	e8 f3 8f fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f82d:	c9                   	leave  
 805f82e:	c3                   	ret    

0805f82f <string_find_between>:
 805f82f:	55                   	push   %ebp
 805f830:	89 e5                	mov    %esp,%ebp
 805f832:	83 ec 38             	sub    $0x38,%esp
 805f835:	8b 45 08             	mov    0x8(%ebp),%eax
 805f838:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805f83b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f841:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f844:	31 c0                	xor    %eax,%eax
 805f846:	83 ec 08             	sub    $0x8,%esp
 805f849:	ff 75 20             	pushl  0x20(%ebp)
 805f84c:	ff 75 1c             	pushl  0x1c(%ebp)
 805f84f:	ff 75 18             	pushl  0x18(%ebp)
 805f852:	ff 75 14             	pushl  0x14(%ebp)
 805f855:	ff 75 10             	pushl  0x10(%ebp)
 805f858:	ff 75 0c             	pushl  0xc(%ebp)
 805f85b:	e8 92 f1 ff ff       	call   805e9f2 <string_index_>
 805f860:	83 c4 20             	add    $0x20,%esp
 805f863:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805f866:	83 7d e0 ff          	cmpl   $0xffffffff,-0x20(%ebp)
 805f86a:	75 1f                	jne    805f88b <string_find_between+0x5c>
 805f86c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f86f:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805f875:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f878:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805f87f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f882:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805f889:	eb 78                	jmp    805f903 <string_find_between+0xd4>
 805f88b:	8b 55 1c             	mov    0x1c(%ebp),%edx
 805f88e:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805f891:	01 c2                	add    %eax,%edx
 805f893:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805f896:	83 ec 0c             	sub    $0xc,%esp
 805f899:	52                   	push   %edx
 805f89a:	ff 75 14             	pushl  0x14(%ebp)
 805f89d:	ff 75 10             	pushl  0x10(%ebp)
 805f8a0:	ff 75 0c             	pushl  0xc(%ebp)
 805f8a3:	50                   	push   %eax
 805f8a4:	e8 45 ef ff ff       	call   805e7ee <string_right>
 805f8a9:	83 c4 1c             	add    $0x1c,%esp
 805f8ac:	83 ec 08             	sub    $0x8,%esp
 805f8af:	ff 75 2c             	pushl  0x2c(%ebp)
 805f8b2:	ff 75 28             	pushl  0x28(%ebp)
 805f8b5:	ff 75 24             	pushl  0x24(%ebp)
 805f8b8:	ff 75 f0             	pushl  -0x10(%ebp)
 805f8bb:	ff 75 ec             	pushl  -0x14(%ebp)
 805f8be:	ff 75 e8             	pushl  -0x18(%ebp)
 805f8c1:	e8 2c f1 ff ff       	call   805e9f2 <string_index_>
 805f8c6:	83 c4 20             	add    $0x20,%esp
 805f8c9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805f8cc:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
 805f8d0:	75 16                	jne    805f8e8 <string_find_between+0xb9>
 805f8d2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f8d5:	8b 55 e8             	mov    -0x18(%ebp),%edx
 805f8d8:	89 10                	mov    %edx,(%eax)
 805f8da:	8b 55 ec             	mov    -0x14(%ebp),%edx
 805f8dd:	89 50 04             	mov    %edx,0x4(%eax)
 805f8e0:	8b 55 f0             	mov    -0x10(%ebp),%edx
 805f8e3:	89 50 08             	mov    %edx,0x8(%eax)
 805f8e6:	eb 1b                	jmp    805f903 <string_find_between+0xd4>
 805f8e8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f8eb:	83 ec 0c             	sub    $0xc,%esp
 805f8ee:	ff 75 e4             	pushl  -0x1c(%ebp)
 805f8f1:	ff 75 f0             	pushl  -0x10(%ebp)
 805f8f4:	ff 75 ec             	pushl  -0x14(%ebp)
 805f8f7:	ff 75 e8             	pushl  -0x18(%ebp)
 805f8fa:	50                   	push   %eax
 805f8fb:	e8 84 ee ff ff       	call   805e784 <string_left>
 805f900:	83 c4 1c             	add    $0x1c,%esp
 805f903:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f906:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805f909:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805f910:	74 05                	je     805f917 <string_find_between+0xe8>
 805f912:	e8 09 8f fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f917:	c9                   	leave  
 805f918:	c2 04 00             	ret    $0x4

0805f91b <byte_is_space>:
 805f91b:	55                   	push   %ebp
 805f91c:	89 e5                	mov    %esp,%ebp
 805f91e:	83 ec 04             	sub    $0x4,%esp
 805f921:	8b 45 08             	mov    0x8(%ebp),%eax
 805f924:	88 45 fc             	mov    %al,-0x4(%ebp)
 805f927:	80 7d fc 20          	cmpb   $0x20,-0x4(%ebp)
 805f92b:	74 2a                	je     805f957 <byte_is_space+0x3c>
 805f92d:	80 7d fc 0a          	cmpb   $0xa,-0x4(%ebp)
 805f931:	74 24                	je     805f957 <byte_is_space+0x3c>
 805f933:	80 7d fc 09          	cmpb   $0x9,-0x4(%ebp)
 805f937:	74 1e                	je     805f957 <byte_is_space+0x3c>
 805f939:	80 7d fc 0b          	cmpb   $0xb,-0x4(%ebp)
 805f93d:	74 18                	je     805f957 <byte_is_space+0x3c>
 805f93f:	80 7d fc 0c          	cmpb   $0xc,-0x4(%ebp)
 805f943:	74 12                	je     805f957 <byte_is_space+0x3c>
 805f945:	80 7d fc 0d          	cmpb   $0xd,-0x4(%ebp)
 805f949:	74 0c                	je     805f957 <byte_is_space+0x3c>
 805f94b:	80 7d fc 85          	cmpb   $0x85,-0x4(%ebp)
 805f94f:	74 06                	je     805f957 <byte_is_space+0x3c>
 805f951:	80 7d fc a0          	cmpb   $0xa0,-0x4(%ebp)
 805f955:	75 07                	jne    805f95e <byte_is_space+0x43>
 805f957:	b8 01 00 00 00       	mov    $0x1,%eax
 805f95c:	eb 05                	jmp    805f963 <byte_is_space+0x48>
 805f95e:	b8 00 00 00 00       	mov    $0x0,%eax
 805f963:	c9                   	leave  
 805f964:	c3                   	ret    

0805f965 <string_trim_space>:
 805f965:	55                   	push   %ebp
 805f966:	89 e5                	mov    %esp,%ebp
 805f968:	83 ec 28             	sub    $0x28,%esp
 805f96b:	8b 45 08             	mov    0x8(%ebp),%eax
 805f96e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805f971:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f977:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f97a:	31 c0                	xor    %eax,%eax
 805f97c:	c7 45 e8 ed 9e 06 08 	movl   $0x8069eed,-0x18(%ebp)
 805f983:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
 805f98a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 805f991:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805f994:	83 ec 04             	sub    $0x4,%esp
 805f997:	ff 75 f0             	pushl  -0x10(%ebp)
 805f99a:	ff 75 ec             	pushl  -0x14(%ebp)
 805f99d:	ff 75 e8             	pushl  -0x18(%ebp)
 805f9a0:	ff 75 14             	pushl  0x14(%ebp)
 805f9a3:	ff 75 10             	pushl  0x10(%ebp)
 805f9a6:	ff 75 0c             	pushl  0xc(%ebp)
 805f9a9:	50                   	push   %eax
 805f9aa:	e8 1b 00 00 00       	call   805f9ca <string_trim>
 805f9af:	83 c4 1c             	add    $0x1c,%esp
 805f9b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805f9b5:	8b 55 f4             	mov    -0xc(%ebp),%edx
 805f9b8:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 805f9bf:	74 05                	je     805f9c6 <string_trim_space+0x61>
 805f9c1:	e8 5a 8e fe ff       	call   8048820 <__stack_chk_fail@plt>
 805f9c6:	c9                   	leave  
 805f9c7:	c2 04 00             	ret    $0x4

0805f9ca <string_trim>:
 805f9ca:	55                   	push   %ebp
 805f9cb:	89 e5                	mov    %esp,%ebp
 805f9cd:	83 ec 38             	sub    $0x38,%esp
 805f9d0:	8b 45 08             	mov    0x8(%ebp),%eax
 805f9d3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805f9d6:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f9dc:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805f9df:	31 c0                	xor    %eax,%eax
 805f9e1:	8b 45 10             	mov    0x10(%ebp),%eax
 805f9e4:	85 c0                	test   %eax,%eax
 805f9e6:	7e 07                	jle    805f9ef <string_trim+0x25>
 805f9e8:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805f9eb:	85 c0                	test   %eax,%eax
 805f9ed:	7f 19                	jg     805fa08 <string_trim+0x3e>
 805f9ef:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805f9f2:	8b 55 0c             	mov    0xc(%ebp),%edx
 805f9f5:	89 10                	mov    %edx,(%eax)
 805f9f7:	8b 55 10             	mov    0x10(%ebp),%edx
 805f9fa:	89 50 04             	mov    %edx,0x4(%eax)
 805f9fd:	8b 55 14             	mov    0x14(%ebp),%edx
 805fa00:	89 50 08             	mov    %edx,0x8(%eax)
 805fa03:	e9 1c 01 00 00       	jmp    805fb24 <string_trim+0x15a>
 805fa08:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805fa0b:	ff 75 20             	pushl  0x20(%ebp)
 805fa0e:	ff 75 1c             	pushl  0x1c(%ebp)
 805fa11:	ff 75 18             	pushl  0x18(%ebp)
 805fa14:	50                   	push   %eax
 805fa15:	e8 a3 18 00 00       	call   80612bd <string_bytes>
 805fa1a:	83 c4 0c             	add    $0xc,%esp
 805fa1d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 805fa24:	8b 45 10             	mov    0x10(%ebp),%eax
 805fa27:	83 e8 01             	sub    $0x1,%eax
 805fa2a:	89 45 dc             	mov    %eax,-0x24(%ebp)
 805fa2d:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 805fa34:	8b 45 10             	mov    0x10(%ebp),%eax
 805fa37:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 805fa3a:	0f 8c c2 00 00 00    	jl     805fb02 <string_trim+0x138>
 805fa40:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
 805fa44:	0f 8c b8 00 00 00    	jl     805fb02 <string_trim+0x138>
 805fa4a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 805fa4e:	0f 84 ae 00 00 00    	je     805fb02 <string_trim+0x138>
 805fa54:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 805fa5b:	ff 75 d8             	pushl  -0x28(%ebp)
 805fa5e:	ff 75 14             	pushl  0x14(%ebp)
 805fa61:	ff 75 10             	pushl  0x10(%ebp)
 805fa64:	ff 75 0c             	pushl  0xc(%ebp)
 805fa67:	e8 ce 0e 00 00       	call   806093a <string_at>
 805fa6c:	83 c4 10             	add    $0x10,%esp
 805fa6f:	0f b6 c0             	movzbl %al,%eax
 805fa72:	83 ec 0c             	sub    $0xc,%esp
 805fa75:	50                   	push   %eax
 805fa76:	ff 75 f0             	pushl  -0x10(%ebp)
 805fa79:	ff 75 ec             	pushl  -0x14(%ebp)
 805fa7c:	ff 75 e8             	pushl  -0x18(%ebp)
 805fa7f:	ff 75 e4             	pushl  -0x1c(%ebp)
 805fa82:	e8 e9 98 fe ff       	call   8049370 <array_byte_contains>
 805fa87:	83 c4 20             	add    $0x20,%esp
 805fa8a:	85 c0                	test   %eax,%eax
 805fa8c:	74 0b                	je     805fa99 <string_trim+0xcf>
 805fa8e:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 805fa92:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 805fa99:	ff 75 dc             	pushl  -0x24(%ebp)
 805fa9c:	ff 75 14             	pushl  0x14(%ebp)
 805fa9f:	ff 75 10             	pushl  0x10(%ebp)
 805faa2:	ff 75 0c             	pushl  0xc(%ebp)
 805faa5:	e8 90 0e 00 00       	call   806093a <string_at>
 805faaa:	83 c4 10             	add    $0x10,%esp
 805faad:	0f b6 c0             	movzbl %al,%eax
 805fab0:	83 ec 0c             	sub    $0xc,%esp
 805fab3:	50                   	push   %eax
 805fab4:	ff 75 f0             	pushl  -0x10(%ebp)
 805fab7:	ff 75 ec             	pushl  -0x14(%ebp)
 805faba:	ff 75 e8             	pushl  -0x18(%ebp)
 805fabd:	ff 75 e4             	pushl  -0x1c(%ebp)
 805fac0:	e8 ab 98 fe ff       	call   8049370 <array_byte_contains>
 805fac5:	83 c4 20             	add    $0x20,%esp
 805fac8:	85 c0                	test   %eax,%eax
 805faca:	74 0b                	je     805fad7 <string_trim+0x10d>
 805facc:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)
 805fad0:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 805fad7:	8b 45 d8             	mov    -0x28(%ebp),%eax
 805fada:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 805fadd:	0f 8e 51 ff ff ff    	jle    805fa34 <string_trim+0x6a>
 805fae3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fae6:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805faec:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805faef:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805faf6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805faf9:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805fb00:	eb 22                	jmp    805fb24 <string_trim+0x15a>
 805fb02:	8b 45 dc             	mov    -0x24(%ebp),%eax
 805fb05:	8d 50 01             	lea    0x1(%eax),%edx
 805fb08:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fb0b:	83 ec 08             	sub    $0x8,%esp
 805fb0e:	52                   	push   %edx
 805fb0f:	ff 75 d8             	pushl  -0x28(%ebp)
 805fb12:	ff 75 14             	pushl  0x14(%ebp)
 805fb15:	ff 75 10             	pushl  0x10(%ebp)
 805fb18:	ff 75 0c             	pushl  0xc(%ebp)
 805fb1b:	50                   	push   %eax
 805fb1c:	e8 a0 ed ff ff       	call   805e8c1 <string_substr>
 805fb21:	83 c4 1c             	add    $0x1c,%esp
 805fb24:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fb27:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805fb2a:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805fb31:	74 05                	je     805fb38 <string_trim+0x16e>
 805fb33:	e8 e8 8c fe ff       	call   8048820 <__stack_chk_fail@plt>
 805fb38:	c9                   	leave  
 805fb39:	c2 04 00             	ret    $0x4

0805fb3c <string_trim_left>:
 805fb3c:	55                   	push   %ebp
 805fb3d:	89 e5                	mov    %esp,%ebp
 805fb3f:	83 ec 38             	sub    $0x38,%esp
 805fb42:	8b 45 08             	mov    0x8(%ebp),%eax
 805fb45:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805fb48:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805fb4e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805fb51:	31 c0                	xor    %eax,%eax
 805fb53:	8b 45 10             	mov    0x10(%ebp),%eax
 805fb56:	85 c0                	test   %eax,%eax
 805fb58:	7e 07                	jle    805fb61 <string_trim_left+0x25>
 805fb5a:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805fb5d:	85 c0                	test   %eax,%eax
 805fb5f:	7f 16                	jg     805fb77 <string_trim_left+0x3b>
 805fb61:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fb64:	8b 55 0c             	mov    0xc(%ebp),%edx
 805fb67:	89 10                	mov    %edx,(%eax)
 805fb69:	8b 55 10             	mov    0x10(%ebp),%edx
 805fb6c:	89 50 04             	mov    %edx,0x4(%eax)
 805fb6f:	8b 55 14             	mov    0x14(%ebp),%edx
 805fb72:	89 50 08             	mov    %edx,0x8(%eax)
 805fb75:	eb 78                	jmp    805fbef <string_trim_left+0xb3>
 805fb77:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805fb7a:	ff 75 20             	pushl  0x20(%ebp)
 805fb7d:	ff 75 1c             	pushl  0x1c(%ebp)
 805fb80:	ff 75 18             	pushl  0x18(%ebp)
 805fb83:	50                   	push   %eax
 805fb84:	e8 34 17 00 00       	call   80612bd <string_bytes>
 805fb89:	83 c4 0c             	add    $0xc,%esp
 805fb8c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 805fb93:	8b 45 10             	mov    0x10(%ebp),%eax
 805fb96:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 805fb99:	7e 39                	jle    805fbd4 <string_trim_left+0x98>
 805fb9b:	ff 75 e0             	pushl  -0x20(%ebp)
 805fb9e:	ff 75 14             	pushl  0x14(%ebp)
 805fba1:	ff 75 10             	pushl  0x10(%ebp)
 805fba4:	ff 75 0c             	pushl  0xc(%ebp)
 805fba7:	e8 8e 0d 00 00       	call   806093a <string_at>
 805fbac:	83 c4 10             	add    $0x10,%esp
 805fbaf:	0f b6 c0             	movzbl %al,%eax
 805fbb2:	83 ec 0c             	sub    $0xc,%esp
 805fbb5:	50                   	push   %eax
 805fbb6:	ff 75 f0             	pushl  -0x10(%ebp)
 805fbb9:	ff 75 ec             	pushl  -0x14(%ebp)
 805fbbc:	ff 75 e8             	pushl  -0x18(%ebp)
 805fbbf:	ff 75 e4             	pushl  -0x1c(%ebp)
 805fbc2:	e8 a9 97 fe ff       	call   8049370 <array_byte_contains>
 805fbc7:	83 c4 20             	add    $0x20,%esp
 805fbca:	85 c0                	test   %eax,%eax
 805fbcc:	74 06                	je     805fbd4 <string_trim_left+0x98>
 805fbce:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 805fbd2:	eb bf                	jmp    805fb93 <string_trim_left+0x57>
 805fbd4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fbd7:	83 ec 0c             	sub    $0xc,%esp
 805fbda:	ff 75 e0             	pushl  -0x20(%ebp)
 805fbdd:	ff 75 14             	pushl  0x14(%ebp)
 805fbe0:	ff 75 10             	pushl  0x10(%ebp)
 805fbe3:	ff 75 0c             	pushl  0xc(%ebp)
 805fbe6:	50                   	push   %eax
 805fbe7:	e8 02 ec ff ff       	call   805e7ee <string_right>
 805fbec:	83 c4 1c             	add    $0x1c,%esp
 805fbef:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fbf2:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805fbf5:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805fbfc:	74 05                	je     805fc03 <string_trim_left+0xc7>
 805fbfe:	e8 1d 8c fe ff       	call   8048820 <__stack_chk_fail@plt>
 805fc03:	c9                   	leave  
 805fc04:	c2 04 00             	ret    $0x4

0805fc07 <string_trim_right>:
 805fc07:	55                   	push   %ebp
 805fc08:	89 e5                	mov    %esp,%ebp
 805fc0a:	83 ec 38             	sub    $0x38,%esp
 805fc0d:	8b 45 08             	mov    0x8(%ebp),%eax
 805fc10:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805fc13:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805fc19:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805fc1c:	31 c0                	xor    %eax,%eax
 805fc1e:	8b 45 10             	mov    0x10(%ebp),%eax
 805fc21:	85 c0                	test   %eax,%eax
 805fc23:	7e 07                	jle    805fc2c <string_trim_right+0x25>
 805fc25:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805fc28:	85 c0                	test   %eax,%eax
 805fc2a:	7f 19                	jg     805fc45 <string_trim_right+0x3e>
 805fc2c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fc2f:	8b 55 0c             	mov    0xc(%ebp),%edx
 805fc32:	89 10                	mov    %edx,(%eax)
 805fc34:	8b 55 10             	mov    0x10(%ebp),%edx
 805fc37:	89 50 04             	mov    %edx,0x4(%eax)
 805fc3a:	8b 55 14             	mov    0x14(%ebp),%edx
 805fc3d:	89 50 08             	mov    %edx,0x8(%eax)
 805fc40:	e9 a1 00 00 00       	jmp    805fce6 <string_trim_right+0xdf>
 805fc45:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 805fc48:	ff 75 20             	pushl  0x20(%ebp)
 805fc4b:	ff 75 1c             	pushl  0x1c(%ebp)
 805fc4e:	ff 75 18             	pushl  0x18(%ebp)
 805fc51:	50                   	push   %eax
 805fc52:	e8 66 16 00 00       	call   80612bd <string_bytes>
 805fc57:	83 c4 0c             	add    $0xc,%esp
 805fc5a:	8b 45 10             	mov    0x10(%ebp),%eax
 805fc5d:	83 e8 01             	sub    $0x1,%eax
 805fc60:	89 45 e0             	mov    %eax,-0x20(%ebp)
 805fc63:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 805fc67:	78 39                	js     805fca2 <string_trim_right+0x9b>
 805fc69:	ff 75 e0             	pushl  -0x20(%ebp)
 805fc6c:	ff 75 14             	pushl  0x14(%ebp)
 805fc6f:	ff 75 10             	pushl  0x10(%ebp)
 805fc72:	ff 75 0c             	pushl  0xc(%ebp)
 805fc75:	e8 c0 0c 00 00       	call   806093a <string_at>
 805fc7a:	83 c4 10             	add    $0x10,%esp
 805fc7d:	0f b6 c0             	movzbl %al,%eax
 805fc80:	83 ec 0c             	sub    $0xc,%esp
 805fc83:	50                   	push   %eax
 805fc84:	ff 75 f0             	pushl  -0x10(%ebp)
 805fc87:	ff 75 ec             	pushl  -0x14(%ebp)
 805fc8a:	ff 75 e8             	pushl  -0x18(%ebp)
 805fc8d:	ff 75 e4             	pushl  -0x1c(%ebp)
 805fc90:	e8 db 96 fe ff       	call   8049370 <array_byte_contains>
 805fc95:	83 c4 20             	add    $0x20,%esp
 805fc98:	85 c0                	test   %eax,%eax
 805fc9a:	74 06                	je     805fca2 <string_trim_right+0x9b>
 805fc9c:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
 805fca0:	eb c1                	jmp    805fc63 <string_trim_right+0x5c>
 805fca2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 805fca6:	79 1f                	jns    805fcc7 <string_trim_right+0xc0>
 805fca8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fcab:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 805fcb1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fcb4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 805fcbb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fcbe:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 805fcc5:	eb 1f                	jmp    805fce6 <string_trim_right+0xdf>
 805fcc7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 805fcca:	8d 50 01             	lea    0x1(%eax),%edx
 805fccd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fcd0:	83 ec 0c             	sub    $0xc,%esp
 805fcd3:	52                   	push   %edx
 805fcd4:	ff 75 14             	pushl  0x14(%ebp)
 805fcd7:	ff 75 10             	pushl  0x10(%ebp)
 805fcda:	ff 75 0c             	pushl  0xc(%ebp)
 805fcdd:	50                   	push   %eax
 805fcde:	e8 a1 ea ff ff       	call   805e784 <string_left>
 805fce3:	83 c4 1c             	add    $0x1c,%esp
 805fce6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805fce9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805fcec:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805fcf3:	74 05                	je     805fcfa <string_trim_right+0xf3>
 805fcf5:	e8 26 8b fe ff       	call   8048820 <__stack_chk_fail@plt>
 805fcfa:	c9                   	leave  
 805fcfb:	c2 04 00             	ret    $0x4

0805fcfe <string_trim_prefix>:
 805fcfe:	55                   	push   %ebp
 805fcff:	89 e5                	mov    %esp,%ebp
 805fd01:	83 ec 28             	sub    $0x28,%esp
 805fd04:	8b 45 08             	mov    0x8(%ebp),%eax
 805fd07:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805fd0a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805fd10:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805fd13:	31 c0                	xor    %eax,%eax
 805fd15:	ff 75 20             	pushl  0x20(%ebp)
 805fd18:	ff 75 1c             	pushl  0x1c(%ebp)
 805fd1b:	ff 75 18             	pushl  0x18(%ebp)
 805fd1e:	ff 75 14             	pushl  0x14(%ebp)
 805fd21:	ff 75 10             	pushl  0x10(%ebp)
 805fd24:	ff 75 0c             	pushl  0xc(%ebp)
 805fd27:	e8 e5 f4 ff ff       	call   805f211 <string_starts_with>
 805fd2c:	83 c4 18             	add    $0x18,%esp
 805fd2f:	85 c0                	test   %eax,%eax
 805fd31:	74 22                	je     805fd55 <string_trim_prefix+0x57>
 805fd33:	8b 4d 10             	mov    0x10(%ebp),%ecx
 805fd36:	8b 55 1c             	mov    0x1c(%ebp),%edx
 805fd39:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805fd3c:	83 ec 08             	sub    $0x8,%esp
 805fd3f:	51                   	push   %ecx
 805fd40:	52                   	push   %edx
 805fd41:	ff 75 14             	pushl  0x14(%ebp)
 805fd44:	ff 75 10             	pushl  0x10(%ebp)
 805fd47:	ff 75 0c             	pushl  0xc(%ebp)
 805fd4a:	50                   	push   %eax
 805fd4b:	e8 71 eb ff ff       	call   805e8c1 <string_substr>
 805fd50:	83 c4 1c             	add    $0x1c,%esp
 805fd53:	eb 14                	jmp    805fd69 <string_trim_prefix+0x6b>
 805fd55:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805fd58:	8b 55 0c             	mov    0xc(%ebp),%edx
 805fd5b:	89 10                	mov    %edx,(%eax)
 805fd5d:	8b 55 10             	mov    0x10(%ebp),%edx
 805fd60:	89 50 04             	mov    %edx,0x4(%eax)
 805fd63:	8b 55 14             	mov    0x14(%ebp),%edx
 805fd66:	89 50 08             	mov    %edx,0x8(%eax)
 805fd69:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805fd6c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805fd6f:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805fd76:	74 05                	je     805fd7d <string_trim_prefix+0x7f>
 805fd78:	e8 a3 8a fe ff       	call   8048820 <__stack_chk_fail@plt>
 805fd7d:	c9                   	leave  
 805fd7e:	c2 04 00             	ret    $0x4

0805fd81 <string_trim_suffix>:
 805fd81:	55                   	push   %ebp
 805fd82:	89 e5                	mov    %esp,%ebp
 805fd84:	83 ec 28             	sub    $0x28,%esp
 805fd87:	8b 45 08             	mov    0x8(%ebp),%eax
 805fd8a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805fd8d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805fd93:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805fd96:	31 c0                	xor    %eax,%eax
 805fd98:	83 ec 08             	sub    $0x8,%esp
 805fd9b:	ff 75 20             	pushl  0x20(%ebp)
 805fd9e:	ff 75 1c             	pushl  0x1c(%ebp)
 805fda1:	ff 75 18             	pushl  0x18(%ebp)
 805fda4:	ff 75 14             	pushl  0x14(%ebp)
 805fda7:	ff 75 10             	pushl  0x10(%ebp)
 805fdaa:	ff 75 0c             	pushl  0xc(%ebp)
 805fdad:	e8 b3 f4 ff ff       	call   805f265 <string_ends_with>
 805fdb2:	83 c4 20             	add    $0x20,%esp
 805fdb5:	85 c0                	test   %eax,%eax
 805fdb7:	74 25                	je     805fdde <string_trim_suffix+0x5d>
 805fdb9:	8b 55 10             	mov    0x10(%ebp),%edx
 805fdbc:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805fdbf:	29 c2                	sub    %eax,%edx
 805fdc1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805fdc4:	83 ec 08             	sub    $0x8,%esp
 805fdc7:	52                   	push   %edx
 805fdc8:	6a 00                	push   $0x0
 805fdca:	ff 75 14             	pushl  0x14(%ebp)
 805fdcd:	ff 75 10             	pushl  0x10(%ebp)
 805fdd0:	ff 75 0c             	pushl  0xc(%ebp)
 805fdd3:	50                   	push   %eax
 805fdd4:	e8 e8 ea ff ff       	call   805e8c1 <string_substr>
 805fdd9:	83 c4 1c             	add    $0x1c,%esp
 805fddc:	eb 14                	jmp    805fdf2 <string_trim_suffix+0x71>
 805fdde:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805fde1:	8b 55 0c             	mov    0xc(%ebp),%edx
 805fde4:	89 10                	mov    %edx,(%eax)
 805fde6:	8b 55 10             	mov    0x10(%ebp),%edx
 805fde9:	89 50 04             	mov    %edx,0x4(%eax)
 805fdec:	8b 55 14             	mov    0x14(%ebp),%edx
 805fdef:	89 50 08             	mov    %edx,0x8(%eax)
 805fdf2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805fdf5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805fdf8:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805fdff:	74 05                	je     805fe06 <string_trim_suffix+0x85>
 805fe01:	e8 1a 8a fe ff       	call   8048820 <__stack_chk_fail@plt>
 805fe06:	c9                   	leave  
 805fe07:	c2 04 00             	ret    $0x4

0805fe0a <compare_strings>:
 805fe0a:	55                   	push   %ebp
 805fe0b:	89 e5                	mov    %esp,%ebp
 805fe0d:	83 ec 08             	sub    $0x8,%esp
 805fe10:	83 ec 08             	sub    $0x8,%esp
 805fe13:	8b 45 0c             	mov    0xc(%ebp),%eax
 805fe16:	ff 70 08             	pushl  0x8(%eax)
 805fe19:	ff 70 04             	pushl  0x4(%eax)
 805fe1c:	ff 30                	pushl  (%eax)
 805fe1e:	8b 45 08             	mov    0x8(%ebp),%eax
 805fe21:	ff 70 08             	pushl  0x8(%eax)
 805fe24:	ff 70 04             	pushl  0x4(%eax)
 805fe27:	ff 30                	pushl  (%eax)
 805fe29:	e8 bd e2 ff ff       	call   805e0eb <string_lt>
 805fe2e:	83 c4 20             	add    $0x20,%esp
 805fe31:	85 c0                	test   %eax,%eax
 805fe33:	74 07                	je     805fe3c <compare_strings+0x32>
 805fe35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805fe3a:	eb 31                	jmp    805fe6d <compare_strings+0x63>
 805fe3c:	83 ec 08             	sub    $0x8,%esp
 805fe3f:	8b 45 0c             	mov    0xc(%ebp),%eax
 805fe42:	ff 70 08             	pushl  0x8(%eax)
 805fe45:	ff 70 04             	pushl  0x4(%eax)
 805fe48:	ff 30                	pushl  (%eax)
 805fe4a:	8b 45 08             	mov    0x8(%ebp),%eax
 805fe4d:	ff 70 08             	pushl  0x8(%eax)
 805fe50:	ff 70 04             	pushl  0x4(%eax)
 805fe53:	ff 30                	pushl  (%eax)
 805fe55:	e8 90 e3 ff ff       	call   805e1ea <string_gt>
 805fe5a:	83 c4 20             	add    $0x20,%esp
 805fe5d:	85 c0                	test   %eax,%eax
 805fe5f:	74 07                	je     805fe68 <compare_strings+0x5e>
 805fe61:	b8 01 00 00 00       	mov    $0x1,%eax
 805fe66:	eb 05                	jmp    805fe6d <compare_strings+0x63>
 805fe68:	b8 00 00 00 00       	mov    $0x0,%eax
 805fe6d:	c9                   	leave  
 805fe6e:	c3                   	ret    

0805fe6f <compare_strings_reverse>:
 805fe6f:	55                   	push   %ebp
 805fe70:	89 e5                	mov    %esp,%ebp
 805fe72:	83 ec 08             	sub    $0x8,%esp
 805fe75:	83 ec 08             	sub    $0x8,%esp
 805fe78:	8b 45 0c             	mov    0xc(%ebp),%eax
 805fe7b:	ff 70 08             	pushl  0x8(%eax)
 805fe7e:	ff 70 04             	pushl  0x4(%eax)
 805fe81:	ff 30                	pushl  (%eax)
 805fe83:	8b 45 08             	mov    0x8(%ebp),%eax
 805fe86:	ff 70 08             	pushl  0x8(%eax)
 805fe89:	ff 70 04             	pushl  0x4(%eax)
 805fe8c:	ff 30                	pushl  (%eax)
 805fe8e:	e8 58 e2 ff ff       	call   805e0eb <string_lt>
 805fe93:	83 c4 20             	add    $0x20,%esp
 805fe96:	85 c0                	test   %eax,%eax
 805fe98:	74 07                	je     805fea1 <compare_strings_reverse+0x32>
 805fe9a:	b8 01 00 00 00       	mov    $0x1,%eax
 805fe9f:	eb 31                	jmp    805fed2 <compare_strings_reverse+0x63>
 805fea1:	83 ec 08             	sub    $0x8,%esp
 805fea4:	8b 45 0c             	mov    0xc(%ebp),%eax
 805fea7:	ff 70 08             	pushl  0x8(%eax)
 805feaa:	ff 70 04             	pushl  0x4(%eax)
 805fead:	ff 30                	pushl  (%eax)
 805feaf:	8b 45 08             	mov    0x8(%ebp),%eax
 805feb2:	ff 70 08             	pushl  0x8(%eax)
 805feb5:	ff 70 04             	pushl  0x4(%eax)
 805feb8:	ff 30                	pushl  (%eax)
 805feba:	e8 2b e3 ff ff       	call   805e1ea <string_gt>
 805febf:	83 c4 20             	add    $0x20,%esp
 805fec2:	85 c0                	test   %eax,%eax
 805fec4:	74 07                	je     805fecd <compare_strings_reverse+0x5e>
 805fec6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805fecb:	eb 05                	jmp    805fed2 <compare_strings_reverse+0x63>
 805fecd:	b8 00 00 00 00       	mov    $0x0,%eax
 805fed2:	c9                   	leave  
 805fed3:	c3                   	ret    

0805fed4 <compare_strings_by_len>:
 805fed4:	55                   	push   %ebp
 805fed5:	89 e5                	mov    %esp,%ebp
 805fed7:	8b 45 08             	mov    0x8(%ebp),%eax
 805feda:	8b 50 04             	mov    0x4(%eax),%edx
 805fedd:	8b 45 0c             	mov    0xc(%ebp),%eax
 805fee0:	8b 40 04             	mov    0x4(%eax),%eax
 805fee3:	39 c2                	cmp    %eax,%edx
 805fee5:	7d 07                	jge    805feee <compare_strings_by_len+0x1a>
 805fee7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805feec:	eb 1c                	jmp    805ff0a <compare_strings_by_len+0x36>
 805feee:	8b 45 08             	mov    0x8(%ebp),%eax
 805fef1:	8b 50 04             	mov    0x4(%eax),%edx
 805fef4:	8b 45 0c             	mov    0xc(%ebp),%eax
 805fef7:	8b 40 04             	mov    0x4(%eax),%eax
 805fefa:	39 c2                	cmp    %eax,%edx
 805fefc:	7e 07                	jle    805ff05 <compare_strings_by_len+0x31>
 805fefe:	b8 01 00 00 00       	mov    $0x1,%eax
 805ff03:	eb 05                	jmp    805ff0a <compare_strings_by_len+0x36>
 805ff05:	b8 00 00 00 00       	mov    $0x0,%eax
 805ff0a:	5d                   	pop    %ebp
 805ff0b:	c3                   	ret    

0805ff0c <compare_lower_strings>:
 805ff0c:	55                   	push   %ebp
 805ff0d:	89 e5                	mov    %esp,%ebp
 805ff0f:	83 ec 38             	sub    $0x38,%esp
 805ff12:	8b 45 08             	mov    0x8(%ebp),%eax
 805ff15:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805ff18:	8b 45 0c             	mov    0xc(%ebp),%eax
 805ff1b:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805ff1e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805ff24:	89 45 f4             	mov    %eax,-0xc(%ebp)
 805ff27:	31 c0                	xor    %eax,%eax
 805ff29:	8d 55 dc             	lea    -0x24(%ebp),%edx
 805ff2c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805ff2f:	ff 70 08             	pushl  0x8(%eax)
 805ff32:	ff 70 04             	pushl  0x4(%eax)
 805ff35:	ff 30                	pushl  (%eax)
 805ff37:	52                   	push   %edx
 805ff38:	e8 9f f3 ff ff       	call   805f2dc <string_to_lower>
 805ff3d:	83 c4 0c             	add    $0xc,%esp
 805ff40:	8d 55 e8             	lea    -0x18(%ebp),%edx
 805ff43:	8b 45 d0             	mov    -0x30(%ebp),%eax
 805ff46:	ff 70 08             	pushl  0x8(%eax)
 805ff49:	ff 70 04             	pushl  0x4(%eax)
 805ff4c:	ff 30                	pushl  (%eax)
 805ff4e:	52                   	push   %edx
 805ff4f:	e8 88 f3 ff ff       	call   805f2dc <string_to_lower>
 805ff54:	83 c4 0c             	add    $0xc,%esp
 805ff57:	83 ec 08             	sub    $0x8,%esp
 805ff5a:	8d 45 e8             	lea    -0x18(%ebp),%eax
 805ff5d:	50                   	push   %eax
 805ff5e:	8d 45 dc             	lea    -0x24(%ebp),%eax
 805ff61:	50                   	push   %eax
 805ff62:	e8 a3 fe ff ff       	call   805fe0a <compare_strings>
 805ff67:	83 c4 10             	add    $0x10,%esp
 805ff6a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 805ff6d:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 805ff74:	74 05                	je     805ff7b <compare_lower_strings+0x6f>
 805ff76:	e8 a5 88 fe ff       	call   8048820 <__stack_chk_fail@plt>
 805ff7b:	c9                   	leave  
 805ff7c:	c3                   	ret    

0805ff7d <array_string_sort>:
 805ff7d:	55                   	push   %ebp
 805ff7e:	89 e5                	mov    %esp,%ebp
 805ff80:	83 ec 08             	sub    $0x8,%esp
 805ff83:	83 ec 08             	sub    $0x8,%esp
 805ff86:	68 0a fe 05 08       	push   $0x805fe0a
 805ff8b:	ff 75 08             	pushl  0x8(%ebp)
 805ff8e:	e8 5c 5f ff ff       	call   8055eef <array_sort_with_compare>
 805ff93:	83 c4 10             	add    $0x10,%esp
 805ff96:	90                   	nop
 805ff97:	c9                   	leave  
 805ff98:	c3                   	ret    

0805ff99 <array_string_sort_ignore_case>:
 805ff99:	55                   	push   %ebp
 805ff9a:	89 e5                	mov    %esp,%ebp
 805ff9c:	83 ec 08             	sub    $0x8,%esp
 805ff9f:	83 ec 08             	sub    $0x8,%esp
 805ffa2:	68 0c ff 05 08       	push   $0x805ff0c
 805ffa7:	ff 75 08             	pushl  0x8(%ebp)
 805ffaa:	e8 40 5f ff ff       	call   8055eef <array_sort_with_compare>
 805ffaf:	83 c4 10             	add    $0x10,%esp
 805ffb2:	90                   	nop
 805ffb3:	c9                   	leave  
 805ffb4:	c3                   	ret    

0805ffb5 <array_string_sort_by_len>:
 805ffb5:	55                   	push   %ebp
 805ffb6:	89 e5                	mov    %esp,%ebp
 805ffb8:	83 ec 08             	sub    $0x8,%esp
 805ffbb:	83 ec 08             	sub    $0x8,%esp
 805ffbe:	68 d4 fe 05 08       	push   $0x805fed4
 805ffc3:	ff 75 08             	pushl  0x8(%ebp)
 805ffc6:	e8 24 5f ff ff       	call   8055eef <array_sort_with_compare>
 805ffcb:	83 c4 10             	add    $0x10,%esp
 805ffce:	90                   	nop
 805ffcf:	c9                   	leave  
 805ffd0:	c3                   	ret    

0805ffd1 <string_str>:
 805ffd1:	55                   	push   %ebp
 805ffd2:	89 e5                	mov    %esp,%ebp
 805ffd4:	8b 45 08             	mov    0x8(%ebp),%eax
 805ffd7:	8b 55 0c             	mov    0xc(%ebp),%edx
 805ffda:	89 10                	mov    %edx,(%eax)
 805ffdc:	8b 55 10             	mov    0x10(%ebp),%edx
 805ffdf:	89 50 04             	mov    %edx,0x4(%eax)
 805ffe2:	8b 55 14             	mov    0x14(%ebp),%edx
 805ffe5:	89 50 08             	mov    %edx,0x8(%eax)
 805ffe8:	8b 45 08             	mov    0x8(%ebp),%eax
 805ffeb:	5d                   	pop    %ebp
 805ffec:	c2 04 00             	ret    $0x4

0805ffef <ustring_str>:
 805ffef:	55                   	push   %ebp
 805fff0:	89 e5                	mov    %esp,%ebp
 805fff2:	8b 45 08             	mov    0x8(%ebp),%eax
 805fff5:	8b 55 0c             	mov    0xc(%ebp),%edx
 805fff8:	89 10                	mov    %edx,(%eax)
 805fffa:	8b 55 10             	mov    0x10(%ebp),%edx
 805fffd:	89 50 04             	mov    %edx,0x4(%eax)
 8060000:	8b 55 14             	mov    0x14(%ebp),%edx
 8060003:	89 50 08             	mov    %edx,0x8(%eax)
 8060006:	8b 45 08             	mov    0x8(%ebp),%eax
 8060009:	5d                   	pop    %ebp
 806000a:	c2 04 00             	ret    $0x4

0806000d <string_ustring>:
 806000d:	55                   	push   %ebp
 806000e:	89 e5                	mov    %esp,%ebp
 8060010:	83 ec 48             	sub    $0x48,%esp
 8060013:	8b 45 08             	mov    0x8(%ebp),%eax
 8060016:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8060019:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 806001f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060022:	31 c0                	xor    %eax,%eax
 8060024:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060027:	89 45 d0             	mov    %eax,-0x30(%ebp)
 806002a:	8b 45 10             	mov    0x10(%ebp),%eax
 806002d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8060030:	8b 45 14             	mov    0x14(%ebp),%eax
 8060033:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8060036:	8b 55 10             	mov    0x10(%ebp),%edx
 8060039:	8d 45 dc             	lea    -0x24(%ebp),%eax
 806003c:	6a 04                	push   $0x4
 806003e:	52                   	push   %edx
 806003f:	6a 00                	push   $0x0
 8060041:	50                   	push   %eax
 8060042:	e8 c6 59 ff ff       	call   8055a0d <__new_array>
 8060047:	83 c4 0c             	add    $0xc,%esp
 806004a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8060051:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 8060058:	eb 4f                	jmp    80600a9 <string_ustring+0x9c>
 806005a:	8b 55 0c             	mov    0xc(%ebp),%edx
 806005d:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8060060:	01 d0                	add    %edx,%eax
 8060062:	0f b6 00             	movzbl (%eax),%eax
 8060065:	0f b6 c0             	movzbl %al,%eax
 8060068:	83 ec 0c             	sub    $0xc,%esp
 806006b:	50                   	push   %eax
 806006c:	e8 d4 19 00 00       	call   8061a45 <utf8_char_len>
 8060071:	83 c4 10             	add    $0x10,%esp
 8060074:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8060077:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806007a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 806007d:	83 ec 08             	sub    $0x8,%esp
 8060080:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8060083:	50                   	push   %eax
 8060084:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8060087:	83 c0 0c             	add    $0xc,%eax
 806008a:	50                   	push   %eax
 806008b:	e8 2a 69 ff ff       	call   80569ba <array_push>
 8060090:	83 c4 10             	add    $0x10,%esp
 8060093:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8060096:	83 e8 01             	sub    $0x1,%eax
 8060099:	01 45 c8             	add    %eax,-0x38(%ebp)
 806009c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806009f:	83 c0 01             	add    $0x1,%eax
 80600a2:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80600a5:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 80600a9:	8b 45 10             	mov    0x10(%ebp),%eax
 80600ac:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 80600af:	7f a9                	jg     806005a <string_ustring+0x4d>
 80600b1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80600b4:	8b 55 d0             	mov    -0x30(%ebp),%edx
 80600b7:	89 10                	mov    %edx,(%eax)
 80600b9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 80600bc:	89 50 04             	mov    %edx,0x4(%eax)
 80600bf:	8b 55 d8             	mov    -0x28(%ebp),%edx
 80600c2:	89 50 08             	mov    %edx,0x8(%eax)
 80600c5:	8b 55 dc             	mov    -0x24(%ebp),%edx
 80600c8:	89 50 0c             	mov    %edx,0xc(%eax)
 80600cb:	8b 55 e0             	mov    -0x20(%ebp),%edx
 80600ce:	89 50 10             	mov    %edx,0x10(%eax)
 80600d1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80600d4:	89 50 14             	mov    %edx,0x14(%eax)
 80600d7:	8b 55 e8             	mov    -0x18(%ebp),%edx
 80600da:	89 50 18             	mov    %edx,0x18(%eax)
 80600dd:	8b 55 ec             	mov    -0x14(%ebp),%edx
 80600e0:	89 50 1c             	mov    %edx,0x1c(%eax)
 80600e3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80600e6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80600e9:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80600f0:	74 05                	je     80600f7 <string_ustring+0xea>
 80600f2:	e8 29 87 fe ff       	call   8048820 <__stack_chk_fail@plt>
 80600f7:	c9                   	leave  
 80600f8:	c2 04 00             	ret    $0x4

080600fb <string_ustring_tmp>:
 80600fb:	55                   	push   %ebp
 80600fc:	89 e5                	mov    %esp,%ebp
 80600fe:	83 ec 58             	sub    $0x58,%esp
 8060101:	8b 45 08             	mov    0x8(%ebp),%eax
 8060104:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8060107:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 806010d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060110:	31 c0                	xor    %eax,%eax
 8060112:	a1 04 32 07 08       	mov    0x8073204,%eax
 8060117:	85 c0                	test   %eax,%eax
 8060119:	75 35                	jne    8060150 <string_ustring_tmp+0x55>
 806011b:	8d 45 a8             	lea    -0x58(%ebp),%eax
 806011e:	6a 04                	push   $0x4
 8060120:	68 80 00 00 00       	push   $0x80
 8060125:	6a 00                	push   $0x0
 8060127:	50                   	push   %eax
 8060128:	e8 e0 58 ff ff       	call   8055a0d <__new_array>
 806012d:	83 c4 0c             	add    $0xc,%esp
 8060130:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8060133:	a3 fc 31 07 08       	mov    %eax,0x80731fc
 8060138:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806013b:	a3 00 32 07 08       	mov    %eax,0x8073200
 8060140:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8060143:	a3 04 32 07 08       	mov    %eax,0x8073204
 8060148:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806014b:	a3 08 32 07 08       	mov    %eax,0x8073208
 8060150:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060153:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8060156:	8b 45 10             	mov    0x10(%ebp),%eax
 8060159:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806015c:	8b 45 14             	mov    0x14(%ebp),%eax
 806015f:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8060162:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8060165:	6a 04                	push   $0x4
 8060167:	6a 01                	push   $0x1
 8060169:	6a 00                	push   $0x0
 806016b:	50                   	push   %eax
 806016c:	e8 9c 58 ff ff       	call   8055a0d <__new_array>
 8060171:	83 c4 0c             	add    $0xc,%esp
 8060174:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 806017b:	a1 fc 31 07 08       	mov    0x80731fc,%eax
 8060180:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8060183:	a1 00 32 07 08       	mov    0x8073200,%eax
 8060188:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806018b:	a1 04 32 07 08       	mov    0x8073204,%eax
 8060190:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8060193:	a1 08 32 07 08       	mov    0x8073208,%eax
 8060198:	89 45 ec             	mov    %eax,-0x14(%ebp)
 806019b:	8b 45 10             	mov    0x10(%ebp),%eax
 806019e:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80601a1:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 80601a8:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 80601af:	eb 58                	jmp    8060209 <string_ustring_tmp+0x10e>
 80601b1:	8b 55 0c             	mov    0xc(%ebp),%edx
 80601b4:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80601b7:	01 d0                	add    %edx,%eax
 80601b9:	0f b6 00             	movzbl (%eax),%eax
 80601bc:	0f b6 c0             	movzbl %al,%eax
 80601bf:	83 ec 0c             	sub    $0xc,%esp
 80601c2:	50                   	push   %eax
 80601c3:	e8 7d 18 00 00       	call   8061a45 <utf8_char_len>
 80601c8:	83 c4 10             	add    $0x10,%esp
 80601cb:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80601ce:	83 ec 0c             	sub    $0xc,%esp
 80601d1:	ff 75 c8             	pushl  -0x38(%ebp)
 80601d4:	ff 75 ec             	pushl  -0x14(%ebp)
 80601d7:	ff 75 e8             	pushl  -0x18(%ebp)
 80601da:	ff 75 e4             	pushl  -0x1c(%ebp)
 80601dd:	ff 75 e0             	pushl  -0x20(%ebp)
 80601e0:	e8 d5 60 ff ff       	call   80562ba <array_get>
 80601e5:	83 c4 20             	add    $0x20,%esp
 80601e8:	89 c2                	mov    %eax,%edx
 80601ea:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80601ed:	89 02                	mov    %eax,(%edx)
 80601ef:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 80601f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80601f6:	83 e8 01             	sub    $0x1,%eax
 80601f9:	01 45 cc             	add    %eax,-0x34(%ebp)
 80601fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80601ff:	83 c0 01             	add    $0x1,%eax
 8060202:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060205:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 8060209:	8b 45 10             	mov    0x10(%ebp),%eax
 806020c:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 806020f:	7f a0                	jg     80601b1 <string_ustring_tmp+0xb6>
 8060211:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8060214:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8060217:	89 10                	mov    %edx,(%eax)
 8060219:	8b 55 d8             	mov    -0x28(%ebp),%edx
 806021c:	89 50 04             	mov    %edx,0x4(%eax)
 806021f:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8060222:	89 50 08             	mov    %edx,0x8(%eax)
 8060225:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8060228:	89 50 0c             	mov    %edx,0xc(%eax)
 806022b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 806022e:	89 50 10             	mov    %edx,0x10(%eax)
 8060231:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8060234:	89 50 14             	mov    %edx,0x14(%eax)
 8060237:	8b 55 ec             	mov    -0x14(%ebp),%edx
 806023a:	89 50 18             	mov    %edx,0x18(%eax)
 806023d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8060240:	89 50 1c             	mov    %edx,0x1c(%eax)
 8060243:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8060246:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060249:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060250:	74 05                	je     8060257 <string_ustring_tmp+0x15c>
 8060252:	e8 c9 85 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060257:	c9                   	leave  
 8060258:	c2 04 00             	ret    $0x4

0806025b <ustring_eq>:
 806025b:	55                   	push   %ebp
 806025c:	89 e5                	mov    %esp,%ebp
 806025e:	83 ec 08             	sub    $0x8,%esp
 8060261:	8b 55 24             	mov    0x24(%ebp),%edx
 8060264:	8b 45 44             	mov    0x44(%ebp),%eax
 8060267:	39 c2                	cmp    %eax,%edx
 8060269:	75 21                	jne    806028c <ustring_eq+0x31>
 806026b:	83 ec 08             	sub    $0x8,%esp
 806026e:	ff 75 30             	pushl  0x30(%ebp)
 8060271:	ff 75 2c             	pushl  0x2c(%ebp)
 8060274:	ff 75 28             	pushl  0x28(%ebp)
 8060277:	ff 75 10             	pushl  0x10(%ebp)
 806027a:	ff 75 0c             	pushl  0xc(%ebp)
 806027d:	ff 75 08             	pushl  0x8(%ebp)
 8060280:	e8 39 de ff ff       	call   805e0be <string_ne>
 8060285:	83 c4 20             	add    $0x20,%esp
 8060288:	85 c0                	test   %eax,%eax
 806028a:	74 07                	je     8060293 <ustring_eq+0x38>
 806028c:	b8 00 00 00 00       	mov    $0x0,%eax
 8060291:	eb 05                	jmp    8060298 <ustring_eq+0x3d>
 8060293:	b8 01 00 00 00       	mov    $0x1,%eax
 8060298:	c9                   	leave  
 8060299:	c3                   	ret    

0806029a <ustring_ne>:
 806029a:	55                   	push   %ebp
 806029b:	89 e5                	mov    %esp,%ebp
 806029d:	83 ec 08             	sub    $0x8,%esp
 80602a0:	ff 75 44             	pushl  0x44(%ebp)
 80602a3:	ff 75 40             	pushl  0x40(%ebp)
 80602a6:	ff 75 3c             	pushl  0x3c(%ebp)
 80602a9:	ff 75 38             	pushl  0x38(%ebp)
 80602ac:	ff 75 34             	pushl  0x34(%ebp)
 80602af:	ff 75 30             	pushl  0x30(%ebp)
 80602b2:	ff 75 2c             	pushl  0x2c(%ebp)
 80602b5:	ff 75 28             	pushl  0x28(%ebp)
 80602b8:	ff 75 24             	pushl  0x24(%ebp)
 80602bb:	ff 75 20             	pushl  0x20(%ebp)
 80602be:	ff 75 1c             	pushl  0x1c(%ebp)
 80602c1:	ff 75 18             	pushl  0x18(%ebp)
 80602c4:	ff 75 14             	pushl  0x14(%ebp)
 80602c7:	ff 75 10             	pushl  0x10(%ebp)
 80602ca:	ff 75 0c             	pushl  0xc(%ebp)
 80602cd:	ff 75 08             	pushl  0x8(%ebp)
 80602d0:	e8 86 ff ff ff       	call   806025b <ustring_eq>
 80602d5:	83 c4 40             	add    $0x40,%esp
 80602d8:	85 c0                	test   %eax,%eax
 80602da:	0f 94 c0             	sete   %al
 80602dd:	0f b6 c0             	movzbl %al,%eax
 80602e0:	c9                   	leave  
 80602e1:	c3                   	ret    

080602e2 <ustring_lt>:
 80602e2:	55                   	push   %ebp
 80602e3:	89 e5                	mov    %esp,%ebp
 80602e5:	83 ec 08             	sub    $0x8,%esp
 80602e8:	83 ec 08             	sub    $0x8,%esp
 80602eb:	ff 75 30             	pushl  0x30(%ebp)
 80602ee:	ff 75 2c             	pushl  0x2c(%ebp)
 80602f1:	ff 75 28             	pushl  0x28(%ebp)
 80602f4:	ff 75 10             	pushl  0x10(%ebp)
 80602f7:	ff 75 0c             	pushl  0xc(%ebp)
 80602fa:	ff 75 08             	pushl  0x8(%ebp)
 80602fd:	e8 e9 dd ff ff       	call   805e0eb <string_lt>
 8060302:	83 c4 20             	add    $0x20,%esp
 8060305:	c9                   	leave  
 8060306:	c3                   	ret    

08060307 <ustring_le>:
 8060307:	55                   	push   %ebp
 8060308:	89 e5                	mov    %esp,%ebp
 806030a:	83 ec 08             	sub    $0x8,%esp
 806030d:	ff 75 44             	pushl  0x44(%ebp)
 8060310:	ff 75 40             	pushl  0x40(%ebp)
 8060313:	ff 75 3c             	pushl  0x3c(%ebp)
 8060316:	ff 75 38             	pushl  0x38(%ebp)
 8060319:	ff 75 34             	pushl  0x34(%ebp)
 806031c:	ff 75 30             	pushl  0x30(%ebp)
 806031f:	ff 75 2c             	pushl  0x2c(%ebp)
 8060322:	ff 75 28             	pushl  0x28(%ebp)
 8060325:	ff 75 24             	pushl  0x24(%ebp)
 8060328:	ff 75 20             	pushl  0x20(%ebp)
 806032b:	ff 75 1c             	pushl  0x1c(%ebp)
 806032e:	ff 75 18             	pushl  0x18(%ebp)
 8060331:	ff 75 14             	pushl  0x14(%ebp)
 8060334:	ff 75 10             	pushl  0x10(%ebp)
 8060337:	ff 75 0c             	pushl  0xc(%ebp)
 806033a:	ff 75 08             	pushl  0x8(%ebp)
 806033d:	e8 a0 ff ff ff       	call   80602e2 <ustring_lt>
 8060342:	83 c4 40             	add    $0x40,%esp
 8060345:	85 c0                	test   %eax,%eax
 8060347:	75 3c                	jne    8060385 <ustring_le+0x7e>
 8060349:	ff 75 44             	pushl  0x44(%ebp)
 806034c:	ff 75 40             	pushl  0x40(%ebp)
 806034f:	ff 75 3c             	pushl  0x3c(%ebp)
 8060352:	ff 75 38             	pushl  0x38(%ebp)
 8060355:	ff 75 34             	pushl  0x34(%ebp)
 8060358:	ff 75 30             	pushl  0x30(%ebp)
 806035b:	ff 75 2c             	pushl  0x2c(%ebp)
 806035e:	ff 75 28             	pushl  0x28(%ebp)
 8060361:	ff 75 24             	pushl  0x24(%ebp)
 8060364:	ff 75 20             	pushl  0x20(%ebp)
 8060367:	ff 75 1c             	pushl  0x1c(%ebp)
 806036a:	ff 75 18             	pushl  0x18(%ebp)
 806036d:	ff 75 14             	pushl  0x14(%ebp)
 8060370:	ff 75 10             	pushl  0x10(%ebp)
 8060373:	ff 75 0c             	pushl  0xc(%ebp)
 8060376:	ff 75 08             	pushl  0x8(%ebp)
 8060379:	e8 dd fe ff ff       	call   806025b <ustring_eq>
 806037e:	83 c4 40             	add    $0x40,%esp
 8060381:	85 c0                	test   %eax,%eax
 8060383:	74 07                	je     806038c <ustring_le+0x85>
 8060385:	b8 01 00 00 00       	mov    $0x1,%eax
 806038a:	eb 05                	jmp    8060391 <ustring_le+0x8a>
 806038c:	b8 00 00 00 00       	mov    $0x0,%eax
 8060391:	c9                   	leave  
 8060392:	c3                   	ret    

08060393 <ustring_gt>:
 8060393:	55                   	push   %ebp
 8060394:	89 e5                	mov    %esp,%ebp
 8060396:	83 ec 08             	sub    $0x8,%esp
 8060399:	ff 75 44             	pushl  0x44(%ebp)
 806039c:	ff 75 40             	pushl  0x40(%ebp)
 806039f:	ff 75 3c             	pushl  0x3c(%ebp)
 80603a2:	ff 75 38             	pushl  0x38(%ebp)
 80603a5:	ff 75 34             	pushl  0x34(%ebp)
 80603a8:	ff 75 30             	pushl  0x30(%ebp)
 80603ab:	ff 75 2c             	pushl  0x2c(%ebp)
 80603ae:	ff 75 28             	pushl  0x28(%ebp)
 80603b1:	ff 75 24             	pushl  0x24(%ebp)
 80603b4:	ff 75 20             	pushl  0x20(%ebp)
 80603b7:	ff 75 1c             	pushl  0x1c(%ebp)
 80603ba:	ff 75 18             	pushl  0x18(%ebp)
 80603bd:	ff 75 14             	pushl  0x14(%ebp)
 80603c0:	ff 75 10             	pushl  0x10(%ebp)
 80603c3:	ff 75 0c             	pushl  0xc(%ebp)
 80603c6:	ff 75 08             	pushl  0x8(%ebp)
 80603c9:	e8 39 ff ff ff       	call   8060307 <ustring_le>
 80603ce:	83 c4 40             	add    $0x40,%esp
 80603d1:	85 c0                	test   %eax,%eax
 80603d3:	0f 94 c0             	sete   %al
 80603d6:	0f b6 c0             	movzbl %al,%eax
 80603d9:	c9                   	leave  
 80603da:	c3                   	ret    

080603db <ustring_ge>:
 80603db:	55                   	push   %ebp
 80603dc:	89 e5                	mov    %esp,%ebp
 80603de:	83 ec 08             	sub    $0x8,%esp
 80603e1:	ff 75 44             	pushl  0x44(%ebp)
 80603e4:	ff 75 40             	pushl  0x40(%ebp)
 80603e7:	ff 75 3c             	pushl  0x3c(%ebp)
 80603ea:	ff 75 38             	pushl  0x38(%ebp)
 80603ed:	ff 75 34             	pushl  0x34(%ebp)
 80603f0:	ff 75 30             	pushl  0x30(%ebp)
 80603f3:	ff 75 2c             	pushl  0x2c(%ebp)
 80603f6:	ff 75 28             	pushl  0x28(%ebp)
 80603f9:	ff 75 24             	pushl  0x24(%ebp)
 80603fc:	ff 75 20             	pushl  0x20(%ebp)
 80603ff:	ff 75 1c             	pushl  0x1c(%ebp)
 8060402:	ff 75 18             	pushl  0x18(%ebp)
 8060405:	ff 75 14             	pushl  0x14(%ebp)
 8060408:	ff 75 10             	pushl  0x10(%ebp)
 806040b:	ff 75 0c             	pushl  0xc(%ebp)
 806040e:	ff 75 08             	pushl  0x8(%ebp)
 8060411:	e8 cc fe ff ff       	call   80602e2 <ustring_lt>
 8060416:	83 c4 40             	add    $0x40,%esp
 8060419:	85 c0                	test   %eax,%eax
 806041b:	0f 94 c0             	sete   %al
 806041e:	0f b6 c0             	movzbl %al,%eax
 8060421:	c9                   	leave  
 8060422:	c3                   	ret    

08060423 <ustring_add>:
 8060423:	55                   	push   %ebp
 8060424:	89 e5                	mov    %esp,%ebp
 8060426:	83 ec 58             	sub    $0x58,%esp
 8060429:	8b 45 08             	mov    0x8(%ebp),%eax
 806042c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 806042f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060435:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060438:	31 c0                	xor    %eax,%eax
 806043a:	8d 45 cc             	lea    -0x34(%ebp),%eax
 806043d:	83 ec 04             	sub    $0x4,%esp
 8060440:	ff 75 34             	pushl  0x34(%ebp)
 8060443:	ff 75 30             	pushl  0x30(%ebp)
 8060446:	ff 75 2c             	pushl  0x2c(%ebp)
 8060449:	ff 75 14             	pushl  0x14(%ebp)
 806044c:	ff 75 10             	pushl  0x10(%ebp)
 806044f:	ff 75 0c             	pushl  0xc(%ebp)
 8060452:	50                   	push   %eax
 8060453:	e8 ec dd ff ff       	call   805e244 <string_add>
 8060458:	83 c4 1c             	add    $0x1c,%esp
 806045b:	8b 55 10             	mov    0x10(%ebp),%edx
 806045e:	8b 45 30             	mov    0x30(%ebp),%eax
 8060461:	01 c2                	add    %eax,%edx
 8060463:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8060466:	6a 04                	push   $0x4
 8060468:	52                   	push   %edx
 8060469:	6a 00                	push   $0x0
 806046b:	50                   	push   %eax
 806046c:	e8 9c 55 ff ff       	call   8055a0d <__new_array>
 8060471:	83 c4 0c             	add    $0xc,%esp
 8060474:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 806047b:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 8060482:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 8060489:	eb 55                	jmp    80604e0 <ustring_add+0xbd>
 806048b:	8b 55 0c             	mov    0xc(%ebp),%edx
 806048e:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8060491:	01 d0                	add    %edx,%eax
 8060493:	0f b6 00             	movzbl (%eax),%eax
 8060496:	0f b6 c0             	movzbl %al,%eax
 8060499:	83 ec 0c             	sub    $0xc,%esp
 806049c:	50                   	push   %eax
 806049d:	e8 a3 15 00 00       	call   8061a45 <utf8_char_len>
 80604a2:	83 c4 10             	add    $0x10,%esp
 80604a5:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 80604a8:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80604ab:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80604ae:	83 ec 08             	sub    $0x8,%esp
 80604b1:	8d 45 ec             	lea    -0x14(%ebp),%eax
 80604b4:	50                   	push   %eax
 80604b5:	8d 45 cc             	lea    -0x34(%ebp),%eax
 80604b8:	83 c0 0c             	add    $0xc,%eax
 80604bb:	50                   	push   %eax
 80604bc:	e8 f9 64 ff ff       	call   80569ba <array_push>
 80604c1:	83 c4 10             	add    $0x10,%esp
 80604c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80604c7:	83 e8 01             	sub    $0x1,%eax
 80604ca:	01 45 bc             	add    %eax,-0x44(%ebp)
 80604cd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80604d0:	01 45 b8             	add    %eax,-0x48(%ebp)
 80604d3:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80604d6:	83 c0 01             	add    $0x1,%eax
 80604d9:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80604dc:	83 45 bc 01          	addl   $0x1,-0x44(%ebp)
 80604e0:	8b 45 10             	mov    0x10(%ebp),%eax
 80604e3:	3b 45 bc             	cmp    -0x44(%ebp),%eax
 80604e6:	7f a3                	jg     806048b <ustring_add+0x68>
 80604e8:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 80604ef:	eb 55                	jmp    8060546 <ustring_add+0x123>
 80604f1:	8b 55 2c             	mov    0x2c(%ebp),%edx
 80604f4:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80604f7:	01 d0                	add    %edx,%eax
 80604f9:	0f b6 00             	movzbl (%eax),%eax
 80604fc:	0f b6 c0             	movzbl %al,%eax
 80604ff:	83 ec 0c             	sub    $0xc,%esp
 8060502:	50                   	push   %eax
 8060503:	e8 3d 15 00 00       	call   8061a45 <utf8_char_len>
 8060508:	83 c4 10             	add    $0x10,%esp
 806050b:	89 45 c8             	mov    %eax,-0x38(%ebp)
 806050e:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8060511:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060514:	83 ec 08             	sub    $0x8,%esp
 8060517:	8d 45 f0             	lea    -0x10(%ebp),%eax
 806051a:	50                   	push   %eax
 806051b:	8d 45 cc             	lea    -0x34(%ebp),%eax
 806051e:	83 c0 0c             	add    $0xc,%eax
 8060521:	50                   	push   %eax
 8060522:	e8 93 64 ff ff       	call   80569ba <array_push>
 8060527:	83 c4 10             	add    $0x10,%esp
 806052a:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806052d:	83 e8 01             	sub    $0x1,%eax
 8060530:	01 45 c0             	add    %eax,-0x40(%ebp)
 8060533:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8060536:	01 45 b8             	add    %eax,-0x48(%ebp)
 8060539:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806053c:	83 c0 01             	add    $0x1,%eax
 806053f:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8060542:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 8060546:	8b 45 30             	mov    0x30(%ebp),%eax
 8060549:	3b 45 c0             	cmp    -0x40(%ebp),%eax
 806054c:	7f a3                	jg     80604f1 <ustring_add+0xce>
 806054e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8060551:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8060554:	89 10                	mov    %edx,(%eax)
 8060556:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8060559:	89 50 04             	mov    %edx,0x4(%eax)
 806055c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 806055f:	89 50 08             	mov    %edx,0x8(%eax)
 8060562:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8060565:	89 50 0c             	mov    %edx,0xc(%eax)
 8060568:	8b 55 dc             	mov    -0x24(%ebp),%edx
 806056b:	89 50 10             	mov    %edx,0x10(%eax)
 806056e:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8060571:	89 50 14             	mov    %edx,0x14(%eax)
 8060574:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8060577:	89 50 18             	mov    %edx,0x18(%eax)
 806057a:	8b 55 e8             	mov    -0x18(%ebp),%edx
 806057d:	89 50 1c             	mov    %edx,0x1c(%eax)
 8060580:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8060583:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060586:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 806058d:	74 05                	je     8060594 <ustring_add+0x171>
 806058f:	e8 8c 82 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060594:	c9                   	leave  
 8060595:	c2 04 00             	ret    $0x4

08060598 <ustring_index_after>:
 8060598:	55                   	push   %ebp
 8060599:	89 e5                	mov    %esp,%ebp
 806059b:	83 ec 38             	sub    $0x38,%esp
 806059e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80605a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80605a7:	31 c0                	xor    %eax,%eax
 80605a9:	8b 55 44             	mov    0x44(%ebp),%edx
 80605ac:	8b 45 24             	mov    0x24(%ebp),%eax
 80605af:	39 c2                	cmp    %eax,%edx
 80605b1:	7e 0a                	jle    80605bd <ustring_index_after+0x25>
 80605b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80605b8:	e9 ee 00 00 00       	jmp    80606ab <ustring_index_after+0x113>
 80605bd:	8b 45 48             	mov    0x48(%ebp),%eax
 80605c0:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80605c3:	83 7d 48 00          	cmpl   $0x0,0x48(%ebp)
 80605c7:	79 07                	jns    80605d0 <ustring_index_after+0x38>
 80605c9:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 80605d0:	8b 45 24             	mov    0x24(%ebp),%eax
 80605d3:	3b 45 48             	cmp    0x48(%ebp),%eax
 80605d6:	7d 0a                	jge    80605e2 <ustring_index_after+0x4a>
 80605d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80605dd:	e9 c9 00 00 00       	jmp    80606ab <ustring_index_after+0x113>
 80605e2:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80605e5:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80605e8:	8b 45 24             	mov    0x24(%ebp),%eax
 80605eb:	3b 45 d0             	cmp    -0x30(%ebp),%eax
 80605ee:	0f 8e b1 00 00 00    	jle    80606a5 <ustring_index_after+0x10d>
 80605f4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 80605fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80605fe:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8060601:	8b 45 44             	mov    0x44(%ebp),%eax
 8060604:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 8060607:	0f 8e 82 00 00 00    	jle    806068f <ustring_index_after+0xf7>
 806060d:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8060610:	83 ec 08             	sub    $0x8,%esp
 8060613:	ff 75 d4             	pushl  -0x2c(%ebp)
 8060616:	ff 75 44             	pushl  0x44(%ebp)
 8060619:	ff 75 40             	pushl  0x40(%ebp)
 806061c:	ff 75 3c             	pushl  0x3c(%ebp)
 806061f:	ff 75 38             	pushl  0x38(%ebp)
 8060622:	ff 75 34             	pushl  0x34(%ebp)
 8060625:	ff 75 30             	pushl  0x30(%ebp)
 8060628:	ff 75 2c             	pushl  0x2c(%ebp)
 806062b:	ff 75 28             	pushl  0x28(%ebp)
 806062e:	50                   	push   %eax
 806062f:	e8 74 03 00 00       	call   80609a8 <ustring_at>
 8060634:	83 c4 2c             	add    $0x2c,%esp
 8060637:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806063a:	83 ec 08             	sub    $0x8,%esp
 806063d:	ff 75 d8             	pushl  -0x28(%ebp)
 8060640:	ff 75 24             	pushl  0x24(%ebp)
 8060643:	ff 75 20             	pushl  0x20(%ebp)
 8060646:	ff 75 1c             	pushl  0x1c(%ebp)
 8060649:	ff 75 18             	pushl  0x18(%ebp)
 806064c:	ff 75 14             	pushl  0x14(%ebp)
 806064f:	ff 75 10             	pushl  0x10(%ebp)
 8060652:	ff 75 0c             	pushl  0xc(%ebp)
 8060655:	ff 75 08             	pushl  0x8(%ebp)
 8060658:	50                   	push   %eax
 8060659:	e8 4a 03 00 00       	call   80609a8 <ustring_at>
 806065e:	83 c4 2c             	add    $0x2c,%esp
 8060661:	83 ec 08             	sub    $0x8,%esp
 8060664:	ff 75 e4             	pushl  -0x1c(%ebp)
 8060667:	ff 75 e0             	pushl  -0x20(%ebp)
 806066a:	ff 75 dc             	pushl  -0x24(%ebp)
 806066d:	ff 75 f0             	pushl  -0x10(%ebp)
 8060670:	ff 75 ec             	pushl  -0x14(%ebp)
 8060673:	ff 75 e8             	pushl  -0x18(%ebp)
 8060676:	e8 d9 d9 ff ff       	call   805e054 <string_eq>
 806067b:	83 c4 20             	add    $0x20,%esp
 806067e:	85 c0                	test   %eax,%eax
 8060680:	74 0d                	je     806068f <ustring_index_after+0xf7>
 8060682:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 8060686:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 806068a:	e9 72 ff ff ff       	jmp    8060601 <ustring_index_after+0x69>
 806068f:	8b 45 44             	mov    0x44(%ebp),%eax
 8060692:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 8060695:	75 05                	jne    806069c <ustring_index_after+0x104>
 8060697:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806069a:	eb 0f                	jmp    80606ab <ustring_index_after+0x113>
 806069c:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 80606a0:	e9 43 ff ff ff       	jmp    80605e8 <ustring_index_after+0x50>
 80606a5:	90                   	nop
 80606a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80606ab:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80606ae:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80606b5:	74 05                	je     80606bc <ustring_index_after+0x124>
 80606b7:	e8 64 81 fe ff       	call   8048820 <__stack_chk_fail@plt>
 80606bc:	c9                   	leave  
 80606bd:	c3                   	ret    

080606be <ustring_count>:
 80606be:	55                   	push   %ebp
 80606bf:	89 e5                	mov    %esp,%ebp
 80606c1:	83 ec 18             	sub    $0x18,%esp
 80606c4:	8b 45 24             	mov    0x24(%ebp),%eax
 80606c7:	85 c0                	test   %eax,%eax
 80606c9:	74 07                	je     80606d2 <ustring_count+0x14>
 80606cb:	8b 45 44             	mov    0x44(%ebp),%eax
 80606ce:	85 c0                	test   %eax,%eax
 80606d0:	75 07                	jne    80606d9 <ustring_count+0x1b>
 80606d2:	b8 00 00 00 00       	mov    $0x0,%eax
 80606d7:	eb 77                	jmp    8060750 <ustring_count+0x92>
 80606d9:	8b 55 44             	mov    0x44(%ebp),%edx
 80606dc:	8b 45 24             	mov    0x24(%ebp),%eax
 80606df:	39 c2                	cmp    %eax,%edx
 80606e1:	7e 07                	jle    80606ea <ustring_count+0x2c>
 80606e3:	b8 00 00 00 00       	mov    $0x0,%eax
 80606e8:	eb 66                	jmp    8060750 <ustring_count+0x92>
 80606ea:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80606f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80606f8:	83 ec 0c             	sub    $0xc,%esp
 80606fb:	ff 75 f4             	pushl  -0xc(%ebp)
 80606fe:	ff 75 44             	pushl  0x44(%ebp)
 8060701:	ff 75 40             	pushl  0x40(%ebp)
 8060704:	ff 75 3c             	pushl  0x3c(%ebp)
 8060707:	ff 75 38             	pushl  0x38(%ebp)
 806070a:	ff 75 34             	pushl  0x34(%ebp)
 806070d:	ff 75 30             	pushl  0x30(%ebp)
 8060710:	ff 75 2c             	pushl  0x2c(%ebp)
 8060713:	ff 75 28             	pushl  0x28(%ebp)
 8060716:	ff 75 24             	pushl  0x24(%ebp)
 8060719:	ff 75 20             	pushl  0x20(%ebp)
 806071c:	ff 75 1c             	pushl  0x1c(%ebp)
 806071f:	ff 75 18             	pushl  0x18(%ebp)
 8060722:	ff 75 14             	pushl  0x14(%ebp)
 8060725:	ff 75 10             	pushl  0x10(%ebp)
 8060728:	ff 75 0c             	pushl  0xc(%ebp)
 806072b:	ff 75 08             	pushl  0x8(%ebp)
 806072e:	e8 65 fe ff ff       	call   8060598 <ustring_index_after>
 8060733:	83 c4 50             	add    $0x50,%esp
 8060736:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060739:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 806073d:	75 05                	jne    8060744 <ustring_count+0x86>
 806073f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8060742:	eb 0c                	jmp    8060750 <ustring_count+0x92>
 8060744:	8b 45 44             	mov    0x44(%ebp),%eax
 8060747:	01 45 f4             	add    %eax,-0xc(%ebp)
 806074a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 806074e:	eb a8                	jmp    80606f8 <ustring_count+0x3a>
 8060750:	c9                   	leave  
 8060751:	c3                   	ret    

08060752 <ustring_substr>:
 8060752:	55                   	push   %ebp
 8060753:	89 e5                	mov    %esp,%ebp
 8060755:	83 ec 38             	sub    $0x38,%esp
 8060758:	8b 45 08             	mov    0x8(%ebp),%eax
 806075b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806075e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060764:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060767:	31 c0                	xor    %eax,%eax
 8060769:	8b 45 2c             	mov    0x2c(%ebp),%eax
 806076c:	3b 45 30             	cmp    0x30(%ebp),%eax
 806076f:	7f 1c                	jg     806078d <ustring_substr+0x3b>
 8060771:	8b 45 28             	mov    0x28(%ebp),%eax
 8060774:	3b 45 2c             	cmp    0x2c(%ebp),%eax
 8060777:	7c 14                	jl     806078d <ustring_substr+0x3b>
 8060779:	8b 45 28             	mov    0x28(%ebp),%eax
 806077c:	3b 45 30             	cmp    0x30(%ebp),%eax
 806077f:	7c 0c                	jl     806078d <ustring_substr+0x3b>
 8060781:	83 7d 2c 00          	cmpl   $0x0,0x2c(%ebp)
 8060785:	78 06                	js     806078d <ustring_substr+0x3b>
 8060787:	83 7d 30 00          	cmpl   $0x0,0x30(%ebp)
 806078b:	79 34                	jns    80607c1 <ustring_substr+0x6f>
 806078d:	8b 55 28             	mov    0x28(%ebp),%edx
 8060790:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8060793:	83 ec 08             	sub    $0x8,%esp
 8060796:	52                   	push   %edx
 8060797:	ff 75 30             	pushl  0x30(%ebp)
 806079a:	ff 75 2c             	pushl  0x2c(%ebp)
 806079d:	6a 04                	push   $0x4
 806079f:	68 c4 9e 06 08       	push   $0x8069ec4
 80607a4:	50                   	push   %eax
 80607a5:	e8 1a 8d fe ff       	call   80494c4 <_STR>
 80607aa:	83 c4 1c             	add    $0x1c,%esp
 80607ad:	83 ec 04             	sub    $0x4,%esp
 80607b0:	ff 75 f0             	pushl  -0x10(%ebp)
 80607b3:	ff 75 ec             	pushl  -0x14(%ebp)
 80607b6:	ff 75 e8             	pushl  -0x18(%ebp)
 80607b9:	e8 d9 6f ff ff       	call   8057797 <v_panic>
 80607be:	83 c4 10             	add    $0x10,%esp
 80607c1:	8b 45 28             	mov    0x28(%ebp),%eax
 80607c4:	3b 45 30             	cmp    0x30(%ebp),%eax
 80607c7:	7f 05                	jg     80607ce <ustring_substr+0x7c>
 80607c9:	8b 45 10             	mov    0x10(%ebp),%eax
 80607cc:	eb 1c                	jmp    80607ea <ustring_substr+0x98>
 80607ce:	83 ec 0c             	sub    $0xc,%esp
 80607d1:	ff 75 30             	pushl  0x30(%ebp)
 80607d4:	ff 75 24             	pushl  0x24(%ebp)
 80607d7:	ff 75 20             	pushl  0x20(%ebp)
 80607da:	ff 75 1c             	pushl  0x1c(%ebp)
 80607dd:	ff 75 18             	pushl  0x18(%ebp)
 80607e0:	e8 d5 5a ff ff       	call   80562ba <array_get>
 80607e5:	83 c4 20             	add    $0x20,%esp
 80607e8:	8b 00                	mov    (%eax),%eax
 80607ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80607ed:	83 ec 0c             	sub    $0xc,%esp
 80607f0:	ff 75 2c             	pushl  0x2c(%ebp)
 80607f3:	ff 75 24             	pushl  0x24(%ebp)
 80607f6:	ff 75 20             	pushl  0x20(%ebp)
 80607f9:	ff 75 1c             	pushl  0x1c(%ebp)
 80607fc:	ff 75 18             	pushl  0x18(%ebp)
 80607ff:	e8 b6 5a ff ff       	call   80562ba <array_get>
 8060804:	83 c4 20             	add    $0x20,%esp
 8060807:	8b 10                	mov    (%eax),%edx
 8060809:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806080c:	83 ec 08             	sub    $0x8,%esp
 806080f:	ff 75 e4             	pushl  -0x1c(%ebp)
 8060812:	52                   	push   %edx
 8060813:	ff 75 14             	pushl  0x14(%ebp)
 8060816:	ff 75 10             	pushl  0x10(%ebp)
 8060819:	ff 75 0c             	pushl  0xc(%ebp)
 806081c:	50                   	push   %eax
 806081d:	e8 9f e0 ff ff       	call   805e8c1 <string_substr>
 8060822:	83 c4 1c             	add    $0x1c,%esp
 8060825:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8060828:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 806082b:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060832:	74 05                	je     8060839 <ustring_substr+0xe7>
 8060834:	e8 e7 7f fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060839:	c9                   	leave  
 806083a:	c2 04 00             	ret    $0x4

0806083d <ustring_left>:
 806083d:	55                   	push   %ebp
 806083e:	89 e5                	mov    %esp,%ebp
 8060840:	83 ec 28             	sub    $0x28,%esp
 8060843:	8b 45 08             	mov    0x8(%ebp),%eax
 8060846:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060849:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 806084f:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060852:	31 c0                	xor    %eax,%eax
 8060854:	8b 45 28             	mov    0x28(%ebp),%eax
 8060857:	3b 45 2c             	cmp    0x2c(%ebp),%eax
 806085a:	7f 16                	jg     8060872 <ustring_left+0x35>
 806085c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806085f:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060862:	89 10                	mov    %edx,(%eax)
 8060864:	8b 55 10             	mov    0x10(%ebp),%edx
 8060867:	89 50 04             	mov    %edx,0x4(%eax)
 806086a:	8b 55 14             	mov    0x14(%ebp),%edx
 806086d:	89 50 08             	mov    %edx,0x8(%eax)
 8060870:	eb 2c                	jmp    806089e <ustring_left+0x61>
 8060872:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060875:	83 ec 04             	sub    $0x4,%esp
 8060878:	ff 75 2c             	pushl  0x2c(%ebp)
 806087b:	6a 00                	push   $0x0
 806087d:	ff 75 28             	pushl  0x28(%ebp)
 8060880:	ff 75 24             	pushl  0x24(%ebp)
 8060883:	ff 75 20             	pushl  0x20(%ebp)
 8060886:	ff 75 1c             	pushl  0x1c(%ebp)
 8060889:	ff 75 18             	pushl  0x18(%ebp)
 806088c:	ff 75 14             	pushl  0x14(%ebp)
 806088f:	ff 75 10             	pushl  0x10(%ebp)
 8060892:	ff 75 0c             	pushl  0xc(%ebp)
 8060895:	50                   	push   %eax
 8060896:	e8 b7 fe ff ff       	call   8060752 <ustring_substr>
 806089b:	83 c4 2c             	add    $0x2c,%esp
 806089e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80608a1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80608a4:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80608ab:	74 05                	je     80608b2 <ustring_left+0x75>
 80608ad:	e8 6e 7f fe ff       	call   8048820 <__stack_chk_fail@plt>
 80608b2:	c9                   	leave  
 80608b3:	c2 04 00             	ret    $0x4

080608b6 <ustring_right>:
 80608b6:	55                   	push   %ebp
 80608b7:	89 e5                	mov    %esp,%ebp
 80608b9:	83 ec 28             	sub    $0x28,%esp
 80608bc:	8b 45 08             	mov    0x8(%ebp),%eax
 80608bf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80608c2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80608c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80608cb:	31 c0                	xor    %eax,%eax
 80608cd:	8b 45 28             	mov    0x28(%ebp),%eax
 80608d0:	3b 45 2c             	cmp    0x2c(%ebp),%eax
 80608d3:	7f 1f                	jg     80608f4 <ustring_right+0x3e>
 80608d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80608d8:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 80608de:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80608e1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 80608e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80608eb:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80608f2:	eb 2e                	jmp    8060922 <ustring_right+0x6c>
 80608f4:	8b 55 28             	mov    0x28(%ebp),%edx
 80608f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80608fa:	83 ec 04             	sub    $0x4,%esp
 80608fd:	52                   	push   %edx
 80608fe:	ff 75 2c             	pushl  0x2c(%ebp)
 8060901:	ff 75 28             	pushl  0x28(%ebp)
 8060904:	ff 75 24             	pushl  0x24(%ebp)
 8060907:	ff 75 20             	pushl  0x20(%ebp)
 806090a:	ff 75 1c             	pushl  0x1c(%ebp)
 806090d:	ff 75 18             	pushl  0x18(%ebp)
 8060910:	ff 75 14             	pushl  0x14(%ebp)
 8060913:	ff 75 10             	pushl  0x10(%ebp)
 8060916:	ff 75 0c             	pushl  0xc(%ebp)
 8060919:	50                   	push   %eax
 806091a:	e8 33 fe ff ff       	call   8060752 <ustring_substr>
 806091f:	83 c4 2c             	add    $0x2c,%esp
 8060922:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060925:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060928:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 806092f:	74 05                	je     8060936 <ustring_right+0x80>
 8060931:	e8 ea 7e fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060936:	c9                   	leave  
 8060937:	c2 04 00             	ret    $0x4

0806093a <string_at>:
 806093a:	55                   	push   %ebp
 806093b:	89 e5                	mov    %esp,%ebp
 806093d:	83 ec 18             	sub    $0x18,%esp
 8060940:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060946:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060949:	31 c0                	xor    %eax,%eax
 806094b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 806094f:	78 08                	js     8060959 <string_at+0x1f>
 8060951:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060954:	3b 45 14             	cmp    0x14(%ebp),%eax
 8060957:	7f 31                	jg     806098a <string_at+0x50>
 8060959:	8b 55 0c             	mov    0xc(%ebp),%edx
 806095c:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806095f:	83 ec 0c             	sub    $0xc,%esp
 8060962:	52                   	push   %edx
 8060963:	ff 75 14             	pushl  0x14(%ebp)
 8060966:	6a 02                	push   $0x2
 8060968:	68 f4 9e 06 08       	push   $0x8069ef4
 806096d:	50                   	push   %eax
 806096e:	e8 51 8b fe ff       	call   80494c4 <_STR>
 8060973:	83 c4 1c             	add    $0x1c,%esp
 8060976:	83 ec 04             	sub    $0x4,%esp
 8060979:	ff 75 f0             	pushl  -0x10(%ebp)
 806097c:	ff 75 ec             	pushl  -0x14(%ebp)
 806097f:	ff 75 e8             	pushl  -0x18(%ebp)
 8060982:	e8 10 6e ff ff       	call   8057797 <v_panic>
 8060987:	83 c4 10             	add    $0x10,%esp
 806098a:	8b 55 08             	mov    0x8(%ebp),%edx
 806098d:	8b 45 14             	mov    0x14(%ebp),%eax
 8060990:	01 d0                	add    %edx,%eax
 8060992:	0f b6 00             	movzbl (%eax),%eax
 8060995:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060998:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 806099f:	74 05                	je     80609a6 <string_at+0x6c>
 80609a1:	e8 7a 7e fe ff       	call   8048820 <__stack_chk_fail@plt>
 80609a6:	c9                   	leave  
 80609a7:	c3                   	ret    

080609a8 <ustring_at>:
 80609a8:	55                   	push   %ebp
 80609a9:	89 e5                	mov    %esp,%ebp
 80609ab:	83 ec 28             	sub    $0x28,%esp
 80609ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80609b1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80609b4:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80609ba:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80609bd:	31 c0                	xor    %eax,%eax
 80609bf:	83 7d 2c 00          	cmpl   $0x0,0x2c(%ebp)
 80609c3:	78 08                	js     80609cd <ustring_at+0x25>
 80609c5:	8b 45 28             	mov    0x28(%ebp),%eax
 80609c8:	3b 45 2c             	cmp    0x2c(%ebp),%eax
 80609cb:	7f 31                	jg     80609fe <ustring_at+0x56>
 80609cd:	8b 55 20             	mov    0x20(%ebp),%edx
 80609d0:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80609d3:	83 ec 0c             	sub    $0xc,%esp
 80609d6:	52                   	push   %edx
 80609d7:	ff 75 2c             	pushl  0x2c(%ebp)
 80609da:	6a 02                	push   $0x2
 80609dc:	68 f4 9e 06 08       	push   $0x8069ef4
 80609e1:	50                   	push   %eax
 80609e2:	e8 dd 8a fe ff       	call   80494c4 <_STR>
 80609e7:	83 c4 1c             	add    $0x1c,%esp
 80609ea:	83 ec 04             	sub    $0x4,%esp
 80609ed:	ff 75 f0             	pushl  -0x10(%ebp)
 80609f0:	ff 75 ec             	pushl  -0x14(%ebp)
 80609f3:	ff 75 e8             	pushl  -0x18(%ebp)
 80609f6:	e8 9c 6d ff ff       	call   8057797 <v_panic>
 80609fb:	83 c4 10             	add    $0x10,%esp
 80609fe:	8b 45 2c             	mov    0x2c(%ebp),%eax
 8060a01:	8d 50 01             	lea    0x1(%eax),%edx
 8060a04:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060a07:	83 ec 04             	sub    $0x4,%esp
 8060a0a:	52                   	push   %edx
 8060a0b:	ff 75 2c             	pushl  0x2c(%ebp)
 8060a0e:	ff 75 28             	pushl  0x28(%ebp)
 8060a11:	ff 75 24             	pushl  0x24(%ebp)
 8060a14:	ff 75 20             	pushl  0x20(%ebp)
 8060a17:	ff 75 1c             	pushl  0x1c(%ebp)
 8060a1a:	ff 75 18             	pushl  0x18(%ebp)
 8060a1d:	ff 75 14             	pushl  0x14(%ebp)
 8060a20:	ff 75 10             	pushl  0x10(%ebp)
 8060a23:	ff 75 0c             	pushl  0xc(%ebp)
 8060a26:	50                   	push   %eax
 8060a27:	e8 26 fd ff ff       	call   8060752 <ustring_substr>
 8060a2c:	83 c4 2c             	add    $0x2c,%esp
 8060a2f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060a32:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060a35:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060a3c:	74 05                	je     8060a43 <ustring_at+0x9b>
 8060a3e:	e8 dd 7d fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060a43:	c9                   	leave  
 8060a44:	c2 04 00             	ret    $0x4

08060a47 <ustring_free>:
 8060a47:	55                   	push   %ebp
 8060a48:	89 e5                	mov    %esp,%ebp
 8060a4a:	83 ec 08             	sub    $0x8,%esp
 8060a4d:	8b 45 08             	mov    0x8(%ebp),%eax
 8060a50:	83 c0 0c             	add    $0xc,%eax
 8060a53:	83 ec 0c             	sub    $0xc,%esp
 8060a56:	50                   	push   %eax
 8060a57:	e8 00 63 ff ff       	call   8056d5c <array_free>
 8060a5c:	83 c4 10             	add    $0x10,%esp
 8060a5f:	8b 45 08             	mov    0x8(%ebp),%eax
 8060a62:	83 ec 0c             	sub    $0xc,%esp
 8060a65:	50                   	push   %eax
 8060a66:	e8 ed 00 00 00       	call   8060b58 <string_free>
 8060a6b:	83 c4 10             	add    $0x10,%esp
 8060a6e:	90                   	nop
 8060a6f:	c9                   	leave  
 8060a70:	c3                   	ret    

08060a71 <byte_is_digit>:
 8060a71:	55                   	push   %ebp
 8060a72:	89 e5                	mov    %esp,%ebp
 8060a74:	83 ec 04             	sub    $0x4,%esp
 8060a77:	8b 45 08             	mov    0x8(%ebp),%eax
 8060a7a:	88 45 fc             	mov    %al,-0x4(%ebp)
 8060a7d:	80 7d fc 2f          	cmpb   $0x2f,-0x4(%ebp)
 8060a81:	76 0d                	jbe    8060a90 <byte_is_digit+0x1f>
 8060a83:	80 7d fc 39          	cmpb   $0x39,-0x4(%ebp)
 8060a87:	77 07                	ja     8060a90 <byte_is_digit+0x1f>
 8060a89:	b8 01 00 00 00       	mov    $0x1,%eax
 8060a8e:	eb 05                	jmp    8060a95 <byte_is_digit+0x24>
 8060a90:	b8 00 00 00 00       	mov    $0x0,%eax
 8060a95:	c9                   	leave  
 8060a96:	c3                   	ret    

08060a97 <byte_is_hex_digit>:
 8060a97:	55                   	push   %ebp
 8060a98:	89 e5                	mov    %esp,%ebp
 8060a9a:	83 ec 04             	sub    $0x4,%esp
 8060a9d:	8b 45 08             	mov    0x8(%ebp),%eax
 8060aa0:	88 45 fc             	mov    %al,-0x4(%ebp)
 8060aa3:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 8060aa7:	50                   	push   %eax
 8060aa8:	e8 c4 ff ff ff       	call   8060a71 <byte_is_digit>
 8060aad:	83 c4 04             	add    $0x4,%esp
 8060ab0:	85 c0                	test   %eax,%eax
 8060ab2:	75 18                	jne    8060acc <byte_is_hex_digit+0x35>
 8060ab4:	80 7d fc 60          	cmpb   $0x60,-0x4(%ebp)
 8060ab8:	76 06                	jbe    8060ac0 <byte_is_hex_digit+0x29>
 8060aba:	80 7d fc 66          	cmpb   $0x66,-0x4(%ebp)
 8060abe:	76 0c                	jbe    8060acc <byte_is_hex_digit+0x35>
 8060ac0:	80 7d fc 40          	cmpb   $0x40,-0x4(%ebp)
 8060ac4:	76 0d                	jbe    8060ad3 <byte_is_hex_digit+0x3c>
 8060ac6:	80 7d fc 46          	cmpb   $0x46,-0x4(%ebp)
 8060aca:	77 07                	ja     8060ad3 <byte_is_hex_digit+0x3c>
 8060acc:	b8 01 00 00 00       	mov    $0x1,%eax
 8060ad1:	eb 05                	jmp    8060ad8 <byte_is_hex_digit+0x41>
 8060ad3:	b8 00 00 00 00       	mov    $0x0,%eax
 8060ad8:	c9                   	leave  
 8060ad9:	c3                   	ret    

08060ada <byte_is_oct_digit>:
 8060ada:	55                   	push   %ebp
 8060adb:	89 e5                	mov    %esp,%ebp
 8060add:	83 ec 04             	sub    $0x4,%esp
 8060ae0:	8b 45 08             	mov    0x8(%ebp),%eax
 8060ae3:	88 45 fc             	mov    %al,-0x4(%ebp)
 8060ae6:	80 7d fc 2f          	cmpb   $0x2f,-0x4(%ebp)
 8060aea:	76 0d                	jbe    8060af9 <byte_is_oct_digit+0x1f>
 8060aec:	80 7d fc 37          	cmpb   $0x37,-0x4(%ebp)
 8060af0:	77 07                	ja     8060af9 <byte_is_oct_digit+0x1f>
 8060af2:	b8 01 00 00 00       	mov    $0x1,%eax
 8060af7:	eb 05                	jmp    8060afe <byte_is_oct_digit+0x24>
 8060af9:	b8 00 00 00 00       	mov    $0x0,%eax
 8060afe:	c9                   	leave  
 8060aff:	c3                   	ret    

08060b00 <byte_is_bin_digit>:
 8060b00:	55                   	push   %ebp
 8060b01:	89 e5                	mov    %esp,%ebp
 8060b03:	83 ec 04             	sub    $0x4,%esp
 8060b06:	8b 45 08             	mov    0x8(%ebp),%eax
 8060b09:	88 45 fc             	mov    %al,-0x4(%ebp)
 8060b0c:	80 7d fc 30          	cmpb   $0x30,-0x4(%ebp)
 8060b10:	74 06                	je     8060b18 <byte_is_bin_digit+0x18>
 8060b12:	80 7d fc 31          	cmpb   $0x31,-0x4(%ebp)
 8060b16:	75 07                	jne    8060b1f <byte_is_bin_digit+0x1f>
 8060b18:	b8 01 00 00 00       	mov    $0x1,%eax
 8060b1d:	eb 05                	jmp    8060b24 <byte_is_bin_digit+0x24>
 8060b1f:	b8 00 00 00 00       	mov    $0x0,%eax
 8060b24:	c9                   	leave  
 8060b25:	c3                   	ret    

08060b26 <byte_is_letter>:
 8060b26:	55                   	push   %ebp
 8060b27:	89 e5                	mov    %esp,%ebp
 8060b29:	83 ec 04             	sub    $0x4,%esp
 8060b2c:	8b 45 08             	mov    0x8(%ebp),%eax
 8060b2f:	88 45 fc             	mov    %al,-0x4(%ebp)
 8060b32:	80 7d fc 60          	cmpb   $0x60,-0x4(%ebp)
 8060b36:	76 06                	jbe    8060b3e <byte_is_letter+0x18>
 8060b38:	80 7d fc 7a          	cmpb   $0x7a,-0x4(%ebp)
 8060b3c:	76 0c                	jbe    8060b4a <byte_is_letter+0x24>
 8060b3e:	80 7d fc 40          	cmpb   $0x40,-0x4(%ebp)
 8060b42:	76 0d                	jbe    8060b51 <byte_is_letter+0x2b>
 8060b44:	80 7d fc 5a          	cmpb   $0x5a,-0x4(%ebp)
 8060b48:	77 07                	ja     8060b51 <byte_is_letter+0x2b>
 8060b4a:	b8 01 00 00 00       	mov    $0x1,%eax
 8060b4f:	eb 05                	jmp    8060b56 <byte_is_letter+0x30>
 8060b51:	b8 00 00 00 00       	mov    $0x0,%eax
 8060b56:	c9                   	leave  
 8060b57:	c3                   	ret    

08060b58 <string_free>:
 8060b58:	55                   	push   %ebp
 8060b59:	89 e5                	mov    %esp,%ebp
 8060b5b:	83 ec 08             	sub    $0x8,%esp
 8060b5e:	8b 45 08             	mov    0x8(%ebp),%eax
 8060b61:	8b 40 08             	mov    0x8(%eax),%eax
 8060b64:	3d ee 05 1d fa       	cmp    $0xfa1d05ee,%eax
 8060b69:	75 12                	jne    8060b7d <string_free+0x25>
 8060b6b:	83 ec 0c             	sub    $0xc,%esp
 8060b6e:	68 18 9f 06 08       	push   $0x8069f18
 8060b73:	e8 d8 7c fe ff       	call   8048850 <puts@plt>
 8060b78:	83 c4 10             	add    $0x10,%esp
 8060b7b:	eb 33                	jmp    8060bb0 <string_free+0x58>
 8060b7d:	8b 45 08             	mov    0x8(%ebp),%eax
 8060b80:	8b 40 08             	mov    0x8(%eax),%eax
 8060b83:	83 f8 01             	cmp    $0x1,%eax
 8060b86:	74 27                	je     8060baf <string_free+0x57>
 8060b88:	8b 45 08             	mov    0x8(%ebp),%eax
 8060b8b:	8b 40 04             	mov    0x4(%eax),%eax
 8060b8e:	85 c0                	test   %eax,%eax
 8060b90:	74 1d                	je     8060baf <string_free+0x57>
 8060b92:	8b 45 08             	mov    0x8(%ebp),%eax
 8060b95:	8b 00                	mov    (%eax),%eax
 8060b97:	83 ec 0c             	sub    $0xc,%esp
 8060b9a:	50                   	push   %eax
 8060b9b:	e8 0f 6f ff ff       	call   8057aaf <v_free>
 8060ba0:	83 c4 10             	add    $0x10,%esp
 8060ba3:	8b 45 08             	mov    0x8(%ebp),%eax
 8060ba6:	c7 40 08 ee 05 1d fa 	movl   $0xfa1d05ee,0x8(%eax)
 8060bad:	eb 01                	jmp    8060bb0 <string_free+0x58>
 8060baf:	90                   	nop
 8060bb0:	c9                   	leave  
 8060bb1:	c3                   	ret    

08060bb2 <string_all_before>:
 8060bb2:	55                   	push   %ebp
 8060bb3:	89 e5                	mov    %esp,%ebp
 8060bb5:	83 ec 28             	sub    $0x28,%esp
 8060bb8:	8b 45 08             	mov    0x8(%ebp),%eax
 8060bbb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060bbe:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060bc4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060bc7:	31 c0                	xor    %eax,%eax
 8060bc9:	83 ec 08             	sub    $0x8,%esp
 8060bcc:	ff 75 20             	pushl  0x20(%ebp)
 8060bcf:	ff 75 1c             	pushl  0x1c(%ebp)
 8060bd2:	ff 75 18             	pushl  0x18(%ebp)
 8060bd5:	ff 75 14             	pushl  0x14(%ebp)
 8060bd8:	ff 75 10             	pushl  0x10(%ebp)
 8060bdb:	ff 75 0c             	pushl  0xc(%ebp)
 8060bde:	e8 0f de ff ff       	call   805e9f2 <string_index_>
 8060be3:	83 c4 20             	add    $0x20,%esp
 8060be6:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060be9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
 8060bed:	75 16                	jne    8060c05 <string_all_before+0x53>
 8060bef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060bf2:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060bf5:	89 10                	mov    %edx,(%eax)
 8060bf7:	8b 55 10             	mov    0x10(%ebp),%edx
 8060bfa:	89 50 04             	mov    %edx,0x4(%eax)
 8060bfd:	8b 55 14             	mov    0x14(%ebp),%edx
 8060c00:	89 50 08             	mov    %edx,0x8(%eax)
 8060c03:	eb 1b                	jmp    8060c20 <string_all_before+0x6e>
 8060c05:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060c08:	83 ec 0c             	sub    $0xc,%esp
 8060c0b:	ff 75 f0             	pushl  -0x10(%ebp)
 8060c0e:	ff 75 14             	pushl  0x14(%ebp)
 8060c11:	ff 75 10             	pushl  0x10(%ebp)
 8060c14:	ff 75 0c             	pushl  0xc(%ebp)
 8060c17:	50                   	push   %eax
 8060c18:	e8 67 db ff ff       	call   805e784 <string_left>
 8060c1d:	83 c4 1c             	add    $0x1c,%esp
 8060c20:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060c23:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060c26:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060c2d:	74 05                	je     8060c34 <string_all_before+0x82>
 8060c2f:	e8 ec 7b fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060c34:	c9                   	leave  
 8060c35:	c2 04 00             	ret    $0x4

08060c38 <string_all_before_last>:
 8060c38:	55                   	push   %ebp
 8060c39:	89 e5                	mov    %esp,%ebp
 8060c3b:	83 ec 28             	sub    $0x28,%esp
 8060c3e:	8b 45 08             	mov    0x8(%ebp),%eax
 8060c41:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060c44:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060c4a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060c4d:	31 c0                	xor    %eax,%eax
 8060c4f:	ff 75 20             	pushl  0x20(%ebp)
 8060c52:	ff 75 1c             	pushl  0x1c(%ebp)
 8060c55:	ff 75 18             	pushl  0x18(%ebp)
 8060c58:	ff 75 14             	pushl  0x14(%ebp)
 8060c5b:	ff 75 10             	pushl  0x10(%ebp)
 8060c5e:	ff 75 0c             	pushl  0xc(%ebp)
 8060c61:	e8 4e e1 ff ff       	call   805edb4 <string_last_index_>
 8060c66:	83 c4 18             	add    $0x18,%esp
 8060c69:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060c6c:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
 8060c70:	75 16                	jne    8060c88 <string_all_before_last+0x50>
 8060c72:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060c75:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060c78:	89 10                	mov    %edx,(%eax)
 8060c7a:	8b 55 10             	mov    0x10(%ebp),%edx
 8060c7d:	89 50 04             	mov    %edx,0x4(%eax)
 8060c80:	8b 55 14             	mov    0x14(%ebp),%edx
 8060c83:	89 50 08             	mov    %edx,0x8(%eax)
 8060c86:	eb 1b                	jmp    8060ca3 <string_all_before_last+0x6b>
 8060c88:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060c8b:	83 ec 0c             	sub    $0xc,%esp
 8060c8e:	ff 75 f0             	pushl  -0x10(%ebp)
 8060c91:	ff 75 14             	pushl  0x14(%ebp)
 8060c94:	ff 75 10             	pushl  0x10(%ebp)
 8060c97:	ff 75 0c             	pushl  0xc(%ebp)
 8060c9a:	50                   	push   %eax
 8060c9b:	e8 e4 da ff ff       	call   805e784 <string_left>
 8060ca0:	83 c4 1c             	add    $0x1c,%esp
 8060ca3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060ca6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060ca9:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060cb0:	74 05                	je     8060cb7 <string_all_before_last+0x7f>
 8060cb2:	e8 69 7b fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060cb7:	c9                   	leave  
 8060cb8:	c2 04 00             	ret    $0x4

08060cbb <string_all_after>:
 8060cbb:	55                   	push   %ebp
 8060cbc:	89 e5                	mov    %esp,%ebp
 8060cbe:	83 ec 28             	sub    $0x28,%esp
 8060cc1:	8b 45 08             	mov    0x8(%ebp),%eax
 8060cc4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060cc7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060ccd:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060cd0:	31 c0                	xor    %eax,%eax
 8060cd2:	83 ec 08             	sub    $0x8,%esp
 8060cd5:	ff 75 20             	pushl  0x20(%ebp)
 8060cd8:	ff 75 1c             	pushl  0x1c(%ebp)
 8060cdb:	ff 75 18             	pushl  0x18(%ebp)
 8060cde:	ff 75 14             	pushl  0x14(%ebp)
 8060ce1:	ff 75 10             	pushl  0x10(%ebp)
 8060ce4:	ff 75 0c             	pushl  0xc(%ebp)
 8060ce7:	e8 06 dd ff ff       	call   805e9f2 <string_index_>
 8060cec:	83 c4 20             	add    $0x20,%esp
 8060cef:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060cf2:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
 8060cf6:	75 16                	jne    8060d0e <string_all_after+0x53>
 8060cf8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060cfb:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060cfe:	89 10                	mov    %edx,(%eax)
 8060d00:	8b 55 10             	mov    0x10(%ebp),%edx
 8060d03:	89 50 04             	mov    %edx,0x4(%eax)
 8060d06:	8b 55 14             	mov    0x14(%ebp),%edx
 8060d09:	89 50 08             	mov    %edx,0x8(%eax)
 8060d0c:	eb 21                	jmp    8060d2f <string_all_after+0x74>
 8060d0e:	8b 55 1c             	mov    0x1c(%ebp),%edx
 8060d11:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8060d14:	01 c2                	add    %eax,%edx
 8060d16:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060d19:	83 ec 0c             	sub    $0xc,%esp
 8060d1c:	52                   	push   %edx
 8060d1d:	ff 75 14             	pushl  0x14(%ebp)
 8060d20:	ff 75 10             	pushl  0x10(%ebp)
 8060d23:	ff 75 0c             	pushl  0xc(%ebp)
 8060d26:	50                   	push   %eax
 8060d27:	e8 c2 da ff ff       	call   805e7ee <string_right>
 8060d2c:	83 c4 1c             	add    $0x1c,%esp
 8060d2f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060d32:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060d35:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060d3c:	74 05                	je     8060d43 <string_all_after+0x88>
 8060d3e:	e8 dd 7a fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060d43:	c9                   	leave  
 8060d44:	c2 04 00             	ret    $0x4

08060d47 <string_all_after_last>:
 8060d47:	55                   	push   %ebp
 8060d48:	89 e5                	mov    %esp,%ebp
 8060d4a:	83 ec 28             	sub    $0x28,%esp
 8060d4d:	8b 45 08             	mov    0x8(%ebp),%eax
 8060d50:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060d53:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060d59:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060d5c:	31 c0                	xor    %eax,%eax
 8060d5e:	ff 75 20             	pushl  0x20(%ebp)
 8060d61:	ff 75 1c             	pushl  0x1c(%ebp)
 8060d64:	ff 75 18             	pushl  0x18(%ebp)
 8060d67:	ff 75 14             	pushl  0x14(%ebp)
 8060d6a:	ff 75 10             	pushl  0x10(%ebp)
 8060d6d:	ff 75 0c             	pushl  0xc(%ebp)
 8060d70:	e8 3f e0 ff ff       	call   805edb4 <string_last_index_>
 8060d75:	83 c4 18             	add    $0x18,%esp
 8060d78:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060d7b:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
 8060d7f:	75 16                	jne    8060d97 <string_all_after_last+0x50>
 8060d81:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060d84:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060d87:	89 10                	mov    %edx,(%eax)
 8060d89:	8b 55 10             	mov    0x10(%ebp),%edx
 8060d8c:	89 50 04             	mov    %edx,0x4(%eax)
 8060d8f:	8b 55 14             	mov    0x14(%ebp),%edx
 8060d92:	89 50 08             	mov    %edx,0x8(%eax)
 8060d95:	eb 21                	jmp    8060db8 <string_all_after_last+0x71>
 8060d97:	8b 55 1c             	mov    0x1c(%ebp),%edx
 8060d9a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8060d9d:	01 c2                	add    %eax,%edx
 8060d9f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060da2:	83 ec 0c             	sub    $0xc,%esp
 8060da5:	52                   	push   %edx
 8060da6:	ff 75 14             	pushl  0x14(%ebp)
 8060da9:	ff 75 10             	pushl  0x10(%ebp)
 8060dac:	ff 75 0c             	pushl  0xc(%ebp)
 8060daf:	50                   	push   %eax
 8060db0:	e8 39 da ff ff       	call   805e7ee <string_right>
 8060db5:	83 c4 1c             	add    $0x1c,%esp
 8060db8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060dbb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060dbe:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060dc5:	74 05                	je     8060dcc <string_all_after_last+0x85>
 8060dc7:	e8 54 7a fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060dcc:	c9                   	leave  
 8060dcd:	c2 04 00             	ret    $0x4

08060dd0 <string_after>:
 8060dd0:	55                   	push   %ebp
 8060dd1:	89 e5                	mov    %esp,%ebp
 8060dd3:	83 ec 28             	sub    $0x28,%esp
 8060dd6:	8b 45 08             	mov    0x8(%ebp),%eax
 8060dd9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060ddc:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060de2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060de5:	31 c0                	xor    %eax,%eax
 8060de7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060dea:	83 ec 04             	sub    $0x4,%esp
 8060ded:	ff 75 20             	pushl  0x20(%ebp)
 8060df0:	ff 75 1c             	pushl  0x1c(%ebp)
 8060df3:	ff 75 18             	pushl  0x18(%ebp)
 8060df6:	ff 75 14             	pushl  0x14(%ebp)
 8060df9:	ff 75 10             	pushl  0x10(%ebp)
 8060dfc:	ff 75 0c             	pushl  0xc(%ebp)
 8060dff:	50                   	push   %eax
 8060e00:	e8 42 ff ff ff       	call   8060d47 <string_all_after_last>
 8060e05:	83 c4 1c             	add    $0x1c,%esp
 8060e08:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060e0b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8060e0e:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8060e15:	74 05                	je     8060e1c <string_after+0x4c>
 8060e17:	e8 04 7a fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060e1c:	c9                   	leave  
 8060e1d:	c2 04 00             	ret    $0x4

08060e20 <string_after_char>:
 8060e20:	55                   	push   %ebp
 8060e21:	89 e5                	mov    %esp,%ebp
 8060e23:	83 ec 28             	sub    $0x28,%esp
 8060e26:	8b 45 18             	mov    0x18(%ebp),%eax
 8060e29:	8b 55 08             	mov    0x8(%ebp),%edx
 8060e2c:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8060e2f:	88 45 e0             	mov    %al,-0x20(%ebp)
 8060e32:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8060e38:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060e3b:	31 c0                	xor    %eax,%eax
 8060e3d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8060e44:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8060e4b:	eb 23                	jmp    8060e70 <string_after_char+0x50>
 8060e4d:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060e50:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8060e53:	01 d0                	add    %edx,%eax
 8060e55:	0f b6 00             	movzbl (%eax),%eax
 8060e58:	88 45 eb             	mov    %al,-0x15(%ebp)
 8060e5b:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax
 8060e5f:	3a 45 e0             	cmp    -0x20(%ebp),%al
 8060e62:	75 08                	jne    8060e6c <string_after_char+0x4c>
 8060e64:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8060e67:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8060e6a:	eb 0c                	jmp    8060e78 <string_after_char+0x58>
 8060e6c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8060e70:	8b 45 10             	mov    0x10(%ebp),%eax
 8060e73:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8060e76:	7f d5                	jg     8060e4d <string_after_char+0x2d>
 8060e78:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 8060e7c:	75 16                	jne    8060e94 <string_after_char+0x74>
 8060e7e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060e81:	8b 55 0c             	mov    0xc(%ebp),%edx
 8060e84:	89 10                	mov    %edx,(%eax)
 8060e86:	8b 55 10             	mov    0x10(%ebp),%edx
 8060e89:	89 50 04             	mov    %edx,0x4(%eax)
 8060e8c:	8b 55 14             	mov    0x14(%ebp),%edx
 8060e8f:	89 50 08             	mov    %edx,0x8(%eax)
 8060e92:	eb 1f                	jmp    8060eb3 <string_after_char+0x93>
 8060e94:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8060e97:	8d 50 01             	lea    0x1(%eax),%edx
 8060e9a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060e9d:	83 ec 0c             	sub    $0xc,%esp
 8060ea0:	52                   	push   %edx
 8060ea1:	ff 75 14             	pushl  0x14(%ebp)
 8060ea4:	ff 75 10             	pushl  0x10(%ebp)
 8060ea7:	ff 75 0c             	pushl  0xc(%ebp)
 8060eaa:	50                   	push   %eax
 8060eab:	e8 3e d9 ff ff       	call   805e7ee <string_right>
 8060eb0:	83 c4 1c             	add    $0x1c,%esp
 8060eb3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8060eb6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8060eb9:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8060ec0:	74 05                	je     8060ec7 <string_after_char+0xa7>
 8060ec2:	e8 59 79 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8060ec7:	c9                   	leave  
 8060ec8:	c2 04 00             	ret    $0x4

08060ecb <array_string_join>:
 8060ecb:	55                   	push   %ebp
 8060ecc:	89 e5                	mov    %esp,%ebp
 8060ece:	83 ec 58             	sub    $0x58,%esp
 8060ed1:	8b 45 14             	mov    0x14(%ebp),%eax
 8060ed4:	85 c0                	test   %eax,%eax
 8060ed6:	75 22                	jne    8060efa <array_string_join+0x2f>
 8060ed8:	8b 45 08             	mov    0x8(%ebp),%eax
 8060edb:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 8060ee1:	8b 45 08             	mov    0x8(%ebp),%eax
 8060ee4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8060eeb:	8b 45 08             	mov    0x8(%ebp),%eax
 8060eee:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8060ef5:	e9 7a 01 00 00       	jmp    8061074 <array_string_join+0x1a9>
 8060efa:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)
 8060f01:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060f04:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8060f07:	8b 45 10             	mov    0x10(%ebp),%eax
 8060f0a:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8060f0d:	8b 45 14             	mov    0x14(%ebp),%eax
 8060f10:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8060f13:	8b 45 18             	mov    0x18(%ebp),%eax
 8060f16:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8060f19:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 8060f20:	eb 31                	jmp    8060f53 <array_string_join+0x88>
 8060f22:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 8060f25:	8b 55 ac             	mov    -0x54(%ebp),%edx
 8060f28:	89 d0                	mov    %edx,%eax
 8060f2a:	01 c0                	add    %eax,%eax
 8060f2c:	01 d0                	add    %edx,%eax
 8060f2e:	c1 e0 02             	shl    $0x2,%eax
 8060f31:	01 c8                	add    %ecx,%eax
 8060f33:	8b 10                	mov    (%eax),%edx
 8060f35:	89 55 e8             	mov    %edx,-0x18(%ebp)
 8060f38:	8b 50 04             	mov    0x4(%eax),%edx
 8060f3b:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8060f3e:	8b 40 08             	mov    0x8(%eax),%eax
 8060f41:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060f44:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8060f47:	8b 45 20             	mov    0x20(%ebp),%eax
 8060f4a:	01 d0                	add    %edx,%eax
 8060f4c:	01 45 a8             	add    %eax,-0x58(%ebp)
 8060f4f:	83 45 ac 01          	addl   $0x1,-0x54(%ebp)
 8060f53:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8060f56:	3b 45 ac             	cmp    -0x54(%ebp),%eax
 8060f59:	7f c7                	jg     8060f22 <array_string_join+0x57>
 8060f5b:	8b 45 20             	mov    0x20(%ebp),%eax
 8060f5e:	29 45 a8             	sub    %eax,-0x58(%ebp)
 8060f61:	c7 45 c0 34 97 06 08 	movl   $0x8069734,-0x40(%ebp)
 8060f68:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 8060f6f:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 8060f76:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8060f79:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8060f7c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8060f7f:	83 c0 01             	add    $0x1,%eax
 8060f82:	83 ec 0c             	sub    $0xc,%esp
 8060f85:	50                   	push   %eax
 8060f86:	e8 9c 69 ff ff       	call   8057927 <v_malloc>
 8060f8b:	83 c4 10             	add    $0x10,%esp
 8060f8e:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8060f91:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 8060f98:	8b 45 0c             	mov    0xc(%ebp),%eax
 8060f9b:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8060f9e:	8b 45 10             	mov    0x10(%ebp),%eax
 8060fa1:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8060fa4:	8b 45 14             	mov    0x14(%ebp),%eax
 8060fa7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8060faa:	8b 45 18             	mov    0x18(%ebp),%eax
 8060fad:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8060fb0:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 8060fb7:	e9 8d 00 00 00       	jmp    8061049 <array_string_join+0x17e>
 8060fbc:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 8060fbf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8060fc2:	89 d0                	mov    %edx,%eax
 8060fc4:	01 c0                	add    %eax,%eax
 8060fc6:	01 d0                	add    %edx,%eax
 8060fc8:	c1 e0 02             	shl    $0x2,%eax
 8060fcb:	01 c8                	add    %ecx,%eax
 8060fcd:	8b 10                	mov    (%eax),%edx
 8060fcf:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8060fd2:	8b 50 04             	mov    0x4(%eax),%edx
 8060fd5:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8060fd8:	8b 40 08             	mov    0x8(%eax),%eax
 8060fdb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8060fde:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 8060fe5:	eb 1d                	jmp    8061004 <array_string_join+0x139>
 8060fe7:	8b 55 c0             	mov    -0x40(%ebp),%edx
 8060fea:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8060fed:	01 c2                	add    %eax,%edx
 8060fef:	8b 4d cc             	mov    -0x34(%ebp),%ecx
 8060ff2:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8060ff5:	01 c8                	add    %ecx,%eax
 8060ff7:	0f b6 00             	movzbl (%eax),%eax
 8060ffa:	88 02                	mov    %al,(%edx)
 8060ffc:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 8061000:	83 45 b8 01          	addl   $0x1,-0x48(%ebp)
 8061004:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8061007:	3b 45 b8             	cmp    -0x48(%ebp),%eax
 806100a:	7f db                	jg     8060fe7 <array_string_join+0x11c>
 806100c:	8b 45 14             	mov    0x14(%ebp),%eax
 806100f:	83 e8 01             	sub    $0x1,%eax
 8061012:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 8061015:	74 2e                	je     8061045 <array_string_join+0x17a>
 8061017:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 806101e:	eb 1d                	jmp    806103d <array_string_join+0x172>
 8061020:	8b 55 c0             	mov    -0x40(%ebp),%edx
 8061023:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8061026:	01 c2                	add    %eax,%edx
 8061028:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
 806102b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806102e:	01 c8                	add    %ecx,%eax
 8061030:	0f b6 00             	movzbl (%eax),%eax
 8061033:	88 02                	mov    %al,(%edx)
 8061035:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 8061039:	83 45 bc 01          	addl   $0x1,-0x44(%ebp)
 806103d:	8b 45 20             	mov    0x20(%ebp),%eax
 8061040:	3b 45 bc             	cmp    -0x44(%ebp),%eax
 8061043:	7f db                	jg     8061020 <array_string_join+0x155>
 8061045:	83 45 b4 01          	addl   $0x1,-0x4c(%ebp)
 8061049:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806104c:	3b 45 b4             	cmp    -0x4c(%ebp),%eax
 806104f:	0f 8f 67 ff ff ff    	jg     8060fbc <array_string_join+0xf1>
 8061055:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8061058:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 806105b:	01 d0                	add    %edx,%eax
 806105d:	c6 00 00             	movb   $0x0,(%eax)
 8061060:	8b 45 08             	mov    0x8(%ebp),%eax
 8061063:	8b 55 c0             	mov    -0x40(%ebp),%edx
 8061066:	89 10                	mov    %edx,(%eax)
 8061068:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 806106b:	89 50 04             	mov    %edx,0x4(%eax)
 806106e:	8b 55 c8             	mov    -0x38(%ebp),%edx
 8061071:	89 50 08             	mov    %edx,0x8(%eax)
 8061074:	8b 45 08             	mov    0x8(%ebp),%eax
 8061077:	c9                   	leave  
 8061078:	c2 04 00             	ret    $0x4

0806107b <array_string_join_lines>:
 806107b:	55                   	push   %ebp
 806107c:	89 e5                	mov    %esp,%ebp
 806107e:	83 ec 28             	sub    $0x28,%esp
 8061081:	8b 45 08             	mov    0x8(%ebp),%eax
 8061084:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8061087:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 806108d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8061090:	31 c0                	xor    %eax,%eax
 8061092:	c7 45 e8 1b 9c 06 08 	movl   $0x8069c1b,-0x18(%ebp)
 8061099:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 80610a0:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 80610a7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80610aa:	ff 75 f0             	pushl  -0x10(%ebp)
 80610ad:	ff 75 ec             	pushl  -0x14(%ebp)
 80610b0:	ff 75 e8             	pushl  -0x18(%ebp)
 80610b3:	ff 75 18             	pushl  0x18(%ebp)
 80610b6:	ff 75 14             	pushl  0x14(%ebp)
 80610b9:	ff 75 10             	pushl  0x10(%ebp)
 80610bc:	ff 75 0c             	pushl  0xc(%ebp)
 80610bf:	50                   	push   %eax
 80610c0:	e8 06 fe ff ff       	call   8060ecb <array_string_join>
 80610c5:	83 c4 1c             	add    $0x1c,%esp
 80610c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80610cb:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80610ce:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80610d5:	74 05                	je     80610dc <array_string_join_lines+0x61>
 80610d7:	e8 44 77 fe ff       	call   8048820 <__stack_chk_fail@plt>
 80610dc:	c9                   	leave  
 80610dd:	c2 04 00             	ret    $0x4

080610e0 <string_reverse>:
 80610e0:	55                   	push   %ebp
 80610e1:	89 e5                	mov    %esp,%ebp
 80610e3:	53                   	push   %ebx
 80610e4:	83 ec 14             	sub    $0x14,%esp
 80610e7:	8b 45 10             	mov    0x10(%ebp),%eax
 80610ea:	85 c0                	test   %eax,%eax
 80610ec:	74 08                	je     80610f6 <string_reverse+0x16>
 80610ee:	8b 45 10             	mov    0x10(%ebp),%eax
 80610f1:	83 f8 01             	cmp    $0x1,%eax
 80610f4:	75 16                	jne    806110c <string_reverse+0x2c>
 80610f6:	8b 45 08             	mov    0x8(%ebp),%eax
 80610f9:	8b 55 0c             	mov    0xc(%ebp),%edx
 80610fc:	89 10                	mov    %edx,(%eax)
 80610fe:	8b 55 10             	mov    0x10(%ebp),%edx
 8061101:	89 50 04             	mov    %edx,0x4(%eax)
 8061104:	8b 55 14             	mov    0x14(%ebp),%edx
 8061107:	89 50 08             	mov    %edx,0x8(%eax)
 806110a:	eb 7b                	jmp    8061187 <string_reverse+0xa7>
 806110c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8061113:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 806111a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8061121:	8b 45 10             	mov    0x10(%ebp),%eax
 8061124:	83 ec 0c             	sub    $0xc,%esp
 8061127:	50                   	push   %eax
 8061128:	e8 fa 67 ff ff       	call   8057927 <v_malloc>
 806112d:	83 c4 10             	add    $0x10,%esp
 8061130:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8061133:	8b 45 10             	mov    0x10(%ebp),%eax
 8061136:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8061139:	8b 45 10             	mov    0x10(%ebp),%eax
 806113c:	83 e8 01             	sub    $0x1,%eax
 806113f:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8061142:	eb 29                	jmp    806116d <string_reverse+0x8d>
 8061144:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8061147:	8b 45 10             	mov    0x10(%ebp),%eax
 806114a:	2b 45 e8             	sub    -0x18(%ebp),%eax
 806114d:	83 e8 01             	sub    $0x1,%eax
 8061150:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 8061153:	ff 75 e8             	pushl  -0x18(%ebp)
 8061156:	ff 75 14             	pushl  0x14(%ebp)
 8061159:	ff 75 10             	pushl  0x10(%ebp)
 806115c:	ff 75 0c             	pushl  0xc(%ebp)
 806115f:	e8 d6 f7 ff ff       	call   806093a <string_at>
 8061164:	83 c4 10             	add    $0x10,%esp
 8061167:	88 03                	mov    %al,(%ebx)
 8061169:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)
 806116d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 8061171:	79 d1                	jns    8061144 <string_reverse+0x64>
 8061173:	8b 45 08             	mov    0x8(%ebp),%eax
 8061176:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8061179:	89 10                	mov    %edx,(%eax)
 806117b:	8b 55 f0             	mov    -0x10(%ebp),%edx
 806117e:	89 50 04             	mov    %edx,0x4(%eax)
 8061181:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8061184:	89 50 08             	mov    %edx,0x8(%eax)
 8061187:	8b 45 08             	mov    0x8(%ebp),%eax
 806118a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 806118d:	c9                   	leave  
 806118e:	c2 04 00             	ret    $0x4

08061191 <string_limit>:
 8061191:	55                   	push   %ebp
 8061192:	89 e5                	mov    %esp,%ebp
 8061194:	83 ec 48             	sub    $0x48,%esp
 8061197:	8b 45 08             	mov    0x8(%ebp),%eax
 806119a:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 806119d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80611a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80611a6:	31 c0                	xor    %eax,%eax
 80611a8:	8d 45 d4             	lea    -0x2c(%ebp),%eax
 80611ab:	ff 75 14             	pushl  0x14(%ebp)
 80611ae:	ff 75 10             	pushl  0x10(%ebp)
 80611b1:	ff 75 0c             	pushl  0xc(%ebp)
 80611b4:	50                   	push   %eax
 80611b5:	e8 53 ee ff ff       	call   806000d <string_ustring>
 80611ba:	83 c4 0c             	add    $0xc,%esp
 80611bd:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80611c0:	3b 45 18             	cmp    0x18(%ebp),%eax
 80611c3:	7f 16                	jg     80611db <string_limit+0x4a>
 80611c5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80611c8:	8b 55 0c             	mov    0xc(%ebp),%edx
 80611cb:	89 10                	mov    %edx,(%eax)
 80611cd:	8b 55 10             	mov    0x10(%ebp),%edx
 80611d0:	89 50 04             	mov    %edx,0x4(%eax)
 80611d3:	8b 55 14             	mov    0x14(%ebp),%edx
 80611d6:	89 50 08             	mov    %edx,0x8(%eax)
 80611d9:	eb 2c                	jmp    8061207 <string_limit+0x76>
 80611db:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80611de:	83 ec 04             	sub    $0x4,%esp
 80611e1:	ff 75 18             	pushl  0x18(%ebp)
 80611e4:	6a 00                	push   $0x0
 80611e6:	ff 75 f0             	pushl  -0x10(%ebp)
 80611e9:	ff 75 ec             	pushl  -0x14(%ebp)
 80611ec:	ff 75 e8             	pushl  -0x18(%ebp)
 80611ef:	ff 75 e4             	pushl  -0x1c(%ebp)
 80611f2:	ff 75 e0             	pushl  -0x20(%ebp)
 80611f5:	ff 75 dc             	pushl  -0x24(%ebp)
 80611f8:	ff 75 d8             	pushl  -0x28(%ebp)
 80611fb:	ff 75 d4             	pushl  -0x2c(%ebp)
 80611fe:	50                   	push   %eax
 80611ff:	e8 4e f5 ff ff       	call   8060752 <ustring_substr>
 8061204:	83 c4 2c             	add    $0x2c,%esp
 8061207:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806120a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 806120d:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8061214:	74 05                	je     806121b <string_limit+0x8a>
 8061216:	e8 05 76 fe ff       	call   8048820 <__stack_chk_fail@plt>
 806121b:	c9                   	leave  
 806121c:	c2 04 00             	ret    $0x4

0806121f <byte_is_white>:
 806121f:	55                   	push   %ebp
 8061220:	89 e5                	mov    %esp,%ebp
 8061222:	83 ec 28             	sub    $0x28,%esp
 8061225:	8b 45 08             	mov    0x8(%ebp),%eax
 8061228:	88 45 e4             	mov    %al,-0x1c(%ebp)
 806122b:	c7 45 ec 38 9f 06 08 	movl   $0x8069f38,-0x14(%ebp)
 8061232:	c7 45 f0 4d 00 00 00 	movl   $0x4d,-0x10(%ebp)
 8061239:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 8061240:	83 ec 04             	sub    $0x4,%esp
 8061243:	ff 75 f4             	pushl  -0xc(%ebp)
 8061246:	ff 75 f0             	pushl  -0x10(%ebp)
 8061249:	ff 75 ec             	pushl  -0x14(%ebp)
 806124c:	e8 a1 65 ff ff       	call   80577f2 <eprintln>
 8061251:	83 c4 10             	add    $0x10,%esp
 8061254:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8061258:	83 ec 0c             	sub    $0xc,%esp
 806125b:	50                   	push   %eax
 806125c:	e8 ba e6 ff ff       	call   805f91b <byte_is_space>
 8061261:	83 c4 10             	add    $0x10,%esp
 8061264:	c9                   	leave  
 8061265:	c3                   	ret    

08061266 <string_hash>:
 8061266:	55                   	push   %ebp
 8061267:	89 e5                	mov    %esp,%ebp
 8061269:	83 ec 10             	sub    $0x10,%esp
 806126c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8061273:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 8061277:	75 3f                	jne    80612b8 <string_hash+0x52>
 8061279:	8b 45 0c             	mov    0xc(%ebp),%eax
 806127c:	85 c0                	test   %eax,%eax
 806127e:	7e 38                	jle    80612b8 <string_hash+0x52>
 8061280:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8061287:	eb 27                	jmp    80612b0 <string_hash+0x4a>
 8061289:	8b 55 08             	mov    0x8(%ebp),%edx
 806128c:	8b 45 fc             	mov    -0x4(%ebp),%eax
 806128f:	01 d0                	add    %edx,%eax
 8061291:	0f b6 00             	movzbl (%eax),%eax
 8061294:	88 45 f7             	mov    %al,-0x9(%ebp)
 8061297:	8b 55 f8             	mov    -0x8(%ebp),%edx
 806129a:	89 d0                	mov    %edx,%eax
 806129c:	c1 e0 05             	shl    $0x5,%eax
 806129f:	29 d0                	sub    %edx,%eax
 80612a1:	89 c2                	mov    %eax,%edx
 80612a3:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
 80612a7:	01 d0                	add    %edx,%eax
 80612a9:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80612ac:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 80612b0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80612b3:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 80612b6:	7f d1                	jg     8061289 <string_hash+0x23>
 80612b8:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80612bb:	c9                   	leave  
 80612bc:	c3                   	ret    

080612bd <string_bytes>:
 80612bd:	55                   	push   %ebp
 80612be:	89 e5                	mov    %esp,%ebp
 80612c0:	83 ec 38             	sub    $0x38,%esp
 80612c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80612c6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80612c9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80612cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80612d2:	31 c0                	xor    %eax,%eax
 80612d4:	8b 45 10             	mov    0x10(%ebp),%eax
 80612d7:	85 c0                	test   %eax,%eax
 80612d9:	75 19                	jne    80612f4 <string_bytes+0x37>
 80612db:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80612de:	83 ec 0c             	sub    $0xc,%esp
 80612e1:	6a 00                	push   $0x0
 80612e3:	6a 01                	push   $0x1
 80612e5:	6a 00                	push   $0x0
 80612e7:	6a 00                	push   $0x0
 80612e9:	50                   	push   %eax
 80612ea:	e8 7a 47 ff ff       	call   8055a69 <__new_array_with_default>
 80612ef:	83 c4 1c             	add    $0x1c,%esp
 80612f2:	eb 4c                	jmp    8061340 <string_bytes+0x83>
 80612f4:	8b 55 10             	mov    0x10(%ebp),%edx
 80612f7:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 80612fa:	83 ec 0c             	sub    $0xc,%esp
 80612fd:	6a 00                	push   $0x0
 80612ff:	6a 01                	push   $0x1
 8061301:	6a 00                	push   $0x0
 8061303:	52                   	push   %edx
 8061304:	50                   	push   %eax
 8061305:	e8 5f 47 ff ff       	call   8055a69 <__new_array_with_default>
 806130a:	83 c4 1c             	add    $0x1c,%esp
 806130d:	8b 45 10             	mov    0x10(%ebp),%eax
 8061310:	89 c1                	mov    %eax,%ecx
 8061312:	8b 55 0c             	mov    0xc(%ebp),%edx
 8061315:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8061318:	83 ec 04             	sub    $0x4,%esp
 806131b:	51                   	push   %ecx
 806131c:	52                   	push   %edx
 806131d:	50                   	push   %eax
 806131e:	e8 9d 74 fe ff       	call   80487c0 <memcpy@plt>
 8061323:	83 c4 10             	add    $0x10,%esp
 8061326:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8061329:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 806132c:	89 10                	mov    %edx,(%eax)
 806132e:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8061331:	89 50 04             	mov    %edx,0x4(%eax)
 8061334:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8061337:	89 50 08             	mov    %edx,0x8(%eax)
 806133a:	8b 55 f0             	mov    -0x10(%ebp),%edx
 806133d:	89 50 0c             	mov    %edx,0xc(%eax)
 8061340:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8061343:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8061346:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 806134d:	74 05                	je     8061354 <string_bytes+0x97>
 806134f:	e8 cc 74 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8061354:	c9                   	leave  
 8061355:	c2 04 00             	ret    $0x4

08061358 <string_repeat>:
 8061358:	55                   	push   %ebp
 8061359:	89 e5                	mov    %esp,%ebp
 806135b:	53                   	push   %ebx
 806135c:	83 ec 34             	sub    $0x34,%esp
 806135f:	8b 45 08             	mov    0x8(%ebp),%eax
 8061362:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8061365:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 806136b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806136e:	31 c0                	xor    %eax,%eax
 8061370:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 8061374:	79 2c                	jns    80613a2 <string_repeat+0x4a>
 8061376:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8061379:	ff 75 18             	pushl  0x18(%ebp)
 806137c:	6a 01                	push   $0x1
 806137e:	68 88 9f 06 08       	push   $0x8069f88
 8061383:	50                   	push   %eax
 8061384:	e8 3b 81 fe ff       	call   80494c4 <_STR>
 8061389:	83 c4 0c             	add    $0xc,%esp
 806138c:	83 ec 04             	sub    $0x4,%esp
 806138f:	ff 75 f0             	pushl  -0x10(%ebp)
 8061392:	ff 75 ec             	pushl  -0x14(%ebp)
 8061395:	ff 75 e8             	pushl  -0x18(%ebp)
 8061398:	e8 fa 63 ff ff       	call   8057797 <v_panic>
 806139d:	83 c4 10             	add    $0x10,%esp
 80613a0:	eb 47                	jmp    80613e9 <string_repeat+0x91>
 80613a2:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 80613a6:	75 22                	jne    80613ca <string_repeat+0x72>
 80613a8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80613ab:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 80613b1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80613b4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 80613bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80613be:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 80613c5:	e9 b8 00 00 00       	jmp    8061482 <string_repeat+0x12a>
 80613ca:	83 7d 18 01          	cmpl   $0x1,0x18(%ebp)
 80613ce:	75 19                	jne    80613e9 <string_repeat+0x91>
 80613d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80613d3:	8b 55 0c             	mov    0xc(%ebp),%edx
 80613d6:	89 10                	mov    %edx,(%eax)
 80613d8:	8b 55 10             	mov    0x10(%ebp),%edx
 80613db:	89 50 04             	mov    %edx,0x4(%eax)
 80613de:	8b 55 14             	mov    0x14(%ebp),%edx
 80613e1:	89 50 08             	mov    %edx,0x8(%eax)
 80613e4:	e9 99 00 00 00       	jmp    8061482 <string_repeat+0x12a>
 80613e9:	8b 45 10             	mov    0x10(%ebp),%eax
 80613ec:	0f af 45 18          	imul   0x18(%ebp),%eax
 80613f0:	83 c0 01             	add    $0x1,%eax
 80613f3:	83 ec 0c             	sub    $0xc,%esp
 80613f6:	50                   	push   %eax
 80613f7:	e8 2b 65 ff ff       	call   8057927 <v_malloc>
 80613fc:	83 c4 10             	add    $0x10,%esp
 80613ff:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8061402:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 8061409:	eb 45                	jmp    8061450 <string_repeat+0xf8>
 806140b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 8061412:	eb 30                	jmp    8061444 <string_repeat+0xec>
 8061414:	8b 45 10             	mov    0x10(%ebp),%eax
 8061417:	0f af 45 d8          	imul   -0x28(%ebp),%eax
 806141b:	89 c2                	mov    %eax,%edx
 806141d:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8061420:	01 d0                	add    %edx,%eax
 8061422:	89 c2                	mov    %eax,%edx
 8061424:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8061427:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 806142a:	ff 75 dc             	pushl  -0x24(%ebp)
 806142d:	ff 75 14             	pushl  0x14(%ebp)
 8061430:	ff 75 10             	pushl  0x10(%ebp)
 8061433:	ff 75 0c             	pushl  0xc(%ebp)
 8061436:	e8 ff f4 ff ff       	call   806093a <string_at>
 806143b:	83 c4 10             	add    $0x10,%esp
 806143e:	88 03                	mov    %al,(%ebx)
 8061440:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 8061444:	8b 45 10             	mov    0x10(%ebp),%eax
 8061447:	3b 45 dc             	cmp    -0x24(%ebp),%eax
 806144a:	7f c8                	jg     8061414 <string_repeat+0xbc>
 806144c:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 8061450:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8061453:	3b 45 18             	cmp    0x18(%ebp),%eax
 8061456:	7c b3                	jl     806140b <string_repeat+0xb3>
 8061458:	8b 45 10             	mov    0x10(%ebp),%eax
 806145b:	0f af 45 18          	imul   0x18(%ebp),%eax
 806145f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8061462:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8061465:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8061468:	01 d0                	add    %edx,%eax
 806146a:	c6 00 00             	movb   $0x0,(%eax)
 806146d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8061470:	83 ec 04             	sub    $0x4,%esp
 8061473:	ff 75 e4             	pushl  -0x1c(%ebp)
 8061476:	ff 75 e0             	pushl  -0x20(%ebp)
 8061479:	50                   	push   %eax
 806147a:	e8 95 c1 ff ff       	call   805d614 <byteptr_vstring_with_len>
 806147f:	83 c4 0c             	add    $0xc,%esp
 8061482:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8061485:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8061488:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 806148f:	74 05                	je     8061496 <string_repeat+0x13e>
 8061491:	e8 8a 73 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8061496:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8061499:	c9                   	leave  
 806149a:	c2 04 00             	ret    $0x4

0806149d <string_fields>:
 806149d:	55                   	push   %ebp
 806149e:	89 e5                	mov    %esp,%ebp
 80614a0:	83 ec 58             	sub    $0x58,%esp
 80614a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80614a6:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80614a9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80614af:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80614b2:	31 c0                	xor    %eax,%eax
 80614b4:	c7 45 dc 97 97 06 08 	movl   $0x8069797,-0x24(%ebp)
 80614bb:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 80614c2:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 80614c9:	c7 45 d0 97 97 06 08 	movl   $0x8069797,-0x30(%ebp)
 80614d0:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 80614d7:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 80614de:	c7 45 c4 ad 9f 06 08 	movl   $0x8069fad,-0x3c(%ebp)
 80614e5:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 80614ec:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 80614f3:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80614f6:	83 ec 08             	sub    $0x8,%esp
 80614f9:	ff 75 d8             	pushl  -0x28(%ebp)
 80614fc:	ff 75 d4             	pushl  -0x2c(%ebp)
 80614ff:	ff 75 d0             	pushl  -0x30(%ebp)
 8061502:	ff 75 cc             	pushl  -0x34(%ebp)
 8061505:	ff 75 c8             	pushl  -0x38(%ebp)
 8061508:	ff 75 c4             	pushl  -0x3c(%ebp)
 806150b:	ff 75 14             	pushl  0x14(%ebp)
 806150e:	ff 75 10             	pushl  0x10(%ebp)
 8061511:	ff 75 0c             	pushl  0xc(%ebp)
 8061514:	50                   	push   %eax
 8061515:	e8 b9 c3 ff ff       	call   805d8d3 <string_replace>
 806151a:	83 c4 2c             	add    $0x2c,%esp
 806151d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8061520:	83 ec 04             	sub    $0x4,%esp
 8061523:	ff 75 e4             	pushl  -0x1c(%ebp)
 8061526:	ff 75 e0             	pushl  -0x20(%ebp)
 8061529:	ff 75 dc             	pushl  -0x24(%ebp)
 806152c:	ff 75 f0             	pushl  -0x10(%ebp)
 806152f:	ff 75 ec             	pushl  -0x14(%ebp)
 8061532:	ff 75 e8             	pushl  -0x18(%ebp)
 8061535:	50                   	push   %eax
 8061536:	e8 c9 cd ff ff       	call   805e304 <string_split>
 806153b:	83 c4 1c             	add    $0x1c,%esp
 806153e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8061541:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8061544:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 806154b:	74 05                	je     8061552 <string_fields+0xb5>
 806154d:	e8 ce 72 fe ff       	call   8048820 <__stack_chk_fail@plt>
 8061552:	c9                   	leave  
 8061553:	c2 04 00             	ret    $0x4

08061556 <string_strip_margin>:
 8061556:	55                   	push   %ebp
 8061557:	89 e5                	mov    %esp,%ebp
 8061559:	83 ec 28             	sub    $0x28,%esp
 806155c:	8b 45 08             	mov    0x8(%ebp),%eax
 806155f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8061562:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8061568:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806156b:	31 c0                	xor    %eax,%eax
 806156d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061570:	83 ec 0c             	sub    $0xc,%esp
 8061573:	6a 7c                	push   $0x7c
 8061575:	ff 75 14             	pushl  0x14(%ebp)
 8061578:	ff 75 10             	pushl  0x10(%ebp)
 806157b:	ff 75 0c             	pushl  0xc(%ebp)
 806157e:	50                   	push   %eax
 806157f:	e8 1b 00 00 00       	call   806159f <string_strip_margin_custom>
 8061584:	83 c4 1c             	add    $0x1c,%esp
 8061587:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806158a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 806158d:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8061594:	74 05                	je     806159b <string_strip_margin+0x45>
 8061596:	e8 85 72 fe ff       	call   8048820 <__stack_chk_fail@plt>
 806159b:	c9                   	leave  
 806159c:	c2 04 00             	ret    $0x4

0806159f <string_strip_margin_custom>:
 806159f:	55                   	push   %ebp
 80615a0:	89 e5                	mov    %esp,%ebp
 80615a2:	53                   	push   %ebx
 80615a3:	83 ec 44             	sub    $0x44,%esp
 80615a6:	8b 45 18             	mov    0x18(%ebp),%eax
 80615a9:	8b 55 08             	mov    0x8(%ebp),%edx
 80615ac:	89 55 c4             	mov    %edx,-0x3c(%ebp)
 80615af:	88 45 c0             	mov    %al,-0x40(%ebp)
 80615b2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80615b8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80615bb:	31 c0                	xor    %eax,%eax
 80615bd:	0f b6 45 c0          	movzbl -0x40(%ebp),%eax
 80615c1:	88 45 cf             	mov    %al,-0x31(%ebp)
 80615c4:	0f b6 45 cf          	movzbl -0x31(%ebp),%eax
 80615c8:	50                   	push   %eax
 80615c9:	e8 4d e3 ff ff       	call   805f91b <byte_is_space>
 80615ce:	83 c4 04             	add    $0x4,%esp
 80615d1:	85 c0                	test   %eax,%eax
 80615d3:	74 56                	je     806162b <string_strip_margin_custom+0x8c>
 80615d5:	c7 45 dc b0 9f 06 08 	movl   $0x8069fb0,-0x24(%ebp)
 80615dc:	c7 45 e0 3d 00 00 00 	movl   $0x3d,-0x20(%ebp)
 80615e3:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 80615ea:	83 ec 04             	sub    $0x4,%esp
 80615ed:	ff 75 e4             	pushl  -0x1c(%ebp)
 80615f0:	ff 75 e0             	pushl  -0x20(%ebp)
 80615f3:	ff 75 dc             	pushl  -0x24(%ebp)
 80615f6:	e8 f7 61 ff ff       	call   80577f2 <eprintln>
 80615fb:	83 c4 10             	add    $0x10,%esp
 80615fe:	c7 45 e8 ee 9f 06 08 	movl   $0x8069fee,-0x18(%ebp)
 8061605:	c7 45 ec 15 00 00 00 	movl   $0x15,-0x14(%ebp)
 806160c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8061613:	83 ec 04             	sub    $0x4,%esp
 8061616:	ff 75 f0             	pushl  -0x10(%ebp)
 8061619:	ff 75 ec             	pushl  -0x14(%ebp)
 806161c:	ff 75 e8             	pushl  -0x18(%ebp)
 806161f:	e8 ce 61 ff ff       	call   80577f2 <eprintln>
 8061624:	83 c4 10             	add    $0x10,%esp
 8061627:	c6 45 cf 7c          	movb   $0x7c,-0x31(%ebp)
 806162b:	8b 45 10             	mov    0x10(%ebp),%eax
 806162e:	83 c0 01             	add    $0x1,%eax
 8061631:	83 ec 0c             	sub    $0xc,%esp
 8061634:	50                   	push   %eax
 8061635:	e8 ed 62 ff ff       	call   8057927 <v_malloc>
 806163a:	83 c4 10             	add    $0x10,%esp
 806163d:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8061640:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 8061647:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 806164e:	e9 15 01 00 00       	jmp    8061768 <string_strip_margin_custom+0x1c9>
 8061653:	ff 75 d4             	pushl  -0x2c(%ebp)
 8061656:	ff 75 14             	pushl  0x14(%ebp)
 8061659:	ff 75 10             	pushl  0x10(%ebp)
 806165c:	ff 75 0c             	pushl  0xc(%ebp)
 806165f:	e8 d6 f2 ff ff       	call   806093a <string_at>
 8061664:	83 c4 10             	add    $0x10,%esp
 8061667:	3c 0a                	cmp    $0xa,%al
 8061669:	74 1c                	je     8061687 <string_strip_margin_custom+0xe8>
 806166b:	ff 75 d4             	pushl  -0x2c(%ebp)
 806166e:	ff 75 14             	pushl  0x14(%ebp)
 8061671:	ff 75 10             	pushl  0x10(%ebp)
 8061674:	ff 75 0c             	pushl  0xc(%ebp)
 8061677:	e8 be f2 ff ff       	call   806093a <string_at>
 806167c:	83 c4 10             	add    $0x10,%esp
 806167f:	3c 0d                	cmp    $0xd,%al
 8061681:	0f 85 ba 00 00 00    	jne    8061741 <string_strip_margin_custom+0x1a2>
 8061687:	8b 55 d0             	mov    -0x30(%ebp),%edx
 806168a:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806168d:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 8061690:	ff 75 d4             	pushl  -0x2c(%ebp)
 8061693:	ff 75 14             	pushl  0x14(%ebp)
 8061696:	ff 75 10             	pushl  0x10(%ebp)
 8061699:	ff 75 0c             	pushl  0xc(%ebp)
 806169c:	e8 99 f2 ff ff       	call   806093a <string_at>
 80616a1:	83 c4 10             	add    $0x10,%esp
 80616a4:	88 03                	mov    %al,(%ebx)
 80616a6:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 80616aa:	ff 75 d4             	pushl  -0x2c(%ebp)
 80616ad:	ff 75 14             	pushl  0x14(%ebp)
 80616b0:	ff 75 10             	pushl  0x10(%ebp)
 80616b3:	ff 75 0c             	pushl  0xc(%ebp)
 80616b6:	e8 7f f2 ff ff       	call   806093a <string_at>
 80616bb:	83 c4 10             	add    $0x10,%esp
 80616be:	3c 0d                	cmp    $0xd,%al
 80616c0:	75 52                	jne    8061714 <string_strip_margin_custom+0x175>
 80616c2:	8b 45 10             	mov    0x10(%ebp),%eax
 80616c5:	83 e8 01             	sub    $0x1,%eax
 80616c8:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 80616cb:	7e 47                	jle    8061714 <string_strip_margin_custom+0x175>
 80616cd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80616d0:	83 c0 01             	add    $0x1,%eax
 80616d3:	50                   	push   %eax
 80616d4:	ff 75 14             	pushl  0x14(%ebp)
 80616d7:	ff 75 10             	pushl  0x10(%ebp)
 80616da:	ff 75 0c             	pushl  0xc(%ebp)
 80616dd:	e8 58 f2 ff ff       	call   806093a <string_at>
 80616e2:	83 c4 10             	add    $0x10,%esp
 80616e5:	3c 0a                	cmp    $0xa,%al
 80616e7:	75 2b                	jne    8061714 <string_strip_margin_custom+0x175>
 80616e9:	8b 55 d0             	mov    -0x30(%ebp),%edx
 80616ec:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80616ef:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 80616f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80616f5:	83 c0 01             	add    $0x1,%eax
 80616f8:	50                   	push   %eax
 80616f9:	ff 75 14             	pushl  0x14(%ebp)
 80616fc:	ff 75 10             	pushl  0x10(%ebp)
 80616ff:	ff 75 0c             	pushl  0xc(%ebp)
 8061702:	e8 33 f2 ff ff       	call   806093a <string_at>
 8061707:	83 c4 10             	add    $0x10,%esp
 806170a:	88 03                	mov    %al,(%ebx)
 806170c:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 8061710:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 8061714:	ff 75 d4             	pushl  -0x2c(%ebp)
 8061717:	ff 75 14             	pushl  0x14(%ebp)
 806171a:	ff 75 10             	pushl  0x10(%ebp)
 806171d:	ff 75 0c             	pushl  0xc(%ebp)
 8061720:	e8 15 f2 ff ff       	call   806093a <string_at>
 8061725:	83 c4 10             	add    $0x10,%esp
 8061728:	3a 45 cf             	cmp    -0x31(%ebp),%al
 806172b:	74 0e                	je     806173b <string_strip_margin_custom+0x19c>
 806172d:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 8061731:	8b 45 10             	mov    0x10(%ebp),%eax
 8061734:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 8061737:	7e 05                	jle    806173e <string_strip_margin_custom+0x19f>
 8061739:	eb d9                	jmp    8061714 <string_strip_margin_custom+0x175>
 806173b:	90                   	nop
 806173c:	eb 26                	jmp    8061764 <string_strip_margin_custom+0x1c5>
 806173e:	90                   	nop
 806173f:	eb 23                	jmp    8061764 <string_strip_margin_custom+0x1c5>
 8061741:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8061744:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8061747:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
 806174a:	ff 75 d4             	pushl  -0x2c(%ebp)
 806174d:	ff 75 14             	pushl  0x14(%ebp)
 8061750:	ff 75 10             	pushl  0x10(%ebp)
 8061753:	ff 75 0c             	pushl  0xc(%ebp)
 8061756:	e8 df f1 ff ff       	call   806093a <string_at>
 806175b:	83 c4 10             	add    $0x10,%esp
 806175e:	88 03                	mov    %al,(%ebx)
 8061760:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 8061764:	83 45 d4 01          	addl   $0x1,-0x2c(%ebp)
 8061768:	8b 45 10             	mov    0x10(%ebp),%eax
 806176b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
 806176e:	0f 8f df fe ff ff    	jg     8061653 <string_strip_margin_custom+0xb4>
 8061774:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8061777:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806177a:	01 d0                	add    %edx,%eax
 806177c:	c6 00 00             	movb   $0x0,(%eax)
 806177f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8061782:	83 ec 04             	sub    $0x4,%esp
 8061785:	ff 75 d0             	pushl  -0x30(%ebp)
 8061788:	ff 75 d8             	pushl  -0x28(%ebp)
 806178b:	50                   	push   %eax
 806178c:	e8 83 be ff ff       	call   805d614 <byteptr_vstring_with_len>
 8061791:	83 c4 0c             	add    $0xc,%esp
 8061794:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8061797:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 806179a:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 80617a1:	74 05                	je     80617a8 <string_strip_margin_custom+0x209>
 80617a3:	e8 78 70 fe ff       	call   8048820 <__stack_chk_fail@plt>
 80617a8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80617ab:	c9                   	leave  
 80617ac:	c2 04 00             	ret    $0x4

080617af <string_split_by_whitespace>:
 80617af:	55                   	push   %ebp
 80617b0:	89 e5                	mov    %esp,%ebp
 80617b2:	83 ec 68             	sub    $0x68,%esp
 80617b5:	8b 45 08             	mov    0x8(%ebp),%eax
 80617b8:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 80617bb:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80617c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80617c4:	31 c0                	xor    %eax,%eax
 80617c6:	8d 45 cc             	lea    -0x34(%ebp),%eax
 80617c9:	83 ec 0c             	sub    $0xc,%esp
 80617cc:	6a 00                	push   $0x0
 80617ce:	6a 0c                	push   $0xc
 80617d0:	6a 00                	push   $0x0
 80617d2:	6a 00                	push   $0x0
 80617d4:	50                   	push   %eax
 80617d5:	e8 8f 42 ff ff       	call   8055a69 <__new_array_with_default>
 80617da:	83 c4 1c             	add    $0x1c,%esp
 80617dd:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 80617e4:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 80617eb:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 80617f2:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 80617f9:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 8061800:	e9 a7 00 00 00       	jmp    80618ac <string_split_by_whitespace+0xfd>
 8061805:	8b 55 0c             	mov    0xc(%ebp),%edx
 8061808:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806180b:	01 d0                	add    %edx,%eax
 806180d:	0f b6 00             	movzbl (%eax),%eax
 8061810:	88 45 b7             	mov    %al,-0x49(%ebp)
 8061813:	80 7d b7 20          	cmpb   $0x20,-0x49(%ebp)
 8061817:	74 0c                	je     8061825 <string_split_by_whitespace+0x76>
 8061819:	80 7d b7 09          	cmpb   $0x9,-0x49(%ebp)
 806181d:	74 06                	je     8061825 <string_split_by_whitespace+0x76>
 806181f:	80 7d b7 0a          	cmpb   $0xa,-0x49(%ebp)
 8061823:	75 07                	jne    806182c <string_split_by_whitespace+0x7d>
 8061825:	b8 01 00 00 00       	mov    $0x1,%eax
 806182a:	eb 05                	jmp    8061831 <string_split_by_whitespace+0x82>
 806182c:	b8 00 00 00 00       	mov    $0x0,%eax
 8061831:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8061834:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
 8061838:	75 15                	jne    806184f <string_split_by_whitespace+0xa0>
 806183a:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 806183e:	75 0f                	jne    806184f <string_split_by_whitespace+0xa0>
 8061840:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8061843:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8061846:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
 806184d:	eb 59                	jmp    80618a8 <string_split_by_whitespace+0xf9>
 806184f:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 8061853:	74 53                	je     80618a8 <string_split_by_whitespace+0xf9>
 8061855:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
 8061859:	74 4d                	je     80618a8 <string_split_by_whitespace+0xf9>
 806185b:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806185e:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8061861:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8061864:	83 ec 08             	sub    $0x8,%esp
 8061867:	ff 75 c4             	pushl  -0x3c(%ebp)
 806186a:	ff 75 b8             	pushl  -0x48(%ebp)
 806186d:	ff 75 14             	pushl  0x14(%ebp)
 8061870:	ff 75 10             	pushl  0x10(%ebp)
 8061873:	ff 75 0c             	pushl  0xc(%ebp)
 8061876:	50                   	push   %eax
 8061877:	e8 45 d0 ff ff       	call   805e8c1 <string_substr>
 806187c:	83 c4 1c             	add    $0x1c,%esp
 806187f:	83 ec 08             	sub    $0x8,%esp
 8061882:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8061885:	50                   	push   %eax
 8061886:	8d 45 cc             	lea    -0x34(%ebp),%eax
 8061889:	50                   	push   %eax
 806188a:	e8 2b 51 ff ff       	call   80569ba <array_push>
 806188f:	83 c4 10             	add    $0x10,%esp
 8061892:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 8061899:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 80618a0:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 80618a7:	90                   	nop
 80618a8:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 80618ac:	8b 45 10             	mov    0x10(%ebp),%eax
 80618af:	3b 45 c0             	cmp    -0x40(%ebp),%eax
 80618b2:	0f 8f 4d ff ff ff    	jg     8061805 <string_split_by_whitespace+0x56>
 80618b8:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
 80618bc:	74 38                	je     80618f6 <string_split_by_whitespace+0x147>
 80618be:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)
 80618c2:	7e 32                	jle    80618f6 <string_split_by_whitespace+0x147>
 80618c4:	8b 55 10             	mov    0x10(%ebp),%edx
 80618c7:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80618ca:	83 ec 08             	sub    $0x8,%esp
 80618cd:	52                   	push   %edx
 80618ce:	ff 75 b8             	pushl  -0x48(%ebp)
 80618d1:	ff 75 14             	pushl  0x14(%ebp)
 80618d4:	ff 75 10             	pushl  0x10(%ebp)
 80618d7:	ff 75 0c             	pushl  0xc(%ebp)
 80618da:	50                   	push   %eax
 80618db:	e8 e1 cf ff ff       	call   805e8c1 <string_substr>
 80618e0:	83 c4 1c             	add    $0x1c,%esp
 80618e3:	83 ec 08             	sub    $0x8,%esp
 80618e6:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80618e9:	50                   	push   %eax
 80618ea:	8d 45 cc             	lea    -0x34(%ebp),%eax
 80618ed:	50                   	push   %eax
 80618ee:	e8 c7 50 ff ff       	call   80569ba <array_push>
 80618f3:	83 c4 10             	add    $0x10,%esp
 80618f6:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80618f9:	8b 55 cc             	mov    -0x34(%ebp),%edx
 80618fc:	89 10                	mov    %edx,(%eax)
 80618fe:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8061901:	89 50 04             	mov    %edx,0x4(%eax)
 8061904:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8061907:	89 50 08             	mov    %edx,0x8(%eax)
 806190a:	8b 55 d8             	mov    -0x28(%ebp),%edx
 806190d:	89 50 0c             	mov    %edx,0xc(%eax)
 8061910:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8061913:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8061916:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 806191d:	74 05                	je     8061924 <string_split_by_whitespace+0x175>
 806191f:	e8 fc 6e fe ff       	call   8048820 <__stack_chk_fail@plt>
 8061924:	c9                   	leave  
 8061925:	c2 04 00             	ret    $0x4

08061928 <string_to_wide>:
 8061928:	55                   	push   %ebp
 8061929:	89 e5                	mov    %esp,%ebp
 806192b:	b8 00 00 00 00       	mov    $0x0,%eax
 8061930:	5d                   	pop    %ebp
 8061931:	c3                   	ret    

08061932 <string_from_wide>:
 8061932:	55                   	push   %ebp
 8061933:	89 e5                	mov    %esp,%ebp
 8061935:	8b 45 08             	mov    0x8(%ebp),%eax
 8061938:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 806193e:	8b 45 08             	mov    0x8(%ebp),%eax
 8061941:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8061948:	8b 45 08             	mov    0x8(%ebp),%eax
 806194b:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8061952:	8b 45 08             	mov    0x8(%ebp),%eax
 8061955:	5d                   	pop    %ebp
 8061956:	c2 04 00             	ret    $0x4

08061959 <string_from_wide2>:
 8061959:	55                   	push   %ebp
 806195a:	89 e5                	mov    %esp,%ebp
 806195c:	8b 45 08             	mov    0x8(%ebp),%eax
 806195f:	c7 00 34 97 06 08    	movl   $0x8069734,(%eax)
 8061965:	8b 45 08             	mov    0x8(%ebp),%eax
 8061968:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 806196f:	8b 45 08             	mov    0x8(%ebp),%eax
 8061972:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8061979:	8b 45 08             	mov    0x8(%ebp),%eax
 806197c:	5d                   	pop    %ebp
 806197d:	c2 04 00             	ret    $0x4

08061980 <utf8_getchar>:
 8061980:	55                   	push   %ebp
 8061981:	89 e5                	mov    %esp,%ebp
 8061983:	83 ec 28             	sub    $0x28,%esp
 8061986:	e8 45 6e fe ff       	call   80487d0 <getchar@plt>
 806198b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 806198e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8061991:	f7 d0                	not    %eax
 8061993:	0f b6 c0             	movzbl %al,%eax
 8061996:	83 ec 0c             	sub    $0xc,%esp
 8061999:	50                   	push   %eax
 806199a:	e8 b5 03 00 00       	call   8061d54 <utf8_len>
 806199f:	83 c4 10             	add    $0x10,%esp
 80619a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80619a5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 80619a9:	79 0a                	jns    80619b5 <utf8_getchar+0x35>
 80619ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80619b0:	e9 8e 00 00 00       	jmp    8061a43 <utf8_getchar+0xc3>
 80619b5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 80619b9:	75 08                	jne    80619c3 <utf8_getchar+0x43>
 80619bb:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80619be:	e9 80 00 00 00       	jmp    8061a43 <utf8_getchar+0xc3>
 80619c3:	83 7d f0 01          	cmpl   $0x1,-0x10(%ebp)
 80619c7:	75 07                	jne    80619d0 <utf8_getchar+0x50>
 80619c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80619ce:	eb 73                	jmp    8061a43 <utf8_getchar+0xc3>
 80619d0:	b8 07 00 00 00       	mov    $0x7,%eax
 80619d5:	2b 45 f0             	sub    -0x10(%ebp),%eax
 80619d8:	ba 01 00 00 00       	mov    $0x1,%edx
 80619dd:	89 c1                	mov    %eax,%ecx
 80619df:	d3 e2                	shl    %cl,%edx
 80619e1:	89 d0                	mov    %edx,%eax
 80619e3:	83 e8 01             	sub    $0x1,%eax
 80619e6:	23 45 ec             	and    -0x14(%ebp),%eax
 80619e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80619ec:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 80619f3:	eb 40                	jmp    8061a35 <utf8_getchar+0xb5>
 80619f5:	e8 d6 6d fe ff       	call   80487d0 <getchar@plt>
 80619fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80619fd:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 8061a01:	74 1e                	je     8061a21 <utf8_getchar+0xa1>
 8061a03:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8061a06:	c1 f8 06             	sar    $0x6,%eax
 8061a09:	83 f8 02             	cmp    $0x2,%eax
 8061a0c:	75 13                	jne    8061a21 <utf8_getchar+0xa1>
 8061a0e:	c1 65 e4 06          	shll   $0x6,-0x1c(%ebp)
 8061a12:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8061a15:	83 e0 3f             	and    $0x3f,%eax
 8061a18:	09 45 e4             	or     %eax,-0x1c(%ebp)
 8061a1b:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 8061a1f:	eb 14                	jmp    8061a35 <utf8_getchar+0xb5>
 8061a21:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 8061a25:	75 07                	jne    8061a2e <utf8_getchar+0xae>
 8061a27:	b8 00 00 00 00       	mov    $0x0,%eax
 8061a2c:	eb 15                	jmp    8061a43 <utf8_getchar+0xc3>
 8061a2e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8061a33:	eb 0e                	jmp    8061a43 <utf8_getchar+0xc3>
 8061a35:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8061a38:	83 c0 01             	add    $0x1,%eax
 8061a3b:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8061a3e:	7c b5                	jl     80619f5 <utf8_getchar+0x75>
 8061a40:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061a43:	c9                   	leave  
 8061a44:	c3                   	ret    

08061a45 <utf8_char_len>:
 8061a45:	55                   	push   %ebp
 8061a46:	89 e5                	mov    %esp,%ebp
 8061a48:	83 ec 04             	sub    $0x4,%esp
 8061a4b:	8b 45 08             	mov    0x8(%ebp),%eax
 8061a4e:	88 45 fc             	mov    %al,-0x4(%ebp)
 8061a51:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
 8061a55:	c0 e8 03             	shr    $0x3,%al
 8061a58:	0f b6 c0             	movzbl %al,%eax
 8061a5b:	83 e0 1e             	and    $0x1e,%eax
 8061a5e:	ba 00 00 00 e5       	mov    $0xe5000000,%edx
 8061a63:	89 c1                	mov    %eax,%ecx
 8061a65:	d3 ea                	shr    %cl,%edx
 8061a67:	89 d0                	mov    %edx,%eax
 8061a69:	83 e0 03             	and    $0x3,%eax
 8061a6c:	83 c0 01             	add    $0x1,%eax
 8061a6f:	c9                   	leave  
 8061a70:	c3                   	ret    

08061a71 <utf32_to_str>:
 8061a71:	55                   	push   %ebp
 8061a72:	89 e5                	mov    %esp,%ebp
 8061a74:	83 ec 28             	sub    $0x28,%esp
 8061a77:	8b 45 08             	mov    0x8(%ebp),%eax
 8061a7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8061a7d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8061a83:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8061a86:	31 c0                	xor    %eax,%eax
 8061a88:	83 ec 0c             	sub    $0xc,%esp
 8061a8b:	6a 05                	push   $0x5
 8061a8d:	e8 95 5e ff ff       	call   8057927 <v_malloc>
 8061a92:	83 c4 10             	add    $0x10,%esp
 8061a95:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8061a98:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061a9b:	83 ec 04             	sub    $0x4,%esp
 8061a9e:	ff 75 f0             	pushl  -0x10(%ebp)
 8061aa1:	ff 75 0c             	pushl  0xc(%ebp)
 8061aa4:	50                   	push   %eax
 8061aa5:	e8 1b 00 00 00       	call   8061ac5 <utf32_to_str_no_malloc>
 8061aaa:	83 c4 0c             	add    $0xc,%esp
 8061aad:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061ab0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8061ab3:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8061aba:	74 05                	je     8061ac1 <utf32_to_str+0x50>
 8061abc:	e8 5f 6d fe ff       	call   8048820 <__stack_chk_fail@plt>
 8061ac1:	c9                   	leave  
 8061ac2:	c2 04 00             	ret    $0x4

08061ac5 <utf32_to_str_no_malloc>:
 8061ac5:	55                   	push   %ebp
 8061ac6:	89 e5                	mov    %esp,%ebp
 8061ac8:	83 ec 48             	sub    $0x48,%esp
 8061acb:	8b 45 08             	mov    0x8(%ebp),%eax
 8061ace:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8061ad1:	8b 45 10             	mov    0x10(%ebp),%eax
 8061ad4:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8061ad7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8061add:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8061ae0:	31 c0                	xor    %eax,%eax
 8061ae2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061ae5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8061ae8:	c7 45 e8 34 97 06 08 	movl   $0x8069734,-0x18(%ebp)
 8061aef:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8061af6:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8061afd:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8061b00:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8061b03:	83 7d e0 7f          	cmpl   $0x7f,-0x20(%ebp)
 8061b07:	7f 23                	jg     8061b2c <utf32_to_str_no_malloc+0x67>
 8061b09:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8061b0c:	89 c2                	mov    %eax,%edx
 8061b0e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061b11:	88 10                	mov    %dl,(%eax)
 8061b13:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8061b16:	83 ec 04             	sub    $0x4,%esp
 8061b19:	6a 01                	push   $0x1
 8061b1b:	ff 75 e4             	pushl  -0x1c(%ebp)
 8061b1e:	50                   	push   %eax
 8061b1f:	e8 d6 b7 ff ff       	call   805d2fa <tos>
 8061b24:	83 c4 0c             	add    $0xc,%esp
 8061b27:	e9 33 01 00 00       	jmp    8061c5f <utf32_to_str_no_malloc+0x19a>
 8061b2c:	81 7d e0 ff 07 00 00 	cmpl   $0x7ff,-0x20(%ebp)
 8061b33:	7f 4c                	jg     8061b81 <utf32_to_str_no_malloc+0xbc>
 8061b35:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8061b38:	c1 f8 06             	sar    $0x6,%eax
 8061b3b:	83 c8 c0             	or     $0xffffffc0,%eax
 8061b3e:	89 c2                	mov    %eax,%edx
 8061b40:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061b43:	88 10                	mov    %dl,(%eax)
 8061b45:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061b48:	83 c0 01             	add    $0x1,%eax
 8061b4b:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8061b4e:	83 e2 3f             	and    $0x3f,%edx
 8061b51:	83 ca 80             	or     $0xffffff80,%edx
 8061b54:	88 10                	mov    %dl,(%eax)
 8061b56:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8061b59:	83 ec 04             	sub    $0x4,%esp
 8061b5c:	6a 02                	push   $0x2
 8061b5e:	ff 75 e4             	pushl  -0x1c(%ebp)
 8061b61:	50                   	push   %eax
 8061b62:	e8 93 b7 ff ff       	call   805d2fa <tos>
 8061b67:	83 c4 0c             	add    $0xc,%esp
 8061b6a:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8061b6d:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8061b70:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8061b73:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8061b76:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8061b79:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8061b7c:	e9 de 00 00 00       	jmp    8061c5f <utf32_to_str_no_malloc+0x19a>
 8061b81:	81 7d e0 ff ff 00 00 	cmpl   $0xffff,-0x20(%ebp)
 8061b88:	7f 5d                	jg     8061be7 <utf32_to_str_no_malloc+0x122>
 8061b8a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8061b8d:	c1 f8 0c             	sar    $0xc,%eax
 8061b90:	83 c8 e0             	or     $0xffffffe0,%eax
 8061b93:	89 c2                	mov    %eax,%edx
 8061b95:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061b98:	88 10                	mov    %dl,(%eax)
 8061b9a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061b9d:	83 c0 01             	add    $0x1,%eax
 8061ba0:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8061ba3:	c1 fa 06             	sar    $0x6,%edx
 8061ba6:	83 e2 3f             	and    $0x3f,%edx
 8061ba9:	83 ca 80             	or     $0xffffff80,%edx
 8061bac:	88 10                	mov    %dl,(%eax)
 8061bae:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061bb1:	83 c0 02             	add    $0x2,%eax
 8061bb4:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8061bb7:	83 e2 3f             	and    $0x3f,%edx
 8061bba:	83 ca 80             	or     $0xffffff80,%edx
 8061bbd:	88 10                	mov    %dl,(%eax)
 8061bbf:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8061bc2:	83 ec 04             	sub    $0x4,%esp
 8061bc5:	6a 03                	push   $0x3
 8061bc7:	ff 75 e4             	pushl  -0x1c(%ebp)
 8061bca:	50                   	push   %eax
 8061bcb:	e8 2a b7 ff ff       	call   805d2fa <tos>
 8061bd0:	83 c4 0c             	add    $0xc,%esp
 8061bd3:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8061bd6:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8061bd9:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8061bdc:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8061bdf:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8061be2:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8061be5:	eb 78                	jmp    8061c5f <utf32_to_str_no_malloc+0x19a>
 8061be7:	81 7d e0 ff ff 10 00 	cmpl   $0x10ffff,-0x20(%ebp)
 8061bee:	7f 6f                	jg     8061c5f <utf32_to_str_no_malloc+0x19a>
 8061bf0:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8061bf3:	c1 f8 12             	sar    $0x12,%eax
 8061bf6:	83 c8 f0             	or     $0xfffffff0,%eax
 8061bf9:	89 c2                	mov    %eax,%edx
 8061bfb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061bfe:	88 10                	mov    %dl,(%eax)
 8061c00:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061c03:	83 c0 01             	add    $0x1,%eax
 8061c06:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8061c09:	c1 fa 0c             	sar    $0xc,%edx
 8061c0c:	83 e2 3f             	and    $0x3f,%edx
 8061c0f:	83 ca 80             	or     $0xffffff80,%edx
 8061c12:	88 10                	mov    %dl,(%eax)
 8061c14:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061c17:	83 c0 02             	add    $0x2,%eax
 8061c1a:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8061c1d:	c1 fa 06             	sar    $0x6,%edx
 8061c20:	83 e2 3f             	and    $0x3f,%edx
 8061c23:	83 ca 80             	or     $0xffffff80,%edx
 8061c26:	88 10                	mov    %dl,(%eax)
 8061c28:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8061c2b:	83 c0 03             	add    $0x3,%eax
 8061c2e:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8061c31:	83 e2 3f             	and    $0x3f,%edx
 8061c34:	83 ca 80             	or     $0xffffff80,%edx
 8061c37:	88 10                	mov    %dl,(%eax)
 8061c39:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8061c3c:	83 ec 04             	sub    $0x4,%esp
 8061c3f:	6a 04                	push   $0x4
 8061c41:	ff 75 e4             	pushl  -0x1c(%ebp)
 8061c44:	50                   	push   %eax
 8061c45:	e8 b0 b6 ff ff       	call   805d2fa <tos>
 8061c4a:	83 c4 0c             	add    $0xc,%esp
 8061c4d:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8061c50:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8061c53:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8061c56:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8061c59:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8061c5c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8061c5f:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8061c66:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8061c69:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8061c6c:	89 10                	mov    %edx,(%eax)
 8061c6e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8061c71:	89 50 04             	mov    %edx,0x4(%eax)
 8061c74:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8061c77:	89 50 08             	mov    %edx,0x8(%eax)
 8061c7a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8061c7d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8061c80:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8061c87:	74 05                	je     8061c8e <utf32_to_str_no_malloc+0x1c9>
 8061c89:	e8 92 6b fe ff       	call   8048820 <__stack_chk_fail@plt>
 8061c8e:	c9                   	leave  
 8061c8f:	c2 04 00             	ret    $0x4

08061c92 <string_utf32_code>:
 8061c92:	55                   	push   %ebp
 8061c93:	89 e5                	mov    %esp,%ebp
 8061c95:	83 ec 28             	sub    $0x28,%esp
 8061c98:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061c9b:	85 c0                	test   %eax,%eax
 8061c9d:	75 0a                	jne    8061ca9 <string_utf32_code+0x17>
 8061c9f:	b8 00 00 00 00       	mov    $0x0,%eax
 8061ca4:	e9 a9 00 00 00       	jmp    8061d52 <string_utf32_code+0xc0>
 8061ca9:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061cac:	83 f8 01             	cmp    $0x1,%eax
 8061caf:	75 1b                	jne    8061ccc <string_utf32_code+0x3a>
 8061cb1:	6a 00                	push   $0x0
 8061cb3:	ff 75 10             	pushl  0x10(%ebp)
 8061cb6:	ff 75 0c             	pushl  0xc(%ebp)
 8061cb9:	ff 75 08             	pushl  0x8(%ebp)
 8061cbc:	e8 79 ec ff ff       	call   806093a <string_at>
 8061cc1:	83 c4 10             	add    $0x10,%esp
 8061cc4:	0f b6 c0             	movzbl %al,%eax
 8061cc7:	e9 86 00 00 00       	jmp    8061d52 <string_utf32_code+0xc0>
 8061ccc:	6a 00                	push   $0x0
 8061cce:	ff 75 10             	pushl  0x10(%ebp)
 8061cd1:	ff 75 0c             	pushl  0xc(%ebp)
 8061cd4:	ff 75 08             	pushl  0x8(%ebp)
 8061cd7:	e8 5e ec ff ff       	call   806093a <string_at>
 8061cdc:	83 c4 10             	add    $0x10,%esp
 8061cdf:	88 45 e7             	mov    %al,-0x19(%ebp)
 8061ce2:	0f b6 55 e7          	movzbl -0x19(%ebp),%edx
 8061ce6:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061ce9:	89 c1                	mov    %eax,%ecx
 8061ceb:	d3 e2                	shl    %cl,%edx
 8061ced:	89 d0                	mov    %edx,%eax
 8061cef:	88 45 e7             	mov    %al,-0x19(%ebp)
 8061cf2:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax
 8061cf6:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8061cf9:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061cfc:	ba 06 00 00 00       	mov    $0x6,%edx
 8061d01:	29 c2                	sub    %eax,%edx
 8061d03:	89 d0                	mov    %edx,%eax
 8061d05:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8061d08:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8061d0f:	eb 36                	jmp    8061d47 <string_utf32_code+0xb5>
 8061d11:	ff 75 f0             	pushl  -0x10(%ebp)
 8061d14:	ff 75 10             	pushl  0x10(%ebp)
 8061d17:	ff 75 0c             	pushl  0xc(%ebp)
 8061d1a:	ff 75 08             	pushl  0x8(%ebp)
 8061d1d:	e8 18 ec ff ff       	call   806093a <string_at>
 8061d22:	83 c4 10             	add    $0x10,%esp
 8061d25:	0f b6 c0             	movzbl %al,%eax
 8061d28:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8061d2b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8061d2e:	89 c1                	mov    %eax,%ecx
 8061d30:	d3 65 e8             	shll   %cl,-0x18(%ebp)
 8061d33:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8061d36:	83 e0 3f             	and    $0x3f,%eax
 8061d39:	09 45 e8             	or     %eax,-0x18(%ebp)
 8061d3c:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
 8061d43:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8061d47:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061d4a:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8061d4d:	7f c2                	jg     8061d11 <string_utf32_code+0x7f>
 8061d4f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8061d52:	c9                   	leave  
 8061d53:	c3                   	ret    

08061d54 <utf8_len>:
 8061d54:	55                   	push   %ebp
 8061d55:	89 e5                	mov    %esp,%ebp
 8061d57:	83 ec 14             	sub    $0x14,%esp
 8061d5a:	8b 45 08             	mov    0x8(%ebp),%eax
 8061d5d:	88 45 ec             	mov    %al,-0x14(%ebp)
 8061d60:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8061d67:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
 8061d6b:	88 45 fb             	mov    %al,-0x5(%ebp)
 8061d6e:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 8061d72:	25 f0 00 00 00       	and    $0xf0,%eax
 8061d77:	85 c0                	test   %eax,%eax
 8061d79:	74 06                	je     8061d81 <utf8_len+0x2d>
 8061d7b:	c0 6d fb 04          	shrb   $0x4,-0x5(%ebp)
 8061d7f:	eb 04                	jmp    8061d85 <utf8_len+0x31>
 8061d81:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
 8061d85:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 8061d89:	83 e0 0c             	and    $0xc,%eax
 8061d8c:	85 c0                	test   %eax,%eax
 8061d8e:	74 06                	je     8061d96 <utf8_len+0x42>
 8061d90:	c0 6d fb 02          	shrb   $0x2,-0x5(%ebp)
 8061d94:	eb 04                	jmp    8061d9a <utf8_len+0x46>
 8061d96:	83 45 fc 02          	addl   $0x2,-0x4(%ebp)
 8061d9a:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 8061d9e:	83 e0 02             	and    $0x2,%eax
 8061da1:	85 c0                	test   %eax,%eax
 8061da3:	75 04                	jne    8061da9 <utf8_len+0x55>
 8061da5:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8061da9:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8061dac:	c9                   	leave  
 8061dad:	c3                   	ret    

08061dae <utf8_str_len>:
 8061dae:	55                   	push   %ebp
 8061daf:	89 e5                	mov    %esp,%ebp
 8061db1:	83 ec 10             	sub    $0x10,%esp
 8061db4:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8061dbb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 8061dc2:	eb 36                	jmp    8061dfa <utf8_str_len+0x4c>
 8061dc4:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 8061dc8:	8b 55 08             	mov    0x8(%ebp),%edx
 8061dcb:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8061dce:	01 d0                	add    %edx,%eax
 8061dd0:	0f b6 00             	movzbl (%eax),%eax
 8061dd3:	88 45 f7             	mov    %al,-0x9(%ebp)
 8061dd6:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
 8061dda:	84 c0                	test   %al,%al
 8061ddc:	79 18                	jns    8061df6 <utf8_str_len+0x48>
 8061dde:	c6 45 f6 40          	movb   $0x40,-0xa(%ebp)
 8061de2:	eb 07                	jmp    8061deb <utf8_str_len+0x3d>
 8061de4:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8061de8:	d0 6d f6             	shrb   -0xa(%ebp)
 8061deb:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
 8061def:	22 45 f6             	and    -0xa(%ebp),%al
 8061df2:	84 c0                	test   %al,%al
 8061df4:	75 ee                	jne    8061de4 <utf8_str_len+0x36>
 8061df6:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
 8061dfa:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061dfd:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 8061e00:	7f c2                	jg     8061dc4 <utf8_str_len+0x16>
 8061e02:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8061e05:	c9                   	leave  
 8061e06:	c3                   	ret    

08061e07 <utf8_str_visible_length>:
 8061e07:	55                   	push   %ebp
 8061e08:	89 e5                	mov    %esp,%ebp
 8061e0a:	53                   	push   %ebx
 8061e0b:	83 ec 20             	sub    $0x20,%esp
 8061e0e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8061e15:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8061e1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8061e23:	e9 3f 01 00 00       	jmp    8061f67 <utf8_str_visible_length+0x160>
 8061e28:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8061e2f:	8b 55 08             	mov    0x8(%ebp),%edx
 8061e32:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8061e35:	01 d0                	add    %edx,%eax
 8061e37:	0f b6 00             	movzbl (%eax),%eax
 8061e3a:	88 45 e9             	mov    %al,-0x17(%ebp)
 8061e3d:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax
 8061e41:	84 c0                	test   %al,%al
 8061e43:	79 18                	jns    8061e5d <utf8_str_visible_length+0x56>
 8061e45:	c6 45 e8 40          	movb   $0x40,-0x18(%ebp)
 8061e49:	eb 07                	jmp    8061e52 <utf8_str_visible_length+0x4b>
 8061e4b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8061e4f:	d0 6d e8             	shrb   -0x18(%ebp)
 8061e52:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax
 8061e56:	22 45 e8             	and    -0x18(%ebp),%al
 8061e59:	84 c0                	test   %al,%al
 8061e5b:	75 ee                	jne    8061e4b <utf8_str_visible_length+0x44>
 8061e5d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8061e60:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8061e63:	01 c2                	add    %eax,%edx
 8061e65:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061e68:	39 c2                	cmp    %eax,%edx
 8061e6a:	7e 08                	jle    8061e74 <utf8_str_visible_length+0x6d>
 8061e6c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8061e6f:	e9 02 01 00 00       	jmp    8061f76 <utf8_str_visible_length+0x16f>
 8061e74:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 8061e78:	80 7d e9 cc          	cmpb   $0xcc,-0x17(%ebp)
 8061e7c:	74 06                	je     8061e84 <utf8_str_visible_length+0x7d>
 8061e7e:	80 7d e9 cd          	cmpb   $0xcd,-0x17(%ebp)
 8061e82:	75 41                	jne    8061ec5 <utf8_str_visible_length+0xbe>
 8061e84:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax
 8061e88:	c1 e0 08             	shl    $0x8,%eax
 8061e8b:	89 c1                	mov    %eax,%ecx
 8061e8d:	8b 45 08             	mov    0x8(%ebp),%eax
 8061e90:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8061e93:	83 c2 01             	add    $0x1,%edx
 8061e96:	01 d0                	add    %edx,%eax
 8061e98:	0f b6 00             	movzbl (%eax),%eax
 8061e9b:	0f b6 c0             	movzbl %al,%eax
 8061e9e:	09 c8                	or     %ecx,%eax
 8061ea0:	66 89 45 ea          	mov    %ax,-0x16(%ebp)
 8061ea4:	66 81 7d ea 7f cc    	cmpw   $0xcc7f,-0x16(%ebp)
 8061eaa:	0f 86 b0 00 00 00    	jbe    8061f60 <utf8_str_visible_length+0x159>
 8061eb0:	66 81 7d ea af cd    	cmpw   $0xcdaf,-0x16(%ebp)
 8061eb6:	0f 87 a4 00 00 00    	ja     8061f60 <utf8_str_visible_length+0x159>
 8061ebc:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
 8061ec0:	e9 9b 00 00 00       	jmp    8061f60 <utf8_str_visible_length+0x159>
 8061ec5:	80 7d e9 e1          	cmpb   $0xe1,-0x17(%ebp)
 8061ec9:	74 10                	je     8061edb <utf8_str_visible_length+0xd4>
 8061ecb:	80 7d e9 e2          	cmpb   $0xe2,-0x17(%ebp)
 8061ecf:	74 0a                	je     8061edb <utf8_str_visible_length+0xd4>
 8061ed1:	80 7d e9 ef          	cmpb   $0xef,-0x17(%ebp)
 8061ed5:	0f 85 86 00 00 00    	jne    8061f61 <utf8_str_visible_length+0x15a>
 8061edb:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax
 8061edf:	c1 e0 10             	shl    $0x10,%eax
 8061ee2:	89 c1                	mov    %eax,%ecx
 8061ee4:	8b 45 08             	mov    0x8(%ebp),%eax
 8061ee7:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8061eea:	83 c2 01             	add    $0x1,%edx
 8061eed:	01 d0                	add    %edx,%eax
 8061eef:	0f b6 00             	movzbl (%eax),%eax
 8061ef2:	0f b6 c0             	movzbl %al,%eax
 8061ef5:	c1 e0 08             	shl    $0x8,%eax
 8061ef8:	89 c3                	mov    %eax,%ebx
 8061efa:	8b 45 08             	mov    0x8(%ebp),%eax
 8061efd:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8061f00:	83 c2 02             	add    $0x2,%edx
 8061f03:	01 d0                	add    %edx,%eax
 8061f05:	0f b6 00             	movzbl (%eax),%eax
 8061f08:	0f b6 c0             	movzbl %al,%eax
 8061f0b:	09 d8                	or     %ebx,%eax
 8061f0d:	09 c8                	or     %ecx,%eax
 8061f0f:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8061f12:	81 7d f8 af aa e1 00 	cmpl   $0xe1aaaf,-0x8(%ebp)
 8061f19:	76 09                	jbe    8061f24 <utf8_str_visible_length+0x11d>
 8061f1b:	81 7d f8 7f ac e1 00 	cmpl   $0xe1ac7f,-0x8(%ebp)
 8061f22:	76 36                	jbe    8061f5a <utf8_str_visible_length+0x153>
 8061f24:	81 7d f8 7f b7 e1 00 	cmpl   $0xe1b77f,-0x8(%ebp)
 8061f2b:	76 09                	jbe    8061f36 <utf8_str_visible_length+0x12f>
 8061f2d:	81 7d f8 7f b8 e1 00 	cmpl   $0xe1b87f,-0x8(%ebp)
 8061f34:	76 24                	jbe    8061f5a <utf8_str_visible_length+0x153>
 8061f36:	81 7d f8 8f 83 e2 00 	cmpl   $0xe2838f,-0x8(%ebp)
 8061f3d:	76 09                	jbe    8061f48 <utf8_str_visible_length+0x141>
 8061f3f:	81 7d f8 7f 84 e2 00 	cmpl   $0xe2847f,-0x8(%ebp)
 8061f46:	76 12                	jbe    8061f5a <utf8_str_visible_length+0x153>
 8061f48:	81 7d f8 9f b8 ef 00 	cmpl   $0xefb89f,-0x8(%ebp)
 8061f4f:	76 10                	jbe    8061f61 <utf8_str_visible_length+0x15a>
 8061f51:	81 7d f8 af b8 ef 00 	cmpl   $0xefb8af,-0x8(%ebp)
 8061f58:	77 07                	ja     8061f61 <utf8_str_visible_length+0x15a>
 8061f5a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
 8061f5e:	eb 01                	jmp    8061f61 <utf8_str_visible_length+0x15a>
 8061f60:	90                   	nop
 8061f61:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8061f64:	01 45 f4             	add    %eax,-0xc(%ebp)
 8061f67:	8b 45 0c             	mov    0xc(%ebp),%eax
 8061f6a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 8061f6d:	0f 8f b5 fe ff ff    	jg     8061e28 <utf8_str_visible_length+0x21>
 8061f73:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8061f76:	83 c4 20             	add    $0x20,%esp
 8061f79:	5b                   	pop    %ebx
 8061f7a:	5d                   	pop    %ebp
 8061f7b:	c3                   	ret    

08061f7c <main__main>:
 8061f7c:	55                   	push   %ebp
 8061f7d:	89 e5                	mov    %esp,%ebp
 8061f7f:	83 ec 28             	sub    $0x28,%esp
 8061f82:	c7 45 d8 17 00 00 00 	movl   $0x17,-0x28(%ebp)
 8061f89:	c7 45 dc 8c 09 00 00 	movl   $0x98c,-0x24(%ebp)
 8061f90:	83 7d d8 2d          	cmpl   $0x2d,-0x28(%ebp)
 8061f94:	75 07                	jne    8061f9d <main__main+0x21>
 8061f96:	e8 64 00 00 00       	call   8061fff <main__one>
 8061f9b:	eb 29                	jmp    8061fc6 <main__main+0x4a>
 8061f9d:	c7 45 e0 04 a0 06 08 	movl   $0x806a004,-0x20(%ebp)
 8061fa4:	c7 45 e4 0f 00 00 00 	movl   $0xf,-0x1c(%ebp)
 8061fab:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
 8061fb2:	83 ec 04             	sub    $0x4,%esp
 8061fb5:	ff 75 e8             	pushl  -0x18(%ebp)
 8061fb8:	ff 75 e4             	pushl  -0x1c(%ebp)
 8061fbb:	ff 75 e0             	pushl  -0x20(%ebp)
 8061fbe:	e8 43 59 ff ff       	call   8057906 <println>
 8061fc3:	83 c4 10             	add    $0x10,%esp
 8061fc6:	83 7d dc 4c          	cmpl   $0x4c,-0x24(%ebp)
 8061fca:	75 07                	jne    8061fd3 <main__main+0x57>
 8061fcc:	e8 60 01 00 00       	call   8062131 <main__two>
 8061fd1:	eb 29                	jmp    8061ffc <main__main+0x80>
 8061fd3:	c7 45 ec 04 a0 06 08 	movl   $0x806a004,-0x14(%ebp)
 8061fda:	c7 45 f0 0f 00 00 00 	movl   $0xf,-0x10(%ebp)
 8061fe1:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
 8061fe8:	83 ec 04             	sub    $0x4,%esp
 8061feb:	ff 75 f4             	pushl  -0xc(%ebp)
 8061fee:	ff 75 f0             	pushl  -0x10(%ebp)
 8061ff1:	ff 75 ec             	pushl  -0x14(%ebp)
 8061ff4:	e8 0d 59 ff ff       	call   8057906 <println>
 8061ff9:	83 c4 10             	add    $0x10,%esp
 8061ffc:	90                   	nop
 8061ffd:	c9                   	leave  
 8061ffe:	c3                   	ret    

08061fff <main__one>:
 8061fff:	55                   	push   %ebp
 8062000:	89 e5                	mov    %esp,%ebp
 8062002:	83 ec 68             	sub    $0x68,%esp
 8062005:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 806200b:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806200e:	31 c0                	xor    %eax,%eax
 8062010:	c7 45 e8 fe ff ff ff 	movl   $0xfffffffe,-0x18(%ebp)
 8062017:	8d 45 b8             	lea    -0x48(%ebp),%eax
 806201a:	83 ec 0c             	sub    $0xc,%esp
 806201d:	8d 55 e8             	lea    -0x18(%ebp),%edx
 8062020:	52                   	push   %edx
 8062021:	6a 04                	push   $0x4
 8062023:	6a 00                	push   $0x0
 8062025:	6a 06                	push   $0x6
 8062027:	50                   	push   %eax
 8062028:	e8 3c 3a ff ff       	call   8055a69 <__new_array_with_default>
 806202d:	83 c4 1c             	add    $0x1c,%esp
 8062030:	c7 45 a8 2d 00 00 00 	movl   $0x2d,-0x58(%ebp)
 8062037:	83 7d a8 1f          	cmpl   $0x1f,-0x58(%ebp)
 806203b:	0f 8f 93 00 00 00    	jg     80620d4 <main__one+0xd5>
 8062041:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8062044:	83 ec 0c             	sub    $0xc,%esp
 8062047:	6a 00                	push   $0x0
 8062049:	6a 04                	push   $0x4
 806204b:	6a 0a                	push   $0xa
 806204d:	6a 00                	push   $0x0
 806204f:	50                   	push   %eax
 8062050:	e8 14 3a ff ff       	call   8055a69 <__new_array_with_default>
 8062055:	83 c4 1c             	add    $0x1c,%esp
 8062058:	c7 45 a4 02 00 00 00 	movl   $0x2,-0x5c(%ebp)
 806205f:	eb 1d                	jmp    806207e <main__one+0x7f>
 8062061:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8062064:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8062067:	83 ec 08             	sub    $0x8,%esp
 806206a:	8d 45 ec             	lea    -0x14(%ebp),%eax
 806206d:	50                   	push   %eax
 806206e:	8d 45 c8             	lea    -0x38(%ebp),%eax
 8062071:	50                   	push   %eax
 8062072:	e8 43 49 ff ff       	call   80569ba <array_push>
 8062077:	83 c4 10             	add    $0x10,%esp
 806207a:	83 45 a4 01          	addl   $0x1,-0x5c(%ebp)
 806207e:	83 7d a4 0b          	cmpl   $0xb,-0x5c(%ebp)
 8062082:	7e dd                	jle    8062061 <main__one+0x62>
 8062084:	8d 45 d8             	lea    -0x28(%ebp),%eax
 8062087:	83 ec 04             	sub    $0x4,%esp
 806208a:	6a 08                	push   $0x8
 806208c:	6a 02                	push   $0x2
 806208e:	ff 75 d4             	pushl  -0x2c(%ebp)
 8062091:	ff 75 d0             	pushl  -0x30(%ebp)
 8062094:	ff 75 cc             	pushl  -0x34(%ebp)
 8062097:	ff 75 c8             	pushl  -0x38(%ebp)
 806209a:	50                   	push   %eax
 806209b:	e8 d0 43 ff ff       	call   8056470 <array_slice>
 80620a0:	83 c4 1c             	add    $0x1c,%esp
 80620a3:	8d 45 ac             	lea    -0x54(%ebp),%eax
 80620a6:	83 ec 0c             	sub    $0xc,%esp
 80620a9:	ff 75 e4             	pushl  -0x1c(%ebp)
 80620ac:	ff 75 e0             	pushl  -0x20(%ebp)
 80620af:	ff 75 dc             	pushl  -0x24(%ebp)
 80620b2:	ff 75 d8             	pushl  -0x28(%ebp)
 80620b5:	50                   	push   %eax
 80620b6:	e8 fe 70 fe ff       	call   80491b9 <array_int_str>
 80620bb:	83 c4 1c             	add    $0x1c,%esp
 80620be:	83 ec 04             	sub    $0x4,%esp
 80620c1:	ff 75 b4             	pushl  -0x4c(%ebp)
 80620c4:	ff 75 b0             	pushl  -0x50(%ebp)
 80620c7:	ff 75 ac             	pushl  -0x54(%ebp)
 80620ca:	e8 37 58 ff ff       	call   8057906 <println>
 80620cf:	83 c4 10             	add    $0x10,%esp
 80620d2:	eb 49                	jmp    806211d <main__one+0x11e>
 80620d4:	c7 45 f0 fd ff ff ff 	movl   $0xfffffffd,-0x10(%ebp)
 80620db:	8d 45 d8             	lea    -0x28(%ebp),%eax
 80620de:	83 ec 0c             	sub    $0xc,%esp
 80620e1:	8d 55 f0             	lea    -0x10(%ebp),%edx
 80620e4:	52                   	push   %edx
 80620e5:	6a 04                	push   $0x4
 80620e7:	6a 00                	push   $0x0
 80620e9:	6a 06                	push   $0x6
 80620eb:	50                   	push   %eax
 80620ec:	e8 78 39 ff ff       	call   8055a69 <__new_array_with_default>
 80620f1:	83 c4 1c             	add    $0x1c,%esp
 80620f4:	c7 45 c8 14 a0 06 08 	movl   $0x806a014,-0x38(%ebp)
 80620fb:	c7 45 cc 28 00 00 00 	movl   $0x28,-0x34(%ebp)
 8062102:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
 8062109:	83 ec 04             	sub    $0x4,%esp
 806210c:	ff 75 d0             	pushl  -0x30(%ebp)
 806210f:	ff 75 cc             	pushl  -0x34(%ebp)
 8062112:	ff 75 c8             	pushl  -0x38(%ebp)
 8062115:	e8 ec 57 ff ff       	call   8057906 <println>
 806211a:	83 c4 10             	add    $0x10,%esp
 806211d:	90                   	nop
 806211e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8062121:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8062128:	74 05                	je     806212f <main__one+0x130>
 806212a:	e8 f1 66 fe ff       	call   8048820 <__stack_chk_fail@plt>
 806212f:	c9                   	leave  
 8062130:	c3                   	ret    

08062131 <main__two>:
 8062131:	55                   	push   %ebp
 8062132:	89 e5                	mov    %esp,%ebp
 8062134:	81 ec e8 00 00 00    	sub    $0xe8,%esp
 806213a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8062140:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8062143:	31 c0                	xor    %eax,%eax
 8062145:	c7 85 6c ff ff ff f9 	movl   $0xfffffff9,-0x94(%ebp)
 806214c:	ff ff ff 
 806214f:	8d 85 2c ff ff ff    	lea    -0xd4(%ebp),%eax
 8062155:	83 ec 0c             	sub    $0xc,%esp
 8062158:	8d 95 6c ff ff ff    	lea    -0x94(%ebp),%edx
 806215e:	52                   	push   %edx
 806215f:	6a 04                	push   $0x4
 8062161:	6a 00                	push   $0x0
 8062163:	6a 07                	push   $0x7
 8062165:	50                   	push   %eax
 8062166:	e8 fe 38 ff ff       	call   8055a69 <__new_array_with_default>
 806216b:	83 c4 1c             	add    $0x1c,%esp
 806216e:	c7 85 18 ff ff ff 5a 	movl   $0x5a,-0xe8(%ebp)
 8062175:	00 00 00 
 8062178:	83 bd 18 ff ff ff 2c 	cmpl   $0x2c,-0xe8(%ebp)
 806217f:	0f 8f 03 02 00 00    	jg     8062388 <main__two+0x257>
 8062185:	8d 85 3c ff ff ff    	lea    -0xc4(%ebp),%eax
 806218b:	83 ec 0c             	sub    $0xc,%esp
 806218e:	6a 00                	push   $0x0
 8062190:	6a 0c                	push   $0xc
 8062192:	6a 0a                	push   $0xa
 8062194:	6a 00                	push   $0x0
 8062196:	50                   	push   %eax
 8062197:	e8 cd 38 ff ff       	call   8055a69 <__new_array_with_default>
 806219c:	83 c4 1c             	add    $0x1c,%esp
 806219f:	c7 85 70 ff ff ff 3d 	movl   $0x806a03d,-0x90(%ebp)
 80621a6:	a0 06 08 
 80621a9:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%ebp)
 80621b0:	00 00 00 
 80621b3:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%ebp)
 80621ba:	00 00 00 
 80621bd:	c7 85 7c ff ff ff 3f 	movl   $0x806a03f,-0x84(%ebp)
 80621c4:	a0 06 08 
 80621c7:	c7 45 80 01 00 00 00 	movl   $0x1,-0x80(%ebp)
 80621ce:	c7 45 84 01 00 00 00 	movl   $0x1,-0x7c(%ebp)
 80621d5:	c7 45 88 41 a0 06 08 	movl   $0x806a041,-0x78(%ebp)
 80621dc:	c7 45 8c 01 00 00 00 	movl   $0x1,-0x74(%ebp)
 80621e3:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%ebp)
 80621ea:	c7 45 94 43 a0 06 08 	movl   $0x806a043,-0x6c(%ebp)
 80621f1:	c7 45 98 01 00 00 00 	movl   $0x1,-0x68(%ebp)
 80621f8:	c7 45 9c 01 00 00 00 	movl   $0x1,-0x64(%ebp)
 80621ff:	c7 45 a0 45 a0 06 08 	movl   $0x806a045,-0x60(%ebp)
 8062206:	c7 45 a4 01 00 00 00 	movl   $0x1,-0x5c(%ebp)
 806220d:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%ebp)
 8062214:	8d 85 4c ff ff ff    	lea    -0xb4(%ebp),%eax
 806221a:	83 ec 0c             	sub    $0xc,%esp
 806221d:	8d 95 70 ff ff ff    	lea    -0x90(%ebp),%edx
 8062223:	52                   	push   %edx
 8062224:	6a 0c                	push   $0xc
 8062226:	6a 05                	push   $0x5
 8062228:	6a 05                	push   $0x5
 806222a:	50                   	push   %eax
 806222b:	e8 a9 39 ff ff       	call   8055bd9 <new_array_from_c_array>
 8062230:	83 c4 1c             	add    $0x1c,%esp
 8062233:	c7 85 1c ff ff ff 4d 	movl   $0x4d,-0xe4(%ebp)
 806223a:	00 00 00 
 806223d:	83 bd 1c ff ff ff 4b 	cmpl   $0x4b,-0xe4(%ebp)
 8062244:	0f 8f 03 01 00 00    	jg     806234d <main__two+0x21c>
 806224a:	c7 45 ac 47 a0 06 08 	movl   $0x806a047,-0x54(%ebp)
 8062251:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
 8062258:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)
 806225f:	c7 45 b8 49 a0 06 08 	movl   $0x806a049,-0x48(%ebp)
 8062266:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)
 806226d:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)
 8062274:	c7 45 c4 4b a0 06 08 	movl   $0x806a04b,-0x3c(%ebp)
 806227b:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
 8062282:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 8062289:	c7 45 d0 4d a0 06 08 	movl   $0x806a04d,-0x30(%ebp)
 8062290:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 8062297:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
 806229e:	c7 45 dc 4d a0 06 08 	movl   $0x806a04d,-0x24(%ebp)
 80622a5:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
 80622ac:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 80622b3:	c7 45 e8 4f a0 06 08 	movl   $0x806a04f,-0x18(%ebp)
 80622ba:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 80622c1:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 80622c8:	8d 85 5c ff ff ff    	lea    -0xa4(%ebp),%eax
 80622ce:	83 ec 0c             	sub    $0xc,%esp
 80622d1:	8d 55 ac             	lea    -0x54(%ebp),%edx
 80622d4:	52                   	push   %edx
 80622d5:	6a 0c                	push   $0xc
 80622d7:	6a 06                	push   $0x6
 80622d9:	6a 06                	push   $0x6
 80622db:	50                   	push   %eax
 80622dc:	e8 f8 38 ff ff       	call   8055bd9 <new_array_from_c_array>
 80622e1:	83 c4 1c             	add    $0x1c,%esp
 80622e4:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 80622ea:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 80622f0:	83 ec 04             	sub    $0x4,%esp
 80622f3:	52                   	push   %edx
 80622f4:	50                   	push   %eax
 80622f5:	8d 85 4c ff ff ff    	lea    -0xb4(%ebp),%eax
 80622fb:	50                   	push   %eax
 80622fc:	e8 1a 47 ff ff       	call   8056a1b <array_push_many>
 8062301:	83 c4 10             	add    $0x10,%esp
 8062304:	8d 85 5c ff ff ff    	lea    -0xa4(%ebp),%eax
 806230a:	83 ec 0c             	sub    $0xc,%esp
 806230d:	ff b5 58 ff ff ff    	pushl  -0xa8(%ebp)
 8062313:	ff b5 54 ff ff ff    	pushl  -0xac(%ebp)
 8062319:	ff b5 50 ff ff ff    	pushl  -0xb0(%ebp)
 806231f:	ff b5 4c ff ff ff    	pushl  -0xb4(%ebp)
 8062325:	50                   	push   %eax
 8062326:	e8 4c 4a ff ff       	call   8056d77 <array_string_str>
 806232b:	83 c4 1c             	add    $0x1c,%esp
 806232e:	83 ec 04             	sub    $0x4,%esp
 8062331:	ff b5 64 ff ff ff    	pushl  -0x9c(%ebp)
 8062337:	ff b5 60 ff ff ff    	pushl  -0xa0(%ebp)
 806233d:	ff b5 5c ff ff ff    	pushl  -0xa4(%ebp)
 8062343:	e8 be 55 ff ff       	call   8057906 <println>
 8062348:	83 c4 10             	add    $0x10,%esp
 806234b:	eb 3b                	jmp    8062388 <main__two+0x257>
 806234d:	c7 85 20 ff ff ff 54 	movl   $0x806a054,-0xe0(%ebp)
 8062354:	a0 06 08 
 8062357:	c7 85 24 ff ff ff 27 	movl   $0x27,-0xdc(%ebp)
 806235e:	00 00 00 
 8062361:	c7 85 28 ff ff ff 01 	movl   $0x1,-0xd8(%ebp)
 8062368:	00 00 00 
 806236b:	83 ec 04             	sub    $0x4,%esp
 806236e:	ff b5 28 ff ff ff    	pushl  -0xd8(%ebp)
 8062374:	ff b5 24 ff ff ff    	pushl  -0xdc(%ebp)
 806237a:	ff b5 20 ff ff ff    	pushl  -0xe0(%ebp)
 8062380:	e8 81 55 ff ff       	call   8057906 <println>
 8062385:	83 c4 10             	add    $0x10,%esp
 8062388:	90                   	nop
 8062389:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806238c:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8062393:	74 05                	je     806239a <main__two+0x269>
 8062395:	e8 86 64 fe ff       	call   8048820 <__stack_chk_fail@plt>
 806239a:	c9                   	leave  
 806239b:	c3                   	ret    

0806239c <_vinit>:
 806239c:	55                   	push   %ebp
 806239d:	89 e5                	mov    %esp,%ebp
 806239f:	57                   	push   %edi
 80623a0:	56                   	push   %esi
 80623a1:	53                   	push   %ebx
 80623a2:	81 ec 6c 43 00 00    	sub    $0x436c,%esp
 80623a8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80623ab:	89 85 a4 bc ff ff    	mov    %eax,-0x435c(%ebp)
 80623b1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80623b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80623ba:	31 c0                	xor    %eax,%eax
 80623bc:	e8 af 59 ff ff       	call   8057d70 <builtin_init>
 80623c1:	e8 75 6d fe ff       	call   804913b <vinit_string_literals>
 80623c6:	c7 05 78 31 07 08 2f 	movl   $0x78bd642f,0x8073178
 80623cd:	64 bd 78 
 80623d0:	c7 05 7c 31 07 08 64 	movl   $0xa0761d64,0x807317c
 80623d7:	1d 76 a0 
 80623da:	c7 05 80 32 07 08 db 	movl   $0xa0b428db,0x8073280
 80623e1:	28 b4 a0 
 80623e4:	c7 05 84 32 07 08 d1 	movl   $0xe7037ed1,0x8073284
 80623eb:	7e 03 e7 
 80623ee:	c7 05 70 31 07 08 e3 	movl   $0x9c88c6e3,0x8073170
 80623f5:	c6 88 9c 
 80623f8:	c7 05 74 31 07 08 f0 	movl   $0x8ebc6af0,0x8073174
 80623ff:	6a bc 8e 
 8062402:	c7 05 88 32 07 08 c3 	movl   $0x75374cc3,0x8073288
 8062409:	4c 37 75 
 806240c:	c7 05 8c 32 07 08 cc 	movl   $0x589965cc,0x807328c
 8062413:	65 99 58 
 8062416:	c7 05 80 31 07 08 4f 	movl   $0xc47d124f,0x8073180
 806241d:	12 7d c4 
 8062420:	c7 05 84 31 07 08 27 	movl   $0x1d8e4e27,0x8073184
 8062427:	4e 8e 1d 
 806242a:	c7 05 64 31 07 08 31 	movl   $0x77cb531,0x8073164
 8062431:	b5 7c 07 
 8062434:	c6 85 84 fb ff ff 00 	movb   $0x0,-0x47c(%ebp)
 806243b:	c6 85 85 fb ff ff 01 	movb   $0x1,-0x47b(%ebp)
 8062442:	c6 85 86 fb ff ff 1c 	movb   $0x1c,-0x47a(%ebp)
 8062449:	c6 85 87 fb ff ff 02 	movb   $0x2,-0x479(%ebp)
 8062450:	c6 85 88 fb ff ff 1d 	movb   $0x1d,-0x478(%ebp)
 8062457:	c6 85 89 fb ff ff 0e 	movb   $0xe,-0x477(%ebp)
 806245e:	c6 85 8a fb ff ff 18 	movb   $0x18,-0x476(%ebp)
 8062465:	c6 85 8b fb ff ff 03 	movb   $0x3,-0x475(%ebp)
 806246c:	c6 85 8c fb ff ff 1e 	movb   $0x1e,-0x474(%ebp)
 8062473:	c6 85 8d fb ff ff 16 	movb   $0x16,-0x473(%ebp)
 806247a:	c6 85 8e fb ff ff 14 	movb   $0x14,-0x472(%ebp)
 8062481:	c6 85 8f fb ff ff 0f 	movb   $0xf,-0x471(%ebp)
 8062488:	c6 85 90 fb ff ff 19 	movb   $0x19,-0x470(%ebp)
 806248f:	c6 85 91 fb ff ff 11 	movb   $0x11,-0x46f(%ebp)
 8062496:	c6 85 92 fb ff ff 04 	movb   $0x4,-0x46e(%ebp)
 806249d:	c6 85 93 fb ff ff 08 	movb   $0x8,-0x46d(%ebp)
 80624a4:	c6 85 94 fb ff ff 1f 	movb   $0x1f,-0x46c(%ebp)
 80624ab:	c6 85 95 fb ff ff 1b 	movb   $0x1b,-0x46b(%ebp)
 80624b2:	c6 85 96 fb ff ff 0d 	movb   $0xd,-0x46a(%ebp)
 80624b9:	c6 85 97 fb ff ff 17 	movb   $0x17,-0x469(%ebp)
 80624c0:	c6 85 98 fb ff ff 15 	movb   $0x15,-0x468(%ebp)
 80624c7:	c6 85 99 fb ff ff 13 	movb   $0x13,-0x467(%ebp)
 80624ce:	c6 85 9a fb ff ff 10 	movb   $0x10,-0x466(%ebp)
 80624d5:	c6 85 9b fb ff ff 07 	movb   $0x7,-0x465(%ebp)
 80624dc:	c6 85 9c fb ff ff 1a 	movb   $0x1a,-0x464(%ebp)
 80624e3:	c6 85 9d fb ff ff 0c 	movb   $0xc,-0x463(%ebp)
 80624ea:	c6 85 9e fb ff ff 12 	movb   $0x12,-0x462(%ebp)
 80624f1:	c6 85 9f fb ff ff 06 	movb   $0x6,-0x461(%ebp)
 80624f8:	c6 85 a0 fb ff ff 0b 	movb   $0xb,-0x460(%ebp)
 80624ff:	c6 85 a1 fb ff ff 05 	movb   $0x5,-0x45f(%ebp)
 8062506:	c6 85 a2 fb ff ff 0a 	movb   $0xa,-0x45e(%ebp)
 806250d:	c6 85 a3 fb ff ff 09 	movb   $0x9,-0x45d(%ebp)
 8062514:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 806251a:	83 ec 0c             	sub    $0xc,%esp
 806251d:	8d 95 84 fb ff ff    	lea    -0x47c(%ebp),%edx
 8062523:	52                   	push   %edx
 8062524:	6a 01                	push   $0x1
 8062526:	6a 20                	push   $0x20
 8062528:	6a 20                	push   $0x20
 806252a:	50                   	push   %eax
 806252b:	e8 a9 36 ff ff       	call   8055bd9 <new_array_from_c_array>
 8062530:	83 c4 1c             	add    $0x1c,%esp
 8062533:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062539:	a3 68 32 07 08       	mov    %eax,0x8073268
 806253e:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062544:	a3 6c 32 07 08       	mov    %eax,0x807326c
 8062549:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 806254f:	a3 70 32 07 08       	mov    %eax,0x8073270
 8062554:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 806255a:	a3 74 32 07 08       	mov    %eax,0x8073274
 806255f:	c7 05 88 31 07 08 09 	movl   $0xb4ca8b09,0x8073188
 8062566:	8b ca b4 
 8062569:	c7 05 8c 31 07 08 71 	movl   $0x3f79d71,0x807318c
 8062570:	9d f7 03 
 8062573:	c6 85 a4 fb ff ff 00 	movb   $0x0,-0x45c(%ebp)
 806257a:	c6 85 a5 fb ff ff 01 	movb   $0x1,-0x45b(%ebp)
 8062581:	c6 85 a6 fb ff ff 38 	movb   $0x38,-0x45a(%ebp)
 8062588:	c6 85 a7 fb ff ff 02 	movb   $0x2,-0x459(%ebp)
 806258f:	c6 85 a8 fb ff ff 39 	movb   $0x39,-0x458(%ebp)
 8062596:	c6 85 a9 fb ff ff 31 	movb   $0x31,-0x457(%ebp)
 806259d:	c6 85 aa fb ff ff 1c 	movb   $0x1c,-0x456(%ebp)
 80625a4:	c6 85 ab fb ff ff 03 	movb   $0x3,-0x455(%ebp)
 80625ab:	c6 85 ac fb ff ff 3d 	movb   $0x3d,-0x454(%ebp)
 80625b2:	c6 85 ad fb ff ff 3a 	movb   $0x3a,-0x453(%ebp)
 80625b9:	c6 85 ae fb ff ff 2a 	movb   $0x2a,-0x452(%ebp)
 80625c0:	c6 85 af fb ff ff 32 	movb   $0x32,-0x451(%ebp)
 80625c7:	c6 85 b0 fb ff ff 26 	movb   $0x26,-0x450(%ebp)
 80625ce:	c6 85 b1 fb ff ff 1d 	movb   $0x1d,-0x44f(%ebp)
 80625d5:	c6 85 b2 fb ff ff 11 	movb   $0x11,-0x44e(%ebp)
 80625dc:	c6 85 b3 fb ff ff 04 	movb   $0x4,-0x44d(%ebp)
 80625e3:	c6 85 b4 fb ff ff 3e 	movb   $0x3e,-0x44c(%ebp)
 80625ea:	c6 85 b5 fb ff ff 2f 	movb   $0x2f,-0x44b(%ebp)
 80625f1:	c6 85 b6 fb ff ff 3b 	movb   $0x3b,-0x44a(%ebp)
 80625f8:	c6 85 b7 fb ff ff 24 	movb   $0x24,-0x449(%ebp)
 80625ff:	c6 85 b8 fb ff ff 2d 	movb   $0x2d,-0x448(%ebp)
 8062606:	c6 85 b9 fb ff ff 2b 	movb   $0x2b,-0x447(%ebp)
 806260d:	c6 85 ba fb ff ff 33 	movb   $0x33,-0x446(%ebp)
 8062614:	c6 85 bb fb ff ff 16 	movb   $0x16,-0x445(%ebp)
 806261b:	c6 85 bc fb ff ff 35 	movb   $0x35,-0x444(%ebp)
 8062622:	c6 85 bd fb ff ff 27 	movb   $0x27,-0x443(%ebp)
 8062629:	c6 85 be fb ff ff 21 	movb   $0x21,-0x442(%ebp)
 8062630:	c6 85 bf fb ff ff 1e 	movb   $0x1e,-0x441(%ebp)
 8062637:	c6 85 c0 fb ff ff 18 	movb   $0x18,-0x440(%ebp)
 806263e:	c6 85 c1 fb ff ff 12 	movb   $0x12,-0x43f(%ebp)
 8062645:	c6 85 c2 fb ff ff 0c 	movb   $0xc,-0x43e(%ebp)
 806264c:	c6 85 c3 fb ff ff 05 	movb   $0x5,-0x43d(%ebp)
 8062653:	c6 85 c4 fb ff ff 3f 	movb   $0x3f,-0x43c(%ebp)
 806265a:	c6 85 c5 fb ff ff 37 	movb   $0x37,-0x43b(%ebp)
 8062661:	c6 85 c6 fb ff ff 30 	movb   $0x30,-0x43a(%ebp)
 8062668:	c6 85 c7 fb ff ff 1b 	movb   $0x1b,-0x439(%ebp)
 806266f:	c6 85 c8 fb ff ff 3c 	movb   $0x3c,-0x438(%ebp)
 8062676:	c6 85 c9 fb ff ff 29 	movb   $0x29,-0x437(%ebp)
 806267d:	c6 85 ca fb ff ff 25 	movb   $0x25,-0x436(%ebp)
 8062684:	c6 85 cb fb ff ff 10 	movb   $0x10,-0x435(%ebp)
 806268b:	c6 85 cc fb ff ff 2e 	movb   $0x2e,-0x434(%ebp)
 8062692:	c6 85 cd fb ff ff 23 	movb   $0x23,-0x433(%ebp)
 8062699:	c6 85 ce fb ff ff 2c 	movb   $0x2c,-0x432(%ebp)
 80626a0:	c6 85 cf fb ff ff 15 	movb   $0x15,-0x431(%ebp)
 80626a7:	c6 85 d0 fb ff ff 34 	movb   $0x34,-0x430(%ebp)
 80626ae:	c6 85 d1 fb ff ff 20 	movb   $0x20,-0x42f(%ebp)
 80626b5:	c6 85 d2 fb ff ff 17 	movb   $0x17,-0x42e(%ebp)
 80626bc:	c6 85 d3 fb ff ff 0b 	movb   $0xb,-0x42d(%ebp)
 80626c3:	c6 85 d4 fb ff ff 36 	movb   $0x36,-0x42c(%ebp)
 80626ca:	c6 85 d5 fb ff ff 1a 	movb   $0x1a,-0x42b(%ebp)
 80626d1:	c6 85 d6 fb ff ff 28 	movb   $0x28,-0x42a(%ebp)
 80626d8:	c6 85 d7 fb ff ff 0f 	movb   $0xf,-0x429(%ebp)
 80626df:	c6 85 d8 fb ff ff 22 	movb   $0x22,-0x428(%ebp)
 80626e6:	c6 85 d9 fb ff ff 14 	movb   $0x14,-0x427(%ebp)
 80626ed:	c6 85 da fb ff ff 1f 	movb   $0x1f,-0x426(%ebp)
 80626f4:	c6 85 db fb ff ff 0a 	movb   $0xa,-0x425(%ebp)
 80626fb:	c6 85 dc fb ff ff 19 	movb   $0x19,-0x424(%ebp)
 8062702:	c6 85 dd fb ff ff 0e 	movb   $0xe,-0x423(%ebp)
 8062709:	c6 85 de fb ff ff 13 	movb   $0x13,-0x422(%ebp)
 8062710:	c6 85 df fb ff ff 09 	movb   $0x9,-0x421(%ebp)
 8062717:	c6 85 e0 fb ff ff 0d 	movb   $0xd,-0x420(%ebp)
 806271e:	c6 85 e1 fb ff ff 08 	movb   $0x8,-0x41f(%ebp)
 8062725:	c6 85 e2 fb ff ff 07 	movb   $0x7,-0x41e(%ebp)
 806272c:	c6 85 e3 fb ff ff 06 	movb   $0x6,-0x41d(%ebp)
 8062733:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062739:	83 ec 0c             	sub    $0xc,%esp
 806273c:	8d 95 a4 fb ff ff    	lea    -0x45c(%ebp),%edx
 8062742:	52                   	push   %edx
 8062743:	6a 01                	push   $0x1
 8062745:	6a 40                	push   $0x40
 8062747:	6a 40                	push   $0x40
 8062749:	50                   	push   %eax
 806274a:	e8 8a 34 ff ff       	call   8055bd9 <new_array_from_c_array>
 806274f:	83 c4 1c             	add    $0x1c,%esp
 8062752:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062758:	a3 dc 31 07 08       	mov    %eax,0x80731dc
 806275d:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062763:	a3 e0 31 07 08       	mov    %eax,0x80731e0
 8062768:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 806276e:	a3 e4 31 07 08       	mov    %eax,0x80731e4
 8062773:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062779:	a3 e8 31 07 08       	mov    %eax,0x80731e8
 806277e:	c7 05 f8 30 07 08 55 	movl   $0x55555555,0x80730f8
 8062785:	55 55 55 
 8062788:	c7 05 fc 30 07 08 55 	movl   $0x55555555,0x80730fc
 806278f:	55 55 55 
 8062792:	c7 05 b0 31 07 08 33 	movl   $0x33333333,0x80731b0
 8062799:	33 33 33 
 806279c:	c7 05 b4 31 07 08 33 	movl   $0x33333333,0x80731b4
 80627a3:	33 33 33 
 80627a6:	c7 05 18 31 07 08 0f 	movl   $0xf0f0f0f,0x8073118
 80627ad:	0f 0f 0f 
 80627b0:	c7 05 1c 31 07 08 0f 	movl   $0xf0f0f0f,0x807311c
 80627b7:	0f 0f 0f 
 80627ba:	c7 05 b8 31 07 08 ff 	movl   $0xff00ff,0x80731b8
 80627c1:	00 ff 00 
 80627c4:	c7 05 bc 31 07 08 ff 	movl   $0xff00ff,0x80731bc
 80627cb:	00 ff 00 
 80627ce:	c7 05 00 31 07 08 ff 	movl   $0xffff,0x8073100
 80627d5:	ff 00 00 
 80627d8:	c7 05 04 31 07 08 ff 	movl   $0xffff,0x8073104
 80627df:	ff 00 00 
 80627e2:	c7 05 40 31 07 08 ff 	movl   $0xffffffff,0x8073140
 80627e9:	ff ff ff 
 80627ec:	c7 05 58 31 07 08 ff 	movl   $0xffffffff,0x8073158
 80627f3:	ff ff ff 
 80627f6:	c7 05 5c 31 07 08 ff 	movl   $0xffffffff,0x807315c
 80627fd:	ff ff ff 
 8062800:	c7 05 20 32 07 08 00 	movl   $0x0,0x8073220
 8062807:	00 00 00 
 806280a:	c7 05 24 32 07 08 01 	movl   $0x1,0x8073224
 8062811:	00 00 00 
 8062814:	a1 20 32 07 08       	mov    0x8073220,%eax
 8062819:	8b 15 24 32 07 08    	mov    0x8073224,%edx
 806281f:	83 c0 ff             	add    $0xffffffff,%eax
 8062822:	83 d2 ff             	adc    $0xffffffff,%edx
 8062825:	a3 e8 32 07 08       	mov    %eax,0x80732e8
 806282a:	89 15 ec 32 07 08    	mov    %edx,0x80732ec
 8062830:	8d 85 e4 fb ff ff    	lea    -0x41c(%ebp),%eax
 8062836:	bb 80 a0 06 08       	mov    $0x806a080,%ebx
 806283b:	ba 40 00 00 00       	mov    $0x40,%edx
 8062840:	89 c7                	mov    %eax,%edi
 8062842:	89 de                	mov    %ebx,%esi
 8062844:	89 d1                	mov    %edx,%ecx
 8062846:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062848:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 806284e:	83 ec 0c             	sub    $0xc,%esp
 8062851:	8d 95 e4 fb ff ff    	lea    -0x41c(%ebp),%edx
 8062857:	52                   	push   %edx
 8062858:	6a 01                	push   $0x1
 806285a:	68 00 01 00 00       	push   $0x100
 806285f:	68 00 01 00 00       	push   $0x100
 8062864:	50                   	push   %eax
 8062865:	e8 6f 33 ff ff       	call   8055bd9 <new_array_from_c_array>
 806286a:	83 c4 1c             	add    $0x1c,%esp
 806286d:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062873:	a3 d8 32 07 08       	mov    %eax,0x80732d8
 8062878:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 806287e:	a3 dc 32 07 08       	mov    %eax,0x80732dc
 8062883:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062889:	a3 e0 32 07 08       	mov    %eax,0x80732e0
 806288e:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062894:	a3 e4 32 07 08       	mov    %eax,0x80732e4
 8062899:	8d 85 e4 fc ff ff    	lea    -0x31c(%ebp),%eax
 806289f:	bb 80 a1 06 08       	mov    $0x806a180,%ebx
 80628a4:	ba 40 00 00 00       	mov    $0x40,%edx
 80628a9:	89 c7                	mov    %eax,%edi
 80628ab:	89 de                	mov    %ebx,%esi
 80628ad:	89 d1                	mov    %edx,%ecx
 80628af:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 80628b1:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 80628b7:	83 ec 0c             	sub    $0xc,%esp
 80628ba:	8d 95 e4 fc ff ff    	lea    -0x31c(%ebp),%edx
 80628c0:	52                   	push   %edx
 80628c1:	6a 01                	push   $0x1
 80628c3:	68 00 01 00 00       	push   $0x100
 80628c8:	68 00 01 00 00       	push   $0x100
 80628cd:	50                   	push   %eax
 80628ce:	e8 06 33 ff ff       	call   8055bd9 <new_array_from_c_array>
 80628d3:	83 c4 1c             	add    $0x1c,%esp
 80628d6:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 80628dc:	a3 4c 32 07 08       	mov    %eax,0x807324c
 80628e1:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 80628e7:	a3 50 32 07 08       	mov    %eax,0x8073250
 80628ec:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 80628f2:	a3 54 32 07 08       	mov    %eax,0x8073254
 80628f7:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 80628fd:	a3 58 32 07 08       	mov    %eax,0x8073258
 8062902:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 8062908:	bb 80 a2 06 08       	mov    $0x806a280,%ebx
 806290d:	ba 40 00 00 00       	mov    $0x40,%edx
 8062912:	89 c7                	mov    %eax,%edi
 8062914:	89 de                	mov    %ebx,%esi
 8062916:	89 d1                	mov    %edx,%ecx
 8062918:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 806291a:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062920:	83 ec 0c             	sub    $0xc,%esp
 8062923:	8d 95 e4 fd ff ff    	lea    -0x21c(%ebp),%edx
 8062929:	52                   	push   %edx
 806292a:	6a 01                	push   $0x1
 806292c:	68 00 01 00 00       	push   $0x100
 8062931:	68 00 01 00 00       	push   $0x100
 8062936:	50                   	push   %eax
 8062937:	e8 9d 32 ff ff       	call   8055bd9 <new_array_from_c_array>
 806293c:	83 c4 1c             	add    $0x1c,%esp
 806293f:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062945:	a3 cc 31 07 08       	mov    %eax,0x80731cc
 806294a:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062950:	a3 d0 31 07 08       	mov    %eax,0x80731d0
 8062955:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 806295b:	a3 d4 31 07 08       	mov    %eax,0x80731d4
 8062960:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062966:	a3 d8 31 07 08       	mov    %eax,0x80731d8
 806296b:	8d 85 e4 fe ff ff    	lea    -0x11c(%ebp),%eax
 8062971:	bb 80 a3 06 08       	mov    $0x806a380,%ebx
 8062976:	ba 40 00 00 00       	mov    $0x40,%edx
 806297b:	89 c7                	mov    %eax,%edi
 806297d:	89 de                	mov    %ebx,%esi
 806297f:	89 d1                	mov    %edx,%ecx
 8062981:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062983:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062989:	83 ec 0c             	sub    $0xc,%esp
 806298c:	8d 95 e4 fe ff ff    	lea    -0x11c(%ebp),%edx
 8062992:	52                   	push   %edx
 8062993:	6a 01                	push   $0x1
 8062995:	68 00 01 00 00       	push   $0x100
 806299a:	68 00 01 00 00       	push   $0x100
 806299f:	50                   	push   %eax
 80629a0:	e8 34 32 ff ff       	call   8055bd9 <new_array_from_c_array>
 80629a5:	83 c4 1c             	add    $0x1c,%esp
 80629a8:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 80629ae:	a3 08 31 07 08       	mov    %eax,0x8073108
 80629b3:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 80629b9:	a3 0c 31 07 08       	mov    %eax,0x807310c
 80629be:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 80629c4:	a3 10 31 07 08       	mov    %eax,0x8073110
 80629c9:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 80629cf:	a3 14 31 07 08       	mov    %eax,0x8073114
 80629d4:	c7 05 c8 30 07 08 00 	movl   $0x0,0x80730c8
 80629db:	00 00 00 
 80629de:	c7 05 cc 30 07 08 00 	movl   $0x0,0x80730cc
 80629e5:	00 00 00 
 80629e8:	c7 05 60 32 07 08 00 	movl   $0x0,0x8073260
 80629ef:	00 00 00 
 80629f2:	c7 05 64 32 07 08 00 	movl   $0x80000000,0x8073264
 80629f9:	00 00 80 
 80629fc:	c7 05 c0 30 07 08 00 	movl   $0x0,0x80730c0
 8062a03:	00 00 00 
 8062a06:	c7 05 c4 30 07 08 00 	movl   $0x7ff00000,0x80730c4
 8062a0d:	00 f0 7f 
 8062a10:	c7 05 48 31 07 08 00 	movl   $0x0,0x8073148
 8062a17:	00 00 00 
 8062a1a:	c7 05 4c 31 07 08 00 	movl   $0xfff00000,0x807314c
 8062a21:	00 f0 ff 
 8062a24:	c7 05 d0 30 07 08 0a 	movl   $0xa,0x80730d0
 8062a2b:	00 00 00 
 8062a2e:	8d 85 18 c1 ff ff    	lea    -0x3ee8(%ebp),%eax
 8062a34:	bb 80 a4 06 08       	mov    $0x806a480,%ebx
 8062a39:	ba 6a 02 00 00       	mov    $0x26a,%edx
 8062a3e:	89 c7                	mov    %eax,%edi
 8062a40:	89 de                	mov    %ebx,%esi
 8062a42:	89 d1                	mov    %edx,%ecx
 8062a44:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062a46:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062a4c:	83 ec 0c             	sub    $0xc,%esp
 8062a4f:	8d 95 18 c1 ff ff    	lea    -0x3ee8(%ebp),%edx
 8062a55:	52                   	push   %edx
 8062a56:	6a 08                	push   $0x8
 8062a58:	68 35 01 00 00       	push   $0x135
 8062a5d:	68 35 01 00 00       	push   $0x135
 8062a62:	50                   	push   %eax
 8062a63:	e8 71 31 ff ff       	call   8055bd9 <new_array_from_c_array>
 8062a68:	83 c4 1c             	add    $0x1c,%esp
 8062a6b:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062a71:	a3 a4 32 07 08       	mov    %eax,0x80732a4
 8062a76:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062a7c:	a3 a8 32 07 08       	mov    %eax,0x80732a8
 8062a81:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062a87:	a3 ac 32 07 08       	mov    %eax,0x80732ac
 8062a8c:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062a92:	a3 b0 32 07 08       	mov    %eax,0x80732b0
 8062a97:	8d 85 c0 ca ff ff    	lea    -0x3540(%ebp),%eax
 8062a9d:	bb 40 ae 06 08       	mov    $0x806ae40,%ebx
 8062aa2:	ba 88 02 00 00       	mov    $0x288,%edx
 8062aa7:	89 c7                	mov    %eax,%edi
 8062aa9:	89 de                	mov    %ebx,%esi
 8062aab:	89 d1                	mov    %edx,%ecx
 8062aad:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062aaf:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062ab5:	83 ec 0c             	sub    $0xc,%esp
 8062ab8:	8d 95 c0 ca ff ff    	lea    -0x3540(%ebp),%edx
 8062abe:	52                   	push   %edx
 8062abf:	6a 08                	push   $0x8
 8062ac1:	68 44 01 00 00       	push   $0x144
 8062ac6:	68 44 01 00 00       	push   $0x144
 8062acb:	50                   	push   %eax
 8062acc:	e8 08 31 ff ff       	call   8055bd9 <new_array_from_c_array>
 8062ad1:	83 c4 1c             	add    $0x1c,%esp
 8062ad4:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062ada:	a3 b8 32 07 08       	mov    %eax,0x80732b8
 8062adf:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062ae5:	a3 bc 32 07 08       	mov    %eax,0x80732bc
 8062aea:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062af0:	a3 c0 32 07 08       	mov    %eax,0x80732c0
 8062af5:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062afb:	a3 c4 32 07 08       	mov    %eax,0x80732c4
 8062b00:	c7 05 f0 30 07 08 ff 	movl   $0xffffffff,0x80730f0
 8062b07:	ff ff ff 
 8062b0a:	c7 05 f4 30 07 08 ff 	movl   $0xffffffff,0x80730f4
 8062b11:	ff ff ff 
 8062b14:	c7 85 a8 bc ff ff 01 	movl   $0x1,-0x4358(%ebp)
 8062b1b:	00 00 00 
 8062b1e:	c7 85 ac bc ff ff 0a 	movl   $0xa,-0x4354(%ebp)
 8062b25:	00 00 00 
 8062b28:	c7 85 b0 bc ff ff 64 	movl   $0x64,-0x4350(%ebp)
 8062b2f:	00 00 00 
 8062b32:	c7 85 b4 bc ff ff e8 	movl   $0x3e8,-0x434c(%ebp)
 8062b39:	03 00 00 
 8062b3c:	c7 85 b8 bc ff ff 10 	movl   $0x2710,-0x4348(%ebp)
 8062b43:	27 00 00 
 8062b46:	c7 85 bc bc ff ff a0 	movl   $0x186a0,-0x4344(%ebp)
 8062b4d:	86 01 00 
 8062b50:	c7 85 c0 bc ff ff 40 	movl   $0xf4240,-0x4340(%ebp)
 8062b57:	42 0f 00 
 8062b5a:	c7 85 c4 bc ff ff 80 	movl   $0x989680,-0x433c(%ebp)
 8062b61:	96 98 00 
 8062b64:	c7 85 c8 bc ff ff 00 	movl   $0x5f5e100,-0x4338(%ebp)
 8062b6b:	e1 f5 05 
 8062b6e:	c7 85 cc bc ff ff 00 	movl   $0x3b9aca00,-0x4334(%ebp)
 8062b75:	ca 9a 3b 
 8062b78:	c7 85 d0 bc ff ff 00 	movl   $0x540be400,-0x4330(%ebp)
 8062b7f:	e4 0b 54 
 8062b82:	c7 85 d4 bc ff ff 00 	movl   $0x4876e800,-0x432c(%ebp)
 8062b89:	e8 76 48 
 8062b8c:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062b92:	83 ec 0c             	sub    $0xc,%esp
 8062b95:	8d 95 a8 bc ff ff    	lea    -0x4358(%ebp),%edx
 8062b9b:	52                   	push   %edx
 8062b9c:	6a 04                	push   $0x4
 8062b9e:	6a 0c                	push   $0xc
 8062ba0:	6a 0c                	push   $0xc
 8062ba2:	50                   	push   %eax
 8062ba3:	e8 31 30 ff ff       	call   8055bd9 <new_array_from_c_array>
 8062ba8:	83 c4 1c             	add    $0x1c,%esp
 8062bab:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062bb1:	a3 30 31 07 08       	mov    %eax,0x8073130
 8062bb6:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062bbc:	a3 34 31 07 08       	mov    %eax,0x8073134
 8062bc1:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062bc7:	a3 38 31 07 08       	mov    %eax,0x8073138
 8062bcc:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062bd2:	a3 3c 31 07 08       	mov    %eax,0x807313c
 8062bd7:	c7 05 90 32 07 08 17 	movl   $0x17,0x8073290
 8062bde:	00 00 00 
 8062be1:	c7 05 f0 32 07 08 08 	movl   $0x8,0x80732f0
 8062be8:	00 00 00 
 8062beb:	8d 85 68 bd ff ff    	lea    -0x4298(%ebp),%eax
 8062bf1:	bb 60 b8 06 08       	mov    $0x806b860,%ebx
 8062bf6:	ba 28 00 00 00       	mov    $0x28,%edx
 8062bfb:	89 c7                	mov    %eax,%edi
 8062bfd:	89 de                	mov    %ebx,%esi
 8062bff:	89 d1                	mov    %edx,%ecx
 8062c01:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062c03:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062c09:	83 ec 0c             	sub    $0xc,%esp
 8062c0c:	8d 95 68 bd ff ff    	lea    -0x4298(%ebp),%edx
 8062c12:	52                   	push   %edx
 8062c13:	6a 08                	push   $0x8
 8062c15:	6a 14                	push   $0x14
 8062c17:	6a 14                	push   $0x14
 8062c19:	50                   	push   %eax
 8062c1a:	e8 ba 2f ff ff       	call   8055bd9 <new_array_from_c_array>
 8062c1f:	83 c4 1c             	add    $0x1c,%esp
 8062c22:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062c28:	a3 c8 32 07 08       	mov    %eax,0x80732c8
 8062c2d:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062c33:	a3 cc 32 07 08       	mov    %eax,0x80732cc
 8062c38:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062c3e:	a3 d0 32 07 08       	mov    %eax,0x80732d0
 8062c43:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062c49:	a3 d4 32 07 08       	mov    %eax,0x80732d4
 8062c4e:	c7 05 38 32 07 08 34 	movl   $0x34,0x8073238
 8062c55:	00 00 00 
 8062c58:	c7 05 68 31 07 08 0b 	movl   $0xb,0x8073168
 8062c5f:	00 00 00 
 8062c62:	8d 85 08 be ff ff    	lea    -0x41f8(%ebp),%eax
 8062c68:	bb 00 b9 06 08       	mov    $0x806b900,%ebx
 8062c6d:	ba 28 00 00 00       	mov    $0x28,%edx
 8062c72:	89 c7                	mov    %eax,%edi
 8062c74:	89 de                	mov    %ebx,%esi
 8062c76:	89 d1                	mov    %edx,%ecx
 8062c78:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062c7a:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062c80:	83 ec 0c             	sub    $0xc,%esp
 8062c83:	8d 95 08 be ff ff    	lea    -0x41f8(%ebp),%edx
 8062c89:	52                   	push   %edx
 8062c8a:	6a 08                	push   $0x8
 8062c8c:	6a 14                	push   $0x14
 8062c8e:	6a 14                	push   $0x14
 8062c90:	50                   	push   %eax
 8062c91:	e8 43 2f ff ff       	call   8055bd9 <new_array_from_c_array>
 8062c96:	83 c4 1c             	add    $0x1c,%esp
 8062c99:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062c9f:	a3 ec 31 07 08       	mov    %eax,0x80731ec
 8062ca4:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062caa:	a3 f0 31 07 08       	mov    %eax,0x80731f0
 8062caf:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062cb5:	a3 f4 31 07 08       	mov    %eax,0x80731f4
 8062cba:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062cc0:	a3 f8 31 07 08       	mov    %eax,0x80731f8
 8062cc5:	8d 85 d8 bc ff ff    	lea    -0x4328(%ebp),%eax
 8062ccb:	bb a0 b9 06 08       	mov    $0x806b9a0,%ebx
 8062cd0:	ba 24 00 00 00       	mov    $0x24,%edx
 8062cd5:	89 c7                	mov    %eax,%edi
 8062cd7:	89 de                	mov    %ebx,%esi
 8062cd9:	89 d1                	mov    %edx,%ecx
 8062cdb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062cdd:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062ce3:	83 ec 0c             	sub    $0xc,%esp
 8062ce6:	8d 95 d8 bc ff ff    	lea    -0x4328(%ebp),%edx
 8062cec:	52                   	push   %edx
 8062ced:	6a 08                	push   $0x8
 8062cef:	6a 12                	push   $0x12
 8062cf1:	6a 12                	push   $0x12
 8062cf3:	50                   	push   %eax
 8062cf4:	e8 e0 2e ff ff       	call   8055bd9 <new_array_from_c_array>
 8062cf9:	83 c4 1c             	add    $0x1c,%esp
 8062cfc:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062d02:	a3 94 32 07 08       	mov    %eax,0x8073294
 8062d07:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062d0d:	a3 98 32 07 08       	mov    %eax,0x8073298
 8062d12:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062d18:	a3 9c 32 07 08       	mov    %eax,0x807329c
 8062d1d:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062d23:	a3 a0 32 07 08       	mov    %eax,0x80732a0
 8062d28:	8d 85 a0 bf ff ff    	lea    -0x4060(%ebp),%eax
 8062d2e:	bb 40 ba 06 08       	mov    $0x806ba40,%ebx
 8062d33:	ba 5e 00 00 00       	mov    $0x5e,%edx
 8062d38:	89 c7                	mov    %eax,%edi
 8062d3a:	89 de                	mov    %ebx,%esi
 8062d3c:	89 d1                	mov    %edx,%ecx
 8062d3e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062d40:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062d46:	83 ec 0c             	sub    $0xc,%esp
 8062d49:	8d 95 a0 bf ff ff    	lea    -0x4060(%ebp),%edx
 8062d4f:	52                   	push   %edx
 8062d50:	6a 08                	push   $0x8
 8062d52:	6a 2f                	push   $0x2f
 8062d54:	6a 2f                	push   $0x2f
 8062d56:	50                   	push   %eax
 8062d57:	e8 7d 2e ff ff       	call   8055bd9 <new_array_from_c_array>
 8062d5c:	83 c4 1c             	add    $0x1c,%esp
 8062d5f:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062d65:	a3 10 32 07 08       	mov    %eax,0x8073210
 8062d6a:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062d70:	a3 14 32 07 08       	mov    %eax,0x8073214
 8062d75:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062d7b:	a3 18 32 07 08       	mov    %eax,0x8073218
 8062d80:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062d86:	a3 1c 32 07 08       	mov    %eax,0x807321c
 8062d8b:	8d 85 a8 be ff ff    	lea    -0x4158(%ebp),%eax
 8062d91:	bb c0 bb 06 08       	mov    $0x806bbc0,%ebx
 8062d96:	ba 3e 00 00 00       	mov    $0x3e,%edx
 8062d9b:	89 c7                	mov    %eax,%edi
 8062d9d:	89 de                	mov    %ebx,%esi
 8062d9f:	89 d1                	mov    %edx,%ecx
 8062da1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8062da3:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8062da9:	83 ec 0c             	sub    $0xc,%esp
 8062dac:	8d 95 a8 be ff ff    	lea    -0x4158(%ebp),%edx
 8062db2:	52                   	push   %edx
 8062db3:	6a 08                	push   $0x8
 8062db5:	6a 1f                	push   $0x1f
 8062db7:	6a 1f                	push   $0x1f
 8062db9:	50                   	push   %eax
 8062dba:	e8 1a 2e ff ff       	call   8055bd9 <new_array_from_c_array>
 8062dbf:	83 c4 1c             	add    $0x1c,%esp
 8062dc2:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8062dc8:	a3 dc 30 07 08       	mov    %eax,0x80730dc
 8062dcd:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8062dd3:	a3 e0 30 07 08       	mov    %eax,0x80730e0
 8062dd8:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8062dde:	a3 e4 30 07 08       	mov    %eax,0x80730e4
 8062de3:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8062de9:	a3 e8 30 07 08       	mov    %eax,0x80730e8
 8062dee:	c7 85 24 e7 ff ff 00 	movl   $0x0,-0x18dc(%ebp)
 8062df5:	00 00 00 
 8062df8:	c7 85 28 e7 ff ff 00 	movl   $0x0,-0x18d8(%ebp)
 8062dff:	00 00 00 
 8062e02:	c7 85 2c e7 ff ff 00 	movl   $0x0,-0x18d4(%ebp)
 8062e09:	00 00 00 
 8062e0c:	c7 85 30 e7 ff ff 00 	movl   $0x1000000,-0x18d0(%ebp)
 8062e13:	00 00 01 
 8062e16:	c7 85 34 e7 ff ff 00 	movl   $0x0,-0x18cc(%ebp)
 8062e1d:	00 00 00 
 8062e20:	c7 85 38 e7 ff ff 00 	movl   $0x0,-0x18c8(%ebp)
 8062e27:	00 00 00 
 8062e2a:	c7 85 3c e7 ff ff 00 	movl   $0x0,-0x18c4(%ebp)
 8062e31:	00 00 00 
 8062e34:	c7 85 40 e7 ff ff 00 	movl   $0x1400000,-0x18c0(%ebp)
 8062e3b:	00 40 01 
 8062e3e:	c7 85 44 e7 ff ff 00 	movl   $0x0,-0x18bc(%ebp)
 8062e45:	00 00 00 
 8062e48:	c7 85 48 e7 ff ff 00 	movl   $0x0,-0x18b8(%ebp)
 8062e4f:	00 00 00 
 8062e52:	c7 85 4c e7 ff ff 00 	movl   $0x0,-0x18b4(%ebp)
 8062e59:	00 00 00 
 8062e5c:	c7 85 50 e7 ff ff 00 	movl   $0x1900000,-0x18b0(%ebp)
 8062e63:	00 90 01 
 8062e66:	c7 85 54 e7 ff ff 00 	movl   $0x0,-0x18ac(%ebp)
 8062e6d:	00 00 00 
 8062e70:	c7 85 58 e7 ff ff 00 	movl   $0x0,-0x18a8(%ebp)
 8062e77:	00 00 00 
 8062e7a:	c7 85 5c e7 ff ff 00 	movl   $0x0,-0x18a4(%ebp)
 8062e81:	00 00 00 
 8062e84:	c7 85 60 e7 ff ff 00 	movl   $0x1f40000,-0x18a0(%ebp)
 8062e8b:	00 f4 01 
 8062e8e:	c7 85 64 e7 ff ff 00 	movl   $0x0,-0x189c(%ebp)
 8062e95:	00 00 00 
 8062e98:	c7 85 68 e7 ff ff 00 	movl   $0x0,-0x1898(%ebp)
 8062e9f:	00 00 00 
 8062ea2:	c7 85 6c e7 ff ff 00 	movl   $0x0,-0x1894(%ebp)
 8062ea9:	00 00 00 
 8062eac:	c7 85 70 e7 ff ff 00 	movl   $0x1388000,-0x1890(%ebp)
 8062eb3:	80 38 01 
 8062eb6:	c7 85 74 e7 ff ff 00 	movl   $0x0,-0x188c(%ebp)
 8062ebd:	00 00 00 
 8062ec0:	c7 85 78 e7 ff ff 00 	movl   $0x0,-0x1888(%ebp)
 8062ec7:	00 00 00 
 8062eca:	c7 85 7c e7 ff ff 00 	movl   $0x0,-0x1884(%ebp)
 8062ed1:	00 00 00 
 8062ed4:	c7 85 80 e7 ff ff 00 	movl   $0x186a000,-0x1880(%ebp)
 8062edb:	a0 86 01 
 8062ede:	c7 85 84 e7 ff ff 00 	movl   $0x0,-0x187c(%ebp)
 8062ee5:	00 00 00 
 8062ee8:	c7 85 88 e7 ff ff 00 	movl   $0x0,-0x1878(%ebp)
 8062eef:	00 00 00 
 8062ef2:	c7 85 8c e7 ff ff 00 	movl   $0x0,-0x1874(%ebp)
 8062ef9:	00 00 00 
 8062efc:	c7 85 90 e7 ff ff 00 	movl   $0x1e84800,-0x1870(%ebp)
 8062f03:	48 e8 01 
 8062f06:	c7 85 94 e7 ff ff 00 	movl   $0x0,-0x186c(%ebp)
 8062f0d:	00 00 00 
 8062f10:	c7 85 98 e7 ff ff 00 	movl   $0x0,-0x1868(%ebp)
 8062f17:	00 00 00 
 8062f1a:	c7 85 9c e7 ff ff 00 	movl   $0x0,-0x1864(%ebp)
 8062f21:	00 00 00 
 8062f24:	c7 85 a0 e7 ff ff 00 	movl   $0x1312d00,-0x1860(%ebp)
 8062f2b:	2d 31 01 
 8062f2e:	c7 85 a4 e7 ff ff 00 	movl   $0x0,-0x185c(%ebp)
 8062f35:	00 00 00 
 8062f38:	c7 85 a8 e7 ff ff 00 	movl   $0x0,-0x1858(%ebp)
 8062f3f:	00 00 00 
 8062f42:	c7 85 ac e7 ff ff 00 	movl   $0x0,-0x1854(%ebp)
 8062f49:	00 00 00 
 8062f4c:	c7 85 b0 e7 ff ff 40 	movl   $0x17d7840,-0x1850(%ebp)
 8062f53:	78 7d 01 
 8062f56:	c7 85 b4 e7 ff ff 00 	movl   $0x0,-0x184c(%ebp)
 8062f5d:	00 00 00 
 8062f60:	c7 85 b8 e7 ff ff 00 	movl   $0x0,-0x1848(%ebp)
 8062f67:	00 00 00 
 8062f6a:	c7 85 bc e7 ff ff 00 	movl   $0x0,-0x1844(%ebp)
 8062f71:	00 00 00 
 8062f74:	c7 85 c0 e7 ff ff 50 	movl   $0x1dcd650,-0x1840(%ebp)
 8062f7b:	d6 dc 01 
 8062f7e:	c7 85 c4 e7 ff ff 00 	movl   $0x0,-0x183c(%ebp)
 8062f85:	00 00 00 
 8062f88:	c7 85 c8 e7 ff ff 00 	movl   $0x0,-0x1838(%ebp)
 8062f8f:	00 00 00 
 8062f92:	c7 85 cc e7 ff ff 00 	movl   $0x0,-0x1834(%ebp)
 8062f99:	00 00 00 
 8062f9c:	c7 85 d0 e7 ff ff f2 	movl   $0x12a05f2,-0x1830(%ebp)
 8062fa3:	05 2a 01 
 8062fa6:	c7 85 d4 e7 ff ff 00 	movl   $0x0,-0x182c(%ebp)
 8062fad:	00 00 00 
 8062fb0:	c7 85 d8 e7 ff ff 00 	movl   $0x0,-0x1828(%ebp)
 8062fb7:	00 00 00 
 8062fba:	c7 85 dc e7 ff ff 00 	movl   $0x80000000,-0x1824(%ebp)
 8062fc1:	00 00 80 
 8062fc4:	c7 85 e0 e7 ff ff 6e 	movl   $0x174876e,-0x1820(%ebp)
 8062fcb:	87 74 01 
 8062fce:	c7 85 e4 e7 ff ff 00 	movl   $0x0,-0x181c(%ebp)
 8062fd5:	00 00 00 
 8062fd8:	c7 85 e8 e7 ff ff 00 	movl   $0x0,-0x1818(%ebp)
 8062fdf:	00 00 00 
 8062fe2:	c7 85 ec e7 ff ff 00 	movl   $0x20000000,-0x1814(%ebp)
 8062fe9:	00 00 20 
 8062fec:	c7 85 f0 e7 ff ff 4a 	movl   $0x1d1a94a,-0x1810(%ebp)
 8062ff3:	a9 d1 01 
 8062ff6:	c7 85 f4 e7 ff ff 00 	movl   $0x0,-0x180c(%ebp)
 8062ffd:	00 00 00 
 8063000:	c7 85 f8 e7 ff ff 00 	movl   $0x0,-0x1808(%ebp)
 8063007:	00 00 00 
 806300a:	c7 85 fc e7 ff ff 00 	movl   $0x54000000,-0x1804(%ebp)
 8063011:	00 00 54 
 8063014:	c7 85 00 e8 ff ff ce 	movl   $0x12309ce,-0x1800(%ebp)
 806301b:	09 23 01 
 806301e:	c7 85 04 e8 ff ff 00 	movl   $0x0,-0x17fc(%ebp)
 8063025:	00 00 00 
 8063028:	c7 85 08 e8 ff ff 00 	movl   $0x0,-0x17f8(%ebp)
 806302f:	00 00 00 
 8063032:	c7 85 0c e8 ff ff 00 	movl   $0xe9000000,-0x17f4(%ebp)
 8063039:	00 00 e9 
 806303c:	c7 85 10 e8 ff ff 41 	movl   $0x16bcc41,-0x17f0(%ebp)
 8063043:	cc 6b 01 
 8063046:	c7 85 14 e8 ff ff 00 	movl   $0x0,-0x17ec(%ebp)
 806304d:	00 00 00 
 8063050:	c7 85 18 e8 ff ff 00 	movl   $0x0,-0x17e8(%ebp)
 8063057:	00 00 00 
 806305a:	c7 85 1c e8 ff ff 00 	movl   $0x63400000,-0x17e4(%ebp)
 8063061:	00 40 63 
 8063064:	c7 85 20 e8 ff ff 52 	movl   $0x1c6bf52,-0x17e0(%ebp)
 806306b:	bf c6 01 
 806306e:	c7 85 24 e8 ff ff 00 	movl   $0x0,-0x17dc(%ebp)
 8063075:	00 00 00 
 8063078:	c7 85 28 e8 ff ff 00 	movl   $0x0,-0x17d8(%ebp)
 806307f:	00 00 00 
 8063082:	c7 85 2c e8 ff ff 00 	movl   $0x7e080000,-0x17d4(%ebp)
 8063089:	00 08 7e 
 806308c:	c7 85 30 e8 ff ff 93 	movl   $0x11c3793,-0x17d0(%ebp)
 8063093:	37 1c 01 
 8063096:	c7 85 34 e8 ff ff 00 	movl   $0x0,-0x17cc(%ebp)
 806309d:	00 00 00 
 80630a0:	c7 85 38 e8 ff ff 00 	movl   $0x0,-0x17c8(%ebp)
 80630a7:	00 00 00 
 80630aa:	c7 85 3c e8 ff ff 00 	movl   $0x5d8a0000,-0x17c4(%ebp)
 80630b1:	00 8a 5d 
 80630b4:	c7 85 40 e8 ff ff 78 	movl   $0x1634578,-0x17c0(%ebp)
 80630bb:	45 63 01 
 80630be:	c7 85 44 e8 ff ff 00 	movl   $0x0,-0x17bc(%ebp)
 80630c5:	00 00 00 
 80630c8:	c7 85 48 e8 ff ff 00 	movl   $0x0,-0x17b8(%ebp)
 80630cf:	00 00 00 
 80630d2:	c7 85 4c e8 ff ff 00 	movl   $0x74ec8000,-0x17b4(%ebp)
 80630d9:	80 ec 74 
 80630dc:	c7 85 50 e8 ff ff d6 	movl   $0x1bc16d6,-0x17b0(%ebp)
 80630e3:	16 bc 01 
 80630e6:	c7 85 54 e8 ff ff 00 	movl   $0x0,-0x17ac(%ebp)
 80630ed:	00 00 00 
 80630f0:	c7 85 58 e8 ff ff 00 	movl   $0x0,-0x17a8(%ebp)
 80630f7:	00 00 00 
 80630fa:	c7 85 5c e8 ff ff 00 	movl   $0x913d000,-0x17a4(%ebp)
 8063101:	d0 13 09 
 8063104:	c7 85 60 e8 ff ff 46 	movl   $0x1158e46,-0x17a0(%ebp)
 806310b:	8e 15 01 
 806310e:	c7 85 64 e8 ff ff 00 	movl   $0x0,-0x179c(%ebp)
 8063115:	00 00 00 
 8063118:	c7 85 68 e8 ff ff 00 	movl   $0x0,-0x1798(%ebp)
 806311f:	00 00 00 
 8063122:	c7 85 6c e8 ff ff 00 	movl   $0x8b58c400,-0x1794(%ebp)
 8063129:	c4 58 8b 
 806312c:	c7 85 70 e8 ff ff d7 	movl   $0x15af1d7,-0x1790(%ebp)
 8063133:	f1 5a 01 
 8063136:	c7 85 74 e8 ff ff 00 	movl   $0x0,-0x178c(%ebp)
 806313d:	00 00 00 
 8063140:	c7 85 78 e8 ff ff 00 	movl   $0x0,-0x1788(%ebp)
 8063147:	00 00 00 
 806314a:	c7 85 7c e8 ff ff 00 	movl   $0x6e2ef500,-0x1784(%ebp)
 8063151:	f5 2e 6e 
 8063154:	c7 85 80 e8 ff ff 4d 	movl   $0x1b1ae4d,-0x1780(%ebp)
 806315b:	ae b1 01 
 806315e:	c7 85 84 e8 ff ff 00 	movl   $0x0,-0x177c(%ebp)
 8063165:	00 00 00 
 8063168:	c7 85 88 e8 ff ff 00 	movl   $0x0,-0x1778(%ebp)
 806316f:	00 00 00 
 8063172:	c7 85 8c e8 ff ff 20 	movl   $0x64dd5920,-0x1774(%ebp)
 8063179:	59 dd 64 
 806317c:	c7 85 90 e8 ff ff f0 	movl   $0x10f0cf0,-0x1770(%ebp)
 8063183:	0c 0f 01 
 8063186:	c7 85 94 e8 ff ff 00 	movl   $0x0,-0x176c(%ebp)
 806318d:	00 00 00 
 8063190:	c7 85 98 e8 ff ff 00 	movl   $0x0,-0x1768(%ebp)
 8063197:	00 00 00 
 806319a:	c7 85 9c e8 ff ff 68 	movl   $0x7e14af68,-0x1764(%ebp)
 80631a1:	af 14 7e 
 80631a4:	c7 85 a0 e8 ff ff 2c 	movl   $0x152d02c,-0x1760(%ebp)
 80631ab:	d0 52 01 
 80631ae:	c7 85 a4 e8 ff ff 00 	movl   $0x0,-0x175c(%ebp)
 80631b5:	00 00 00 
 80631b8:	c7 85 a8 e8 ff ff 00 	movl   $0x0,-0x1758(%ebp)
 80631bf:	00 00 00 
 80631c2:	c7 85 ac e8 ff ff 42 	movl   $0x9d99db42,-0x1754(%ebp)
 80631c9:	db 99 9d 
 80631cc:	c7 85 b0 e8 ff ff 37 	movl   $0x1a78437,-0x1750(%ebp)
 80631d3:	84 a7 01 
 80631d6:	c7 85 b4 e8 ff ff 00 	movl   $0x0,-0x174c(%ebp)
 80631dd:	00 00 00 
 80631e0:	c7 85 b8 e8 ff ff 00 	movl   $0x40000000,-0x1748(%ebp)
 80631e7:	00 00 40 
 80631ea:	c7 85 bc e8 ff ff 09 	movl   $0xc2802909,-0x1744(%ebp)
 80631f1:	29 80 c2 
 80631f4:	c7 85 c0 e8 ff ff a2 	movl   $0x108b2a2,-0x1740(%ebp)
 80631fb:	b2 08 01 
 80631fe:	c7 85 c4 e8 ff ff 00 	movl   $0x0,-0x173c(%ebp)
 8063205:	00 00 00 
 8063208:	c7 85 c8 e8 ff ff 00 	movl   $0x90000000,-0x1738(%ebp)
 806320f:	00 00 90 
 8063212:	c7 85 cc e8 ff ff 4b 	movl   $0x7320334b,-0x1734(%ebp)
 8063219:	33 20 73 
 806321c:	c7 85 d0 e8 ff ff 4b 	movl   $0x14adf4b,-0x1730(%ebp)
 8063223:	df 4a 01 
 8063226:	c7 85 d4 e8 ff ff 00 	movl   $0x0,-0x172c(%ebp)
 806322d:	00 00 00 
 8063230:	c7 85 d8 e8 ff ff 00 	movl   $0x74000000,-0x1728(%ebp)
 8063237:	00 00 74 
 806323a:	c7 85 dc e8 ff ff 1e 	movl   $0x4fe8401e,-0x1724(%ebp)
 8063241:	40 e8 4f 
 8063244:	c7 85 e0 e8 ff ff 1e 	movl   $0x19d971e,-0x1720(%ebp)
 806324b:	97 9d 01 
 806324e:	c7 85 e4 e8 ff ff 00 	movl   $0x0,-0x171c(%ebp)
 8063255:	00 00 00 
 8063258:	c7 85 e8 e8 ff ff 00 	movl   $0x8800000,-0x1718(%ebp)
 806325f:	00 80 08 
 8063262:	c7 85 ec e8 ff ff 13 	movl   $0xf1f12813,-0x1714(%ebp)
 8063269:	28 f1 f1 
 806326c:	c7 85 f0 e8 ff ff 72 	movl   $0x1027e72,-0x1710(%ebp)
 8063273:	7e 02 01 
 8063276:	c7 85 f4 e8 ff ff 00 	movl   $0x0,-0x170c(%ebp)
 806327d:	00 00 00 
 8063280:	c7 85 f8 e8 ff ff 00 	movl   $0xcaa00000,-0x1708(%ebp)
 8063287:	00 a0 ca 
 806328a:	c7 85 fc e8 ff ff 17 	movl   $0xae6d7217,-0x1704(%ebp)
 8063291:	72 6d ae 
 8063294:	c7 85 00 e9 ff ff 0f 	movl   $0x1431e0f,-0x1700(%ebp)
 806329b:	1e 43 01 
 806329e:	c7 85 04 e9 ff ff 00 	movl   $0x0,-0x16fc(%ebp)
 80632a5:	00 00 00 
 80632a8:	c7 85 08 e9 ff ff 00 	movl   $0xbd480000,-0x16f8(%ebp)
 80632af:	00 48 bd 
 80632b2:	c7 85 0c e9 ff ff 9d 	movl   $0x9a08ce9d,-0x16f4(%ebp)
 80632b9:	ce 08 9a 
 80632bc:	c7 85 10 e9 ff ff 93 	movl   $0x193e593,-0x16f0(%ebp)
 80632c3:	e5 93 01 
 80632c6:	c7 85 14 e9 ff ff 00 	movl   $0x0,-0x16ec(%ebp)
 80632cd:	00 00 00 
 80632d0:	c7 85 18 e9 ff ff 00 	movl   $0x2c9a0000,-0x16e8(%ebp)
 80632d7:	00 9a 2c 
 80632da:	c7 85 1c e9 ff ff 45 	movl   $0x808b0245,-0x16e4(%ebp)
 80632e1:	02 8b 80 
 80632e4:	c7 85 20 e9 ff ff f8 	movl   $0x1f8def8,-0x16e0(%ebp)
 80632eb:	de f8 01 
 80632ee:	c7 85 24 e9 ff ff 00 	movl   $0x0,-0x16dc(%ebp)
 80632f5:	00 00 00 
 80632f8:	c7 85 28 e9 ff ff 00 	movl   $0x3be04000,-0x16d8(%ebp)
 80632ff:	40 e0 3b 
 8063302:	c7 85 2c e9 ff ff 6b 	movl   $0x5056e16b,-0x16d4(%ebp)
 8063309:	e1 56 50 
 806330c:	c7 85 30 e9 ff ff 5b 	movl   $0x13b8b5b,-0x16d0(%ebp)
 8063313:	8b 3b 01 
 8063316:	c7 85 34 e9 ff ff 00 	movl   $0x0,-0x16cc(%ebp)
 806331d:	00 00 00 
 8063320:	c7 85 38 e9 ff ff 00 	movl   $0xad85000,-0x16c8(%ebp)
 8063327:	50 d8 0a 
 806332a:	c7 85 3c e9 ff ff c6 	movl   $0x246c99c6,-0x16c4(%ebp)
 8063331:	99 6c 24 
 8063334:	c7 85 40 e9 ff ff 32 	movl   $0x18a6e32,-0x16c0(%ebp)
 806333b:	6e 8a 01 
 806333e:	c7 85 44 e9 ff ff 00 	movl   $0x0,-0x16bc(%ebp)
 8063345:	00 00 00 
 8063348:	c7 85 48 e9 ff ff 00 	movl   $0x8d8e6400,-0x16b8(%ebp)
 806334f:	64 8e 8d 
 8063352:	c7 85 4c e9 ff ff 37 	movl   $0xad87c037,-0x16b4(%ebp)
 8063359:	c0 87 ad 
 806335c:	c7 85 50 e9 ff ff be 	movl   $0x1ed09be,-0x16b0(%ebp)
 8063363:	09 ed 01 
 8063366:	c7 85 54 e9 ff ff 00 	movl   $0x0,-0x16ac(%ebp)
 806336d:	00 00 00 
 8063370:	c7 85 58 e9 ff ff 80 	movl   $0xb878fe80,-0x16a8(%ebp)
 8063377:	fe 78 b8 
 806337a:	c7 85 5c e9 ff ff 22 	movl   $0x2c74d822,-0x16a4(%ebp)
 8063381:	d8 74 2c 
 8063384:	c7 85 60 e9 ff ff 17 	movl   $0x1342617,-0x16a0(%ebp)
 806338b:	26 34 01 
 806338e:	c7 85 64 e9 ff ff 00 	movl   $0x0,-0x169c(%ebp)
 8063395:	00 00 00 
 8063398:	c7 85 68 e9 ff ff 20 	movl   $0x66973e20,-0x1698(%ebp)
 806339f:	3e 97 66 
 80633a2:	c7 85 6c e9 ff ff 2b 	movl   $0xf7920e2b,-0x1694(%ebp)
 80633a9:	0e 92 f7 
 80633ac:	c7 85 70 e9 ff ff 9c 	movl   $0x1812f9c,-0x1690(%ebp)
 80633b3:	2f 81 01 
 80633b6:	c7 85 74 e9 ff ff 00 	movl   $0x0,-0x168c(%ebp)
 80633bd:	00 00 00 
 80633c0:	c7 85 78 e9 ff ff a8 	movl   $0x403d0da8,-0x1688(%ebp)
 80633c7:	0d 3d 40 
 80633ca:	c7 85 7c e9 ff ff b6 	movl   $0x357691b6,-0x1684(%ebp)
 80633d1:	91 76 35 
 80633d4:	c7 85 80 e9 ff ff 84 	movl   $0x1e17b84,-0x1680(%ebp)
 80633db:	7b e1 01 
 80633de:	c7 85 84 e9 ff ff 00 	movl   $0x0,-0x167c(%ebp)
 80633e5:	00 00 00 
 80633e8:	c7 85 88 e9 ff ff 89 	movl   $0xe8262889,-0x1678(%ebp)
 80633ef:	28 26 e8 
 80633f2:	c7 85 8c e9 ff ff 11 	movl   $0xa16a1b11,-0x1674(%ebp)
 80633f9:	1b 6a a1 
 80633fc:	c7 85 90 e9 ff ff 32 	movl   $0x12ced32,-0x1670(%ebp)
 8063403:	ed 2c 01 
 8063406:	c7 85 94 e9 ff ff 00 	movl   $0x40000000,-0x166c(%ebp)
 806340d:	00 00 40 
 8063410:	c7 85 98 e9 ff ff ab 	movl   $0x622fb2ab,-0x1668(%ebp)
 8063417:	b2 2f 62 
 806341a:	c7 85 9c e9 ff ff d6 	movl   $0x49c4a1d6,-0x1664(%ebp)
 8063421:	a1 c4 49 
 8063424:	c7 85 a0 e9 ff ff 7f 	movl   $0x178287f,-0x1660(%ebp)
 806342b:	28 78 01 
 806342e:	c7 85 a4 e9 ff ff 00 	movl   $0x10000000,-0x165c(%ebp)
 8063435:	00 00 10 
 8063438:	c7 85 a8 e9 ff ff 56 	movl   $0xfabb9f56,-0x1658(%ebp)
 806343f:	9f bb fa 
 8063442:	c7 85 ac e9 ff ff 4b 	movl   $0x1c35ca4b,-0x1654(%ebp)
 8063449:	ca 35 1c 
 806344c:	c7 85 b0 e9 ff ff 9f 	movl   $0x1d6329f,-0x1650(%ebp)
 8063453:	32 d6 01 
 8063456:	c7 85 b4 e9 ff ff 00 	movl   $0xca000000,-0x164c(%ebp)
 806345d:	00 00 ca 
 8063460:	c7 85 b8 e9 ff ff 95 	movl   $0x7cb54395,-0x1648(%ebp)
 8063467:	43 b5 7c 
 806346a:	c7 85 bc e9 ff ff 6f 	movl   $0x71a19e6f,-0x1644(%ebp)
 8063471:	9e a1 71 
 8063474:	c7 85 c0 e9 ff ff a3 	movl   $0x125dfa3,-0x1640(%ebp)
 806347b:	df 25 01 
 806347e:	c7 85 c4 e9 ff ff 00 	movl   $0x3c800000,-0x163c(%ebp)
 8063485:	00 80 3c 
 8063488:	c7 85 c8 e9 ff ff 7b 	movl   $0x5be2947b,-0x1638(%ebp)
 806348f:	94 e2 5b 
 8063492:	c7 85 cc e9 ff ff 0b 	movl   $0x4e0a060b,-0x1634(%ebp)
 8063499:	06 0a 4e 
 806349c:	c7 85 d0 e9 ff ff 8c 	movl   $0x16f578c,-0x1630(%ebp)
 80634a3:	57 6f 01 
 80634a6:	c7 85 d4 e9 ff ff 00 	movl   $0xba00000,-0x162c(%ebp)
 80634ad:	00 a0 0b 
 80634b0:	c7 85 d8 e9 ff ff 9a 	movl   $0x32db399a,-0x1628(%ebp)
 80634b7:	39 db 32 
 80634ba:	c7 85 dc e9 ff ff 8e 	movl   $0x618c878e,-0x1624(%ebp)
 80634c1:	87 8c 61 
 80634c4:	c7 85 e0 e9 ff ff 6f 	movl   $0x1cb2d6f,-0x1620(%ebp)
 80634cb:	2d cb 01 
 80634ce:	c7 85 e4 e9 ff ff 00 	movl   $0x47440000,-0x161c(%ebp)
 80634d5:	00 44 47 
 80634d8:	c7 85 e8 e9 ff ff 00 	movl   $0xdfc90400,-0x1618(%ebp)
 80634df:	04 c9 df 
 80634e2:	c7 85 ec e9 ff ff b8 	movl   $0x9cf7d4b8,-0x1614(%ebp)
 80634e9:	d4 f7 9c 
 80634ec:	c7 85 f0 e9 ff ff 65 	movl   $0x11efc65,-0x1610(%ebp)
 80634f3:	fc 1e 01 
 80634f6:	c7 85 f4 e9 ff ff 00 	movl   $0x59150000,-0x160c(%ebp)
 80634fd:	00 15 59 
 8063500:	c7 85 f8 e9 ff ff 00 	movl   $0x17bb4500,-0x1608(%ebp)
 8063507:	45 bb 17 
 806350a:	c7 85 fc e9 ff ff e7 	movl   $0x435c9e7,-0x1604(%ebp)
 8063511:	c9 35 04 
 8063514:	c7 85 00 ea ff ff 7f 	movl   $0x166bb7f,-0x1600(%ebp)
 806351b:	bb 66 01 
 806351e:	c7 85 04 ea ff ff 00 	movl   $0x6f5a4000,-0x15fc(%ebp)
 8063525:	40 5a 6f 
 8063528:	c7 85 08 ea ff ff 40 	movl   $0xddaa1640,-0x15f8(%ebp)
 806352f:	16 aa dd 
 8063532:	c7 85 0c ea ff ff 60 	movl   $0xc5433c60,-0x15f4(%ebp)
 8063539:	3c 43 c5 
 806353c:	c7 85 10 ea ff ff 5e 	movl   $0x1c06a5e,-0x15f0(%ebp)
 8063543:	6a c0 01 
 8063546:	c7 85 14 ea ff ff 00 	movl   $0x45986800,-0x15ec(%ebp)
 806354d:	68 98 45 
 8063550:	c7 85 18 ea ff ff e8 	movl   $0x8a8a4de8,-0x15e8(%ebp)
 8063557:	4d 8a 8a 
 806355a:	c7 85 1c ea ff ff bc 	movl   $0x3b4a05bc,-0x15e4(%ebp)
 8063561:	05 4a 3b 
 8063564:	c7 85 20 ea ff ff 7b 	movl   $0x118427b,-0x15e0(%ebp)
 806356b:	42 18 01 
 806356e:	c7 85 24 ea ff ff 00 	movl   $0x56fe8200,-0x15dc(%ebp)
 8063575:	82 fe 56 
 8063578:	c7 85 28 ea ff ff 62 	movl   $0xad2ce162,-0x15d8(%ebp)
 806357f:	e1 2c ad 
 8063582:	c7 85 2c ea ff ff 2b 	movl   $0xa1c872b,-0x15d4(%ebp)
 8063589:	87 1c 0a 
 806358c:	c7 85 30 ea ff ff 1a 	movl   $0x15e531a,-0x15d0(%ebp)
 8063593:	53 5e 01 
 8063596:	c7 85 34 ea ff ff 80 	movl   $0xecbe2280,-0x15cc(%ebp)
 806359d:	22 be ec 
 80635a0:	c7 85 38 ea ff ff ba 	movl   $0x987819ba,-0x15c8(%ebp)
 80635a7:	19 78 98 
 80635aa:	c7 85 3c ea ff ff f6 	movl   $0x8ca3a8f6,-0x15c4(%ebp)
 80635b1:	a8 a3 8c 
 80635b4:	c7 85 40 ea ff ff e0 	movl   $0x1b5e7e0,-0x15c0(%ebp)
 80635bb:	e7 b5 01 
 80635be:	c7 85 44 ea ff ff 90 	movl   $0xd3f6d590,-0x15bc(%ebp)
 80635c5:	d5 f6 d3 
 80635c8:	c7 85 48 ea ff ff 14 	movl   $0x1f4b1014,-0x15b8(%ebp)
 80635cf:	10 4b 1f 
 80635d2:	c7 85 4c ea ff ff 9a 	movl   $0x57e6499a,-0x15b4(%ebp)
 80635d9:	49 e6 57 
 80635dc:	c7 85 50 ea ff ff ec 	movl   $0x111b0ec,-0x15b0(%ebp)
 80635e3:	b0 11 01 
 80635e6:	c7 85 54 ea ff ff f4 	movl   $0x8f48af4,-0x15ac(%ebp)
 80635ed:	8a f4 08 
 80635f0:	c7 85 58 ea ff ff 1a 	movl   $0xa71dd41a,-0x15a8(%ebp)
 80635f7:	d4 1d a7 
 80635fa:	c7 85 5c ea ff ff 00 	movl   $0x6ddfdc00,-0x15a4(%ebp)
 8063601:	dc df 6d 
 8063604:	c7 85 60 ea ff ff 27 	movl   $0x1561d27,-0x15a0(%ebp)
 806360b:	1d 56 01 
 806360e:	c7 85 64 ea ff ff b1 	movl   $0x8b31adb1,-0x159c(%ebp)
 8063615:	ad 31 8b 
 8063618:	c7 85 68 ea ff ff 20 	movl   $0xd0e54920,-0x1598(%ebp)
 806361f:	49 e5 d0 
 8063622:	c7 85 6c ea ff ff 00 	movl   $0x4957d300,-0x1594(%ebp)
 8063629:	d3 57 49 
 806362c:	c7 85 70 ea ff ff 71 	movl   $0x1aba471,-0x1590(%ebp)
 8063633:	a4 ab 01 
 8063636:	c7 85 74 ea ff ff 8e 	movl   $0x56ff0c8e,-0x158c(%ebp)
 806363d:	0c ff 56 
 8063640:	c7 85 78 ea ff ff b4 	movl   $0x828f4db4,-0x1588(%ebp)
 8063647:	4d 8f 82 
 806364a:	c7 85 7c ea ff ff e0 	movl   $0xcdd6e3e0,-0x1584(%ebp)
 8063651:	e3 d6 cd 
 8063654:	c7 85 80 ea ff ff c6 	movl   $0x10b46c6,-0x1580(%ebp)
 806365b:	46 0b 01 
 806365e:	c7 85 84 ea ff ff b2 	movl   $0x6cbecfb2,-0x157c(%ebp)
 8063665:	cf be 6c 
 8063668:	c7 85 88 ea ff ff 21 	movl   $0xa3332121,-0x1578(%ebp)
 806366f:	21 33 a3 
 8063672:	c7 85 8c ea ff ff d8 	movl   $0x814c9cd8,-0x1574(%ebp)
 8063679:	9c 4c 81 
 806367c:	c7 85 90 ea ff ff 78 	movl   $0x14e1878,-0x1570(%ebp)
 8063683:	18 4e 01 
 8063686:	c7 85 94 ea ff ff 9e 	movl   $0xc7ee839e,-0x156c(%ebp)
 806368d:	83 ee c7 
 8063690:	c7 85 98 ea ff ff 69 	movl   $0xcbffe969,-0x1568(%ebp)
 8063697:	e9 ff cb 
 806369a:	c7 85 9c ea ff ff 0e 	movl   $0xa19fc40e,-0x1564(%ebp)
 80636a1:	c4 9f a1 
 80636a4:	c7 85 a0 ea ff ff 96 	movl   $0x1a19e96,-0x1560(%ebp)
 80636ab:	9e a1 01 
 80636ae:	c7 85 a4 ea ff ff 43 	movl   $0x1cf51243,-0x155c(%ebp)
 80636b5:	12 f5 1c 
 80636b8:	c7 85 a8 ea ff ff e2 	movl   $0x3f7ff1e2,-0x1558(%ebp)
 80636bf:	f1 7f 3f 
 80636c2:	c7 85 ac ea ff ff 89 	movl   $0x2503da89,-0x1554(%ebp)
 80636c9:	da 03 25 
 80636cc:	c7 85 b0 ea ff ff 1e 	movl   $0x105031e,-0x1550(%ebp)
 80636d3:	03 05 01 
 80636d6:	c7 85 b4 ea ff ff d4 	movl   $0xa43256d4,-0x154c(%ebp)
 80636dd:	56 32 a4 
 80636e0:	c7 85 b8 ea ff ff 5a 	movl   $0x8f5fee5a,-0x1548(%ebp)
 80636e7:	ee 5f 8f 
 80636ea:	c7 85 bc ea ff ff 2b 	movl   $0xae44d12b,-0x1544(%ebp)
 80636f1:	d1 44 ae 
 80636f4:	c7 85 c0 ea ff ff e5 	movl   $0x14643e5,-0x1540(%ebp)
 80636fb:	43 46 01 
 80636fe:	c7 85 c4 ea ff ff 89 	movl   $0x4d3eec89,-0x153c(%ebp)
 8063705:	ec 3e 4d 
 8063708:	c7 85 c8 ea ff ff f1 	movl   $0x7337e9f1,-0x1538(%ebp)
 806370f:	e9 37 73 
 8063712:	c7 85 cc ea ff ff 76 	movl   $0x19d60576,-0x1534(%ebp)
 8063719:	05 d6 19 
 806371c:	c7 85 d0 ea ff ff df 	movl   $0x197d4df,-0x1530(%ebp)
 8063723:	d4 97 01 
 8063726:	c7 85 d4 ea ff ff ab 	movl   $0xa08ea7ab,-0x152c(%ebp)
 806372d:	a7 8e a0 
 8063730:	c7 85 d8 ea ff ff 6d 	movl   $0x1005e46d,-0x1528(%ebp)
 8063737:	e4 05 10 
 806373a:	c7 85 dc ea ff ff d4 	movl   $0xe04b86d4,-0x1524(%ebp)
 8063741:	86 4b e0 
 8063744:	c7 85 e0 ea ff ff 16 	movl   $0x1fdca16,-0x1520(%ebp)
 806374b:	ca fd 01 
 806374e:	c7 85 e4 ea ff ff cb 	movl   $0x845928cb,-0x151c(%ebp)
 8063755:	28 59 84 
 8063758:	c7 85 e8 ea ff ff c4 	movl   $0x8a03aec4,-0x1518(%ebp)
 806375f:	ae 03 8a 
 8063762:	c7 85 ec ea ff ff 44 	movl   $0x4c2f3444,-0x1514(%ebp)
 8063769:	34 2f 4c 
 806376c:	c7 85 f0 ea ff ff 4e 	movl   $0x13e9e4e,-0x1510(%ebp)
 8063773:	9e 3e 01 
 8063776:	c7 85 f4 ea ff ff fd 	movl   $0xa56f72fd,-0x150c(%ebp)
 806377d:	72 6f a5 
 8063780:	c7 85 f8 ea ff ff 75 	movl   $0xac849a75,-0x1508(%ebp)
 8063787:	9a 84 ac 
 806378a:	c7 85 fc ea ff ff 55 	movl   $0xdf3b0155,-0x1504(%ebp)
 8063791:	01 3b df 
 8063794:	c7 85 00 eb ff ff e1 	movl   $0x18e45e1,-0x1500(%ebp)
 806379b:	45 8e 01 
 806379e:	c7 85 04 eb ff ff bd 	movl   $0xecb4fbd,-0x14fc(%ebp)
 80637a5:	4f cb 0e 
 80637a8:	c7 85 08 eb ff ff 13 	movl   $0x17a5c113,-0x14f8(%ebp)
 80637af:	c1 a5 17 
 80637b2:	c7 85 0c eb ff ff ab 	movl   $0x5709c1ab,-0x14f4(%ebp)
 80637b9:	c1 09 57 
 80637bc:	c7 85 10 eb ff ff 5a 	movl   $0x1f1d75a,-0x14f0(%ebp)
 80637c3:	d7 f1 01 
 80637c6:	c7 85 14 eb ff ff d6 	movl   $0xe93f11d6,-0x14ec(%ebp)
 80637cd:	11 3f e9 
 80637d0:	c7 85 18 eb ff ff ab 	movl   $0xeec798ab,-0x14e8(%ebp)
 80637d7:	98 c7 ee 
 80637da:	c7 85 1c eb ff ff 0a 	movl   $0x7666190a,-0x14e4(%ebp)
 80637e1:	19 66 76 
 80637e4:	c7 85 20 eb ff ff 98 	movl   $0x1372698,-0x14e0(%ebp)
 80637eb:	26 37 01 
 80637ee:	c7 85 24 eb ff ff 4b 	movl   $0xe38ed64b,-0x14dc(%ebp)
 80637f5:	d6 8e e3 
 80637f8:	c7 85 28 eb ff ff d6 	movl   $0xaa797ed6,-0x14d8(%ebp)
 80637ff:	7e 79 aa 
 8063802:	c7 85 2c eb ff ff 4d 	movl   $0x93ff9f4d,-0x14d4(%ebp)
 8063809:	9f ff 93 
 806380c:	c7 85 30 eb ff ff 3e 	movl   $0x184f03e,-0x14d0(%ebp)
 8063813:	f0 84 01 
 8063816:	c7 85 34 eb ff ff de 	movl   $0x9c728bde,-0x14cc(%ebp)
 806381d:	8b 72 9c 
 8063820:	c7 85 38 eb ff ff 8c 	movl   $0x1517de8c,-0x14c8(%ebp)
 8063827:	de 17 15 
 806382a:	c7 85 3c eb ff ff 21 	movl   $0x38ff8721,-0x14c4(%ebp)
 8063831:	87 ff 38 
 8063834:	c7 85 40 eb ff ff 4e 	movl   $0x1e62c4e,-0x14c0(%ebp)
 806383b:	2c e6 01 
 806383e:	c7 85 44 eb ff ff 6b 	movl   $0xe1c7976b,-0x14bc(%ebp)
 8063845:	97 c7 e1 
 8063848:	c7 85 48 eb ff ff 17 	movl   $0xad2eeb17,-0x14b8(%ebp)
 806384f:	eb 2e ad 
 8063852:	c7 85 4c eb ff ff 74 	movl   $0xe39fb474,-0x14b4(%ebp)
 8063859:	b4 9f e3 
 806385c:	c7 85 50 eb ff ff b0 	movl   $0x12fdbb0,-0x14b0(%ebp)
 8063863:	db 2f 01 
 8063866:	c7 85 54 eb ff ff 46 	movl   $0xda397d46,-0x14ac(%ebp)
 806386d:	7d 39 da 
 8063870:	c7 85 58 eb ff ff dd 	movl   $0xd87aa5dd,-0x14a8(%ebp)
 8063877:	a5 7a d8 
 806387a:	c7 85 5c eb ff ff 91 	movl   $0x1c87a191,-0x14a4(%ebp)
 8063881:	a1 87 1c 
 8063884:	c7 85 60 eb ff ff 9d 	movl   $0x17bd29d,-0x14a0(%ebp)
 806388b:	d2 7b 01 
 806388e:	c7 85 64 eb ff ff 97 	movl   $0x50c7dc97,-0x149c(%ebp)
 8063895:	dc c7 50 
 8063898:	c7 85 68 eb ff ff 55 	movl   $0x4e994f55,-0x1498(%ebp)
 806389f:	4f 99 4e 
 80638a2:	c7 85 6c eb ff ff f6 	movl   $0x63a989f6,-0x1494(%ebp)
 80638a9:	89 a9 63 
 80638ac:	c7 85 70 eb ff ff 44 	movl   $0x1dac744,-0x1490(%ebp)
 80638b3:	c7 da 01 
 80638b6:	c7 85 74 eb ff ff de 	movl   $0x527ce9de,-0x148c(%ebp)
 80638bd:	e9 7c 52 
 80638c0:	c7 85 78 eb ff ff 95 	movl   $0xf11fd195,-0x1488(%ebp)
 80638c7:	d1 1f f1 
 80638ca:	c7 85 7c eb ff ff 39 	movl   $0xbe49f639,-0x1484(%ebp)
 80638d1:	f6 49 be 
 80638d4:	c7 85 80 eb ff ff 8a 	movl   $0x128bc8a,-0x1480(%ebp)
 80638db:	bc 28 01 
 80638de:	c7 85 84 eb ff ff 56 	movl   $0xa71c2456,-0x147c(%ebp)
 80638e5:	24 1c a7 
 80638e8:	c7 85 88 eb ff ff fa 	movl   $0x6d67c5fa,-0x1478(%ebp)
 80638ef:	c5 67 6d 
 80638f2:	c7 85 8c eb ff ff c8 	movl   $0x6ddc73c8,-0x1474(%ebp)
 80638f9:	73 dc 6d 
 80638fc:	c7 85 90 eb ff ff ad 	movl   $0x172ebad,-0x1470(%ebp)
 8063903:	eb 72 01 
 8063906:	c7 85 94 eb ff ff 6c 	movl   $0x50e32d6c,-0x146c(%ebp)
 806390d:	2d e3 50 
 8063910:	c7 85 98 eb ff ff 79 	movl   $0x88c1b779,-0x1468(%ebp)
 8063917:	b7 c1 88 
 806391a:	c7 85 9c eb ff ff ba 	movl   $0xc95390ba,-0x1464(%ebp)
 8063921:	90 53 c9 
 8063924:	c7 85 a0 eb ff ff 98 	movl   $0x1cfa698,-0x1460(%ebp)
 806392b:	a6 cf 01 
 806392e:	c7 85 a4 eb ff ff 63 	movl   $0xd28dfc63,-0x145c(%ebp)
 8063935:	fc 8d d2 
 8063938:	c7 85 a8 eb ff ff ab 	movl   $0x957912ab,-0x1458(%ebp)
 806393f:	12 79 95 
 8063942:	c7 85 ac eb ff ff 74 	movl   $0x7dd43a74,-0x1454(%ebp)
 8063949:	3a d4 7d 
 806394c:	c7 85 b0 eb ff ff 1f 	movl   $0x121c81f,-0x1450(%ebp)
 8063953:	c8 21 01 
 8063956:	c7 85 b4 eb ff ff 7c 	movl   $0xc7317b7c,-0x144c(%ebp)
 806395d:	7b 31 c7 
 8063960:	c7 85 b8 eb ff ff 56 	movl   $0xbad75756,-0x1448(%ebp)
 8063967:	57 d7 ba 
 806396a:	c7 85 bc eb ff ff 11 	movl   $0x5d494911,-0x1444(%ebp)
 8063971:	49 49 5d 
 8063974:	c7 85 c0 eb ff ff 27 	movl   $0x16a3a27,-0x1440(%ebp)
 806397b:	3a 6a 01 
 806397e:	c7 85 c4 eb ff ff 5b 	movl   $0x78fdda5b,-0x143c(%ebp)
 8063985:	da fd 78 
 8063988:	c7 85 c8 eb ff ff 2c 	movl   $0x298d2d2c,-0x1438(%ebp)
 806398f:	2d 8d 29 
 8063992:	c7 85 cc eb ff ff 56 	movl   $0x349b9b56,-0x1434(%ebp)
 8063999:	9b 9b 34 
 806399c:	c7 85 d0 eb ff ff b1 	movl   $0x1c4c8b1,-0x1430(%ebp)
 80639a3:	c8 c4 01 
 80639a6:	c7 85 d4 eb ff ff 79 	movl   $0xcb9ea879,-0x142c(%ebp)
 80639ad:	a8 9e cb 
 80639b0:	c7 85 d8 eb ff ff 3b 	movl   $0xd9f83c3b,-0x1428(%ebp)
 80639b7:	3c f8 d9 
 80639ba:	c7 85 dc eb ff ff 15 	movl   $0xc0e14115,-0x1424(%ebp)
 80639c1:	41 e1 c0 
 80639c4:	c7 85 e0 eb ff ff 6e 	movl   $0x11afd6e,-0x1420(%ebp)
 80639cb:	fd 1a 01 
 80639ce:	c7 85 e4 eb ff ff 97 	movl   $0xbe865297,-0x141c(%ebp)
 80639d5:	52 86 be 
 80639d8:	c7 85 e8 eb ff ff 4a 	movl   $0x50764b4a,-0x1418(%ebp)
 80639df:	4b 76 50 
 80639e2:	c7 85 ec eb ff ff 5b 	movl   $0x7119915b,-0x1414(%ebp)
 80639e9:	91 19 71 
 80639ec:	c7 85 f0 eb ff ff ca 	movl   $0x161bcca,-0x1410(%ebp)
 80639f3:	bc 61 01 
 80639f6:	c7 85 f4 eb ff ff 3d 	movl   $0x6e27e73d,-0x140c(%ebp)
 80639fd:	e7 27 6e 
 8063a00:	c7 85 f8 eb ff ff 1d 	movl   $0x2493de1d,-0x1408(%ebp)
 8063a07:	de 93 24 
 8063a0a:	c7 85 fc eb ff ff b2 	movl   $0xd5ff5b2,-0x1404(%ebp)
 8063a11:	f5 5f 0d 
 8063a14:	c7 85 00 ec ff ff fd 	movl   $0x1ba2bfd,-0x1400(%ebp)
 8063a1b:	2b ba 01 
 8063a1e:	c7 85 04 ec ff ff 86 	movl   $0x64d8f086,-0x13fc(%ebp)
 8063a25:	f0 d8 64 
 8063a28:	c7 85 08 ec ff ff d2 	movl   $0x56dc6ad2,-0x13f8(%ebp)
 8063a2f:	6a dc 56 
 8063a32:	c7 85 0c ec ff ff 8f 	movl   $0x285bf98f,-0x13f4(%ebp)
 8063a39:	f9 5b 28 
 8063a3c:	c7 85 10 ec ff ff 7e 	movl   $0x1145b7e,-0x13f0(%ebp)
 8063a43:	5b 14 01 
 8063a46:	c7 85 14 ec ff ff a8 	movl   $0xfe0f2ca8,-0x13ec(%ebp)
 8063a4d:	2c 0f fe 
 8063a50:	c7 85 18 ec ff ff 86 	movl   $0x2c938586,-0x13e8(%ebp)
 8063a57:	85 93 2c 
 8063a5a:	c7 85 1c ec ff ff f3 	movl   $0xb272f7f3,-0x13e4(%ebp)
 8063a61:	f7 72 b2 
 8063a64:	c7 85 20 ec ff ff 5d 	movl   $0x159725d,-0x13e0(%ebp)
 8063a6b:	72 59 01 
 8063a6e:	c7 85 24 ec ff ff d2 	movl   $0xbd92f7d2,-0x13dc(%ebp)
 8063a75:	f7 92 bd 
 8063a78:	c7 85 28 ec ff ff e8 	movl   $0xf7b866e8,-0x13d8(%ebp)
 8063a7f:	66 b8 f7 
 8063a82:	c7 85 2c ec ff ff ef 	movl   $0x1f0fb5ef,-0x13d4(%ebp)
 8063a89:	b5 0f 1f 
 8063a8c:	c7 85 30 ec ff ff f5 	movl   $0x1afcef5,-0x13d0(%ebp)
 8063a93:	ce af 01 
 8063a96:	c7 85 34 ec ff ff e3 	movl   $0x767bdae3,-0x13cc(%ebp)
 8063a9d:	da 7b 76 
 8063aa0:	c7 85 38 ec ff ff 51 	movl   $0xfad34051,-0x13c8(%ebp)
 8063aa7:	40 d3 fa 
 8063aaa:	c7 85 3c ec ff ff b5 	movl   $0x3369d1b5,-0x13c4(%ebp)
 8063ab1:	d1 69 33 
 8063ab4:	c7 85 40 ec ff ff 59 	movl   $0x10de159,-0x13c0(%ebp)
 8063abb:	e1 0d 01 
 8063abe:	c7 85 44 ec ff ff 9c 	movl   $0xd41ad19c,-0x13bc(%ebp)
 8063ac5:	d1 1a d4 
 8063ac8:	c7 85 48 ec ff ff 65 	movl   $0x79881065,-0x13b8(%ebp)
 8063acf:	10 88 79 
 8063ad2:	c7 85 4c ec ff ff 23 	movl   $0x80444623,-0x13b4(%ebp)
 8063ad9:	46 44 80 
 8063adc:	c7 85 50 ec ff ff af 	movl   $0x15159af,-0x13b0(%ebp)
 8063ae3:	59 51 01 
 8063ae6:	c7 85 54 ec ff ff 03 	movl   $0x49218603,-0x13ac(%ebp)
 8063aed:	86 21 49 
 8063af0:	c7 85 58 ec ff ff 7f 	movl   $0x57ea147f,-0x13a8(%ebp)
 8063af7:	14 ea 57 
 8063afa:	c7 85 5c ec ff ff ac 	movl   $0x605557ac,-0x13a4(%ebp)
 8063b01:	57 55 60 
 8063b04:	c7 85 60 ec ff ff 1b 	movl   $0x1a5b01b,-0x13a0(%ebp)
 8063b0b:	b0 a5 01 
 8063b0e:	c7 85 64 ec ff ff c1 	movl   $0x8db4f3c1,-0x139c(%ebp)
 8063b15:	f3 b4 8d 
 8063b18:	c7 85 68 ec ff ff cf 	movl   $0xb6f24ccf,-0x1398(%ebp)
 8063b1f:	4c f2 b6 
 8063b22:	c7 85 6c ec ff ff cb 	movl   $0x1c3556cb,-0x1394(%ebp)
 8063b29:	56 35 1c 
 8063b2c:	c7 85 70 ec ff ff 11 	movl   $0x1078e11,-0x1390(%ebp)
 8063b33:	8e 07 01 
 8063b36:	c7 85 74 ec ff ff b2 	movl   $0x712230b2,-0x138c(%ebp)
 8063b3d:	30 22 71 
 8063b40:	c7 85 78 ec ff ff 03 	movl   $0xa4aee003,-0x1388(%ebp)
 8063b47:	e0 ae a4 
 8063b4a:	c7 85 7c ec ff ff 7e 	movl   $0x6342ac7e,-0x1384(%ebp)
 8063b51:	ac 42 63 
 8063b54:	c7 85 80 ec ff ff 95 	movl   $0x1497195,-0x1380(%ebp)
 8063b5b:	71 49 01 
 8063b5e:	c7 85 84 ec ff ff df 	movl   $0x4d6abcdf,-0x137c(%ebp)
 8063b65:	bc 6a 4d 
 8063b68:	c7 85 88 ec ff ff 04 	movl   $0x4dda9804,-0x1378(%ebp)
 8063b6f:	98 da 4d 
 8063b72:	c7 85 8c ec ff ff 9e 	movl   $0xbc13579e,-0x1374(%ebp)
 8063b79:	57 13 bc 
 8063b7c:	c7 85 90 ec ff ff fa 	movl   $0x19bcdfa,-0x1370(%ebp)
 8063b83:	cd 9b 01 
 8063b86:	c7 85 94 ec ff ff 0b 	movl   $0xb062b60b,-0x136c(%ebp)
 8063b8d:	b6 62 b0 
 8063b90:	c7 85 98 ec ff ff 02 	movl   $0xf0a89f02,-0x1368(%ebp)
 8063b97:	9f a8 f0 
 8063b9a:	c7 85 9c ec ff ff c2 	movl   $0xb58c16c2,-0x1364(%ebp)
 8063ba1:	16 8c b5 
 8063ba4:	c7 85 a0 ec ff ff bc 	movl   $0x10160bc,-0x1360(%ebp)
 8063bab:	60 01 01 
 8063bae:	c7 85 a4 ec ff ff 8e 	movl   $0x5c7b638e,-0x135c(%ebp)
 8063bb5:	63 7b 5c 
 8063bb8:	c7 85 a8 ec ff ff c3 	movl   $0xacd2c6c3,-0x1358(%ebp)
 8063bbf:	c6 d2 ac 
 8063bc2:	c7 85 ac ec ff ff 73 	movl   $0xe2ef1c73,-0x1354(%ebp)
 8063bc9:	1c ef e2 
 8063bcc:	c7 85 b0 ec ff ff eb 	movl   $0x141b8eb,-0x1350(%ebp)
 8063bd3:	b8 41 01 
 8063bd6:	c7 85 b4 ec ff ff 71 	movl   $0x339a3c71,-0x134c(%ebp)
 8063bdd:	3c 9a 33 
 8063be0:	c7 85 b8 ec ff ff 74 	movl   $0x98077874,-0x1348(%ebp)
 8063be7:	78 07 98 
 8063bea:	c7 85 bc ec ff ff 90 	movl   $0xdbaae390,-0x1344(%ebp)
 8063bf1:	e3 aa db 
 8063bf4:	c7 85 c0 ec ff ff 26 	movl   $0x1922726,-0x1340(%ebp)
 8063bfb:	27 92 01 
 8063bfe:	c7 85 c4 ec ff ff 8e 	movl   $0x4080cb8e,-0x133c(%ebp)
 8063c05:	cb 80 40 
 8063c08:	c7 85 c8 ec ff ff 91 	movl   $0xbe095691,-0x1338(%ebp)
 8063c0f:	56 09 be 
 8063c12:	c7 85 cc ec ff ff 74 	movl   $0x92959c74,-0x1334(%ebp)
 8063c19:	9c 95 92 
 8063c1c:	c7 85 d0 ec ff ff f0 	movl   $0x1f6b0f0,-0x1330(%ebp)
 8063c23:	b0 f6 01 
 8063c26:	c7 85 d4 ec ff ff 38 	movl   $0xc8507f38,-0x132c(%ebp)
 8063c2d:	7f 50 c8 
 8063c30:	c7 85 d8 ec ff ff 1a 	movl   $0xf6c5d61a,-0x1328(%ebp)
 8063c37:	d6 c5 f6 
 8063c3a:	c7 85 dc ec ff ff c8 	movl   $0x5b9d81c8,-0x1324(%ebp)
 8063c41:	81 9d 5b 
 8063c44:	c7 85 e0 ec ff ff 96 	movl   $0x13a2e96,-0x1320(%ebp)
 8063c4b:	2e 3a 01 
 8063c4e:	c7 85 e4 ec ff ff 07 	movl   $0x7a649f07,-0x131c(%ebp)
 8063c55:	9f 64 7a 
 8063c58:	c7 85 e8 ec ff ff a1 	movl   $0x34774ba1,-0x1318(%ebp)
 8063c5f:	4b 77 34 
 8063c62:	c7 85 ec ec ff ff 3b 	movl   $0xf284e23b,-0x1314(%ebp)
 8063c69:	e2 84 f2 
 8063c6c:	c7 85 f0 ec ff ff 3b 	movl   $0x188ba3b,-0x1310(%ebp)
 8063c73:	ba 88 01 
 8063c76:	c7 85 f4 ec ff ff c8 	movl   $0xd8fdc6c8,-0x130c(%ebp)
 8063c7d:	c6 fd d8 
 8063c80:	c7 85 f8 ec ff ff 89 	movl   $0x1951e89,-0x1308(%ebp)
 8063c87:	1e 95 01 
 8063c8a:	c7 85 fc ec ff ff ca 	movl   $0xef261aca,-0x1304(%ebp)
 8063c91:	1a 26 ef 
 8063c94:	c7 85 00 ed ff ff ca 	movl   $0x1eae8ca,-0x1300(%ebp)
 8063c9b:	e8 ea 01 
 8063c9e:	c7 85 04 ed ff ff 3d 	movl   $0x279e9c3d,-0x12fc(%ebp)
 8063ca5:	9c 9e 27 
 8063ca8:	c7 85 08 ed ff ff 16 	movl   $0x40fd3316,-0x12f8(%ebp)
 8063caf:	33 fd 40 
 8063cb2:	c7 85 0c ed ff ff be 	movl   $0xd577d0be,-0x12f4(%ebp)
 8063cb9:	d0 77 d5 
 8063cbc:	c7 85 10 ed ff ff 7e 	movl   $0x132d17e,-0x12f0(%ebp)
 8063cc3:	d1 32 01 
 8063cc6:	c7 85 14 ed ff ff 4c 	movl   $0xb186434c,-0x12ec(%ebp)
 8063ccd:	43 86 b1 
 8063cd0:	c7 85 18 ed ff ff db 	movl   $0xd13c7fdb,-0x12e8(%ebp)
 8063cd7:	7f 3c d1 
 8063cda:	c7 85 1c ed ff ff ed 	movl   $0x8ad5c4ed,-0x12e4(%ebp)
 8063ce1:	c4 d5 8a 
 8063ce4:	c7 85 20 ed ff ff de 	movl   $0x17f85de,-0x12e0(%ebp)
 8063ceb:	85 7f 01 
 8063cee:	c7 85 24 ed ff ff 20 	movl   $0x9de7d420,-0x12dc(%ebp)
 8063cf5:	d4 e7 9d 
 8063cf8:	c7 85 28 ed ff ff d2 	movl   $0x458b9fd2,-0x12d8(%ebp)
 8063cff:	9f 8b 45 
 8063d02:	c7 85 2c ed ff ff 29 	movl   $0x2d8b3629,-0x12d4(%ebp)
 8063d09:	36 8b 2d 
 8063d0c:	c7 85 30 ed ff ff 56 	movl   $0x1df6756,-0x12d0(%ebp)
 8063d13:	67 df 01 
 8063d16:	c7 85 34 ed ff ff 94 	movl   $0xa2b0e494,-0x12cc(%ebp)
 8063d1d:	e4 b0 a2 
 8063d20:	c7 85 38 ed ff ff e3 	movl   $0xcb7743e3,-0x12c8(%ebp)
 8063d27:	43 77 cb 
 8063d2a:	c7 85 3c ed ff ff d9 	movl   $0xdc7701d9,-0x12c4(%ebp)
 8063d31:	01 77 dc 
 8063d34:	c7 85 40 ed ff ff 95 	movl   $0x12ba095,-0x12c0(%ebp)
 8063d3b:	a0 2b 01 
 8063d3e:	c7 85 44 ed ff ff b9 	movl   $0x8b5d1db9,-0x12bc(%ebp)
 8063d45:	1d 5d 8b 
 8063d48:	c7 85 48 ed ff ff dc 	movl   $0x3e5514dc,-0x12b8(%ebp)
 8063d4f:	14 55 3e 
 8063d52:	c7 85 4c ed ff ff 50 	movl   $0x5394c250,-0x12b4(%ebp)
 8063d59:	c2 94 53 
 8063d5c:	c7 85 50 ed ff ff bb 	movl   $0x17688bb,-0x12b0(%ebp)
 8063d63:	88 76 01 
 8063d66:	c7 85 54 ed ff ff 27 	movl   $0xae346527,-0x12ac(%ebp)
 8063d6d:	65 34 ae 
 8063d70:	c7 85 58 ed ff ff 13 	movl   $0x4dea5a13,-0x12a8(%ebp)
 8063d77:	5a ea 4d 
 8063d7a:	c7 85 5c ed ff ff e4 	movl   $0x2879f2e4,-0x12a4(%ebp)
 8063d81:	f2 79 28 
 8063d84:	c7 85 60 ed ff ff ea 	movl   $0x1d42aea,-0x12a0(%ebp)
 8063d8b:	2a d4 01 
 8063d8e:	c7 85 64 ed ff ff 38 	movl   $0x4ce0bf38,-0x129c(%ebp)
 8063d95:	bf e0 4c 
 8063d98:	c7 85 68 ed ff ff 4c 	movl   $0xb0b2784c,-0x1298(%ebp)
 8063d9f:	78 b2 b0 
 8063da2:	c7 85 6c ed ff ff ce 	movl   $0x594c37ce,-0x1294(%ebp)
 8063da9:	37 4c 59 
 8063dac:	c7 85 70 ed ff ff d2 	movl   $0x1249ad2,-0x1290(%ebp)
 8063db3:	9a 24 01 
 8063db6:	c7 85 74 ed ff ff 06 	movl   $0x6018ef06,-0x128c(%ebp)
 8063dbd:	ef 18 60 
 8063dc0:	c7 85 78 ed ff ff 5f 	movl   $0x5cdf165f,-0x1288(%ebp)
 8063dc7:	16 df 5c 
 8063dca:	c7 85 7c ed ff ff c2 	movl   $0xef9f45c2,-0x1284(%ebp)
 8063dd1:	45 9f ef 
 8063dd4:	c7 85 80 ed ff ff 86 	movl   $0x16dc186,-0x1280(%ebp)
 8063ddb:	c1 6d 01 
 8063dde:	c7 85 84 ed ff ff c8 	movl   $0x381f2ac8,-0x127c(%ebp)
 8063de5:	2a 1f 38 
 8063de8:	c7 85 88 ed ff ff f7 	movl   $0xf416dbf7,-0x1278(%ebp)
 8063def:	db 16 f4 
 8063df2:	c7 85 8c ed ff ff 32 	movl   $0xab871732,-0x1274(%ebp)
 8063df9:	17 87 ab 
 8063dfc:	c7 85 90 ed ff ff e8 	movl   $0x1c931e8,-0x1270(%ebp)
 8063e03:	31 c9 01 
 8063e06:	c7 85 94 ed ff ff bd 	movl   $0x83137abd,-0x126c(%ebp)
 8063e0d:	7a 13 83 
 8063e10:	c7 85 98 ed ff ff 7a 	movl   $0xd88e497a,-0x1268(%ebp)
 8063e17:	49 8e d8 
 8063e1a:	c7 85 9c ed ff ff 7f 	movl   $0x6b346e7f,-0x1264(%ebp)
 8063e21:	6e 34 6b 
 8063e24:	c7 85 a0 ed ff ff 31 	movl   $0x11dbf31,-0x1260(%ebp)
 8063e2b:	bf 1d 01 
 8063e2e:	c7 85 a4 ed ff ff 6c 	movl   $0x23d8596c,-0x125c(%ebp)
 8063e35:	59 d8 23 
 8063e38:	c7 85 a8 ed ff ff d9 	movl   $0xceb1dbd9,-0x1258(%ebp)
 8063e3f:	db b1 ce 
 8063e42:	c7 85 ac ed ff ff 1f 	movl   $0xc6018a1f,-0x1254(%ebp)
 8063e49:	8a 01 c6 
 8063e4c:	c7 85 b0 ed ff ff fd 	movl   $0x1652efd,-0x1250(%ebp)
 8063e53:	2e 65 01 
 8063e56:	c7 85 b4 ed ff ff c7 	movl   $0x6cce6fc7,-0x124c(%ebp)
 8063e5d:	6f ce 6c 
 8063e60:	c7 85 b8 ed ff ff cf 	movl   $0xc25e52cf,-0x1248(%ebp)
 8063e67:	52 5e c2 
 8063e6a:	c7 85 bc ed ff ff a7 	movl   $0x3781eca7,-0x1244(%ebp)
 8063e71:	ec 81 37 
 8063e74:	c7 85 c0 ed ff ff bd 	movl   $0x1be7abd,-0x1240(%ebp)
 8063e7b:	7a be 01 
 8063e7e:	c7 85 c4 ed ff ff dc 	movl   $0xa40105dc,-0x123c(%ebp)
 8063e85:	05 01 a4 
 8063e88:	c7 85 c8 ed ff ff c1 	movl   $0xd97af3c1,-0x1238(%ebp)
 8063e8f:	f3 7a d9 
 8063e92:	c7 85 cc ed ff ff e8 	movl   $0x42b133e8,-0x1234(%ebp)
 8063e99:	33 b1 42 
 8063e9c:	c7 85 d0 ed ff ff b6 	movl   $0x1170cb6,-0x1230(%ebp)
 8063ea3:	0c 17 01 
 8063ea6:	c7 85 d4 ed ff ff 54 	movl   $0xd014754,-0x122c(%ebp)
 8063ead:	47 01 0d 
 8063eb0:	c7 85 d8 ed ff ff b2 	movl   $0xfd9b0b2,-0x1228(%ebp)
 8063eb7:	b0 d9 0f 
 8063eba:	c7 85 dc ed ff ff e3 	movl   $0xd35d80e3,-0x1224(%ebp)
 8063ec1:	80 5d d3 
 8063ec4:	c7 85 e0 ed ff ff e3 	movl   $0x15ccfe3,-0x1220(%ebp)
 8063ecb:	cf 5c 01 
 8063ece:	c7 85 e4 ed ff ff 29 	movl   $0x90419929,-0x121c(%ebp)
 8063ed5:	99 41 90 
 8063ed8:	c7 85 e8 ed ff ff de 	movl   $0xd3d01cde,-0x1218(%ebp)
 8063edf:	1c d0 d3 
 8063ee2:	c7 85 ec ed ff ff 1b 	movl   $0xc834e11b,-0x1214(%ebp)
 8063ee9:	e1 34 c8 
 8063eec:	c7 85 f0 ed ff ff dc 	movl   $0x1b403dc,-0x1210(%ebp)
 8063ef3:	03 b4 01 
 8063ef6:	c7 85 f4 ed ff ff b9 	movl   $0x1a28ffb9,-0x120c(%ebp)
 8063efd:	ff 28 1a 
 8063f00:	c7 85 f8 ed ff ff 0b 	movl   $0x6462120b,-0x1208(%ebp)
 8063f07:	12 62 64 
 8063f0a:	c7 85 fc ed ff ff b1 	movl   $0xfd210cb1,-0x1204(%ebp)
 8063f11:	0c 21 fd 
 8063f14:	c7 85 00 ee ff ff 69 	movl   $0x1108269,-0x1200(%ebp)
 8063f1b:	82 10 01 
 8063f1e:	c7 85 04 ee ff ff a8 	movl   $0xe0b33fa8,-0x11fc(%ebp)
 8063f25:	3f b3 e0 
 8063f28:	c7 85 08 ee ff ff 8d 	movl   $0xbd7a968d,-0x11f8(%ebp)
 8063f2f:	96 7a bd 
 8063f32:	c7 85 0c ee ff ff dd 	movl   $0x7c694fdd,-0x11f4(%ebp)
 8063f39:	4f 69 7c 
 8063f3c:	c7 85 10 ee ff ff 04 	movl   $0x154a304,-0x11f0(%ebp)
 8063f43:	a3 54 01 
 8063f46:	c7 85 14 ee ff ff 92 	movl   $0x58e00f92,-0x11ec(%ebp)
 8063f4d:	0f e0 58 
 8063f50:	c7 85 18 ee ff ff 31 	movl   $0x2cd93c31,-0x11e8(%ebp)
 8063f57:	3c d9 2c 
 8063f5a:	c7 85 1c ee ff ff d5 	movl   $0x9b83a3d5,-0x11e4(%ebp)
 8063f61:	a3 83 9b 
 8063f64:	c7 85 20 ee ff ff c5 	movl   $0x1a9cbc5,-0x11e0(%ebp)
 8063f6b:	cb a9 01 
 8063f6e:	c7 85 24 ee ff ff bb 	movl   $0xd78c09bb,-0x11dc(%ebp)
 8063f75:	09 8c d7 
 8063f78:	c7 85 28 ee ff ff 9e 	movl   $0x3c07c59e,-0x11d8(%ebp)
 8063f7f:	c5 07 3c 
 8063f82:	c7 85 2c ee ff ff 65 	movl   $0x81324665,-0x11d4(%ebp)
 8063f89:	46 32 81 
 8063f8c:	c7 85 30 ee ff ff 5b 	movl   $0x10a1f5b,-0x11d0(%ebp)
 8063f93:	1f 0a 01 
 8063f96:	c7 85 34 ee ff ff 2a 	movl   $0x8d6f0c2a,-0x11cc(%ebp)
 8063f9d:	0c 6f 8d 
 8063fa0:	c7 85 38 ee ff ff 06 	movl   $0x8b09b706,-0x11c8(%ebp)
 8063fa7:	b7 09 8b 
 8063faa:	c7 85 3c ee ff ff fe 	movl   $0x617ed7fe,-0x11c4(%ebp)
 8063fb1:	d7 7e 61 
 8063fb4:	c7 85 40 ee ff ff 32 	movl   $0x14ca732,-0x11c0(%ebp)
 8063fbb:	a7 4c 01 
 8063fbe:	c7 85 44 ee ff ff 34 	movl   $0x30cacf34,-0x11bc(%ebp)
 8063fc5:	cf ca 30 
 8063fc8:	c7 85 48 ee ff ff c8 	movl   $0x2dcc24c8,-0x11b8(%ebp)
 8063fcf:	24 cc 2d 
 8063fd2:	c7 85 4c ee ff ff fe 	movl   $0xf9de8dfe,-0x11b4(%ebp)
 8063fd9:	8d de f9 
 8063fdc:	c7 85 50 ee ff ff fe 	movl   $0x19fd0fe,-0x11b0(%ebp)
 8063fe3:	d0 9f 01 
 8063fe6:	c7 85 54 ee ff ff 80 	movl   $0x1e7ec180,-0x11ac(%ebp)
 8063fed:	c1 7e 1e 
 8063ff0:	c7 85 58 ee ff ff fd 	movl   $0xdc9f96fd,-0x11a8(%ebp)
 8063ff7:	96 9f dc 
 8063ffa:	c7 85 5c ee ff ff be 	movl   $0x5c2b18be,-0x11a4(%ebp)
 8064001:	18 2b 5c 
 8064004:	c7 85 60 ee ff ff 9f 	movl   $0x103e29f,-0x11a0(%ebp)
 806400b:	e2 03 01 
 806400e:	c7 85 64 ee ff ff e1 	movl   $0x661e71e1,-0x119c(%ebp)
 8064015:	71 1e 66 
 8064018:	c7 85 68 ee ff ff bc 	movl   $0x93c77cbc,-0x1198(%ebp)
 806401f:	7c c7 93 
 8064022:	c7 85 6c ee ff ff ee 	movl   $0x3335deee,-0x1194(%ebp)
 8064029:	de 35 33 
 806402c:	c7 85 70 ee ff ff 47 	movl   $0x144db47,-0x1190(%ebp)
 8064033:	db 44 01 
 8064036:	c7 85 74 ee ff ff 59 	movl   $0x7fa60e59,-0x118c(%ebp)
 806403d:	0e a6 7f 
 8064040:	c7 85 78 ee ff ff eb 	movl   $0x38b95beb,-0x1188(%ebp)
 8064047:	5b b9 38 
 806404a:	c7 85 7c ee ff ff aa 	movl   $0x356aa,-0x1184(%ebp)
 8064051:	56 03 00 
 8064054:	c7 85 80 ee ff ff 19 	movl   $0x1961219,-0x1180(%ebp)
 806405b:	12 96 01 
 806405e:	c7 85 84 ee ff ff ef 	movl   $0x5f8f91ef,-0x117c(%ebp)
 8064065:	91 8f 5f 
 8064068:	c7 85 88 ee ff ff e6 	movl   $0xc6e7b2e6,-0x1178(%ebp)
 806406f:	b2 e7 c6 
 8064072:	c7 85 8c ee ff ff 54 	movl   $0x40042c54,-0x1174(%ebp)
 8064079:	2c 04 40 
 806407c:	c7 85 90 ee ff ff 9f 	movl   $0x1fb969f,-0x1170(%ebp)
 8064083:	96 fb 01 
 8064086:	c7 85 94 ee ff ff 35 	movl   $0xfbb9bb35,-0x116c(%ebp)
 806408d:	bb b9 fb 
 8064090:	c7 85 98 ee ff ff cf 	movl   $0xfc50cfcf,-0x1168(%ebp)
 8064097:	cf 50 fc 
 806409a:	c7 85 9c ee ff ff b4 	movl   $0x88029bb4,-0x1164(%ebp)
 80640a1:	9b 02 88 
 80640a4:	c7 85 a0 ee ff ff 23 	movl   $0x13d3e23,-0x1160(%ebp)
 80640ab:	3e 3d 01 
 80640ae:	c7 85 a4 ee ff ff 03 	movl   $0xfaa82a03,-0x115c(%ebp)
 80640b5:	2a a8 fa 
 80640b8:	c7 85 a8 ee ff ff c3 	movl   $0x3b6503c3,-0x1158(%ebp)
 80640bf:	03 65 3b 
 80640c2:	c7 85 ac ee ff ff a2 	movl   $0x6a0342a2,-0x1154(%ebp)
 80640c9:	42 03 6a 
 80640cc:	c7 85 b0 ee ff ff ac 	movl   $0x18c8dac,-0x1150(%ebp)
 80640d3:	8d 8c 01 
 80640d6:	c7 85 b4 ee ff ff 84 	movl   $0xf9523484,-0x114c(%ebp)
 80640dd:	34 52 f9 
 80640e0:	c7 85 b8 ee ff ff b4 	movl   $0xca3e44b4,-0x1148(%ebp)
 80640e7:	44 3e ca 
 80640ea:	c7 85 bc ee ff ff 4a 	movl   $0x8484134a,-0x1144(%ebp)
 80640f1:	13 84 84 
 80640f4:	c7 85 c0 ee ff ff 17 	movl   $0x1efb117,-0x1140(%ebp)
 80640fb:	b1 ef 01 
 80640fe:	c7 85 c4 ee ff ff d2 	movl   $0x1bd360d2,-0x113c(%ebp)
 8064105:	60 d3 1b 
 8064108:	c7 85 c8 ee ff ff f1 	movl   $0xbe66eaf1,-0x1138(%ebp)
 806410f:	ea 66 be 
 8064112:	c7 85 cc ee ff ff 0e 	movl   $0xb2d28c0e,-0x1134(%ebp)
 8064119:	8c d2 b2 
 806411c:	c7 85 d0 ee ff ff ae 	movl   $0x135ceae,-0x1130(%ebp)
 8064123:	ce 35 01 
 8064126:	c7 85 d4 ee ff ff 07 	movl   $0x62c83907,-0x112c(%ebp)
 806412d:	39 c8 62 
 8064130:	c7 85 d8 ee ff ff ad 	movl   $0x6e00a5ad,-0x1128(%ebp)
 8064137:	a5 00 6e 
 806413a:	c7 85 dc ee ff ff 12 	movl   $0x5f872f12,-0x1124(%ebp)
 8064141:	2f 87 5f 
 8064144:	c7 85 e0 ee ff ff 5a 	movl   $0x183425a,-0x1120(%ebp)
 806414b:	42 83 01 
 806414e:	c7 85 e4 ee ff ff 49 	movl   $0xbb7a4749,-0x111c(%ebp)
 8064155:	47 7a bb 
 8064158:	c7 85 e8 ee ff ff 18 	movl   $0x980cf18,-0x1118(%ebp)
 806415f:	cf 80 09 
 8064162:	c7 85 ec ee ff ff d7 	movl   $0xf768fad7,-0x1114(%ebp)
 8064169:	fa 68 f7 
 806416c:	c7 85 f0 ee ff ff f0 	movl   $0x1e412f0,-0x1110(%ebp)
 8064173:	12 e4 01 
 8064176:	c7 85 f4 ee ff ff 8d 	movl   $0x752c6c8d,-0x110c(%ebp)
 806417d:	6c 2c 75 
 8064180:	c7 85 f8 ee ff ff 6f 	movl   $0x65f0816f,-0x1108(%ebp)
 8064187:	81 f0 65 
 806418a:	c7 85 fc ee ff ff c6 	movl   $0x9aa19cc6,-0x1104(%ebp)
 8064191:	9c a1 9a 
 8064194:	c7 85 00 ef ff ff d6 	movl   $0x12e8bd6,-0x1100(%ebp)
 806419b:	8b 2e 01 
 806419e:	c7 85 04 ef ff ff b1 	movl   $0x527787b1,-0x10fc(%ebp)
 80641a5:	87 77 52 
 80641a8:	c7 85 08 ef ff ff cb 	movl   $0xff6ca1cb,-0x10f8(%ebp)
 80641af:	a1 6c ff 
 80641b2:	c7 85 0c ef ff ff f7 	movl   $0x414a03f7,-0x10f4(%ebp)
 80641b9:	03 4a 41 
 80641bc:	c7 85 10 ef ff ff cc 	movl   $0x17a2ecc,-0x10f0(%ebp)
 80641c3:	2e 7a 01 
 80641c6:	c7 85 14 ef ff ff 9d 	movl   $0x2715699d,-0x10ec(%ebp)
 80641cd:	69 15 27 
 80641d0:	c7 85 18 ef ff ff 3e 	movl   $0xff47ca3e,-0x10e8(%ebp)
 80641d7:	ca 47 ff 
 80641da:	c7 85 1c ef ff ff f5 	movl   $0x519c84f5,-0x10e4(%ebp)
 80641e1:	84 9c 51 
 80641e4:	c7 85 20 ef ff ff 7f 	movl   $0x1d8ba7f,-0x10e0(%ebp)
 80641eb:	ba d8 01 
 80641ee:	c7 85 24 ef ff ff 02 	movl   $0xd86d6202,-0x10dc(%ebp)
 80641f5:	62 6d d8 
 80641f8:	c7 85 28 ef ff ff 66 	movl   $0xbf8cde66,-0x10d8(%ebp)
 80641ff:	de 8c bf 
 8064202:	c7 85 2c ef ff ff 19 	movl   $0x9301d319,-0x10d4(%ebp)
 8064209:	d3 01 93 
 806420c:	c7 85 30 ef ff ff 8f 	movl   $0x127748f,-0x10d0(%ebp)
 8064213:	74 27 01 
 8064216:	c7 85 34 ef ff ff 83 	movl   $0x8e88ba83,-0x10cc(%ebp)
 806421d:	ba 88 8e 
 8064220:	c7 85 38 ef ff ff 00 	movl   $0x2f701600,-0x10c8(%ebp)
 8064227:	16 70 2f 
 806422a:	c7 85 3c ef ff ff e0 	movl   $0x77c247e0,-0x10c4(%ebp)
 8064231:	47 c2 77 
 8064234:	c7 85 40 ef ff ff b3 	movl   $0x17151b3,-0x10c0(%ebp)
 806423b:	51 71 01 
 806423e:	c7 85 44 ef ff ff 23 	movl   $0xb22ae923,-0x10bc(%ebp)
 8064245:	e9 2a b2 
 8064248:	c7 85 48 ef ff ff 80 	movl   $0x3b4c1b80,-0x10b8(%ebp)
 806424f:	1b 4c 3b 
 8064252:	c7 85 4c ef ff ff d8 	movl   $0x55b2d9d8,-0x10b4(%ebp)
 8064259:	d9 b2 55 
 806425c:	c7 85 50 ef ff ff 20 	movl   $0x1cda620,-0x10b0(%ebp)
 8064263:	a6 cd 01 
 8064266:	c7 85 54 ef ff ff b6 	movl   $0x6f5ad1b6,-0x10ac(%ebp)
 806426d:	d1 5a 6f 
 8064270:	c7 85 58 ef ff ff 30 	movl   $0x250f9130,-0x10a8(%ebp)
 8064277:	91 0f 25 
 806427a:	c7 85 5c ef ff ff 27 	movl   $0x358fc827,-0x10a4(%ebp)
 8064281:	c8 8f 35 
 8064284:	c7 85 60 ef ff ff d4 	movl   $0x12087d4,-0x10a0(%ebp)
 806428b:	87 20 01 
 806428e:	c7 85 64 ef ff ff 23 	movl   $0x8b318623,-0x109c(%ebp)
 8064295:	86 31 8b 
 8064298:	c7 85 68 ef ff ff 7c 	movl   $0xee53757c,-0x1098(%ebp)
 806429f:	75 53 ee 
 80642a2:	c7 85 6c ef ff ff 30 	movl   $0x42f3ba30,-0x1094(%ebp)
 80642a9:	ba f3 42 
 80642ac:	c7 85 70 ef ff ff c9 	movl   $0x168a9c9,-0x1090(%ebp)
 80642b3:	a9 68 01 
 80642b6:	c7 85 74 ef ff ff ac 	movl   $0xadfde7ac,-0x108c(%ebp)
 80642bd:	e7 fd ad 
 80642c0:	c7 85 78 ef ff ff db 	movl   $0x29e852db,-0x1088(%ebp)
 80642c7:	52 e8 29 
 80642ca:	c7 85 7c ef ff ff bd 	movl   $0x93b0a8bd,-0x1084(%ebp)
 80642d1:	a8 b0 93 
 80642d4:	c7 85 80 ef ff ff 3b 	movl   $0x1c2d43b,-0x1080(%ebp)
 80642db:	d4 c2 01 
 80642de:	c7 85 84 ef ff ff cc 	movl   $0x4cbeb0cc,-0x107c(%ebp)
 80642e5:	b0 be 4c 
 80642e8:	c7 85 88 ef ff ff c9 	movl   $0x3a3133c9,-0x1078(%ebp)
 80642ef:	33 31 3a 
 80642f2:	c7 85 8c ef ff ff 76 	movl   $0x3c4e6976,-0x1074(%ebp)
 80642f9:	69 4e 3c 
 80642fc:	c7 85 90 ef ff ff a5 	movl   $0x119c4a5,-0x1070(%ebp)
 8064303:	c4 19 01 
 8064306:	c7 85 94 ef ff ff ff 	movl   $0x9fee5cff,-0x106c(%ebp)
 806430d:	5c ee 9f 
 8064310:	c7 85 98 ef ff ff bb 	movl   $0xc8bd80bb,-0x1068(%ebp)
 8064317:	80 bd c8 
 806431a:	c7 85 9c ef ff ff d3 	movl   $0x8b6203d3,-0x1064(%ebp)
 8064321:	03 62 8b 
 8064324:	c7 85 a0 ef ff ff ce 	movl   $0x16035ce,-0x1060(%ebp)
 806432b:	35 60 01 
 806432e:	c7 85 a4 ef ff ff 3e 	movl   $0x87e9f43e,-0x105c(%ebp)
 8064335:	f4 e9 87 
 8064338:	c7 85 a8 ef ff ff ea 	movl   $0xbaece0ea,-0x1058(%ebp)
 806433f:	e0 ec ba 
 8064342:	c7 85 ac ef ff ff c8 	movl   $0x2e3a84c8,-0x1054(%ebp)
 8064349:	84 3a 2e 
 806434c:	c7 85 b0 ef ff ff 42 	movl   $0x1b84342,-0x1050(%ebp)
 8064353:	43 b8 01 
 8064356:	c7 85 b4 ef ff ff a7 	movl   $0x94f238a7,-0x104c(%ebp)
 806435d:	38 f2 94 
 8064360:	c7 85 b8 ef ff ff 92 	movl   $0x74d40c92,-0x1048(%ebp)
 8064367:	0c d4 74 
 806436a:	c7 85 bc ef ff ff fd 	movl   $0x5ce492fd,-0x1044(%ebp)
 8064371:	92 e4 5c 
 8064374:	c7 85 c0 ef ff ff 09 	movl   $0x1132a09,-0x1040(%ebp)
 806437b:	2a 13 01 
 806437e:	c7 85 c4 ef ff ff d1 	movl   $0x3a2ec6d1,-0x103c(%ebp)
 8064385:	c6 2e 3a 
 8064388:	c7 85 c8 ef ff ff b7 	movl   $0xd2090fb7,-0x1038(%ebp)
 806438f:	0f 09 d2 
 8064392:	c7 85 cc ef ff ff bc 	movl   $0xb41db7bc,-0x1034(%ebp)
 8064399:	b7 1d b4 
 806439c:	c7 85 d0 ef ff ff 8b 	movl   $0x157f48b,-0x1030(%ebp)
 80643a3:	f4 57 01 
 80643a6:	c7 85 d4 ef ff ff 85 	movl   $0x8ba7885,-0x102c(%ebp)
 80643ad:	78 ba 08 
 80643b0:	c7 85 d8 ef ff ff a5 	movl   $0x68b53a5,-0x1028(%ebp)
 80643b7:	53 8b 06 
 80643ba:	c7 85 dc ef ff ff ac 	movl   $0xa12525ac,-0x1024(%ebp)
 80643c1:	25 25 a1 
 80643c4:	c7 85 e0 ef ff ff ae 	movl   $0x1adf1ae,-0x1020(%ebp)
 80643cb:	f1 ad 01 
 80643ce:	c7 85 e4 ef ff ff 53 	movl   $0x25748b53,-0x101c(%ebp)
 80643d5:	8b 74 25 
 80643d8:	c7 85 e8 ef ff ff 47 	movl   $0x84171447,-0x1018(%ebp)
 80643df:	14 17 84 
 80643e2:	c7 85 ec ef ff ff 8b 	movl   $0x24b7378b,-0x1014(%ebp)
 80643e9:	37 b7 24 
 80643ec:	c7 85 f0 ef ff ff 0d 	movl   $0x10cb70d,-0x1010(%ebp)
 80643f3:	b7 0c 01 
 80643f6:	c7 85 f4 ef ff ff 28 	movl   $0xeed1ae28,-0x100c(%ebp)
 80643fd:	ae d1 ee 
 8064400:	c7 85 f8 ef ff ff 58 	movl   $0x651cd958,-0x1008(%ebp)
 8064407:	d9 1c 65 
 806440a:	c7 85 fc ef ff ff 6e 	movl   $0x6de5056e,-0x1004(%ebp)
 8064411:	05 e5 6d 
 8064414:	c7 85 00 f0 ff ff d0 	movl   $0x14fe4d0,-0x1000(%ebp)
 806441b:	e4 4f 01 
 806441e:	c7 85 04 f0 ff ff b2 	movl   $0x2a8619b2,-0xffc(%ebp)
 8064425:	19 86 2a 
 8064428:	c7 85 08 f0 ff ff af 	movl   $0xfe640faf,-0xff8(%ebp)
 806442f:	0f 64 fe 
 8064432:	c7 85 0c f0 ff ff c9 	movl   $0x895e46c9,-0xff4(%ebp)
 8064439:	46 5e 89 
 806443c:	c7 85 10 f0 ff ff 04 	movl   $0x1a3de04,-0xff0(%ebp)
 8064443:	de a3 01 
 8064446:	c7 85 14 f0 ff ff 0f 	movl   $0x7a93d00f,-0xfec(%ebp)
 806444d:	d0 93 7a 
 8064450:	c7 85 18 f0 ff ff cd 	movl   $0x3efe89cd,-0xfe8(%ebp)
 8064457:	89 fe 3e 
 806445a:	c7 85 1c f0 ff ff 3e 	movl   $0xd5daec3e,-0xfe4(%ebp)
 8064461:	ec da d5 
 8064464:	c7 85 20 f0 ff ff c2 	movl   $0x1066ac2,-0xfe0(%ebp)
 806446b:	6a 06 01 
 806446e:	c7 85 24 f0 ff ff 13 	movl   $0xd938c413,-0xfdc(%ebp)
 8064475:	c4 38 d9 
 8064478:	c7 85 28 f0 ff ff 40 	movl   $0xcebe2c40,-0xfd8(%ebp)
 806447f:	2c be ce 
 8064482:	c7 85 2c f0 ff ff 4d 	movl   $0x8b51a74d,-0xfd4(%ebp)
 8064489:	a7 51 8b 
 806448c:	c7 85 30 f0 ff ff 73 	movl   $0x1480573,-0xfd0(%ebp)
 8064493:	05 48 01 
 8064496:	c7 85 34 f0 ff ff 18 	movl   $0xf86f518,-0xfcc(%ebp)
 806449d:	f5 86 0f 
 80644a0:	c7 85 38 f0 ff ff 51 	movl   $0x426db751,-0xfc8(%ebp)
 80644a7:	b7 6d 42 
 80644aa:	c7 85 3c f0 ff ff 21 	movl   $0x6e261121,-0xfc4(%ebp)
 80644b1:	11 26 6e 
 80644b4:	c7 85 40 f0 ff ff d0 	movl   $0x19a06d0,-0xfc0(%ebp)
 80644bb:	06 9a 01 
 80644be:	c7 85 44 f0 ff ff 2f 	movl   $0xa9b4592f,-0xfbc(%ebp)
 80644c5:	59 b4 a9 
 80644c8:	c7 85 48 f0 ff ff 92 	movl   $0xc9849292,-0xfb8(%ebp)
 80644cf:	92 84 c9 
 80644d2:	c7 85 4c f0 ff ff b4 	movl   $0x44d7cab4,-0xfb4(%ebp)
 80644d9:	ca d7 44 
 80644dc:	c7 85 50 f0 ff ff 42 	movl   $0x1004442,-0xfb0(%ebp)
 80644e3:	44 00 01 
 80644e6:	c7 85 54 f0 ff ff 7a 	movl   $0x54216f7a,-0xfac(%ebp)
 80644ed:	6f 21 54 
 80644f0:	c7 85 58 f0 ff ff 37 	movl   $0xfbe5b737,-0xfa8(%ebp)
 80644f7:	b7 e5 fb 
 80644fa:	c7 85 5c f0 ff ff 61 	movl   $0xd60dbd61,-0xfa4(%ebp)
 8064501:	bd 0d d6 
 8064504:	c7 85 60 f0 ff ff 52 	movl   $0x1405552,-0xfa0(%ebp)
 806450b:	55 40 01 
 806450e:	c7 85 64 f0 ff ff 59 	movl   $0x2929cb59,-0xf9c(%ebp)
 8064515:	cb 29 29 
 8064518:	c7 85 68 f0 ff ff 05 	movl   $0x7adf2505,-0xf98(%ebp)
 806451f:	25 df 7a 
 8064522:	c7 85 6c f0 ff ff ba 	movl   $0x8b912cba,-0xf94(%ebp)
 8064529:	2c 91 8b 
 806452c:	c7 85 70 f0 ff ff a7 	movl   $0x1906aa7,-0xf90(%ebp)
 8064533:	6a 90 01 
 8064536:	c7 85 74 f0 ff ff 2f 	movl   $0x73743e2f,-0xf8c(%ebp)
 806453d:	3e 74 73 
 8064540:	c7 85 78 f0 ff ff 46 	movl   $0x1996ee46,-0xf88(%ebp)
 8064547:	ee 96 19 
 806454a:	c7 85 7c f0 ff ff e9 	movl   $0x6e7577e9,-0xf84(%ebp)
 8064551:	77 75 6e 
 8064554:	c7 85 80 f0 ff ff 51 	movl   $0x1f48551,-0xf80(%ebp)
 806455b:	85 f4 01 
 806455e:	c7 85 84 f0 ff ff dd 	movl   $0x828a6dd,-0xf7c(%ebp)
 8064565:	a6 28 08 
 8064568:	c7 85 88 f0 ff ff ec 	movl   $0xaffe54ec,-0xf78(%ebp)
 806456f:	54 fe af 
 8064572:	c7 85 8c f0 ff ff f1 	movl   $0xe5096af1,-0xf74(%ebp)
 8064579:	6a 09 e5 
 806457c:	c7 85 90 f0 ff ff 52 	movl   $0x138d352,-0xf70(%ebp)
 8064583:	d3 38 01 
 8064586:	c7 85 94 f0 ff ff 95 	movl   $0xa32d095,-0xf6c(%ebp)
 806458d:	d0 32 0a 
 8064590:	c7 85 98 f0 ff ff 27 	movl   $0x1bfdea27,-0xf68(%ebp)
 8064597:	ea fd 1b 
 806459a:	c7 85 9c f0 ff ff ae 	movl   $0x9e4bc5ae,-0xf64(%ebp)
 80645a1:	c5 4b 9e 
 80645a4:	c7 85 a0 f0 ff ff 27 	movl   $0x1870827,-0xf60(%ebp)
 80645ab:	08 87 01 
 80645ae:	c7 85 a4 f0 ff ff ba 	movl   $0xccbf84ba,-0xf5c(%ebp)
 80645b5:	84 bf cc 
 80645b8:	c7 85 a8 f0 ff ff b0 	movl   $0xa2fd64b0,-0xf58(%ebp)
 80645bf:	64 fd a2 
 80645c2:	c7 85 ac f0 ff ff 19 	movl   $0x85deb719,-0xf54(%ebp)
 80645c9:	b7 de 85 
 80645cc:	c7 85 b0 f0 ff ff 31 	movl   $0x1e8ca31,-0xf50(%ebp)
 80645d3:	ca e8 01 
 80645d6:	c7 85 b4 f0 ff ff f4 	movl   $0x7ff7b2f4,-0xf4c(%ebp)
 80645dd:	b2 f7 7f 
 80645e0:	c7 85 b8 f0 ff ff ee 	movl   $0x5de5eee,-0xf48(%ebp)
 80645e7:	5e de 05 
 80645ea:	c7 85 bc f0 ff ff 70 	movl   $0xf3ab3270,-0xf44(%ebp)
 80645f1:	32 ab f3 
 80645f4:	c7 85 c0 f0 ff ff 5e 	movl   $0x1317e5e,-0xf40(%ebp)
 80645fb:	7e 31 01 
 80645fe:	c7 85 c4 f0 ff ff b1 	movl   $0x1ff59fb1,-0xf3c(%ebp)
 8064605:	9f f5 1f 
 8064608:	c7 85 c8 f0 ff ff aa 	movl   $0x755f6aa,-0xf38(%ebp)
 806460f:	f6 55 07 
 8064612:	c7 85 cc f0 ff ff 0c 	movl   $0xb095ff0c,-0xf34(%ebp)
 8064619:	ff 95 b0 
 806461c:	c7 85 d0 f0 ff ff f6 	movl   $0x17dddf6,-0xf30(%ebp)
 8064623:	dd 7d 01 
 8064626:	c7 85 d4 f0 ff ff 9e 	movl   $0xa7f3079e,-0xf2c(%ebp)
 806462d:	07 f3 a7 
 8064630:	c7 85 d8 f0 ff ff 54 	movl   $0x92b7454,-0xf28(%ebp)
 8064637:	74 2b 09 
 806463a:	c7 85 dc f0 ff ff cf 	movl   $0x5cbb7ecf,-0xf24(%ebp)
 8064641:	7e bb 5c 
 8064644:	c7 85 e0 f0 ff ff 74 	movl   $0x1dd5574,-0xf20(%ebp)
 806464b:	55 dd 01 
 806464e:	c7 85 e4 f0 ff ff c3 	movl   $0xe8f7e4c3,-0xf1c(%ebp)
 8064655:	e4 f7 e8 
 8064658:	c7 85 e8 f0 ff ff b4 	movl   $0x65bb28b4,-0xf18(%ebp)
 806465f:	28 bb 65 
 8064662:	c7 85 ec f0 ff ff 41 	movl   $0xb9f52f41,-0xf14(%ebp)
 8064669:	2f f5 b9 
 806466c:	c7 85 f0 f0 ff ff 68 	movl   $0x12a5568,-0xf10(%ebp)
 8064673:	55 2a 01 
 8064676:	c7 85 f4 f0 ff ff f3 	movl   $0x2335ddf3,-0xf0c(%ebp)
 806467d:	dd 35 23 
 8064680:	c7 85 f8 f0 ff ff e2 	movl   $0xbf29f2e2,-0xf08(%ebp)
 8064687:	f2 29 bf 
 806468a:	c7 85 fc f0 ff ff 11 	movl   $0xe8727b11,-0xf04(%ebp)
 8064691:	7b 72 e8 
 8064694:	c7 85 00 f1 ff ff c2 	movl   $0x174eac2,-0xf00(%ebp)
 806469b:	ea 74 01 
 806469e:	c7 85 04 f1 ff ff 70 	movl   $0xac035570,-0xefc(%ebp)
 80646a5:	55 03 ac 
 80646a8:	c7 85 08 f1 ff ff 9a 	movl   $0x2ef46f9a,-0xef8(%ebp)
 80646af:	6f f4 2e 
 80646b2:	c7 85 0c f1 ff ff d6 	movl   $0xa28f19d6,-0xef4(%ebp)
 80646b9:	19 8f a2 
 80646bc:	c7 85 10 f1 ff ff 73 	movl   $0x1d22573,-0xef0(%ebp)
 80646c3:	25 d2 01 
 80646c6:	c7 85 14 f1 ff ff 66 	movl   $0xab821566,-0xeec(%ebp)
 80646cd:	15 82 ab 
 80646d0:	c7 85 18 f1 ff ff c0 	movl   $0xdd58c5c0,-0xee8(%ebp)
 80646d7:	c5 58 dd 
 80646da:	c7 85 1c f1 ff ff 25 	movl   $0x45997025,-0xee4(%ebp)
 80646e1:	70 99 45 
 80646e4:	c7 85 20 f1 ff ff 68 	movl   $0x1235768,-0xee0(%ebp)
 80646eb:	57 23 01 
 80646ee:	c7 85 24 f1 ff ff c0 	movl   $0xd6629ac0,-0xedc(%ebp)
 80646f5:	9a 62 d6 
 80646f8:	c7 85 28 f1 ff ff 30 	movl   $0x54aef730,-0xed8(%ebp)
 80646ff:	f7 ae 54 
 8064702:	c7 85 2c f1 ff ff 2f 	movl   $0x56ffcc2f,-0xed4(%ebp)
 8064709:	cc ff 56 
 806470c:	c7 85 30 f1 ff ff 42 	movl   $0x16c2d42,-0xed0(%ebp)
 8064713:	2d 6c 01 
 8064716:	c7 85 34 f1 ff ff 70 	movl   $0xbfb4170,-0xecc(%ebp)
 806471d:	41 fb 0b 
 8064720:	c7 85 38 f1 ff ff fd 	movl   $0x29dab4fd,-0xec8(%ebp)
 8064727:	b4 da 29 
 806472a:	c7 85 3c f1 ff ff 3b 	movl   $0xecbfbf3b,-0xec4(%ebp)
 8064731:	bf bf ec 
 8064734:	c7 85 40 f1 ff ff 92 	movl   $0x1c73892,-0xec0(%ebp)
 806473b:	38 c7 01 
 806473e:	c7 85 44 f1 ff ff e6 	movl   $0x277d08e6,-0xebc(%ebp)
 8064745:	08 7d 27 
 8064748:	c7 85 48 f1 ff ff 1e 	movl   $0xfa28b11e,-0xeb8(%ebp)
 806474f:	b1 28 fa 
 8064752:	c7 85 4c f1 ff ff 84 	movl   $0xd3f7d784,-0xeb4(%ebp)
 8064759:	d7 f7 d3 
 806475c:	c7 85 50 f1 ff ff 5b 	movl   $0x11c835b,-0xeb0(%ebp)
 8064763:	83 1c 01 
 8064766:	c7 85 54 f1 ff ff 1f 	movl   $0xb15c4b1f,-0xeac(%ebp)
 806476d:	4b 5c b1 
 8064770:	c7 85 58 f1 ff ff 65 	movl   $0x38b2dd65,-0xea8(%ebp)
 8064777:	dd b2 38 
 806477a:	c7 85 5c f1 ff ff 66 	movl   $0xc8f5cd66,-0xea4(%ebp)
 8064781:	cd f5 c8 
 8064784:	c7 85 60 f1 ff ff 32 	movl   $0x163a432,-0xea0(%ebp)
 806478b:	a4 63 01 
 806478e:	c7 85 64 f1 ff ff e7 	movl   $0x1db35de7,-0xe9c(%ebp)
 8064795:	5d b3 1d 
 8064798:	c7 85 68 f1 ff ff bf 	movl   $0xc6df94bf,-0xe98(%ebp)
 806479f:	94 df c6 
 80647a2:	c7 85 6c f1 ff ff bf 	movl   $0x7b3340bf,-0xe94(%ebp)
 80647a9:	40 33 7b 
 80647ac:	c7 85 70 f1 ff ff 3f 	movl   $0x1bc8d3f,-0xe90(%ebp)
 80647b3:	8d bc 01 
 80647b6:	c7 85 74 f1 ff ff b0 	movl   $0x72901ab0,-0xe8c(%ebp)
 80647bd:	1a 90 72 
 80647c0:	c7 85 78 f1 ff ff f7 	movl   $0xdc4bbcf7,-0xe88(%ebp)
 80647c7:	bc 4b dc 
 80647ca:	c7 85 7c f1 ff ff 77 	movl   $0xad000877,-0xe84(%ebp)
 80647d1:	08 00 ad 
 80647d4:	c7 85 80 f1 ff ff 47 	movl   $0x115d847,-0xe80(%ebp)
 80647db:	d8 15 01 
 80647de:	c7 85 84 f1 ff ff 5c 	movl   $0x4f34215c,-0xe7c(%ebp)
 80647e5:	21 34 4f 
 80647e8:	c7 85 88 f1 ff ff 35 	movl   $0xd35eac35,-0xe78(%ebp)
 80647ef:	ac 5e d3 
 80647f2:	c7 85 8c f1 ff ff 95 	movl   $0x98400a95,-0xe74(%ebp)
 80647f9:	0a 40 98 
 80647fc:	c7 85 90 f1 ff ff 59 	movl   $0x15b4e59,-0xe70(%ebp)
 8064803:	4e 5b 01 
 8064806:	c7 85 94 f1 ff ff b4 	movl   $0xa30129b4,-0xe6c(%ebp)
 806480d:	29 01 a3 
 8064810:	c7 85 98 f1 ff ff 42 	movl   $0x48365742,-0xe68(%ebp)
 8064817:	57 36 48 
 806481a:	c7 85 9c f1 ff ff 3b 	movl   $0xfe500d3b,-0xe64(%ebp)
 8064821:	0d 50 fe 
 8064824:	c7 85 a0 f1 ff ff ef 	movl   $0x1b221ef,-0xe60(%ebp)
 806482b:	21 b2 01 
 806482e:	c7 85 a4 f1 ff ff 10 	movl   $0xa5e0ba10,-0xe5c(%ebp)
 8064835:	ba e0 a5 
 8064838:	c7 85 a8 f1 ff ff 89 	movl   $0xd21f689,-0xe58(%ebp)
 806483f:	f6 21 0d 
 8064842:	c7 85 ac f1 ff ff 45 	movl   $0xfef20845,-0xe54(%ebp)
 8064849:	08 f2 fe 
 806484c:	c7 85 b0 f1 ff ff 35 	movl   $0x10f5535,-0xe50(%ebp)
 8064853:	55 0f 01 
 8064856:	c7 85 b4 f1 ff ff 94 	movl   $0xf58e894,-0xe4c(%ebp)
 806485d:	e8 58 0f 
 8064860:	c7 85 b8 f1 ff ff 2c 	movl   $0x506a742c,-0xe48(%ebp)
 8064867:	74 6a 50 
 806486a:	c7 85 bc f1 ff ff 56 	movl   $0x7eae8a56,-0xe44(%ebp)
 8064871:	8a ae 7e 
 8064874:	c7 85 c0 f1 ff ff 83 	movl   $0x1532a83,-0xe40(%ebp)
 806487b:	2a 53 01 
 806487e:	c7 85 c4 f1 ff ff b9 	movl   $0x132f22b9,-0xe3c(%ebp)
 8064885:	22 2f 13 
 8064888:	c7 85 c8 f1 ff ff 37 	movl   $0xe4851137,-0xe38(%ebp)
 806488f:	11 85 e4 
 8064892:	c7 85 cc f1 ff ff eb 	movl   $0x5e5a2ceb,-0xe34(%ebp)
 8064899:	2c 5a 5e 
 806489c:	c7 85 d0 f1 ff ff 24 	movl   $0x1a7f524,-0xe30(%ebp)
 80648a3:	f5 a7 01 
 80648a6:	c7 85 d4 f1 ff ff b4 	movl   $0x6bfd75b4,-0xe2c(%ebp)
 80648ad:	75 fd 6b 
 80648b0:	c7 85 d8 f1 ff ff c2 	movl   $0x6ed32ac2,-0xe28(%ebp)
 80648b7:	2a d3 6e 
 80648ba:	c7 85 dc f1 ff ff 13 	movl   $0xbaf85c13,-0xe24(%ebp)
 80648c1:	5c f8 ba 
 80648c4:	c7 85 e0 f1 ff ff 36 	movl   $0x108f936,-0xe20(%ebp)
 80648cb:	f9 08 01 
 80648ce:	c7 85 e4 f1 ff ff 21 	movl   $0x6fcd321,-0xe1c(%ebp)
 80648d5:	d3 fc 06 
 80648d8:	c7 85 e8 f1 ff ff 73 	movl   $0x4a87f573,-0xe18(%ebp)
 80648df:	f5 87 4a 
 80648e2:	c7 85 ec f1 ff ff 18 	movl   $0x69b67318,-0xe14(%ebp)
 80648e9:	73 b6 69 
 80648ec:	c7 85 f0 f1 ff ff 84 	movl   $0x14b3784,-0xe10(%ebp)
 80648f3:	37 4b 01 
 80648f6:	c7 85 f4 f1 ff ff e9 	movl   $0xc8bc07e9,-0xe0c(%ebp)
 80648fd:	07 bc c8 
 8064900:	c7 85 f8 f1 ff ff cf 	movl   $0x5d29f2cf,-0xe08(%ebp)
 8064907:	f2 29 5d 
 806490a:	c7 85 fc f1 ff ff de 	movl   $0x84240fde,-0xe04(%ebp)
 8064911:	0f 24 84 
 8064914:	c7 85 00 f2 ff ff 65 	movl   $0x19e0565,-0xe00(%ebp)
 806491b:	05 9e 01 
 806491e:	c7 85 04 f2 ff ff f1 	movl   $0xdd7584f1,-0xdfc(%ebp)
 8064925:	84 75 dd 
 8064928:	c7 85 08 f2 ff ff c1 	movl   $0xfa3a37c1,-0xdf8(%ebp)
 806492f:	37 3a fa 
 8064932:	c7 85 0c f2 ff ff ea 	movl   $0x729689ea,-0xdf4(%ebp)
 8064939:	89 96 72 
 806493c:	c7 85 10 f2 ff ff 5f 	movl   $0x102c35f,-0xdf0(%ebp)
 8064943:	c3 02 01 
 8064946:	c7 85 14 f2 ff ff 2e 	movl   $0x54d2e62e,-0xdec(%ebp)
 806494d:	e6 d2 54 
 8064950:	c7 85 18 f2 ff ff b2 	movl   $0xb8c8c5b2,-0xde8(%ebp)
 8064957:	c5 c8 b8 
 806495a:	c7 85 1c f2 ff ff 65 	movl   $0x4f3c2c65,-0xde4(%ebp)
 8064961:	2c 3c 4f 
 8064964:	c7 85 20 f2 ff ff 37 	movl   $0x1437437,-0xde0(%ebp)
 806496b:	74 43 01 
 806496e:	c7 85 24 f2 ff ff b9 	movl   $0xea079fb9,-0xddc(%ebp)
 8064975:	9f 07 ea 
 8064978:	c7 85 28 f2 ff ff 1e 	movl   $0x26faf71e,-0xdd8(%ebp)
 806497f:	f7 fa 26 
 8064982:	c7 85 2c f2 ff ff 7f 	movl   $0x230b377f,-0xdd4(%ebp)
 8064989:	37 0b 23 
 806498c:	c7 85 30 f2 ff ff 45 	movl   $0x1945145,-0xdd0(%ebp)
 8064993:	51 94 01 
 8064996:	c7 85 34 f2 ff ff a8 	movl   $0xa48987a8,-0xdcc(%ebp)
 806499d:	87 89 a4 
 80649a0:	c7 85 38 f2 ff ff e6 	movl   $0xf0b9b4e6,-0xdc8(%ebp)
 80649a7:	b4 b9 f0 
 80649aa:	c7 85 3c f2 ff ff 5e 	movl   $0x6bce055e,-0xdc4(%ebp)
 80649b1:	05 ce 6b 
 80649b4:	c7 85 40 f2 ff ff 96 	movl   $0x1f96596,-0xdc0(%ebp)
 80649bb:	65 f9 01 
 80649be:	c7 85 44 f2 ff ff c9 	movl   $0x26d5f4c9,-0xdbc(%ebp)
 80649c5:	f4 d5 26 
 80649c8:	c7 85 48 f2 ff ff 10 	movl   $0x56741110,-0xdb8(%ebp)
 80649cf:	11 74 56 
 80649d2:	c7 85 4c f2 ff ff 5b 	movl   $0x360c35b,-0xdb4(%ebp)
 80649d9:	c3 60 03 
 80649dc:	c7 85 50 f2 ff ff 7e 	movl   $0x13bdf7e,-0xdb0(%ebp)
 80649e3:	df 3b 01 
 80649e6:	c7 85 54 f2 ff ff fb 	movl   $0x308b71fb,-0xdac(%ebp)
 80649ed:	71 8b 30 
 80649f0:	c7 85 58 f2 ff ff 54 	movl   $0x2c111554,-0xda8(%ebp)
 80649f7:	15 11 2c 
 80649fa:	c7 85 5c f2 ff ff 32 	movl   $0x8438f432,-0xda4(%ebp)
 8064a01:	f4 38 84 
 8064a04:	c7 85 60 f2 ff ff 5d 	movl   $0x18ad75d,-0xda0(%ebp)
 8064a0b:	d7 8a 01 
 8064a0e:	c7 85 64 f2 ff ff 7a 	movl   $0x3cae4e7a,-0xd9c(%ebp)
 8064a15:	4e ae 3c 
 8064a18:	c7 85 68 f2 ff ff a9 	movl   $0xb7155aa9,-0xd98(%ebp)
 8064a1f:	5a 15 b7 
 8064a22:	c7 85 6c f2 ff ff 3e 	movl   $0xe547313e,-0xd94(%ebp)
 8064a29:	31 47 e5 
 8064a2c:	c7 85 70 f2 ff ff 34 	movl   $0x1ed8d34,-0xd90(%ebp)
 8064a33:	8d ed 01 
 8064a36:	c7 85 74 f2 ff ff 0c 	movl   $0xc5ecf10c,-0xd8c(%ebp)
 8064a3d:	f1 ec c5 
 8064a40:	c7 85 78 f2 ff ff a9 	movl   $0x326d58a9,-0xd88(%ebp)
 8064a47:	58 6d 32 
 8064a4a:	c7 85 7c f2 ff ff c7 	movl   $0xf4c7ec7,-0xd84(%ebp)
 8064a51:	7e 4c 0f 
 8064a54:	c7 85 80 f2 ff ff 41 	movl   $0x1347841,-0xd80(%ebp)
 8064a5b:	78 34 01 
 8064a5e:	c7 85 84 f2 ff ff 4f 	movl   $0x37682d4f,-0xd7c(%ebp)
 8064a65:	2d 68 37 
 8064a68:	c7 85 88 f2 ff ff d4 	movl   $0xff08aed4,-0xd78(%ebp)
 8064a6f:	ae 08 ff 
 8064a72:	c7 85 8c f2 ff ff 78 	movl   $0x531f9e78,-0xd74(%ebp)
 8064a79:	9e 1f 53 
 8064a7c:	c7 85 90 f2 ff ff 51 	movl   $0x1819651,-0xd70(%ebp)
 8064a83:	96 81 01 
 8064a86:	c7 85 94 f2 ff ff a3 	movl   $0x454238a3,-0xd6c(%ebp)
 8064a8d:	38 42 45 
 8064a90:	c7 85 98 f2 ff ff 89 	movl   $0x3ecada89,-0xd68(%ebp)
 8064a97:	da ca 3e 
 8064a9a:	c7 85 9c f2 ff ff 17 	movl   $0xa7e78617,-0xd64(%ebp)
 8064aa1:	86 e7 a7 
 8064aa4:	c7 85 a0 f2 ff ff e5 	movl   $0x1e1fbe5,-0xd60(%ebp)
 8064aab:	fb e1 01 
 8064aae:	c7 85 a4 f2 ff ff 66 	movl   $0xcb496366,-0xd5c(%ebp)
 8064ab5:	63 49 cb 
 8064ab8:	c7 85 a8 f2 ff ff 95 	movl   $0x873ec895,-0xd58(%ebp)
 8064abf:	c8 3e 87 
 8064ac2:	c7 85 ac f2 ff ff ce 	movl   $0x88f0b3ce,-0xd54(%ebp)
 8064ac9:	b3 f0 88 
 8064acc:	c7 85 b0 f2 ff ff 6f 	movl   $0x12d3d6f,-0xd50(%ebp)
 8064ad3:	3d 2d 01 
 8064ad6:	c7 85 b4 f2 ff ff 3f 	movl   $0x3e1bbc3f,-0xd4c(%ebp)
 8064add:	bc 1b 3e 
 8064ae0:	c7 85 b8 f2 ff ff bb 	movl   $0x290e7abb,-0xd48(%ebp)
 8064ae7:	7a 0e 29 
 8064aea:	c7 85 bc f2 ff ff c2 	movl   $0x6b2ce0c2,-0xd44(%ebp)
 8064af1:	e0 2c 6b 
 8064af4:	c7 85 c0 f2 ff ff cb 	movl   $0x1788ccb,-0xd40(%ebp)
 8064afb:	8c 78 01 
 8064afe:	c7 85 c4 f2 ff ff 4f 	movl   $0xda2ab4f,-0xd3c(%ebp)
 8064b05:	ab a2 0d 
 8064b08:	c7 85 c8 f2 ff ff 6a 	movl   $0xb352196a,-0xd38(%ebp)
 8064b0f:	19 52 b3 
 8064b12:	c7 85 cc f2 ff ff f2 	movl   $0x45f818f2,-0xd34(%ebp)
 8064b19:	18 f8 45 
 8064b1c:	c7 85 d0 f2 ff ff fe 	movl   $0x1d6affe,-0xd30(%ebp)
 8064b23:	af d6 01 
 8064b26:	c7 85 d4 f2 ff ff 11 	movl   $0x4885ab11,-0xd2c(%ebp)
 8064b2d:	ab 85 48 
 8064b30:	c7 85 d8 f2 ff ff e2 	movl   $0xb0134fe2,-0xd28(%ebp)
 8064b37:	4f 13 b0 
 8064b3a:	c7 85 dc f2 ff ff 97 	movl   $0xebbb0f97,-0xd24(%ebp)
 8064b41:	0f bb eb 
 8064b44:	c7 85 e0 f2 ff ff fe 	movl   $0x1262dfe,-0xd20(%ebp)
 8064b4b:	2d 26 01 
 8064b4e:	c7 85 e4 f2 ff ff d6 	movl   $0xdaa715d6,-0xd1c(%ebp)
 8064b55:	15 a7 da 
 8064b58:	c7 85 e8 f2 ff ff da 	movl   $0x9c1823da,-0xd18(%ebp)
 8064b5f:	23 18 9c 
 8064b62:	c7 85 ec f2 ff ff 7d 	movl   $0xa6a9d37d,-0xd14(%ebp)
 8064b69:	d3 a9 a6 
 8064b6c:	c7 85 f0 f2 ff ff 7e 	movl   $0x16fb97e,-0xd10(%ebp)
 8064b73:	b9 6f 01 
 8064b76:	c7 85 f4 f2 ff ff 4b 	movl   $0x9150db4b,-0xd0c(%ebp)
 8064b7d:	db 50 91 
 8064b80:	c7 85 f8 f2 ff ff d1 	movl   $0x31e2cd1,-0xd08(%ebp)
 8064b87:	2c 1e 03 
 8064b8a:	c7 85 fc f2 ff ff 5d 	movl   $0x5054485d,-0xd04(%ebp)
 8064b91:	48 54 50 
 8064b94:	c7 85 00 f3 ff ff de 	movl   $0x1cba7de,-0xd00(%ebp)
 8064b9b:	a7 cb 01 
 8064b9e:	c7 85 04 f3 ff ff 0f 	movl   $0xfad2890f,-0xcfc(%ebp)
 8064ba5:	89 d2 fa 
 8064ba8:	c7 85 08 f3 ff ff 02 	movl   $0x21f2dc02,-0xcf8(%ebp)
 8064baf:	dc f2 21 
 8064bb2:	c7 85 0c f3 ff ff 3a 	movl   $0xf234ad3a,-0xcf4(%ebp)
 8064bb9:	ad 34 f2 
 8064bbc:	c7 85 10 f3 ff ff ea 	movl   $0x11f48ea,-0xcf0(%ebp)
 8064bc3:	48 1f 01 
 8064bc6:	c7 85 14 f3 ff ff 53 	movl   $0xb9872b53,-0xcec(%ebp)
 8064bcd:	2b 87 b9 
 8064bd0:	c7 85 18 f3 ff ff 03 	movl   $0xaa6f9303,-0xce8(%ebp)
 8064bd7:	93 6f aa 
 8064bda:	c7 85 1c f3 ff ff 88 	movl   $0xaec1d888,-0xce4(%ebp)
 8064be1:	d8 c1 ae 
 8064be4:	c7 85 20 f3 ff ff 25 	movl   $0x1671b25,-0xce0(%ebp)
 8064beb:	1b 67 01 
 8064bee:	c7 85 24 f3 ff ff 28 	movl   $0xa7e8f628,-0xcdc(%ebp)
 8064bf5:	f6 e8 a7 
 8064bf8:	c7 85 28 f3 ff ff c4 	movl   $0xd50b77c4,-0xcd8(%ebp)
 8064bff:	77 0b d5 
 8064c02:	c7 85 2c f3 ff ff aa 	movl   $0x1a724eaa,-0xcd4(%ebp)
 8064c09:	4e 72 1a 
 8064c0c:	c7 85 30 f3 ff ff ef 	movl   $0x1c0e1ef,-0xcd0(%ebp)
 8064c13:	e1 c0 01 
 8064c16:	c7 85 34 f3 ff ff d9 	movl   $0xe8f199d9,-0xccc(%ebp)
 8064c1d:	99 f1 e8 
 8064c20:	c7 85 38 f3 ff ff da 	movl   $0xc5272ada,-0xcc8(%ebp)
 8064c27:	2a 27 c5 
 8064c2a:	c7 85 3c f3 ff ff 2a 	movl   $0x7087712a,-0xcc4(%ebp)
 8064c31:	71 87 70 
 8064c34:	c7 85 40 f3 ff ff 35 	movl   $0x1188d35,-0xcc0(%ebp)
 8064c3b:	8d 18 01 
 8064c3e:	c7 85 44 f3 ff ff 4f 	movl   $0xa32e004f,-0xcbc(%ebp)
 8064c45:	00 2e a3 
 8064c48:	c7 85 48 f3 ff ff 91 	movl   $0x7670f591,-0xcb8(%ebp)
 8064c4f:	f5 70 76 
 8064c52:	c7 85 4c f3 ff ff 75 	movl   $0xcca94d75,-0xcb4(%ebp)
 8064c59:	4d a9 cc 
 8064c5c:	c7 85 50 f3 ff ff 82 	movl   $0x15eb082,-0xcb0(%ebp)
 8064c63:	b0 5e 01 
 8064c66:	c7 85 54 f3 ff ff 63 	movl   $0xbf98063,-0xcac(%ebp)
 8064c6d:	80 f9 0b 
 8064c70:	c7 85 58 f3 ff ff f6 	movl   $0xd40d32f6,-0xca8(%ebp)
 8064c77:	32 0d d4 
 8064c7a:	c7 85 5c f3 ff ff d2 	movl   $0x7fd3a0d2,-0xca4(%ebp)
 8064c81:	a0 d3 7f 
 8064c84:	c7 85 60 f3 ff ff a3 	movl   $0x1b65ca3,-0xca0(%ebp)
 8064c8b:	5c b6 01 
 8064c8e:	c7 85 64 f3 ff ff 3e 	movl   $0xc77bf03e,-0xc9c(%ebp)
 8064c95:	f0 7b c7 
 8064c98:	c7 85 68 f3 ff ff d9 	movl   $0xc4883fd9,-0xc98(%ebp)
 8064c9f:	3f 88 c4 
 8064ca2:	c7 85 6c f3 ff ff 83 	movl   $0x2fe44483,-0xc94(%ebp)
 8064ca9:	44 e4 2f 
 8064cac:	c7 85 70 f3 ff ff e6 	movl   $0x111f9e6,-0xc90(%ebp)
 8064cb3:	f9 11 01 
 8064cb6:	c7 85 74 f3 ff ff 4d 	movl   $0x395aec4d,-0xc8c(%ebp)
 8064cbd:	ec 5a 39 
 8064cc0:	c7 85 78 f3 ff ff d0 	movl   $0xb5aa4fd0,-0xc88(%ebp)
 8064cc7:	4f aa b5 
 8064cca:	c7 85 7c f3 ff ff a4 	movl   $0xbbdd55a4,-0xc84(%ebp)
 8064cd1:	55 dd bb 
 8064cd4:	c7 85 80 f3 ff ff 5f 	movl   $0x156785f,-0xc80(%ebp)
 8064cdb:	78 56 01 
 8064cde:	c7 85 84 f3 ff ff 60 	movl   $0x47b1a760,-0xc7c(%ebp)
 8064ce5:	a7 b1 47 
 8064ce8:	c7 85 88 f3 ff ff c4 	movl   $0xe314e3c4,-0xc78(%ebp)
 8064cef:	e3 14 e3 
 8064cf2:	c7 85 8c f3 ff ff 0d 	movl   $0xaad4ab0d,-0xc74(%ebp)
 8064cf9:	ab d4 aa 
 8064cfc:	c7 85 90 f3 ff ff 77 	movl   $0x1ac1677,-0xc70(%ebp)
 8064d03:	16 ac 01 
 8064d06:	c7 85 94 f3 ff ff 9c 	movl   $0xaccf089c,-0xc6c(%ebp)
 8064d0d:	08 cf ac 
 8064d10:	c7 85 98 f3 ff ff 5a 	movl   $0xaded0e5a,-0xc68(%ebp)
 8064d17:	0e ed ad 
 8064d1a:	c7 85 9c f3 ff ff e8 	movl   $0xcac4eae8,-0xc64(%ebp)
 8064d21:	ea c4 ca 
 8064d24:	c7 85 a0 f3 ff ff 0a 	movl   $0x10b8e0a,-0xc60(%ebp)
 8064d2b:	8e 0b 01 
 8064d2e:	c7 85 a4 f3 ff ff c3 	movl   $0x5802cac3,-0xc5c(%ebp)
 8064d35:	ca 02 58 
 8064d38:	c7 85 a8 f3 ff ff f1 	movl   $0xd96851f1,-0xc58(%ebp)
 8064d3f:	51 68 d9 
 8064d42:	c7 85 ac f3 ff ff a2 	movl   $0x7d7625a2,-0xc54(%ebp)
 8064d49:	25 76 7d 
 8064d4c:	c7 85 b0 f3 ff ff 8d 	movl   $0x14e718d,-0xc50(%ebp)
 8064d53:	71 4e 01 
 8064d56:	c7 85 b4 f3 ff ff 74 	movl   $0xae037d74,-0xc4c(%ebp)
 8064d5d:	7d 03 ae 
 8064d60:	c7 85 b8 f3 ff ff 6d 	movl   $0x8fc2666d,-0xc48(%ebp)
 8064d67:	66 c2 8f 
 8064d6a:	c7 85 bc f3 ff ff 0b 	movl   $0xdcd3af0b,-0xc44(%ebp)
 8064d71:	af d3 dc 
 8064d74:	c7 85 c0 f3 ff ff f0 	movl   $0x1a20df0,-0xc40(%ebp)
 8064d7b:	0d a2 01 
 8064d7e:	c7 85 c4 f3 ff ff 68 	movl   $0x8cc22e68,-0xc3c(%ebp)
 8064d85:	2e c2 8c 
 8064d88:	c7 85 c8 f3 ff ff 04 	movl   $0x39d98004,-0xc38(%ebp)
 8064d8f:	80 d9 39 
 8064d92:	c7 85 cc f3 ff ff 67 	movl   $0x8a044d67,-0xc34(%ebp)
 8064d99:	4d 04 8a 
 8064d9c:	c7 85 d0 f3 ff ff b6 	movl   $0x10548b6,-0xc30(%ebp)
 8064da3:	48 05 01 
 8064da6:	c7 85 d4 f3 ff ff 03 	movl   $0xaff2ba03,-0xc2c(%ebp)
 8064dad:	ba f2 af 
 8064db0:	c7 85 d8 f3 ff ff 05 	movl   $0x84fe005,-0xc28(%ebp)
 8064db7:	e0 4f 08 
 8064dba:	c7 85 dc f3 ff ff c1 	movl   $0x2c8560c1,-0xc24(%ebp)
 8064dc1:	60 85 2c 
 8064dc4:	c7 85 e0 f3 ff ff e4 	movl   $0x1469ae4,-0xc20(%ebp)
 8064dcb:	9a 46 01 
 8064dce:	c7 85 e4 f3 ff ff 83 	movl   $0x1bef6883,-0xc1c(%ebp)
 8064dd5:	68 ef 1b 
 8064dd8:	c7 85 e8 f3 ff ff 07 	movl   $0x4a63d807,-0xc18(%ebp)
 8064ddf:	d8 63 4a 
 8064de2:	c7 85 ec f3 ff ff f1 	movl   $0x37a6b8f1,-0xc14(%ebp)
 8064de9:	b8 a6 37 
 8064dec:	c7 85 f0 f3 ff ff 9d 	movl   $0x198419d,-0xc10(%ebp)
 8064df3:	41 98 01 
 8064df6:	c7 85 f4 f3 ff ff a4 	movl   $0xe2eb42a4,-0xc0c(%ebp)
 8064dfd:	42 eb e2 
 8064e00:	c7 85 f8 f3 ff ff 08 	movl   $0x9cfcce08,-0xc08(%ebp)
 8064e07:	ce fc 9c 
 8064e0a:	c7 85 fc f3 ff ff 2d 	movl   $0x8590672d,-0xc04(%ebp)
 8064e11:	67 90 85 
 8064e14:	c7 85 00 f4 ff ff 04 	movl   $0x1fe5204,-0xc00(%ebp)
 8064e1b:	52 fe 01 
 8064e1e:	c7 85 04 f4 ff ff a7 	movl   $0x8dd309a7,-0xbfc(%ebp)
 8064e25:	09 d3 8d 
 8064e28:	c7 85 08 f4 ff ff c5 	movl   $0x821e00c5,-0xbf8(%ebp)
 8064e2f:	00 1e 82 
 8064e32:	c7 85 0c f4 ff ff 7c 	movl   $0xd37a407c,-0xbf4(%ebp)
 8064e39:	40 7a d3 
 8064e3c:	c7 85 10 f4 ff ff 42 	movl   $0x13ef342,-0xbf0(%ebp)
 8064e43:	f3 3e 01 
 8064e46:	c7 85 14 f4 ff ff 10 	movl   $0xf147cc10,-0xbec(%ebp)
 8064e4d:	cc 47 f1 
 8064e50:	c7 85 18 f4 ff ff f6 	movl   $0xa2a580f6,-0xbe8(%ebp)
 8064e57:	80 a5 a2 
 8064e5a:	c7 85 1c f4 ff ff 9b 	movl   $0x8858d09b,-0xbe4(%ebp)
 8064e61:	d0 58 88 
 8064e64:	c7 85 20 f4 ff ff 13 	movl   $0x18eb013,-0xbe0(%ebp)
 8064e6b:	b0 8e 01 
 8064e6e:	c7 85 24 f4 ff ff 15 	movl   $0xad99bf15,-0xbdc(%ebp)
 8064e75:	bf 99 ad 
 8064e78:	c7 85 28 f4 ff ff 34 	movl   $0x8b4ee134,-0xbd8(%ebp)
 8064e7f:	e1 4e 8b 
 8064e82:	c7 85 2c f4 ff ff c2 	movl   $0x6a6f04c2,-0xbd4(%ebp)
 8064e89:	04 6f 6a 
 8064e8c:	c7 85 30 f4 ff ff 18 	movl   $0x1f25c18,-0xbd0(%ebp)
 8064e93:	5c f2 01 
 8064e96:	c7 85 34 f4 ff ff 6d 	movl   $0xec80176d,-0xbcc(%ebp)
 8064e9d:	17 80 ec 
 8064ea0:	c7 85 38 f4 ff ff c0 	movl   $0x97114cc0,-0xbc8(%ebp)
 8064ea7:	4c 11 97 
 8064eaa:	c7 85 3c f4 ff ff f9 	movl   $0x428562f9,-0xbc4(%ebp)
 8064eb1:	62 85 42 
 8064eb4:	c7 85 40 f4 ff ff 8f 	movl   $0x137798f,-0xbc0(%ebp)
 8064ebb:	79 37 01 
 8064ebe:	c7 85 44 f4 ff ff 48 	movl   $0x27a01d48,-0xbbc(%ebp)
 8064ec5:	1d a0 27 
 8064ec8:	c7 85 48 f4 ff ff f1 	movl   $0xfcd59ff1,-0xbb8(%ebp)
 8064ecf:	9f d5 fc 
 8064ed2:	c7 85 4c f4 ff ff b7 	movl   $0x1326bbb7,-0xbb4(%ebp)
 8064ed9:	bb 26 13 
 8064edc:	c7 85 50 f4 ff ff f3 	movl   $0x18557f3,-0xbb0(%ebp)
 8064ee3:	57 85 01 
 8064ee6:	c7 85 54 f4 ff ff 9a 	movl   $0x7188249a,-0xbac(%ebp)
 8064eed:	24 88 71 
 8064ef0:	c7 85 58 f4 ff ff ed 	movl   $0xfc0b07ed,-0xba8(%ebp)
 8064ef7:	07 0b fc 
 8064efa:	c7 85 5c f4 ff ff a5 	movl   $0xd7f06aa5,-0xba4(%ebp)
 8064f01:	6a f0 d7 
 8064f04:	c7 85 60 f4 ff ff ef 	movl   $0x1e6adef,-0xba0(%ebp)
 8064f0b:	ad e6 01 
 8064f0e:	c7 85 64 f4 ff ff e0 	movl   $0x66f516e0,-0xb9c(%ebp)
 8064f15:	16 f5 66 
 8064f18:	c7 85 68 f4 ff ff f4 	movl   $0xbd86e4f4,-0xb98(%ebp)
 8064f1f:	e4 86 bd 
 8064f22:	c7 85 6c f4 ff ff a7 	movl   $0xe6f642a7,-0xb94(%ebp)
 8064f29:	42 f6 e6 
 8064f2c:	c7 85 70 f4 ff ff b5 	movl   $0x1302cb5,-0xb90(%ebp)
 8064f33:	2c 30 01 
 8064f36:	c7 85 74 f4 ff ff 98 	movl   $0x80b25c98,-0xb8c(%ebp)
 8064f3d:	5c b2 80 
 8064f40:	c7 85 78 f4 ff ff 31 	movl   $0xace89e31,-0xb88(%ebp)
 8064f47:	9e e8 ac 
 8064f4a:	c7 85 7c f4 ff ff 51 	movl   $0x60b3d351,-0xb84(%ebp)
 8064f51:	d3 b3 60 
 8064f54:	c7 85 80 f4 ff ff e3 	movl   $0x17c37e3,-0xb80(%ebp)
 8064f5b:	37 7c 01 
 8064f5e:	c7 85 84 f4 ff ff be 	movl   $0xe0def3be,-0xb7c(%ebp)
 8064f65:	f3 de e0 
 8064f68:	c7 85 88 f4 ff ff bd 	movl   $0x1822c5bd,-0xb78(%ebp)
 8064f6f:	c5 22 18 
 8064f72:	c7 85 8c f4 ff ff 26 	movl   $0x38e0c826,-0xb74(%ebp)
 8064f79:	c8 e0 38 
 8064f7c:	c7 85 90 f4 ff ff dc 	movl   $0x1db45dc,-0xb70(%ebp)
 8064f83:	45 db 01 
 8064f86:	c7 85 94 f4 ff ff 57 	movl   $0xac8b5857,-0xb6c(%ebp)
 8064f8d:	58 8b ac 
 8064f90:	c7 85 98 f4 ff ff 96 	movl   $0xcf15bb96,-0xb68(%ebp)
 8064f97:	bb 15 cf 
 8064f9a:	c7 85 9c f4 ff ff 17 	movl   $0xa38c7d17,-0xb64(%ebp)
 8064fa1:	7d 8c a3 
 8064fa4:	c7 85 a0 f4 ff ff a9 	movl   $0x1290ba9,-0xb60(%ebp)
 8064fab:	0b 29 01 
 8064fae:	c7 85 a4 f4 ff ff 6d 	movl   $0x57ae2e6d,-0xb5c(%ebp)
 8064fb5:	2e ae 57 
 8064fb8:	c7 85 a8 f4 ff ff 7c 	movl   $0xc2db2a7c,-0xb58(%ebp)
 8064fbf:	2a db c2 
 8064fc2:	c7 85 ac f4 ff ff 5d 	movl   $0xc6f9c5d,-0xb54(%ebp)
 8064fc9:	9c 6f 0c 
 8064fcc:	c7 85 b0 f4 ff ff 94 	movl   $0x1734e94,-0xb50(%ebp)
 8064fd3:	4e 73 01 
 8064fd6:	c7 85 b4 f4 ff ff 08 	movl   $0x6d99ba08,-0xb4c(%ebp)
 8064fdd:	ba 99 6d 
 8064fe0:	c7 85 b8 f4 ff ff 1b 	movl   $0x3391f51b,-0xb48(%ebp)
 8064fe7:	f5 91 33 
 8064fea:	c7 85 bc f4 ff ff 75 	movl   $0xf8b8375,-0xb44(%ebp)
 8064ff1:	83 8b 0f 
 8064ff4:	c7 85 c0 f4 ff ff 39 	movl   $0x1d02239,-0xb40(%ebp)
 8064ffb:	22 d0 01 
 8064ffe:	c7 85 c4 f4 ff ff 45 	movl   $0x24801445,-0xb3c(%ebp)
 8065005:	14 80 24 
 8065008:	c7 85 c8 f4 ff ff 31 	movl   $0x403b3931,-0xb38(%ebp)
 806500f:	39 3b 40 
 8065012:	c7 85 cc f4 ff ff 29 	movl   $0xa9b73229,-0xb34(%ebp)
 8065019:	32 b7 a9 
 806501c:	c7 85 d0 f4 ff ff 63 	movl   $0x1221563,-0xb30(%ebp)
 8065023:	15 22 01 
 8065026:	c7 85 d4 f4 ff ff 56 	movl   $0x6da01956,-0xb2c(%ebp)
 806502d:	19 a0 6d 
 8065030:	c7 85 d8 f4 ff ff 7d 	movl   $0x904a077d,-0xb28(%ebp)
 8065037:	07 4a 90 
 806503a:	c7 85 dc f4 ff ff b3 	movl   $0x9424feb3,-0xb24(%ebp)
 8065041:	fe 24 94 
 8065044:	c7 85 e0 f4 ff ff bc 	movl   $0x16a9abc,-0xb20(%ebp)
 806504b:	9a 6a 01 
 806504e:	c7 85 e4 f4 ff ff ac 	movl   $0xc9081fac,-0xb1c(%ebp)
 8065055:	1f 08 c9 
 8065058:	c7 85 e8 f4 ff ff 5c 	movl   $0x745c895c,-0xb18(%ebp)
 806505f:	89 5c 74 
 8065062:	c7 85 ec f4 ff ff 60 	movl   $0xb92e3e60,-0xb14(%ebp)
 8065069:	3e 2e b9 
 806506c:	c7 85 f0 f4 ff ff 6b 	movl   $0x1c5416b,-0xb10(%ebp)
 8065073:	41 c5 01 
 8065076:	c7 85 f4 f4 ff ff cb 	movl   $0xfda513cb,-0xb0c(%ebp)
 806507d:	13 a5 fd 
 8065080:	c7 85 f8 f4 ff ff d9 	movl   $0x48b9d5d9,-0xb08(%ebp)
 8065087:	d5 b9 48 
 806508a:	c7 85 fc f4 ff ff fc 	movl   $0x53bce6fc,-0xb04(%ebp)
 8065091:	e6 bc 53 
 8065094:	c7 85 00 f5 ff ff e3 	movl   $0x11b48e3,-0xb00(%ebp)
 806509b:	48 1b 01 
 806509e:	c7 85 04 f5 ff ff be 	movl   $0x7d0e58be,-0xafc(%ebp)
 80650a5:	58 0e 7d 
 80650a8:	c7 85 08 f5 ff ff 50 	movl   $0x5ae84b50,-0xaf8(%ebp)
 80650af:	4b e8 5a 
 80650b2:	c7 85 0c f5 ff ff bb 	movl   $0x28ac20bb,-0xaf4(%ebp)
 80650b9:	20 ac 28 
 80650bc:	c7 85 10 f5 ff ff 1c 	movl   $0x1621b1c,-0xaf0(%ebp)
 80650c3:	1b 62 01 
 80650c6:	c7 85 14 f5 ff ff ee 	movl   $0x9c51eeee,-0xaec(%ebp)
 80650cd:	ee 51 9c 
 80650d0:	c7 85 18 f5 ff ff 24 	movl   $0x31a25e24,-0xae8(%ebp)
 80650d7:	5e a2 31 
 80650da:	c7 85 1c f5 ff ff ea 	movl   $0x32d728ea,-0xae4(%ebp)
 80650e1:	28 d7 32 
 80650e4:	c7 85 20 f5 ff ff e3 	movl   $0x1baa1e3,-0xae0(%ebp)
 80650eb:	a1 ba 01 
 80650ee:	c7 85 24 f5 ff ff 54 	movl   $0xe1b33554,-0xadc(%ebp)
 80650f5:	35 b3 e1 
 80650f8:	c7 85 28 f5 ff ff d6 	movl   $0x5f057ad6,-0xad8(%ebp)
 80650ff:	7a 05 5f 
 8065102:	c7 85 2c f5 ff ff 92 	movl   $0xffc67992,-0xad4(%ebp)
 8065109:	79 c6 ff 
 806510c:	c7 85 30 f5 ff ff 2d 	movl   $0x114a52d,-0xad0(%ebp)
 8065113:	a5 14 01 
 8065116:	c7 85 34 f5 ff ff aa 	movl   $0x9a2002aa,-0xacc(%ebp)
 806511d:	02 20 9a 
 8065120:	c7 85 38 f5 ff ff 8c 	movl   $0xf6c6d98c,-0xac8(%ebp)
 8065127:	d9 c6 f6 
 806512a:	c7 85 3c f5 ff ff f6 	movl   $0x7fb817f6,-0xac4(%ebp)
 8065131:	17 b8 7f 
 8065134:	c7 85 40 f5 ff ff 79 	movl   $0x159ce79,-0xac0(%ebp)
 806513b:	ce 59 01 
 806513e:	c7 85 44 f5 ff ff 54 	movl   $0xc0a80354,-0xabc(%ebp)
 8065145:	03 a8 c0 
 8065148:	c7 85 48 f5 ff ff ef 	movl   $0xb4788fef,-0xab8(%ebp)
 806514f:	8f 78 b4 
 8065152:	c7 85 4c f5 ff ff f4 	movl   $0xdfa61df4,-0xab4(%ebp)
 8065159:	1d a6 df 
 806515c:	c7 85 50 f5 ff ff 17 	movl   $0x1b04217,-0xab0(%ebp)
 8065163:	42 b0 01 
 8065166:	c7 85 54 f5 ff ff 14 	movl   $0xd8690214,-0xaac(%ebp)
 806516d:	02 69 d8 
 8065170:	c7 85 58 f5 ff ff f5 	movl   $0xf0cb59f5,-0xaa8(%ebp)
 8065177:	59 cb f0 
 806517a:	c7 85 5c f5 ff ff b8 	movl   $0xebc7d2b8,-0xaa4(%ebp)
 8065181:	d2 c7 eb 
 8065184:	c7 85 60 f5 ff ff 4e 	movl   $0x10e294e,-0xaa0(%ebp)
 806518b:	29 0e 01 
 806518e:	c7 85 64 f5 ff ff 9a 	movl   $0x4e83429a,-0xa9c(%ebp)
 8065195:	42 83 4e 
 8065198:	c7 85 68 f5 ff ff 73 	movl   $0x2cfe3073,-0xa98(%ebp)
 806519f:	30 fe 2c 
 80651a2:	c7 85 6c f5 ff ff 67 	movl   $0xa6b9c767,-0xa94(%ebp)
 80651a9:	c7 b9 a6 
 80651ac:	c7 85 70 f5 ff ff a2 	movl   $0x151b3a2,-0xa90(%ebp)
 80651b3:	b3 51 01 
 80651b6:	c7 85 74 f5 ff ff 40 	movl   $0x22241340,-0xa8c(%ebp)
 80651bd:	13 24 22 
 80651c0:	c7 85 78 f5 ff ff 90 	movl   $0xf83dbc90,-0xa88(%ebp)
 80651c7:	bc 3d f8 
 80651ca:	c7 85 7c f5 ff ff 40 	movl   $0x50683940,-0xa84(%ebp)
 80651d1:	39 68 50 
 80651d4:	c7 85 80 f5 ff ff 8b 	movl   $0x1a6208b,-0xa80(%ebp)
 80651db:	20 a6 01 
 80651de:	c7 85 84 f5 ff ff 08 	movl   $0x15568c08,-0xa7c(%ebp)
 80651e5:	8c 56 15 
 80651e8:	c7 85 88 f5 ff ff da 	movl   $0x9b2695da,-0xa78(%ebp)
 80651ef:	95 26 9b 
 80651f2:	c7 85 8c f5 ff ff c8 	movl   $0x124123c8,-0xa74(%ebp)
 80651f9:	23 41 12 
 80651fc:	c7 85 90 f5 ff ff 57 	movl   $0x107d457,-0xa70(%ebp)
 8065203:	d4 07 01 
 8065206:	c7 85 94 f5 ff ff 0a 	movl   $0x9aac2f0a,-0xa6c(%ebp)
 806520d:	2f ac 9a 
 8065210:	c7 85 98 f5 ff ff 50 	movl   $0xc1f03b50,-0xa68(%ebp)
 8065217:	3b f0 c1 
 806521a:	c7 85 9c f5 ff ff ba 	movl   $0xd6d16cba,-0xa64(%ebp)
 8065221:	6c d1 d6 
 8065224:	c7 85 a0 f5 ff ff 6c 	movl   $0x149c96c,-0xa60(%ebp)
 806522b:	c9 49 01 
 806522e:	c7 85 a4 f5 ff ff cd 	movl   $0xc1573acd,-0xa5c(%ebp)
 8065235:	3a 57 c1 
 8065238:	c7 85 a8 f5 ff ff 24 	movl   $0x726c4a24,-0xa58(%ebp)
 806523f:	4a 6c 72 
 8065242:	c7 85 ac f5 ff ff e9 	movl   $0xc85c7e9,-0xa54(%ebp)
 8065249:	c7 85 0c 
 806524c:	c7 85 b0 f5 ff ff c8 	movl   $0x19c3bc8,-0xa50(%ebp)
 8065253:	3b 9c 01 
 8065256:	c7 85 b4 f5 ff ff c0 	movl   $0xf8d684c0,-0xa4c(%ebp)
 806525d:	84 d6 f8 
 8065260:	c7 85 b8 f5 ff ff 56 	movl   $0xe783ae56,-0xa48(%ebp)
 8065267:	ae 83 e7 
 806526a:	c7 85 bc f5 ff ff f1 	movl   $0x7d39cf1,-0xa44(%ebp)
 8065271:	9c d3 07 
 8065274:	c7 85 c0 f5 ff ff 5d 	movl   $0x101a55d,-0xa40(%ebp)
 806527b:	a5 01 01 
 806527e:	c7 85 c4 f5 ff ff f0 	movl   $0xb70c25f0,-0xa3c(%ebp)
 8065285:	25 0c b7 
 8065288:	c7 85 c8 f5 ff ff ec 	movl   $0x616499ec,-0xa38(%ebp)
 806528f:	99 64 61 
 8065292:	c7 85 cc f5 ff ff 2e 	movl   $0x49c8842e,-0xa34(%ebp)
 8065299:	84 c8 49 
 806529c:	c7 85 d0 f5 ff ff b4 	movl   $0x1420eb4,-0xa30(%ebp)
 80652a3:	0e 42 01 
 80652a6:	c7 85 d4 f5 ff ff 6c 	movl   $0xe4cf2f6c,-0xa2c(%ebp)
 80652ad:	2f cf e4 
 80652b0:	c7 85 d8 f5 ff ff 67 	movl   $0xf9bdc067,-0xa28(%ebp)
 80652b7:	c0 bd f9 
 80652ba:	c7 85 dc f5 ff ff 39 	movl   $0x5c3aa539,-0xa24(%ebp)
 80652c1:	a5 3a 5c 
 80652c4:	c7 85 e0 f5 ff ff 61 	movl   $0x1929261,-0xa20(%ebp)
 80652cb:	92 92 01 
 80652ce:	c7 85 e4 f5 ff ff 47 	movl   $0xde02fb47,-0xa1c(%ebp)
 80652d5:	fb 02 de 
 80652d8:	c7 85 e8 f5 ff ff 81 	movl   $0x782d3081,-0xa18(%ebp)
 80652df:	30 2d 78 
 80652e2:	c7 85 ec f5 ff ff 88 	movl   $0xb3494e88,-0xa14(%ebp)
 80652e9:	4e 49 b3 
 80652ec:	c7 85 f0 f5 ff ff f9 	movl   $0x1f736f9,-0xa10(%ebp)
 80652f3:	36 f7 01 
 80652f6:	c7 85 f4 f5 ff ff 0c 	movl   $0x2ac1dd0c,-0xa0c(%ebp)
 80652fd:	dd c1 2a 
 8065300:	c7 85 f8 f5 ff ff 51 	movl   $0x4b1c3e51,-0xa08(%ebp)
 8065307:	3e 1c 4b 
 806530a:	c7 85 fc f5 ff ff 15 	movl   $0x100dd115,-0xa04(%ebp)
 8065311:	d1 0d 10 
 8065314:	c7 85 00 f6 ff ff 5c 	movl   $0x13a825c,-0xa00(%ebp)
 806531b:	82 3a 01 
 806531e:	c7 85 04 f6 ff ff 4f 	movl   $0x7572544f,-0x9fc(%ebp)
 8065325:	54 72 75 
 8065328:	c7 85 08 f6 ff ff e5 	movl   $0x9de34de5,-0x9f8(%ebp)
 806532f:	4d e3 9d 
 8065332:	c7 85 0c f6 ff ff 5a 	movl   $0x1411455a,-0x9f4(%ebp)
 8065339:	45 11 14 
 806533c:	c7 85 10 f6 ff ff f3 	movl   $0x18922f3,-0x9f0(%ebp)
 8065343:	22 89 01 
 8065346:	c7 85 14 f6 ff ff 63 	movl   $0xd2cee963,-0x9ec(%ebp)
 806534d:	e9 ce d2 
 8065350:	c7 85 18 f6 ff ff 5e 	movl   $0x455c215e,-0x9e8(%ebp)
 8065357:	21 5c 45 
 806535a:	c7 85 1c f6 ff ff b1 	movl   $0xd91596b1,-0x9e4(%ebp)
 8065361:	96 15 d9 
 8065364:	c7 85 20 f6 ff ff af 	movl   $0x1eb6baf,-0x9e0(%ebp)
 806536b:	6b eb 01 
 806536e:	c7 85 24 f6 ff ff de 	movl   $0x43c151de,-0x9dc(%ebp)
 8065375:	51 c1 43 
 8065378:	c7 85 28 f6 ff ff db 	movl   $0xcb5994db,-0x9d8(%ebp)
 806537f:	94 59 cb 
 8065382:	c7 85 2c f6 ff ff 2e 	movl   $0xe7ad7e2e,-0x9d4(%ebp)
 8065389:	7e ad e7 
 806538c:	c7 85 30 f6 ff ff 4d 	movl   $0x133234d,-0x9d0(%ebp)
 8065393:	23 33 01 
 8065396:	c7 85 34 f6 ff ff 55 	movl   $0x14b1a655,-0x9cc(%ebp)
 806539d:	a6 b1 14 
 80653a0:	c7 85 38 f6 ff ff 12 	movl   $0x7e2ffa12,-0x9c8(%ebp)
 80653a7:	fa 2f 7e 
 80653aa:	c7 85 3c f6 ff ff ba 	movl   $0x6198ddba,-0x9c4(%ebp)
 80653b1:	dd 98 61 
 80653b4:	c7 85 40 f6 ff ff 21 	movl   $0x17fec21,-0x9c0(%ebp)
 80653bb:	ec 7f 01 
 80653be:	c7 85 44 f6 ff ff eb 	movl   $0x99de0feb,-0x9bc(%ebp)
 80653c5:	0f de 99 
 80653c8:	c7 85 48 f6 ff ff 96 	movl   $0x1dbbf896,-0x9b8(%ebp)
 80653cf:	f8 bb 1d 
 80653d2:	c7 85 4c f6 ff ff 29 	movl   $0xb9ff1529,-0x9b4(%ebp)
 80653d9:	15 ff b9 
 80653dc:	c7 85 50 f6 ff ff 29 	movl   $0x1dfe729,-0x9b0(%ebp)
 80653e3:	e7 df 01 
 80653e6:	c7 85 54 f6 ff ff f3 	movl   $0x202ac9f3,-0x9ac(%ebp)
 80653ed:	c9 2a 20 
 80653f0:	c7 85 58 f6 ff ff 5e 	movl   $0xb2957b5e,-0x9a8(%ebp)
 80653f7:	7b 95 b2 
 80653fa:	c7 85 5c f6 ff ff 39 	movl   $0x143f6d39,-0x9a4(%ebp)
 8065401:	6d 3f 14 
 8065404:	c7 85 60 f6 ff ff 7a 	movl   $0x12bf07a,-0x9a0(%ebp)
 806540b:	f0 2b 01 
 806540e:	c7 85 64 f6 ff ff 6f 	movl   $0xa8357c6f,-0x99c(%ebp)
 8065415:	7c 35 a8 
 8065418:	c7 85 68 f6 ff ff 35 	movl   $0x1f3ada35,-0x998(%ebp)
 806541f:	da 3a 1f 
 8065422:	c7 85 6c f6 ff ff 88 	movl   $0x994f4888,-0x994(%ebp)
 8065429:	48 4f 99 
 806542c:	c7 85 70 f6 ff ff 98 	movl   $0x176ec98,-0x990(%ebp)
 8065433:	ec 76 01 
 8065436:	c7 85 74 f6 ff ff 8b 	movl   $0x1242db8b,-0x98c(%ebp)
 806543d:	db 42 12 
 8065440:	c7 85 78 f6 ff ff c3 	movl   $0x270990c3,-0x988(%ebp)
 8065447:	90 09 27 
 806544a:	c7 85 7c f6 ff ff aa 	movl   $0xbfa31aaa,-0x984(%ebp)
 8065451:	1a a3 bf 
 8065454:	c7 85 80 f6 ff ff be 	movl   $0x1d4a7be,-0x980(%ebp)
 806545b:	a7 d4 01 
 806545e:	c7 85 84 f6 ff ff 37 	movl   $0xeb69c937,-0x97c(%ebp)
 8065465:	c9 69 eb 
 8065468:	c7 85 88 f6 ff ff 79 	movl   $0x5865fa79,-0x978(%ebp)
 806546f:	fa 65 58 
 8065472:	c7 85 8c f6 ff ff aa 	movl   $0x37c5f0aa,-0x974(%ebp)
 8065479:	f0 c5 37 
 806547c:	c7 85 90 f6 ff ff d7 	movl   $0x124e8d7,-0x970(%ebp)
 8065483:	e8 24 01 
 8065486:	c7 85 94 f6 ff ff 85 	movl   $0x66443b85,-0x96c(%ebp)
 806548d:	3b 44 66 
 8065490:	c7 85 98 f6 ff ff 18 	movl   $0xee7f7918,-0x968(%ebp)
 8065497:	79 7f ee 
 806549a:	c7 85 9c f6 ff ff d4 	movl   $0x5b76cd4,-0x964(%ebp)
 80654a1:	6c b7 05 
 80654a4:	c7 85 a0 f6 ff ff 0d 	movl   $0x16e230d,-0x960(%ebp)
 80654ab:	23 6e 01 
 80654ae:	c7 85 a4 f6 ff ff 66 	movl   $0x7fd54a66,-0x95c(%ebp)
 80654b5:	4a d5 7f 
 80654b8:	c7 85 a8 f6 ff ff 5e 	movl   $0x2a1f575e,-0x958(%ebp)
 80654bf:	57 1f 2a 
 80654c2:	c7 85 ac f6 ff ff 0a 	movl   $0x4725480a,-0x954(%ebp)
 80654c9:	48 25 47 
 80654cc:	c7 85 b0 f6 ff ff d0 	movl   $0x1c9abd0,-0x950(%ebp)
 80654d3:	ab c9 01 
 80654d6:	c7 85 b4 f6 ff ff 80 	movl   $0xfe54e80,-0x94c(%ebp)
 80654dd:	4e e5 0f 
 80654e0:	c7 85 b8 f6 ff ff 9b 	movl   $0x5a53969b,-0x948(%ebp)
 80654e7:	96 53 5a 
 80654ea:	c7 85 bc f6 ff ff 06 	movl   $0x2c774d06,-0x944(%ebp)
 80654f1:	4d 77 2c 
 80654f4:	c7 85 c0 f6 ff ff 62 	movl   $0x11e0b62,-0x940(%ebp)
 80654fb:	0b 1e 01 
 80654fe:	c7 85 c4 f6 ff ff 20 	movl   $0xd3dea220,-0x93c(%ebp)
 8065505:	a2 de d3 
 8065508:	c7 85 c8 f6 ff ff 41 	movl   $0xf0e87c41,-0x938(%ebp)
 806550f:	7c e8 f0 
 8065512:	c7 85 cc f6 ff ff 47 	movl   $0xb7952047,-0x934(%ebp)
 8065519:	20 95 b7 
 806551c:	c7 85 d0 f6 ff ff 3a 	movl   $0x1658e3a,-0x930(%ebp)
 8065523:	8e 65 01 
 8065526:	c7 85 d4 f6 ff ff a8 	movl   $0x48d64aa8,-0x92c(%ebp)
 806552d:	4a d6 48 
 8065530:	c7 85 d8 f6 ff ff 52 	movl   $0xed229b52,-0x928(%ebp)
 8065537:	9b 22 ed 
 806553a:	c7 85 dc f6 ff ff 59 	movl   $0x657a6859,-0x924(%ebp)
 8065541:	68 7a 65 
 8065544:	c7 85 e0 f6 ff ff c9 	movl   $0x1bef1c9,-0x920(%ebp)
 806554b:	f1 be 01 
 806554e:	c7 85 e4 f6 ff ff a9 	movl   $0x6d85eea9,-0x91c(%ebp)
 8065555:	ee 85 6d 
 8065558:	c7 85 e8 f6 ff ff 13 	movl   $0x3435a113,-0x918(%ebp)
 806555f:	a1 35 34 
 8065562:	c7 85 ec f6 ff ff 38 	movl   $0xdf6c8138,-0x914(%ebp)
 8065569:	81 6c df 
 806556c:	c7 85 f0 f6 ff ff 1d 	movl   $0x117571d,-0x910(%ebp)
 8065573:	57 17 01 
 8065576:	c7 85 f4 f6 ff ff 53 	movl   $0x48e76a53,-0x90c(%ebp)
 806557d:	6a e7 48 
 8065580:	c7 85 f8 f6 ff ff 58 	movl   $0x41430958,-0x908(%ebp)
 8065587:	09 43 41 
 806558a:	c7 85 fc f6 ff ff 86 	movl   $0x5747a186,-0x904(%ebp)
 8065591:	a1 47 57 
 8065594:	c7 85 00 f7 ff ff e5 	movl   $0x15d2ce5,-0x900(%ebp)
 806559b:	2c 5d 01 
 806559e:	c7 85 04 f7 ff ff e8 	movl   $0x5b2144e8,-0x8fc(%ebp)
 80655a5:	44 21 5b 
 80655a8:	c7 85 08 f7 ff ff ae 	movl   $0xd193cbae,-0x8f8(%ebp)
 80655af:	cb 93 d1 
 80655b2:	c7 85 0c f7 ff ff e7 	movl   $0xad1989e7,-0x8f4(%ebp)
 80655b9:	89 19 ad 
 80655bc:	c7 85 10 f7 ff ff 1e 	movl   $0x1b4781e,-0x8f0(%ebp)
 80655c3:	78 b4 01 
 80655c6:	c7 85 14 f7 ff ff 11 	movl   $0xf8f4cb11,-0x8ec(%ebp)
 80655cd:	cb f4 f8 
 80655d0:	c7 85 18 f7 ff ff 4c 	movl   $0xe2fc5f4c,-0x8e8(%ebp)
 80655d7:	5f fc e2 
 80655da:	c7 85 1c f7 ff ff 30 	movl   $0x2c2ff630,-0x8e4(%ebp)
 80655e1:	f6 2f 2c 
 80655e4:	c7 85 20 f7 ff ff 13 	movl   $0x110cb13,-0x8e0(%ebp)
 80655eb:	cb 10 01 
 80655ee:	c7 85 24 f7 ff ff d5 	movl   $0x3731fdd5,-0x8dc(%ebp)
 80655f5:	fd 31 37 
 80655f8:	c7 85 28 f7 ff ff 20 	movl   $0x1bbb7720,-0x8d8(%ebp)
 80655ff:	77 bb 1b 
 8065602:	c7 85 2c f7 ff ff bd 	movl   $0xf73bf3bd,-0x8d4(%ebp)
 8065609:	f3 3b f7 
 806560c:	c7 85 30 f7 ff ff d7 	movl   $0x154fdd7,-0x8d0(%ebp)
 8065613:	fd 54 01 
 8065616:	c7 85 34 f7 ff ff 4a 	movl   $0x44fe7d4a,-0x8cc(%ebp)
 806561d:	7d fe 44 
 8065620:	c7 85 38 f7 ff ff e8 	movl   $0x62aa54e8,-0x8c8(%ebp)
 8065627:	54 aa 62 
 806562a:	c7 85 3c f7 ff ff ac 	movl   $0xf50af0ac,-0x8c4(%ebp)
 8065631:	f0 0a f5 
 8065634:	c7 85 40 f7 ff ff 4d 	movl   $0x1aa3d4d,-0x8c0(%ebp)
 806563b:	3d aa 01 
 806563e:	c7 85 44 f7 ff ff 4e 	movl   $0x2b1f0e4e,-0x8bc(%ebp)
 8065645:	0e 1f 2b 
 8065648:	c7 85 48 f7 ff ff 11 	movl   $0xbdaa7511,-0x8b8(%ebp)
 806564f:	75 aa bd 
 8065652:	c7 85 4c f7 ff ff 6b 	movl   $0xb926d66b,-0x8b4(%ebp)
 8065659:	d6 26 b9 
 806565c:	c7 85 50 f7 ff ff 50 	movl   $0x10a6650,-0x8b0(%ebp)
 8065663:	66 0a 01 
 8065666:	c7 85 54 f7 ff ff e2 	movl   $0x75e6d1e2,-0x8ac(%ebp)
 806566d:	d1 e6 75 
 8065670:	c7 85 58 f7 ff ff 55 	movl   $0xad151255,-0x8a8(%ebp)
 8065677:	12 15 ad 
 806567a:	c7 85 5c f7 ff ff 06 	movl   $0xe7708c06,-0x8a4(%ebp)
 8065681:	8c 70 e7 
 8065684:	c7 85 60 f7 ff ff e4 	movl   $0x14cffe4,-0x8a0(%ebp)
 806568b:	ff 4c 01 
 806568e:	c7 85 64 f7 ff ff 5b 	movl   $0xd360865b,-0x89c(%ebp)
 8065695:	86 60 d3 
 8065698:	c7 85 68 f7 ff ff ea 	movl   $0x585a56ea,-0x898(%ebp)
 806569f:	56 5a 58 
 80656a2:	c7 85 6c f7 ff ff 08 	movl   $0x214caf08,-0x894(%ebp)
 80656a9:	af 4c 21 
 80656ac:	c7 85 70 f7 ff ff de 	movl   $0x1a03fde,-0x890(%ebp)
 80656b3:	3f a0 01 
 80656b6:	c7 85 74 f7 ff ff f8 	movl   $0xc41c53f8,-0x88c(%ebp)
 80656bd:	53 1c c4 
 80656c0:	c7 85 78 f7 ff ff 52 	movl   $0x37387652,-0x888(%ebp)
 80656c7:	76 38 37 
 80656ca:	c7 85 7c f7 ff ff 65 	movl   $0xd4cfed65,-0x884(%ebp)
 80656d1:	ed cf d4 
 80656d4:	c7 85 80 f7 ff ff ea 	movl   $0x10427ea,-0x880(%ebp)
 80656db:	27 04 01 
 80656de:	c7 85 84 f7 ff ff f7 	movl   $0x752368f7,-0x87c(%ebp)
 80656e5:	68 23 75 
 80656e8:	c7 85 88 f7 ff ff e7 	movl   $0x850693e7,-0x878(%ebp)
 80656ef:	93 06 85 
 80656f2:	c7 85 8c f7 ff ff be 	movl   $0x8a03e8be,-0x874(%ebp)
 80656f9:	e8 03 8a 
 80656fc:	c7 85 90 f7 ff ff e5 	movl   $0x14531e5,-0x870(%ebp)
 8065703:	31 45 01 
 8065706:	c7 85 94 f7 ff ff 34 	movl   $0x526c4334,-0x86c(%ebp)
 806570d:	43 6c 52 
 8065710:	c7 85 98 f7 ff ff e1 	movl   $0x264838e1,-0x868(%ebp)
 8065717:	38 48 26 
 806571a:	c7 85 9c f7 ff ff ee 	movl   $0xec84e2ee,-0x864(%ebp)
 8065721:	e2 84 ec 
 8065724:	c7 85 a0 f7 ff ff 5e 	movl   $0x1967e5e,-0x860(%ebp)
 806572b:	7e 96 01 
 806572e:	c7 85 a4 f7 ff ff 02 	movl   $0xa7075402,-0x85c(%ebp)
 8065735:	54 07 a7 
 8065738:	c7 85 a8 f7 ff ff 19 	movl   $0xafda4719,-0x858(%ebp)
 806573f:	47 da af 
 8065742:	c7 85 ac f7 ff ff a9 	movl   $0xa7a61ba9,-0x854(%ebp)
 8065749:	1b a6 a7 
 806574c:	c7 85 b0 f7 ff ff f6 	movl   $0x1fc1df6,-0x850(%ebp)
 8065753:	1d fc 01 
 8065756:	c7 85 b4 f7 ff ff 81 	movl   $0x8649481,-0x84c(%ebp)
 806575d:	94 64 08 
 8065760:	c7 85 b8 f7 ff ff 70 	movl   $0xde86c70,-0x848(%ebp)
 8065767:	6c e8 0d 
 806576a:	c7 85 bc f7 ff ff 4a 	movl   $0x28c7d14a,-0x844(%ebp)
 8065771:	d1 c7 28 
 8065774:	c7 85 c0 f7 ff ff ba 	movl   $0x13d92ba,-0x840(%ebp)
 806577b:	92 3d 01 
 806577e:	c7 85 c4 f7 ff ff a1 	movl   $0xa7db9a1,-0x83c(%ebp)
 8065785:	b9 7d 0a 
 8065788:	c7 85 c8 f7 ff ff 8c 	movl   $0x9162878c,-0x838(%ebp)
 806578f:	87 62 91 
 8065792:	c7 85 cc f7 ff ff 9c 	movl   $0xb2f9c59c,-0x834(%ebp)
 8065799:	c5 f9 b2 
 806579c:	c7 85 d0 f7 ff ff 68 	movl   $0x18cf768,-0x830(%ebp)
 80657a3:	f7 8c 01 
 80657a6:	c7 85 d4 f7 ff ff 0a 	movl   $0xd1d280a,-0x82c(%ebp)
 80657ad:	28 1d 0d 
 80657b0:	c7 85 d8 f7 ff ff 6f 	movl   $0xb5bb296f,-0x828(%ebp)
 80657b7:	29 bb b5 
 80657ba:	c7 85 dc f7 ff ff 03 	movl   $0xdfb83703,-0x824(%ebp)
 80657c1:	37 b8 df 
 80657c4:	c7 85 e0 f7 ff ff 42 	movl   $0x1f03542,-0x820(%ebp)
 80657cb:	35 f0 01 
 80657ce:	c7 85 e4 f7 ff ff 06 	movl   $0x68323906,-0x81c(%ebp)
 80657d5:	39 32 68 
 80657d8:	c7 85 e8 f7 ff ff e5 	movl   $0x5194f9e5,-0x818(%ebp)
 80657df:	f9 94 51 
 80657e2:	c7 85 ec f7 ff ff 62 	movl   $0xcbd32262,-0x814(%ebp)
 80657e9:	22 d3 cb 
 80657ec:	c7 85 f0 f7 ff ff 49 	movl   $0x1362149,-0x810(%ebp)
 80657f3:	21 36 01 
 80657f6:	c7 85 f4 f7 ff ff 47 	movl   $0xc23ec747,-0x80c(%ebp)
 80657fd:	c7 3e c2 
 8065800:	c7 85 f8 f7 ff ff 5e 	movl   $0xe5fa385e,-0x808(%ebp)
 8065807:	38 fa e5 
 806580a:	c7 85 fc f7 ff ff fa 	movl   $0x3ec7eafa,-0x804(%ebp)
 8065811:	ea c7 3e 
 8065814:	c7 85 00 f8 ff ff 9c 	movl   $0x183a99c,-0x800(%ebp)
 806581b:	a9 83 01 
 806581e:	c7 85 04 f8 ff ff 19 	movl   $0x72ce7919,-0x7fc(%ebp)
 8065825:	79 ce 72 
 8065828:	c7 85 08 f8 ff ff 76 	movl   $0x9f78c676,-0x7f8(%ebp)
 806582f:	c6 78 9f 
 8065832:	c7 85 0c f8 ff ff b9 	movl   $0x4e79e5b9,-0x7f4(%ebp)
 8065839:	e5 79 4e 
 806583c:	c7 85 10 f8 ff ff 03 	movl   $0x1e49403,-0x7f0(%ebp)
 8065843:	94 e4 01 
 8065846:	c7 85 14 f8 ff ff b0 	movl   $0x7c10bb0,-0x7ec(%ebp)
 806584d:	0b c1 07 
 8065850:	c7 85 18 f8 ff ff 0a 	movl   $0x3ab7c0a,-0x7e8(%ebp)
 8065857:	7c ab 03 
 806585a:	c7 85 1c f8 ff ff 94 	movl   $0x110c2f94,-0x7e4(%ebp)
 8065861:	2f 0c 11 
 8065864:	c7 85 20 f8 ff ff 82 	movl   $0x12edc82,-0x7e0(%ebp)
 806586b:	dc 2e 01 
 806586e:	c7 85 24 f8 ff ff 9c 	movl   $0x89b14e9c,-0x7dc(%ebp)
 8065875:	4e b1 89 
 8065878:	c7 85 28 f8 ff ff 0c 	movl   $0x4965b0c,-0x7d8(%ebp)
 806587f:	5b 96 04 
 8065882:	c7 85 2c f8 ff ff 79 	movl   $0x954f3b79,-0x7d4(%ebp)
 8065889:	3b 4f 95 
 806588c:	c7 85 30 f8 ff ff a2 	movl   $0x17a93a2,-0x7d0(%ebp)
 8065893:	93 7a 01 
 8065896:	c7 85 34 f8 ff ff 43 	movl   $0xac1da243,-0x7cc(%ebp)
 806589d:	a2 1d ac 
 80658a0:	c7 85 38 f8 ff ff cf 	movl   $0x45bbf1cf,-0x7c8(%ebp)
 80658a7:	f1 bb 45 
 80658aa:	c7 85 3c f8 ff ff 57 	movl   $0x3aa30a57,-0x7c4(%ebp)
 80658b1:	0a a3 3a 
 80658b4:	c7 85 40 f8 ff ff 8b 	movl   $0x1d9388b,-0x7c0(%ebp)
 80658bb:	38 d9 01 
 80658be:	c7 85 44 f8 ff ff 6a 	movl   $0xcb92856a,-0x7bc(%ebp)
 80658c5:	85 92 cb 
 80658c8:	c7 85 48 f8 ff ff 21 	movl   $0x8b957721,-0x7b8(%ebp)
 80658cf:	77 95 8b 
 80658d2:	c7 85 4c f8 ff ff 76 	movl   $0x4a5e676,-0x7b4(%ebp)
 80658d9:	e6 a5 04 
 80658dc:	c7 85 50 f8 ff ff 57 	movl   $0x127c357,-0x7b0(%ebp)
 80658e3:	c3 27 01 
 80658e6:	c7 85 54 f8 ff ff c4 	movl   $0x3e7726c4,-0x7ac(%ebp)
 80658ed:	26 77 3e 
 80658f0:	c7 85 58 f8 ff ff ea 	movl   $0x2e7ad4ea,-0x7a8(%ebp)
 80658f7:	d4 7a 2e 
 80658fa:	c7 85 5c f8 ff ff 14 	movl   $0xc5cf6014,-0x7a4(%ebp)
 8065901:	60 cf c5 
 8065904:	c7 85 60 f8 ff ff 2c 	movl   $0x171b42c,-0x7a0(%ebp)
 806590b:	b4 71 01 
 806590e:	c7 85 64 f8 ff ff 75 	movl   $0xce14f075,-0x79c(%ebp)
 8065915:	f0 14 ce 
 8065918:	c7 85 68 f8 ff ff 24 	movl   $0x3a198a24,-0x798(%ebp)
 806591f:	8a 19 3a 
 8065922:	c7 85 6c f8 ff ff 19 	movl   $0xf7433819,-0x794(%ebp)
 8065929:	38 43 f7 
 806592c:	c7 85 70 f8 ff ff 37 	movl   $0x1ce2137,-0x790(%ebp)
 8065933:	21 ce 01 
 8065936:	c7 85 74 f8 ff ff 49 	movl   $0xcd1649,-0x78c(%ebp)
 806593d:	16 cd 00 
 8065940:	c7 85 78 f8 ff ff 57 	movl   $0xc44ff657,-0x788(%ebp)
 8065947:	f6 4f c4 
 806594a:	c7 85 7c f8 ff ff 0f 	movl   $0xfa8a030f,-0x784(%ebp)
 8065951:	03 8a fa 
 8065954:	c7 85 80 f8 ff ff c2 	movl   $0x120d4c2,-0x780(%ebp)
 806595b:	d4 20 01 
 806595e:	c7 85 84 f8 ff ff db 	movl   $0xc1005bdb,-0x77c(%ebp)
 8065965:	5b 00 c1 
 8065968:	c7 85 88 f8 ff ff ec 	movl   $0xb563f3ec,-0x778(%ebp)
 806596f:	f3 63 b5 
 8065972:	c7 85 8c f8 ff ff d3 	movl   $0xb92c83d3,-0x774(%ebp)
 8065979:	83 2c b9 
 806597c:	c7 85 90 f8 ff ff f3 	movl   $0x16909f3,-0x770(%ebp)
 8065983:	09 69 01 
 8065986:	c7 85 94 f8 ff ff d2 	movl   $0xf14072d2,-0x76c(%ebp)
 806598d:	72 40 f1 
 8065990:	c7 85 98 f8 ff ff e7 	movl   $0xa2bcf0e7,-0x768(%ebp)
 8065997:	f0 bc a2 
 806599a:	c7 85 9c f8 ff ff c8 	movl   $0xa777a4c8,-0x764(%ebp)
 80659a1:	a4 77 a7 
 80659a4:	c7 85 a0 f8 ff ff 70 	movl   $0x1c34c70,-0x760(%ebp)
 80659ab:	4c c3 01 
 80659ae:	c7 85 a4 f8 ff ff c3 	movl   $0xf6c847c3,-0x75c(%ebp)
 80659b5:	47 c8 f6 
 80659b8:	c7 85 a8 f8 ff ff 90 	movl   $0x65b61690,-0x758(%ebp)
 80659bf:	16 b6 65 
 80659c2:	c7 85 ac f8 ff ff fd 	movl   $0x68aac6fd,-0x754(%ebp)
 80659c9:	c6 aa 68 
 80659cc:	c7 85 b0 f8 ff ff c6 	movl   $0x11a0fc6,-0x750(%ebp)
 80659d3:	0f 1a 01 
 80659d6:	c7 85 b4 f8 ff ff b4 	movl   $0x347a59b4,-0x74c(%ebp)
 80659dd:	59 7a 34 
 80659e0:	c7 85 b8 f8 ff ff 35 	movl   $0xbf239c35,-0x748(%ebp)
 80659e7:	9c 23 bf 
 80659ea:	c7 85 bc f8 ff ff bc 	movl   $0x2d578bc,-0x744(%ebp)
 80659f1:	78 d5 02 
 80659f4:	c7 85 c0 f8 ff ff b8 	movl   $0x16093b8,-0x740(%ebp)
 80659fb:	93 60 01 
 80659fe:	c7 85 c4 f8 ff ff 21 	movl   $0x8198f021,-0x73c(%ebp)
 8065a05:	f0 98 81 
 8065a08:	c7 85 c8 f8 ff ff 42 	movl   $0xeeec8342,-0x738(%ebp)
 8065a0f:	83 ec ee 
 8065a12:	c7 85 cc f8 ff ff eb 	movl   $0x38ad6eb,-0x734(%ebp)
 8065a19:	d6 8a 03 
 8065a1c:	c7 85 d0 f8 ff ff a6 	movl   $0x1b8b8a6,-0x730(%ebp)
 8065a23:	b8 b8 01 
 8065a26:	c7 85 d4 f8 ff ff 15 	movl   $0x90ff9615,-0x72c(%ebp)
 8065a2d:	96 ff 90 
 8065a30:	c7 85 d8 f8 ff ff 09 	movl   $0x7553d209,-0x728(%ebp)
 8065a37:	d2 53 75 
 8065a3a:	c7 85 dc f8 ff ff 53 	movl   $0xc236c653,-0x724(%ebp)
 8065a41:	c6 36 c2 
 8065a44:	c7 85 e0 f8 ff ff 67 	movl   $0x1137367,-0x720(%ebp)
 8065a4b:	73 13 01 
 8065a4e:	c7 85 e4 f8 ff ff 9a 	movl   $0xf53f7b9a,-0x71c(%ebp)
 8065a55:	7b 3f f5 
 8065a58:	c7 85 e8 f8 ff ff 8b 	movl   $0x52a8c68b,-0x718(%ebp)
 8065a5f:	c6 a8 52 
 8065a62:	c7 85 ec f8 ff ff e8 	movl   $0xb2c477e8,-0x714(%ebp)
 8065a69:	77 c4 b2 
 8065a6c:	c7 85 f0 f8 ff ff 41 	movl   $0x1585041,-0x710(%ebp)
 8065a73:	50 58 01 
 8065a76:	c7 85 f4 f8 ff ff 81 	movl   $0xf28f5a81,-0x70c(%ebp)
 8065a7d:	5a 8f f2 
 8065a80:	c7 85 f8 f8 ff ff 2e 	movl   $0x6752f82e,-0x708(%ebp)
 8065a87:	f8 52 67 
 8065a8a:	c7 85 fc f8 ff ff e2 	movl   $0x1f7595e2,-0x704(%ebp)
 8065a91:	95 75 1f 
 8065a94:	c7 85 00 f9 ff ff 52 	movl   $0x1ae6452,-0x700(%ebp)
 8065a9b:	64 ae 01 
 8065a9e:	c7 85 04 f9 ff ff 90 	movl   $0x57999890,-0x6fc(%ebp)
 8065aa5:	98 99 57 
 8065aa8:	c7 85 08 f9 ff ff 1d 	movl   $0x8093db1d,-0x6f8(%ebp)
 8065aaf:	db 93 80 
 8065ab2:	c7 85 0c f9 ff ff ad 	movl   $0x53a97dad,-0x6f4(%ebp)
 8065ab9:	7d a9 53 
 8065abc:	c7 85 10 f9 ff ff b3 	movl   $0x10cfeb3,-0x6f0(%ebp)
 8065ac3:	fe 0c 01 
 8065ac6:	c7 85 14 f9 ff ff b4 	movl   $0xad7ffeb4,-0x6ec(%ebp)
 8065acd:	fe 7f ad 
 8065ad0:	c7 85 18 f9 ff ff e4 	movl   $0xe0b8d1e4,-0x6e8(%ebp)
 8065ad7:	d1 b8 e0 
 8065ada:	c7 85 1c f9 ff ff 18 	movl   $0x2893dd18,-0x6e4(%ebp)
 8065ae1:	dd 93 28 
 8065ae4:	c7 85 20 f9 ff ff 60 	movl   $0x1503e60,-0x6e0(%ebp)
 8065aeb:	3e 50 01 
 8065aee:	c7 85 24 f9 ff ff 62 	movl   $0xd8dffe62,-0x6dc(%ebp)
 8065af5:	fe df d8 
 8065af8:	c7 85 28 f9 ff ff 5d 	movl   $0x18e7065d,-0x6d8(%ebp)
 8065aff:	06 e7 18 
 8065b02:	c7 85 2c f9 ff ff 5f 	movl   $0x32b8d45f,-0x6d4(%ebp)
 8065b09:	d4 b8 32 
 8065b0c:	c7 85 30 f9 ff ff f8 	movl   $0x1a44df8,-0x6d0(%ebp)
 8065b13:	4d a4 01 
 8065b16:	c7 85 34 f9 ff ff fd 	movl   $0xa78bfefd,-0x6cc(%ebp)
 8065b1d:	fe 8b a7 
 8065b20:	c7 85 38 f9 ff ff fa 	movl   $0x6f9063fa,-0x6c8(%ebp)
 8065b27:	63 90 6f 
 8065b2a:	c7 85 3c f9 ff ff bb 	movl   $0x1fb384bb,-0x6c4(%ebp)
 8065b31:	84 b3 1f 
 8065b34:	c7 85 40 f9 ff ff bb 	movl   $0x106b0bb,-0x6c0(%ebp)
 8065b3b:	b0 06 01 
 8065b3e:	c7 85 44 f9 ff ff bc 	movl   $0x516efebc,-0x6bc(%ebp)
 8065b45:	fe 6e 51 
 8065b48:	c7 85 48 f9 ff ff f9 	movl   $0x4b747cf9,-0x6b8(%ebp)
 8065b4f:	7c 74 4b 
 8065b52:	c7 85 4c f9 ff ff ea 	movl   $0xe7a065ea,-0x6b4(%ebp)
 8065b59:	65 a0 e7 
 8065b5c:	c7 85 50 f9 ff ff e9 	movl   $0x1485ce9,-0x6b0(%ebp)
 8065b63:	5c 48 01 
 8065b66:	c7 85 54 f9 ff ff 6b 	movl   $0xa5cabe6b,-0x6ac(%ebp)
 8065b6d:	be ca a5 
 8065b70:	c7 85 58 f9 ff ff 37 	movl   $0xde519c37,-0x6a8(%ebp)
 8065b77:	9c 51 de 
 8065b7a:	c7 85 5c f9 ff ff 64 	movl   $0x61887f64,-0x6a4(%ebp)
 8065b81:	7f 88 61 
 8065b84:	c7 85 60 f9 ff ff 24 	movl   $0x19a7424,-0x6a0(%ebp)
 8065b8b:	74 9a 01 
 8065b8e:	c7 85 64 f9 ff ff 03 	movl   $0xc79eb703,-0x69c(%ebp)
 8065b95:	b7 9e c7 
 8065b98:	c7 85 68 f9 ff ff a2 	movl   $0xaf301a2,-0x698(%ebp)
 8065b9f:	01 f3 0a 
 8065ba2:	c7 85 6c f9 ff ff 9f 	movl   $0xbcf54f9f,-0x694(%ebp)
 8065ba9:	4f f5 bc 
 8065bac:	c7 85 70 f9 ff ff 96 	movl   $0x1008896,-0x690(%ebp)
 8065bb3:	88 00 01 
 8065bb6:	c7 85 74 f9 ff ff c4 	movl   $0x798664c4,-0x68c(%ebp)
 8065bbd:	64 86 79 
 8065bc0:	c7 85 78 f9 ff ff 0b 	movl   $0xcdafc20b,-0x688(%ebp)
 8065bc7:	c2 af cd 
 8065bca:	c7 85 7c f9 ff ff 86 	movl   $0x6c32a386,-0x684(%ebp)
 8065bd1:	a3 32 6c 
 8065bd4:	c7 85 80 f9 ff ff bc 	movl   $0x140aabc,-0x680(%ebp)
 8065bdb:	aa 40 01 
 8065bde:	c7 85 84 f9 ff ff f5 	movl   $0x57e7fdf5,-0x67c(%ebp)
 8065be5:	fd e7 57 
 8065be8:	c7 85 88 f9 ff ff 8e 	movl   $0x811bb28e,-0x678(%ebp)
 8065bef:	b2 1b 81 
 8065bf2:	c7 85 8c f9 ff ff 68 	movl   $0x873f4c68,-0x674(%ebp)
 8065bf9:	4c 3f 87 
 8065bfc:	c7 85 90 f9 ff ff 6b 	movl   $0x190d56b,-0x670(%ebp)
 8065c03:	d5 90 01 
 8065c06:	c7 85 94 f9 ff ff 72 	movl   $0xede1fd72,-0x66c(%ebp)
 8065c0d:	fd e1 ed 
 8065c10:	c7 85 98 f9 ff ff 31 	movl   $0xa1629f31,-0x668(%ebp)
 8065c17:	9f 62 a1 
 8065c1a:	c7 85 9c f9 ff ff 82 	movl   $0x690f1f82,-0x664(%ebp)
 8065c21:	1f 0f 69 
 8065c24:	c7 85 a0 f9 ff ff c6 	movl   $0x1f50ac6,-0x660(%ebp)
 8065c2b:	0a f5 01 
 8065c2e:	c7 85 a4 f9 ff ff 67 	movl   $0x34ad3e67,-0x65c(%ebp)
 8065c35:	3e ad 34 
 8065c38:	c7 85 a8 f9 ff ff 7f 	movl   $0xa4dda37f,-0x658(%ebp)
 8065c3f:	a3 dd a4 
 8065c42:	c7 85 ac f9 ff ff b1 	movl   $0x1a973b1,-0x654(%ebp)
 8065c49:	73 a9 01 
 8065c4c:	c7 85 b0 f9 ff ff bc 	movl   $0x13926bc,-0x650(%ebp)
 8065c53:	26 39 01 
 8065c56:	c7 85 b4 f9 ff ff 01 	movl   $0x1d88e01,-0x64c(%ebp)
 8065c5d:	8e d8 01 
 8065c60:	c7 85 b8 f9 ff ff 5f 	movl   $0xe150c5f,-0x648(%ebp)
 8065c67:	0c 15 0e 
 8065c6a:	c7 85 bc f9 ff ff 9e 	movl   $0x213d09e,-0x644(%ebp)
 8065c71:	d0 13 02 
 8065c74:	c7 85 c0 f9 ff ff 6b 	movl   $0x187706b,-0x640(%ebp)
 8065c7b:	70 87 01 
 8065c7e:	c7 85 c4 f9 ff ff 81 	movl   $0xc24eb181,-0x63c(%ebp)
 8065c85:	b1 4e c2 
 8065c88:	c7 85 c8 f9 ff ff 76 	movl   $0x919a4f76,-0x638(%ebp)
 8065c8f:	4f 9a 91 
 8065c92:	c7 85 cc f9 ff ff c5 	movl   $0xc298c4c5,-0x634(%ebp)
 8065c99:	c4 98 c2 
 8065c9c:	c7 85 d0 f9 ff ff 85 	movl   $0x1e94c85,-0x630(%ebp)
 8065ca3:	4c e9 01 
 8065ca6:	c7 85 d4 f9 ff ff f1 	movl   $0x39712ef1,-0x62c(%ebp)
 8065cad:	2e 71 39 
 8065cb0:	c7 85 d8 f9 ff ff aa 	movl   $0x7b0071aa,-0x628(%ebp)
 8065cb7:	71 00 7b 
 8065cba:	c7 85 dc f9 ff ff fb 	movl   $0x999f7afb,-0x624(%ebp)
 8065cc1:	7a 9f 99 
 8065cc4:	c7 85 e0 f9 ff ff d3 	movl   $0x131cfd3,-0x620(%ebp)
 8065ccb:	cf 31 01 
 8065cce:	c7 85 e4 f9 ff ff ad 	movl   $0xc7cd7aad,-0x61c(%ebp)
 8065cd5:	7a cd c7 
 8065cd8:	c7 85 e8 f9 ff ff 14 	movl   $0x59c08e14,-0x618(%ebp)
 8065cdf:	8e c0 59 
 8065ce2:	c7 85 ec f9 ff ff ba 	movl   $0x800759ba,-0x614(%ebp)
 8065ce9:	59 07 80 
 8065cec:	c7 85 f0 f9 ff ff c8 	movl   $0x17e43c8,-0x610(%ebp)
 8065cf3:	43 7e 01 
 8065cf6:	c7 85 f4 f9 ff ff 58 	movl   $0xf9c0d958,-0x60c(%ebp)
 8065cfd:	d9 c0 f9 
 8065d00:	c7 85 f8 f9 ff ff 99 	movl   $0xf030b199,-0x608(%ebp)
 8065d07:	b1 30 f0 
 8065d0a:	c7 85 fc f9 ff ff 28 	movl   $0xa0093028,-0x604(%ebp)
 8065d11:	30 09 a0 
 8065d14:	c7 85 00 fa ff ff ba 	movl   $0x1ddd4ba,-0x600(%ebp)
 8065d1b:	d4 dd 01 
 8065d1e:	c7 85 04 fa ff ff d7 	movl   $0x3c1887d7,-0x5fc(%ebp)
 8065d25:	87 18 3c 
 8065d28:	c7 85 08 fa ff ff 00 	movl   $0x961e6f00,-0x5f8(%ebp)
 8065d2f:	6f 1e 96 
 8065d32:	c7 85 0c fa ff ff 19 	movl   $0xa405be19,-0x5f4(%ebp)
 8065d39:	be 05 a4 
 8065d3c:	c7 85 10 fa ff ff f4 	movl   $0x12aa4f4,-0x5f0(%ebp)
 8065d43:	a4 2a 01 
 8065d46:	c7 85 14 fa ff ff cd 	movl   $0x4b1ea9cd,-0x5ec(%ebp)
 8065d4d:	a9 1e 4b 
 8065d50:	c7 85 18 fa ff ff c0 	movl   $0xfba60ac0,-0x5e8(%ebp)
 8065d57:	0a a6 fb 
 8065d5a:	c7 85 1c fa ff ff 9f 	movl   $0xcd072d9f,-0x5e4(%ebp)
 8065d61:	2d 07 cd 
 8065d64:	c7 85 20 fa ff ff 31 	movl   $0x1754e31,-0x5e0(%ebp)
 8065d6b:	4e 75 01 
 8065d6e:	c7 85 24 fa ff ff 40 	movl   $0x5de65440,-0x5dc(%ebp)
 8065d75:	54 e6 5d 
 8065d78:	c7 85 28 fa ff ff 70 	movl   $0xfa8f8d70,-0x5d8(%ebp)
 8065d7f:	8d 8f fa 
 8065d82:	c7 85 2c fa ff ff 07 	movl   $0x4048f907,-0x5d4(%ebp)
 8065d89:	f9 48 40 
 8065d8c:	c7 85 30 fa ff ff be 	movl   $0x1d2a1be,-0x5d0(%ebp)
 8065d93:	a1 d2 01 
 8065d96:	c7 85 34 fa ff ff a8 	movl   $0x3aaff4a8,-0x5cc(%ebp)
 8065d9d:	f4 af 3a 
 8065da0:	c7 85 38 fa ff ff 66 	movl   $0xfc99b866,-0x5c8(%ebp)
 8065da7:	b8 99 fc 
 8065daa:	c7 85 3c fa ff ff a4 	movl   $0xe82d9ba4,-0x5c4(%ebp)
 8065db1:	9b 2d e8 
 8065db4:	c7 85 40 fa ff ff 16 	movl   $0x123a516,-0x5c0(%ebp)
 8065dbb:	a5 23 01 
 8065dbe:	c7 85 44 fa ff ff d2 	movl   $0xc95bf1d2,-0x5bc(%ebp)
 8065dc5:	f1 5b c9 
 8065dc8:	c7 85 48 fa ff ff 7f 	movl   $0x3bc0267f,-0x5b8(%ebp)
 8065dcf:	26 c0 3b 
 8065dd2:	c7 85 4c fa ff ff 8e 	movl   $0xa239028e,-0x5b4(%ebp)
 8065dd9:	02 39 a2 
 8065ddc:	c7 85 50 fa ff ff 5c 	movl   $0x16c8e5c,-0x5b0(%ebp)
 8065de3:	8e 6c 01 
 8065de6:	c7 85 54 fa ff ff 47 	movl   $0xbbb2ee47,-0x5ac(%ebp)
 8065ded:	ee b2 bb 
 8065df0:	c7 85 58 fa ff ff 1f 	movl   $0xcab0301f,-0x5a8(%ebp)
 8065df7:	30 b0 ca 
 8065dfa:	c7 85 5c fa ff ff 31 	movl   $0xcac74331,-0x5a4(%ebp)
 8065e01:	43 c7 ca 
 8065e04:	c7 85 60 fa ff ff f3 	movl   $0x1c7b1f3,-0x5a0(%ebp)
 8065e0b:	b1 c7 01 
 8065e0e:	c7 85 64 fa ff ff ec 	movl   $0xd54fd4ec,-0x59c(%ebp)
 8065e15:	d4 4f d5 
 8065e18:	c7 85 68 fa ff ff 13 	movl   $0x1eae1e13,-0x598(%ebp)
 8065e1f:	1e ae 1e 
 8065e22:	c7 85 6c fa ff ff ff 	movl   $0x5ebc89ff,-0x594(%ebp)
 8065e29:	89 bc 5e 
 8065e2c:	c7 85 70 fa ff ff 38 	movl   $0x11ccf38,-0x590(%ebp)
 8065e33:	cf 1c 01 
 8065e36:	c7 85 74 fa ff ff 27 	movl   $0xcaa3ca27,-0x58c(%ebp)
 8065e3d:	ca a3 ca 
 8065e40:	c7 85 78 fa ff ff 98 	movl   $0xe659a598,-0x588(%ebp)
 8065e47:	a5 59 e6 
 8065e4a:	c7 85 7c fa ff ff 7e 	movl   $0x766bac7e,-0x584(%ebp)
 8065e51:	ac 6b 76 
 8065e54:	c7 85 80 fa ff ff 06 	movl   $0x1640306,-0x580(%ebp)
 8065e5b:	03 64 01 
 8065e5e:	c7 85 84 fa ff ff b1 	movl   $0xfd4cbcb1,-0x57c(%ebp)
 8065e65:	bc 4c fd 
 8065e68:	c7 85 88 fa ff ff fe 	movl   $0x9ff00efe,-0x578(%ebp)
 8065e6f:	0e f0 9f 
 8065e72:	c7 85 8c fa ff ff 9e 	movl   $0x1406979e,-0x574(%ebp)
 8065e79:	97 06 14 
 8065e7c:	c7 85 90 fa ff ff c8 	movl   $0x1bd03c8,-0x570(%ebp)
 8065e83:	03 bd 01 
 8065e86:	c7 85 94 fa ff ff ef 	movl   $0x5e4ff5ef,-0x56c(%ebp)
 8065e8d:	f5 4f 5e 
 8065e90:	c7 85 98 fa ff ff 5f 	movl   $0x23f6095f,-0x568(%ebp)
 8065e97:	09 f6 23 
 8065e9a:	c7 85 9c fa ff ff c3 	movl   $0xc841ec3,-0x564(%ebp)
 8065ea1:	1e 84 0c 
 8065ea4:	c7 85 a0 fa ff ff 5d 	movl   $0x116225d,-0x560(%ebp)
 8065eab:	22 16 01 
 8065eae:	c7 85 a4 fa ff ff 6a 	movl   $0x35e3f36a,-0x55c(%ebp)
 8065eb5:	f3 e3 35 
 8065eb8:	c7 85 a8 fa ff ff b7 	movl   $0xecf38bb7,-0x558(%ebp)
 8065ebf:	8b f3 ec 
 8065ec2:	c7 85 ac fa ff ff 73 	movl   $0x4fa52673,-0x554(%ebp)
 8065ec9:	26 a5 4f 
 8065ecc:	c7 85 b0 fa ff ff f4 	movl   $0x15baaf4,-0x550(%ebp)
 8065ed3:	aa 5b 01 
 8065ed6:	c7 85 b4 fa ff ff 45 	movl   $0x35cf045,-0x54c(%ebp)
 8065edd:	f0 5c 03 
 8065ee0:	c7 85 b8 fa ff ff a5 	movl   $0xe8306ea5,-0x548(%ebp)
 8065ee7:	6e 30 e8 
 8065eea:	c7 85 bc fa ff ff 10 	movl   $0x638e7010,-0x544(%ebp)
 8065ef1:	70 8e 63 
 8065ef4:	c7 85 c0 fa ff ff b1 	movl   $0x1b295b1,-0x540(%ebp)
 8065efb:	95 b2 01 
 8065efe:	c7 85 c4 fa ff ff 2b 	movl   $0x221a162b,-0x53c(%ebp)
 8065f05:	16 1a 22 
 8065f08:	c7 85 c8 fa ff ff 27 	movl   $0x911e4527,-0x538(%ebp)
 8065f0f:	45 1e 91 
 8065f12:	c7 85 cc fa ff ff 0a 	movl   $0xde39060a,-0x534(%ebp)
 8065f19:	06 39 de 
 8065f1c:	c7 85 d0 fa ff ff 8e 	movl   $0x10f9d8e,-0x530(%ebp)
 8065f23:	9d 0f 01 
 8065f26:	c7 85 d4 fa ff ff b6 	movl   $0xeaa09bb6,-0x52c(%ebp)
 8065f2d:	9b a0 ea 
 8065f30:	c7 85 d8 fa ff ff 70 	movl   $0x3565d670,-0x528(%ebp)
 8065f37:	d6 65 35 
 8065f3a:	c7 85 dc fa ff ff 8d 	movl   $0x95c7478d,-0x524(%ebp)
 8065f41:	47 c7 95 
 8065f44:	c7 85 e0 fa ff ff f2 	movl   $0x15384f2,-0x520(%ebp)
 8065f4b:	84 53 01 
 8065f4e:	c7 85 e4 fa ff ff a3 	movl   $0x2548c2a3,-0x51c(%ebp)
 8065f55:	c2 48 25 
 8065f58:	c7 85 e8 fa ff ff 0d 	movl   $0x82bf4c0d,-0x518(%ebp)
 8065f5f:	4c bf 82 
 8065f62:	c7 85 ec fa ff ff 70 	movl   $0x3b391970,-0x514(%ebp)
 8065f69:	19 39 3b 
 8065f6c:	c7 85 f0 fa ff ff 2f 	movl   $0x1a8662f,-0x510(%ebp)
 8065f73:	66 a8 01 
 8065f76:	c7 85 f4 fa ff ff a6 	movl   $0x374d79a6,-0x50c(%ebp)
 8065f7d:	79 4d 37 
 8065f80:	c7 85 f8 fa ff ff 88 	movl   $0x51b78f88,-0x508(%ebp)
 8065f87:	8f b7 51 
 8065f8a:	c7 85 fc fa ff ff e6 	movl   $0x8503afe6,-0x504(%ebp)
 8065f91:	af 03 85 
 8065f94:	c7 85 00 fb ff ff dd 	movl   $0x1093fdd,-0x500(%ebp)
 8065f9b:	3f 09 01 
 8065f9e:	c7 85 04 fb ff ff 10 	movl   $0x4520d810,-0x4fc(%ebp)
 8065fa5:	d8 20 45 
 8065fa8:	c7 85 08 fb ff ff 6a 	movl   $0xe625736a,-0x4f8(%ebp)
 8065faf:	73 25 e6 
 8065fb2:	c7 85 0c fb ff ff df 	movl   $0xe6449bdf,-0x4f4(%ebp)
 8065fb9:	9b 44 e6 
 8065fbc:	c7 85 10 fb ff ff d4 	movl   $0x14b8fd4,-0x4f0(%ebp)
 8065fc3:	8f 4b 01 
 8065fc6:	c7 85 14 fb ff ff 14 	movl   $0xd6690e14,-0x4ec(%ebp)
 8065fcd:	0e 69 d6 
 8065fd0:	c7 85 18 fb ff ff 44 	movl   $0xdfaed044,-0x4e8(%ebp)
 8065fd7:	d0 ae df 
 8065fda:	c7 85 1c fb ff ff d7 	movl   $0x1fd5c2d7,-0x4e4(%ebp)
 8065fe1:	c2 d5 1f 
 8065fe4:	c7 85 20 fb ff ff ca 	movl   $0x19e73ca,-0x4e0(%ebp)
 8065feb:	73 9e 01 
 8065fee:	c7 85 24 fb ff ff cc 	movl   $0x601a8cc,-0x4dc(%ebp)
 8065ff5:	a8 01 06 
 8065ff8:	c7 85 28 fb ff ff 2b 	movl   $0xebcd422b,-0x4d8(%ebp)
 8065fff:	42 cd eb 
 8066002:	c7 85 2c fb ff ff c6 	movl   $0x53e599c6,-0x4d4(%ebp)
 8066009:	99 e5 53 
 806600c:	c7 85 30 fb ff ff 5e 	movl   $0x103085e,-0x4d0(%ebp)
 8066013:	08 03 01 
 8066016:	c7 85 34 fb ff ff ff 	movl   $0xc78212ff,-0x4cc(%ebp)
 806601d:	12 82 c7 
 8066020:	c7 85 38 fb ff ff b5 	movl   $0xa6c092b5,-0x4c8(%ebp)
 8066027:	92 c0 a6 
 806602a:	c7 85 3c fb ff ff 38 	movl   $0xe8df0038,-0x4c4(%ebp)
 8066031:	00 df e8 
 8066034:	c7 85 40 fb ff ff 75 	movl   $0x143ca75,-0x4c0(%ebp)
 806603b:	ca 43 01 
 806603e:	c7 85 44 fb ff ff bf 	movl   $0x396297bf,-0x4bc(%ebp)
 8066045:	97 62 39 
 8066048:	c7 85 48 fb ff ff 63 	movl   $0xd070b763,-0x4b8(%ebp)
 806604f:	b7 70 d0 
 8066052:	c7 85 4c fb ff ff 46 	movl   $0x6316c046,-0x4b4(%ebp)
 8066059:	c0 16 63 
 806605c:	c7 85 50 fb ff ff 13 	movl   $0x194bd13,-0x4b0(%ebp)
 8066063:	bd 94 01 
 8066066:	c7 85 54 fb ff ff af 	movl   $0x7bb3daf,-0x4ac(%ebp)
 806606d:	3d bb 07 
 8066070:	c7 85 58 fb ff ff 3c 	movl   $0x848ce53c,-0x4a8(%ebp)
 8066077:	e5 8c 84 
 806607a:	c7 85 5c fb ff ff 58 	movl   $0x3bdc7058,-0x4a4(%ebp)
 8066081:	70 dc 3b 
 8066084:	c7 85 60 fb ff ff 58 	movl   $0x1f9ec58,-0x4a0(%ebp)
 806608b:	ec f9 01 
 806608e:	c7 85 64 fb ff ff 8d 	movl   $0x84d5068d,-0x49c(%ebp)
 8066095:	06 d5 84 
 8066098:	c7 85 68 fb ff ff 45 	movl   $0x52d80f45,-0x498(%ebp)
 806609f:	0f d8 52 
 80660a2:	c7 85 6c fb ff ff 37 	movl   $0x2569c637,-0x494(%ebp)
 80660a9:	c6 69 25 
 80660ac:	c7 85 70 fb ff ff b7 	movl   $0x13c33b7,-0x490(%ebp)
 80660b3:	33 3c 01 
 80660b6:	c7 85 74 fb ff ff 31 	movl   $0xe60a4831,-0x48c(%ebp)
 80660bd:	48 0a e6 
 80660c0:	c7 85 78 fb ff ff 16 	movl   $0x278e1316,-0x488(%ebp)
 80660c7:	13 8e 27 
 80660ca:	c7 85 7c fb ff ff c5 	movl   $0xeec437c5,-0x484(%ebp)
 80660d1:	37 c4 ee 
 80660d4:	c7 85 80 fb ff ff a4 	movl   $0x18b40a4,-0x480(%ebp)
 80660db:	40 8b 01 
 80660de:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 80660e4:	83 ec 0c             	sub    $0xc,%esp
 80660e7:	8d 95 24 e7 ff ff    	lea    -0x18dc(%ebp),%edx
 80660ed:	52                   	push   %edx
 80660ee:	6a 10                	push   $0x10
 80660f0:	68 46 01 00 00       	push   $0x146
 80660f5:	68 46 01 00 00       	push   $0x146
 80660fa:	50                   	push   %eax
 80660fb:	e8 d9 fa fe ff       	call   8055bd9 <new_array_from_c_array>
 8066100:	83 c4 1c             	add    $0x1c,%esp
 8066103:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8066109:	a3 28 32 07 08       	mov    %eax,0x8073228
 806610e:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8066114:	a3 2c 32 07 08       	mov    %eax,0x807322c
 8066119:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 806611f:	a3 30 32 07 08       	mov    %eax,0x8073230
 8066124:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 806612a:	a3 34 32 07 08       	mov    %eax,0x8073234
 806612f:	c7 85 e4 d4 ff ff 01 	movl   $0x1,-0x2b1c(%ebp)
 8066136:	00 00 00 
 8066139:	c7 85 e8 d4 ff ff 00 	movl   $0x0,-0x2b18(%ebp)
 8066140:	00 00 00 
 8066143:	c7 85 ec d4 ff ff 00 	movl   $0x0,-0x2b14(%ebp)
 806614a:	00 00 00 
 806614d:	c7 85 f0 d4 ff ff 00 	movl   $0x4000000,-0x2b10(%ebp)
 8066154:	00 00 04 
 8066157:	c7 85 f4 d4 ff ff 34 	movl   $0x33333334,-0x2b0c(%ebp)
 806615e:	33 33 33 
 8066161:	c7 85 f8 d4 ff ff 33 	movl   $0x33333333,-0x2b08(%ebp)
 8066168:	33 33 33 
 806616b:	c7 85 fc d4 ff ff 33 	movl   $0x33333333,-0x2b04(%ebp)
 8066172:	33 33 33 
 8066175:	c7 85 00 d5 ff ff 33 	movl   $0x3333333,-0x2b00(%ebp)
 806617c:	33 33 03 
 806617f:	c7 85 04 d5 ff ff c3 	movl   $0x5c28f5c3,-0x2afc(%ebp)
 8066186:	f5 28 5c 
 8066189:	c7 85 08 d5 ff ff 8f 	movl   $0x28f5c28f,-0x2af8(%ebp)
 8066190:	c2 f5 28 
 8066193:	c7 85 0c d5 ff ff 5c 	movl   $0xf5c28f5c,-0x2af4(%ebp)
 806619a:	8f c2 f5 
 806619d:	c7 85 10 d5 ff ff 28 	movl   $0x28f5c28,-0x2af0(%ebp)
 80661a4:	5c 8f 02 
 80661a7:	c7 85 14 d5 ff ff 9c 	movl   $0xb020c49c,-0x2aec(%ebp)
 80661ae:	c4 20 b0 
 80661b1:	c7 85 18 d5 ff ff 72 	movl   $0xed916872,-0x2ae8(%ebp)
 80661b8:	68 91 ed 
 80661bb:	c7 85 1c d5 ff ff 7c 	movl   $0x5e353f7c,-0x2ae4(%ebp)
 80661c2:	3f 35 5e 
 80661c5:	c7 85 20 d5 ff ff ba 	movl   $0x20c49ba,-0x2ae0(%ebp)
 80661cc:	49 0c 02 
 80661cf:	c7 85 24 d5 ff ff 93 	movl   $0x4d013a93,-0x2adc(%ebp)
 80661d6:	3a 01 4d 
 80661d9:	c7 85 28 d5 ff ff 84 	movl   $0xaf4f0d84,-0x2ad8(%ebp)
 80661e0:	0d 4f af 
 80661e3:	c7 85 2c d5 ff ff 94 	movl   $0x63886594,-0x2ad4(%ebp)
 80661ea:	65 88 63 
 80661ed:	c7 85 30 d5 ff ff 5d 	movl   $0x346dc5d,-0x2ad0(%ebp)
 80661f4:	dc 46 03 
 80661f7:	c7 85 34 d5 ff ff 76 	movl   $0x70cdc876,-0x2acc(%ebp)
 80661fe:	c8 cd 70 
 8066201:	c7 85 38 d5 ff ff 03 	movl   $0x8c3f3e03,-0x2ac8(%ebp)
 8066208:	3e 3f 8c 
 806620b:	c7 85 3c d5 ff ff 10 	movl   $0x1c6d1e10,-0x2ac4(%ebp)
 8066212:	1e 6d 1c 
 8066215:	c7 85 40 d5 ff ff b1 	movl   $0x29f16b1,-0x2ac0(%ebp)
 806621c:	16 9f 02 
 806621f:	c7 85 44 d5 ff ff c5 	movl   $0x270b06c5,-0x2abc(%ebp)
 8066226:	06 0b 27 
 8066229:	c7 85 48 d5 ff ff 69 	movl   $0xd698fe69,-0x2ab8(%ebp)
 8066230:	fe 98 d6 
 8066233:	c7 85 4c d5 ff ff a6 	movl   $0x16bdb1a6,-0x2ab4(%ebp)
 806623a:	b1 bd 16 
 806623d:	c7 85 50 d5 ff ff f4 	movl   $0x218def4,-0x2ab0(%ebp)
 8066244:	de 18 02 
 8066247:	c7 85 54 d5 ff ff 6e 	movl   $0xd811a46e,-0x2aac(%ebp)
 806624e:	a4 11 d8 
 8066251:	c7 85 58 d5 ff ff 41 	movl   $0xf0f4ca41,-0x2aa8(%ebp)
 8066258:	ca f4 f0 
 806625b:	c7 85 5c d5 ff ff 0a 	movl   $0x5795e90a,-0x2aa4(%ebp)
 8066262:	e9 95 57 
 8066265:	c7 85 60 d5 ff ff 53 	movl   $0x35afe53,-0x2aa0(%ebp)
 806626c:	fe 5a 03 
 806626f:	c7 85 64 d5 ff ff f1 	movl   $0xacdae9f1,-0x2a9c(%ebp)
 8066276:	e9 da ac 
 8066279:	c7 85 68 d5 ff ff 34 	movl   $0xf3f70834,-0x2a98(%ebp)
 8066280:	08 f7 f3 
 8066283:	c7 85 6c d5 ff ff 3b 	movl   $0x4611873b,-0x2a94(%ebp)
 806628a:	87 11 46 
 806628d:	c7 85 70 d5 ff ff dc 	movl   $0x2af31dc,-0x2a90(%ebp)
 8066294:	31 af 02 
 8066297:	c7 85 74 d5 ff ff c1 	movl   $0x23e254c1,-0x2a8c(%ebp)
 806629e:	54 e2 23 
 80662a1:	c7 85 78 d5 ff ff 2a 	movl   $0x5cc5a02a,-0x2a88(%ebp)
 80662a8:	a0 c5 5c 
 80662ab:	c7 85 7c d5 ff ff 96 	movl   $0x4dad296,-0x2a84(%ebp)
 80662b2:	d2 da 04 
 80662b5:	c7 85 80 d5 ff ff 7d 	movl   $0x225c17d,-0x2a80(%ebp)
 80662bc:	c1 25 02 
 80662bf:	c7 85 84 d5 ff ff 35 	movl   $0x396a2135,-0x2a7c(%ebp)
 80662c6:	21 6a 39 
 80662c9:	c7 85 88 d5 ff ff 10 	movl   $0xfad5cd10,-0x2a78(%ebp)
 80662d0:	cd d5 fa 
 80662d3:	c7 85 8c d5 ff ff 56 	movl   $0x3af7b756,-0x2a74(%ebp)
 80662da:	b7 f7 3a 
 80662dd:	c7 85 90 d5 ff ff fb 	movl   $0x36f9bfb,-0x2a70(%ebp)
 80662e4:	9b 6f 03 
 80662e7:	c7 85 94 d5 ff ff 5e 	movl   $0x9454e75e,-0x2a6c(%ebp)
 80662ee:	e7 54 94 
 80662f1:	c7 85 98 d5 ff ff a6 	movl   $0xfbde3da6,-0x2a68(%ebp)
 80662f8:	3d de fb 
 80662fb:	c7 85 9c d5 ff ff ab 	movl   $0x2f2c92ab,-0x2a64(%ebp)
 8066302:	92 2c 2f 
 8066305:	c7 85 a0 d5 ff ff fc 	movl   $0x2bfaffc,-0x2a60(%ebp)
 806630c:	af bf 02 
 806630f:	c7 85 a4 d5 ff ff 18 	movl   $0xdd10b918,-0x2a5c(%ebp)
 8066316:	b9 10 dd 
 8066319:	c7 85 a8 d5 ff ff 1e 	movl   $0x2fe4fe1e,-0x2a58(%ebp)
 8066320:	fe e4 2f 
 8066323:	c7 85 ac d5 ff ff 23 	movl   $0x25bd4223,-0x2a54(%ebp)
 806632a:	42 bd 25 
 806632d:	c7 85 b0 d5 ff ff 30 	movl   $0x232f330,-0x2a50(%ebp)
 8066334:	f3 32 02 
 8066337:	c7 85 b4 d5 ff ff bf 	movl   $0xc81ac1bf,-0x2a4c(%ebp)
 806633e:	c1 1a c8 
 8066341:	c7 85 b8 d5 ff ff 97 	movl   $0x4ca19697,-0x2a48(%ebp)
 8066348:	96 a1 4c 
 806634b:	c7 85 bc d5 ff ff 38 	movl   $0x92ed038,-0x2a44(%ebp)
 8066352:	d0 2e 09 
 8066355:	c7 85 c0 d5 ff ff 4d 	movl   $0x384b84d,-0x2a40(%ebp)
 806635c:	b8 84 03 
 806635f:	c7 85 c4 d5 ff ff 33 	movl   $0x67bce33,-0x2a3c(%ebp)
 8066366:	ce 7b 06 
 8066369:	c7 85 c8 d5 ff ff 13 	movl   $0x3d4e1213,-0x2a38(%ebp)
 8066370:	12 4e 3d 
 8066373:	c7 85 cc d5 ff ff 60 	movl   $0xd4257360,-0x2a34(%ebp)
 806637a:	73 25 d4 
 806637d:	c7 85 d0 d5 ff ff 70 	movl   $0x2d09370,-0x2a30(%ebp)
 8066384:	93 d0 02 
 8066387:	c7 85 d4 d5 ff ff 29 	movl   $0x52fd829,-0x2a2c(%ebp)
 806638e:	d8 2f 05 
 8066391:	c7 85 d8 d5 ff ff dc 	movl   $0x643e74dc,-0x2a28(%ebp)
 8066398:	74 3e 64 
 806639b:	c7 85 dc d5 ff ff b3 	movl   $0xdceac2b3,-0x2a24(%ebp)
 80663a2:	c2 ea dc 
 80663a5:	c7 85 e0 d5 ff ff f3 	movl   $0x24075f3,-0x2a20(%ebp)
 80663ac:	75 40 02 
 80663af:	c7 85 e4 d5 ff ff a7 	movl   $0xa1e626a7,-0x2a1c(%ebp)
 80663b6:	26 e6 a1 
 80663b9:	c7 85 e8 d5 ff ff f9 	movl   $0x6d30baf9,-0x2a18(%ebp)
 80663c0:	ba 30 6d 
 80663c3:	c7 85 ec d5 ff ff 85 	movl   $0xfb113785,-0x2a14(%ebp)
 80663ca:	37 11 fb 
 80663cd:	c7 85 f0 d5 ff ff 52 	movl   $0x39a5652,-0x2a10(%ebp)
 80663d4:	56 9a 03 
 80663d7:	c7 85 f4 d5 ff ff 20 	movl   $0xe7eb5220,-0x2a0c(%ebp)
 80663de:	52 eb e7 
 80663e1:	c7 85 f8 d5 ff ff fa 	movl   $0x2426fbfa,-0x2a08(%ebp)
 80663e8:	fb 26 24 
 80663eb:	c7 85 fc d5 ff ff d1 	movl   $0xc8da92d1,-0x2a04(%ebp)
 80663f2:	92 da c8 
 80663f5:	c7 85 00 d6 ff ff a8 	movl   $0x2e1dea8,-0x2a00(%ebp)
 80663fc:	de e1 02 
 80663ff:	c7 85 04 d6 ff ff 80 	movl   $0xb9890e80,-0x29fc(%ebp)
 8066406:	0e 89 b9 
 8066409:	c7 85 08 d6 ff ff c8 	movl   $0x1cebfcc8,-0x29f8(%ebp)
 8066410:	fc eb 1c 
 8066413:	c7 85 0c d6 ff ff 74 	movl   $0x3a487574,-0x29f4(%ebp)
 806641a:	75 48 3a 
 806641d:	c7 85 10 d6 ff ff ba 	movl   $0x24e4bba,-0x29f0(%ebp)
 8066424:	4b 4e 02 
 8066427:	c7 85 14 d6 ff ff cc 	movl   $0x8f41b0cc,-0x29ec(%ebp)
 806642e:	b0 41 8f 
 8066431:	c7 85 18 d6 ff ff a7 	movl   $0x94acc7a7,-0x29e8(%ebp)
 8066438:	c7 ac 94 
 806643b:	c7 85 1c d6 ff ff 86 	movl   $0xf6da5586,-0x29e4(%ebp)
 8066442:	55 da f6 
 8066445:	c7 85 20 d6 ff ff 29 	movl   $0x3b07929,-0x29e0(%ebp)
 806644c:	79 b0 03 
 806644f:	c7 85 24 d6 ff ff d7 	movl   $0x729af3d7,-0x29dc(%ebp)
 8066456:	f3 9a 72 
 8066459:	c7 85 28 d6 ff ff ec 	movl   $0xaa23d2ec,-0x29d8(%ebp)
 8066460:	d2 23 aa 
 8066463:	c7 85 2c d6 ff ff 6b 	movl   $0x9248446b,-0x29d4(%ebp)
 806646a:	44 48 92 
 806646d:	c7 85 30 d6 ff ff 21 	movl   $0x2f39421,-0x29d0(%ebp)
 8066474:	94 f3 02 
 8066477:	c7 85 34 d6 ff ff 79 	movl   $0x5baf2979,-0x29cc(%ebp)
 806647e:	29 af 5b 
 8066481:	c7 85 38 d6 ff ff f0 	movl   $0xbb4fdbf0,-0x29c8(%ebp)
 8066488:	db 4f bb 
 806648b:	c7 85 3c d6 ff ff ef 	movl   $0x41d369ef,-0x29c4(%ebp)
 8066492:	69 d3 41 
 8066495:	c7 85 40 d6 ff ff 81 	movl   $0x25c7681,-0x29c0(%ebp)
 806649c:	76 5c 02 
 806649f:	c7 85 44 d6 ff ff 8d 	movl   $0x2c4b758d,-0x29bc(%ebp)
 80664a6:	75 4b 2c 
 80664a9:	c7 85 48 d6 ff ff 1a 	movl   $0xc54c931a,-0x29b8(%ebp)
 80664b0:	93 4c c5 
 80664b3:	c7 85 4c d6 ff ff b2 	movl   $0x2ebdcb2,-0x29b4(%ebp)
 80664ba:	dc eb 02 
 80664bd:	c7 85 50 d6 ff ff 02 	movl   $0x3c72402,-0x29b0(%ebp)
 80664c4:	24 c7 03 
 80664c7:	c7 85 54 d6 ff ff 0b 	movl   $0xf03c5e0b,-0x29ac(%ebp)
 80664ce:	5e 3c f0 
 80664d1:	c7 85 58 d6 ff ff 14 	movl   $0x9dd6dc14,-0x29a8(%ebp)
 80664d8:	dc d6 9d 
 80664db:	c7 85 5c d6 ff ff 28 	movl   $0x2564a28,-0x29a4(%ebp)
 80664e2:	4a 56 02 
 80664e5:	c7 85 60 d6 ff ff 68 	movl   $0x305b668,-0x29a0(%ebp)
 80664ec:	b6 05 03 
 80664ef:	c7 85 64 d6 ff ff d6 	movl   $0x59c9e4d6,-0x299c(%ebp)
 80664f6:	e4 c9 59 
 80664f9:	c7 85 68 d6 ff ff aa 	movl   $0x4b1249aa,-0x2998(%ebp)
 8066500:	49 12 4b 
 8066503:	c7 85 6c d6 ff ff ed 	movl   $0x3511d4ed,-0x2994(%ebp)
 806650a:	d4 11 35 
 806650d:	c7 85 70 d6 ff ff 53 	movl   $0x26af853,-0x2990(%ebp)
 8066514:	f8 6a 02 
 8066517:	c7 85 74 d6 ff ff 89 	movl   $0xf60fd489,-0x298c(%ebp)
 806651e:	d4 0f f6 
 8066521:	c7 85 78 d6 ff ff 76 	movl   $0x44ea0f76,-0x2988(%ebp)
 8066528:	0f ea 44 
 806652b:	c7 85 7c d6 ff ff 15 	movl   $0xbb4fbb15,-0x2984(%ebp)
 8066532:	bb 4f bb 
 8066535:	c7 85 80 d6 ff ff 1e 	movl   $0x3de5a1e,-0x2980(%ebp)
 806653c:	5a de 03 
 806653f:	c7 85 84 d6 ff ff 07 	movl   $0xf80caa07,-0x297c(%ebp)
 8066546:	aa 0c f8 
 8066549:	c7 85 88 d6 ff ff 2b 	movl   $0x6a54d92b,-0x2978(%ebp)
 8066550:	d9 54 6a 
 8066553:	c7 85 8c d6 ff ff 77 	movl   $0x95d96277,-0x2974(%ebp)
 806655a:	62 d9 95 
 806655d:	c7 85 90 d6 ff ff 18 	movl   $0x3184818,-0x2970(%ebp)
 8066564:	48 18 03 
 8066567:	c7 85 94 d6 ff ff d2 	movl   $0x933d54d2,-0x296c(%ebp)
 806656e:	54 3d 93 
 8066571:	c7 85 98 d6 ff ff 89 	movl   $0x21dd7a89,-0x2968(%ebp)
 8066578:	7a dd 21 
 806657b:	c7 85 9c d6 ff ff f9 	movl   $0xde4781f9,-0x2964(%ebp)
 8066582:	81 47 de 
 8066585:	c7 85 a0 d6 ff ff 46 	movl   $0x279d346,-0x2960(%ebp)
 806658c:	d3 79 02 
 806658f:	c7 85 a4 d6 ff ff 50 	movl   $0xb8622150,-0x295c(%ebp)
 8066596:	21 62 b8 
 8066599:	c7 85 a8 d6 ff ff 75 	movl   $0x362f2a75,-0x2958(%ebp)
 80665a0:	2a 2f 36 
 80665a3:	c7 85 ac d6 ff ff 28 	movl   $0xca0c0328,-0x2954(%ebp)
 80665aa:	03 0c ca 
 80665ad:	c7 85 b0 d6 ff ff d7 	movl   $0x3f61ed7,-0x2950(%ebp)
 80665b4:	1e f6 03 
 80665b7:	c7 85 b4 d6 ff ff 0d 	movl   $0x604e810d,-0x294c(%ebp)
 80665be:	81 4e 60 
 80665c1:	c7 85 b8 d6 ff ff 91 	movl   $0xf825bb91,-0x2948(%ebp)
 80665c8:	bb 25 f8 
 80665cb:	c7 85 bc d6 ff ff ec 	movl   $0xd4d668ec,-0x2944(%ebp)
 80665d2:	68 d6 d4 
 80665d5:	c7 85 c0 d6 ff ff df 	movl   $0x32b4bdf,-0x2940(%ebp)
 80665dc:	4b 2b 03 
 80665df:	c7 85 c4 d6 ff ff 0b 	movl   $0xe6a5340b,-0x293c(%ebp)
 80665e6:	34 a5 e6 
 80665e9:	c7 85 c8 d6 ff ff 0d 	movl   $0xc684960d,-0x2938(%ebp)
 80665f0:	96 84 c6 
 80665f3:	c7 85 cc d6 ff ff f0 	movl   $0xdd7853f0,-0x2934(%ebp)
 80665fa:	53 78 dd 
 80665fd:	c7 85 d0 d6 ff ff 7f 	movl   $0x289097f,-0x2930(%ebp)
 8066604:	09 89 02 
 8066607:	c7 85 d4 d6 ff ff 3c 	movl   $0x521dc33c,-0x292c(%ebp)
 806660e:	c3 1d 52 
 8066611:	c7 85 d8 d6 ff ff 3e 	movl   $0xd203ab3e,-0x2928(%ebp)
 8066618:	ab 03 d2 
 806661b:	c7 85 dc d6 ff ff f3 	movl   $0xb12d0ff3,-0x2924(%ebp)
 8066622:	0f 2d b1 
 8066625:	c7 85 e0 d6 ff ff cc 	movl   $0x2073acc,-0x2920(%ebp)
 806662c:	3a 07 02 
 806662f:	c7 85 e4 d6 ff ff 2c 	movl   $0xb696052c,-0x291c(%ebp)
 8066636:	05 96 b6 
 8066639:	c7 85 e8 d6 ff ff 63 	movl   $0xe99f7863,-0x2918(%ebp)
 8066640:	78 9f e9 
 8066643:	c7 85 ec d6 ff ff 52 	movl   $0xb514e652,-0x2914(%ebp)
 806664a:	e6 14 b5 
 806664d:	c7 85 f0 d6 ff ff 7a 	movl   $0x33ec47a,-0x2910(%ebp)
 8066654:	c4 3e 03 
 8066657:	c7 85 f4 d6 ff ff 57 	movl   $0x2bab3757,-0x290c(%ebp)
 806665e:	37 ab 2b 
 8066661:	c7 85 f8 d6 ff ff b6 	movl   $0x87b2c6b6,-0x2908(%ebp)
 8066668:	c6 b2 87 
 806666b:	c7 85 fc d6 ff ff 75 	movl   $0xf743eb75,-0x2904(%ebp)
 8066672:	eb 43 f7 
 8066675:	c7 85 00 d7 ff ff 2e 	movl   $0x2989d2e,-0x2900(%ebp)
 806667c:	9d 98 02 
 806667f:	c7 85 04 d7 ff ff 45 	movl   $0xefbc2c45,-0x28fc(%ebp)
 8066686:	2c bc ef 
 8066689:	c7 85 08 d7 ff ff c4 	movl   $0xd2f56bc4,-0x28f8(%ebp)
 8066690:	6b f5 d2 
 8066693:	c7 85 0c d7 ff ff 2a 	movl   $0x5f69892a,-0x28f4(%ebp)
 806669a:	89 69 5f 
 806669d:	c7 85 10 d7 ff ff f2 	movl   $0x213b0f2,-0x28f0(%ebp)
 80666a4:	b0 13 02 
 80666a7:	c7 85 14 d7 ff ff a2 	movl   $0x192d13a2,-0x28ec(%ebp)
 80666ae:	13 2d 19 
 80666b1:	c7 85 18 d7 ff ff 3b 	movl   $0x1e55793b,-0x28e8(%ebp)
 80666b8:	79 55 1e 
 80666bb:	c7 85 1c d7 ff ff de 	movl   $0xff0f41de,-0x28e4(%ebp)
 80666c2:	41 0f ff 
 80666c5:	c7 85 20 d7 ff ff b6 	movl   $0x352b4b6,-0x28e0(%ebp)
 80666cc:	b4 52 03 
 80666cf:	c7 85 24 d7 ff ff e8 	movl   $0x475742e8,-0x28dc(%ebp)
 80666d6:	42 57 47 
 80666d9:	c7 85 28 d7 ff ff 2f 	movl   $0x4b77942f,-0x28d8(%ebp)
 80666e0:	94 77 4b 
 80666e3:	c7 85 2c d7 ff ff 4b 	movl   $0x65a5ce4b,-0x28d4(%ebp)
 80666ea:	ce a5 65 
 80666ed:	c7 85 30 d7 ff ff 92 	movl   $0x2a89092,-0x28d0(%ebp)
 80666f4:	90 a8 02 
 80666f7:	c7 85 34 d7 ff ff ba 	movl   $0x5df68ba,-0x28cc(%ebp)
 80666fe:	68 df 05 
 8066701:	c7 85 38 d7 ff ff 59 	movl   $0xd5f94359,-0x28c8(%ebp)
 8066708:	43 f9 d5 
 806670b:	c7 85 3c d7 ff ff d5 	movl   $0x515171d5,-0x28c4(%ebp)
 8066712:	71 51 51 
 8066715:	c7 85 40 d7 ff ff a8 	movl   $0x22073a8,-0x28c0(%ebp)
 806671c:	73 20 02 
 806671f:	c7 85 44 d7 ff ff 29 	movl   $0xd6324129,-0x28bc(%ebp)
 8066726:	41 32 d6 
 8066729:	c7 85 48 d7 ff ff f4 	movl   $0x565b9ef4,-0x28b8(%ebp)
 8066730:	9e 5b 56 
 8066733:	c7 85 4c d7 ff ff 89 	movl   $0xb54f1c89,-0x28b4(%ebp)
 806673a:	1c 4f b5 
 806673d:	c7 85 50 d7 ff ff 73 	movl   $0x3671f73,-0x28b0(%ebp)
 8066744:	1f 67 03 
 8066747:	c7 85 54 d7 ff ff 21 	movl   $0x78283421,-0x28ac(%ebp)
 806674e:	34 28 78 
 8066751:	c7 85 58 d7 ff ff 5d 	movl   $0xdeafb25d,-0x28a8(%ebp)
 8066758:	b2 af de 
 806675b:	c7 85 5c d7 ff ff 6d 	movl   $0x2aa5b06d,-0x28a4(%ebp)
 8066762:	b0 a5 2a 
 8066765:	c7 85 60 d7 ff ff f6 	movl   $0x2b8e5f6,-0x28a0(%ebp)
 806676c:	e5 b8 02 
 806676f:	c7 85 64 d7 ff ff 81 	movl   $0x2cecf681,-0x289c(%ebp)
 8066776:	f6 ec 2c 
 8066779:	c7 85 68 d7 ff ff b1 	movl   $0x188c8eb1,-0x2898(%ebp)
 8066780:	8e 8c 18 
 8066783:	c7 85 6c d7 ff ff 8b 	movl   $0xeeeaf38b,-0x2894(%ebp)
 806678a:	f3 ea ee 
 806678d:	c7 85 70 d7 ff ff c4 	movl   $0x22d84c4,-0x2890(%ebp)
 8066794:	84 2d 02 
 8066797:	c7 85 74 d7 ff ff 9b 	movl   $0x7b14bd9b,-0x288c(%ebp)
 806679e:	bd 14 7b 
 80667a1:	c7 85 78 d7 ff ff 1b 	movl   $0x8dadb11b,-0x2888(%ebp)
 80667a8:	b1 ad 8d 
 80667ab:	c7 85 7c d7 ff ff de 	movl   $0x7e44b8de,-0x2884(%ebp)
 80667b2:	b8 44 7e 
 80667b5:	c7 85 80 d7 ff ff a1 	movl   $0x37c07a1,-0x2880(%ebp)
 80667bc:	07 7c 03 
 80667bf:	c7 85 84 d7 ff ff 7c 	movl   $0xc8dd647c,-0x287c(%ebp)
 80667c6:	64 dd c8 
 80667c9:	c7 85 88 d7 ff ff e2 	movl   $0x7157c0e2,-0x2878(%ebp)
 80667d0:	c0 57 71 
 80667d3:	c7 85 8c d7 ff ff 18 	movl   $0x6503c718,-0x2874(%ebp)
 80667da:	c7 03 65 
 80667dd:	c7 85 90 d7 ff ff b4 	movl   $0x2c99fb4,-0x2870(%ebp)
 80667e4:	9f c9 02 
 80667e7:	c7 85 94 d7 ff ff ca 	movl   $0x3a4ab6ca,-0x286c(%ebp)
 80667ee:	b6 4a 3a 
 80667f1:	c7 85 98 d7 ff ff 82 	movl   $0x8ddfcd82,-0x2868(%ebp)
 80667f8:	cd df 8d 
 80667fb:	c7 85 9c d7 ff ff 13 	movl   $0xea696c13,-0x2864(%ebp)
 8066802:	6c 69 ea 
 8066805:	c7 85 a0 d7 ff ff 29 	movl   $0x23ae629,-0x2860(%ebp)
 806680c:	e6 3a 02 
 806680f:	c7 85 a4 d7 ff ff 42 	movl   $0xf6ddf142,-0x285c(%ebp)
 8066816:	f1 dd f6 
 8066819:	c7 85 a8 d7 ff ff 69 	movl   $0x1632e269,-0x2858(%ebp)
 8066820:	e2 32 16 
 8066823:	c7 85 ac d7 ff ff ec 	movl   $0x10a8acec,-0x2854(%ebp)
 806682a:	ac a8 10 
 806682d:	c7 85 b0 d7 ff ff 43 	movl   $0x3917043,-0x2850(%ebp)
 8066834:	70 91 03 
 8066837:	c7 85 b4 d7 ff ff 35 	movl   $0x5f17f435,-0x284c(%ebp)
 806683e:	f4 17 5f 
 8066841:	c7 85 b8 d7 ff ff ee 	movl   $0x44f581ee,-0x2848(%ebp)
 8066848:	81 f5 44 
 806684b:	c7 85 bc d7 ff ff 23 	movl   $0xa6ed5723,-0x2844(%ebp)
 8066852:	57 ed a6 
 8066855:	c7 85 c0 d7 ff ff 35 	movl   $0x2dac035,-0x2840(%ebp)
 806685c:	c0 da 02 
 806685f:	c7 85 c4 d7 ff ff c4 	movl   $0x4c1329c4,-0x283c(%ebp)
 8066866:	29 13 4c 
 8066869:	c7 85 c8 d7 ff ff 58 	movl   $0x372ace58,-0x2838(%ebp)
 8066870:	ce 2a 37 
 8066873:	c7 85 cc d7 ff ff 1c 	movl   $0x858aac1c,-0x2834(%ebp)
 806687a:	ac 8a 85 
 806687d:	c7 85 d0 d7 ff ff c4 	movl   $0x24899c4,-0x2830(%ebp)
 8066884:	99 48 02 
 8066887:	c7 85 d4 d7 ff ff d3 	movl   $0x79b842d3,-0x282c(%ebp)
 806688e:	42 b8 79 
 8066891:	c7 85 d8 d7 ff ff c0 	movl   $0xbeaae3c0,-0x2828(%ebp)
 8066898:	e3 aa be 
 806689b:	c7 85 dc d7 ff ff c6 	movl   $0xa27779c6,-0x2824(%ebp)
 80668a2:	79 77 a2 
 80668a5:	c7 85 e0 d7 ff ff 6d 	movl   $0x3a75c6d,-0x2820(%ebp)
 80668ac:	5c a7 03 
 80668af:	c7 85 e4 d7 ff ff 76 	movl   $0x61603576,-0x281c(%ebp)
 80668b6:	35 60 61 
 80668b9:	c7 85 e8 d7 ff ff 00 	movl   $0x65558300,-0x2818(%ebp)
 80668c0:	83 55 65 
 80668c3:	c7 85 ec d7 ff ff 05 	movl   $0x4ec5fb05,-0x2814(%ebp)
 80668ca:	fb c5 4e 
 80668cd:	c7 85 f0 d7 ff ff f1 	movl   $0x2ec49f1,-0x2810(%ebp)
 80668d4:	49 ec 02 
 80668d7:	c7 85 f4 d7 ff ff 2b 	movl   $0x4de6912b,-0x280c(%ebp)
 80668de:	91 e6 4d 
 80668e1:	c7 85 f8 d7 ff ff 00 	movl   $0xb7779c00,-0x2808(%ebp)
 80668e8:	9c 77 b7 
 80668eb:	c7 85 fc d7 ff ff 6a 	movl   $0xd89e626a,-0x2804(%ebp)
 80668f2:	62 9e d8 
 80668f5:	c7 85 00 d8 ff ff 8d 	movl   $0x256a18d,-0x2800(%ebp)
 80668fc:	a1 56 02 
 80668ff:	c7 85 04 d8 ff ff 12 	movl   $0x163db512,-0x27fc(%ebp)
 8066906:	b5 3d 16 
 8066909:	c7 85 08 d8 ff ff 9a 	movl   $0xf258f99a,-0x27f8(%ebp)
 8066910:	f9 58 f2 
 8066913:	c7 85 0c d8 ff ff dd 	movl   $0x5a9703dd,-0x27f4(%ebp)
 806691a:	03 97 5a 
 806691d:	c7 85 10 d8 ff ff 49 	movl   $0x3bdcf49,-0x27f0(%ebp)
 8066924:	cf bd 03 
 8066927:	c7 85 14 d8 ff ff 41 	movl   $0x11caf741,-0x27ec(%ebp)
 806692e:	f7 ca 11 
 8066931:	c7 85 18 d8 ff ff 48 	movl   $0x5b7a6148,-0x27e8(%ebp)
 8066938:	61 7a 5b 
 806693b:	c7 85 1c d8 ff ff 7e 	movl   $0xe212697e,-0x27e4(%ebp)
 8066942:	69 12 e2 
 8066945:	c7 85 20 d8 ff ff 6d 	movl   $0x2fe3f6d,-0x27e0(%ebp)
 806694c:	3f fe 02 
 806694f:	c7 85 24 d8 ff ff 01 	movl   $0xe3bf901,-0x27dc(%ebp)
 8066956:	f9 3b 0e 
 8066959:	c7 85 28 d8 ff ff a0 	movl   $0xaf951aa0,-0x27d8(%ebp)
 8066960:	1a 95 af 
 8066963:	c7 85 2c d8 ff ff fe 	movl   $0x1b41edfe,-0x27d4(%ebp)
 806696a:	ed 41 1b 
 806696d:	c7 85 30 d8 ff ff 8b 	movl   $0x264ff8b,-0x27d0(%ebp)
 8066974:	ff 64 02 
 8066977:	c7 85 34 d8 ff ff 9b 	movl   $0x7d2cc19b,-0x27cc(%ebp)
 806697e:	c1 2c 7d 
 8066981:	c7 85 38 d8 ff ff 66 	movl   $0x7f54f766,-0x27c8(%ebp)
 8066988:	f7 54 7f 
 806698b:	c7 85 3c d8 ff ff 97 	movl   $0xc5364997,-0x27c4(%ebp)
 8066992:	49 36 c5 
 8066995:	c7 85 40 d8 ff ff 11 	movl   $0x3d4cc11,-0x27c0(%ebp)
 806699c:	cc d4 03 
 806699f:	c7 85 44 d8 ff ff e3 	movl   $0x30f09ae3,-0x27bc(%ebp)
 80669a6:	9a f0 30 
 80669a9:	c7 85 48 d8 ff ff 85 	movl   $0x32aa5f85,-0x27b8(%ebp)
 80669b0:	5f aa 32 
 80669b3:	c7 85 4c d8 ff ff 79 	movl   $0x6a91d479,-0x27b4(%ebp)
 80669ba:	d4 91 6a 
 80669bd:	c7 85 50 d8 ff ff 41 	movl   $0x310a341,-0x27b0(%ebp)
 80669c4:	a3 10 03 
 80669c7:	c7 85 54 d8 ff ff 82 	movl   $0x5a5a1582,-0x27ac(%ebp)
 80669ce:	15 5a 5a 
 80669d1:	c7 85 58 d8 ff ff 37 	movl   $0xf5551937,-0x27a8(%ebp)
 80669d8:	19 55 f5 
 80669db:	c7 85 5c d8 ff ff 60 	movl   $0xeedb1060,-0x27a4(%ebp)
 80669e2:	10 db ee 
 80669e5:	c7 85 60 d8 ff ff cd 	movl   $0x273b5cd,-0x27a0(%ebp)
 80669ec:	b5 73 02 
 80669ef:	c7 85 64 d8 ff ff 9d 	movl   $0xc3c3559d,-0x279c(%ebp)
 80669f6:	55 c3 c3 
 80669f9:	c7 85 68 d8 ff ff 8b 	movl   $0xbbbb5b8b,-0x2798(%ebp)
 8066a00:	5b bb bb 
 8066a03:	c7 85 6c d8 ff ff 34 	movl   $0x4af81a34,-0x2794(%ebp)
 8066a0a:	1a f8 4a 
 8066a0d:	c7 85 70 d8 ff ff 16 	movl   $0x3ec5616,-0x2790(%ebp)
 8066a14:	56 ec 03 
 8066a17:	c7 85 74 d8 ff ff 4a 	movl   $0x6969114a,-0x278c(%ebp)
 8066a1e:	11 69 69 
 8066a21:	c7 85 78 d8 ff ff 09 	movl   $0x2fc91609,-0x2788(%ebp)
 8066a28:	16 c9 2f 
 8066a2b:	c7 85 7c d8 ff ff 2a 	movl   $0xd593482a,-0x2784(%ebp)
 8066a32:	48 93 d5 
 8066a35:	c7 85 80 d8 ff ff 11 	movl   $0x3237811,-0x2780(%ebp)
 8066a3c:	78 23 03 
 8066a3f:	c7 85 84 d8 ff ff 3c 	movl   $0xbaba743c,-0x277c(%ebp)
 8066a46:	74 ba ba 
 8066a49:	c7 85 88 d8 ff ff 3a 	movl   $0x596dab3a,-0x2778(%ebp)
 8066a50:	ab 6d 59 
 8066a53:	c7 85 8c d8 ff ff bb 	movl   $0xaadc39bb,-0x2774(%ebp)
 8066a5a:	39 dc aa 
 8066a5d:	c7 85 90 d8 ff ff 74 	movl   $0x282c674,-0x2770(%ebp)
 8066a64:	c6 82 02 
 8066a67:	c7 85 94 d8 ff ff 30 	movl   $0x2efb9030,-0x276c(%ebp)
 8066a6e:	90 fb 2e 
 8066a71:	c7 85 98 d8 ff ff 62 	movl   $0x478aef62,-0x2768(%ebp)
 8066a78:	ef 8a 47 
 8066a7b:	c7 85 9c d8 ff ff fc 	movl   $0x557cfafc,-0x2764(%ebp)
 8066a82:	fa 7c 55 
 8066a85:	c7 85 a0 d8 ff ff 5d 	movl   $0x202385d,-0x2760(%ebp)
 8066a8c:	38 02 02 
 8066a8f:	c7 85 a4 d8 ff ff e6 	movl   $0x4b2c19e6,-0x275c(%ebp)
 8066a96:	19 2c 4b 
 8066a99:	c7 85 a8 d8 ff ff d0 	movl   $0xd8de4bd0,-0x2758(%ebp)
 8066aa0:	4b de d8 
 8066aa3:	c7 85 ac d8 ff ff c6 	movl   $0x5594c4c6,-0x2754(%ebp)
 8066aaa:	c4 94 55 
 8066aad:	c7 85 b0 d8 ff ff 95 	movl   $0x336c095,-0x2750(%ebp)
 8066ab4:	c0 36 03 
 8066ab7:	c7 85 b4 d8 ff ff b8 	movl   $0x8f014b8,-0x274c(%ebp)
 8066abe:	14 f0 08 
 8066ac1:	c7 85 b8 d8 ff ff 0d 	movl   $0xad7ea30d,-0x2748(%ebp)
 8066ac8:	a3 7e ad 
 8066acb:	c7 85 bc d8 ff ff 38 	movl   $0xaadd6a38,-0x2744(%ebp)
 8066ad2:	6a dd aa 
 8066ad5:	c7 85 c0 d8 ff ff aa 	movl   $0x29233aa,-0x2740(%ebp)
 8066adc:	33 92 02 
 8066adf:	c7 85 c4 d8 ff ff 93 	movl   $0xa0c01093,-0x273c(%ebp)
 8066ae6:	10 c0 a0 
 8066ae9:	c7 85 c8 d8 ff ff 3d 	movl   $0x24654f3d,-0x2738(%ebp)
 8066af0:	4f 65 24 
 8066af3:	c7 85 cc d8 ff ff fa 	movl   $0xbbe454fa,-0x2734(%ebp)
 8066afa:	54 e4 bb 
 8066afd:	c7 85 d0 d8 ff ff bb 	movl   $0x20e8fbb,-0x2730(%ebp)
 8066b04:	8f 0e 02 
 8066b07:	c7 85 d4 d8 ff ff eb 	movl   $0x346680eb,-0x272c(%ebp)
 8066b0e:	80 66 34 
 8066b11:	c7 85 d8 d8 ff ff fc 	movl   $0x3a3bb1fc,-0x2728(%ebp)
 8066b18:	b1 3b 3a 
 8066b1b:	c7 85 dc d8 ff ff 90 	movl   $0xc63a2190,-0x2724(%ebp)
 8066b22:	21 3a c6 
 8066b25:	c7 85 e0 d8 ff ff 92 	movl   $0x34a7f92,-0x2720(%ebp)
 8066b2c:	7f 4a 03 
 8066b2f:	c7 85 e4 d8 ff ff 89 	movl   $0x5d1ecd89,-0x271c(%ebp)
 8066b36:	cd 1e 5d 
 8066b39:	c7 85 e8 d8 ff ff 63 	movl   $0x94fc8e63,-0x2718(%ebp)
 8066b40:	8e fc 94 
 8066b43:	c7 85 ec d8 ff ff a6 	movl   $0x9e94e7a6,-0x2714(%ebp)
 8066b4a:	e7 94 9e 
 8066b4d:	c7 85 f0 d8 ff ff a8 	movl   $0x2a1ffa8,-0x2710(%ebp)
 8066b54:	ff a1 02 
 8066b57:	c7 85 f4 d8 ff ff d4 	movl   $0x4a7f0ad4,-0x270c(%ebp)
 8066b5e:	0a 7f 4a 
 8066b61:	c7 85 f8 d8 ff ff 1c 	movl   $0xaa63a51c,-0x2708(%ebp)
 8066b68:	a5 63 aa 
 8066b6b:	c7 85 fc d8 ff ff eb 	movl   $0x4baa52eb,-0x2704(%ebp)
 8066b72:	52 aa 4b 
 8066b75:	c7 85 00 d9 ff ff ed 	movl   $0x21b32ed,-0x2700(%ebp)
 8066b7c:	32 1b 02 
 8066b7f:	c7 85 04 d9 ff ff ed 	movl   $0x7731aaed,-0x26fc(%ebp)
 8066b86:	aa 31 77 
 8066b89:	c7 85 08 d9 ff ff 60 	movl   $0xdd6c3b60,-0x26f8(%ebp)
 8066b90:	3b 6c dd 
 8066b93:	c7 85 0c d9 ff ff 45 	movl   $0x12aa1e45,-0x26f4(%ebp)
 8066b9a:	1e aa 12 
 8066b9d:	c7 85 10 d9 ff ff e2 	movl   $0x35eb7e2,-0x26f0(%ebp)
 8066ba4:	b7 5e 03 
 8066ba7:	c7 85 14 d9 ff ff bd 	movl   $0xf8f488bd,-0x26ec(%ebp)
 8066bae:	88 f4 f8 
 8066bb1:	c7 85 18 d9 ff ff 19 	movl   $0x1789c919,-0x26e8(%ebp)
 8066bb8:	c9 89 17 
 8066bbb:	c7 85 1c d9 ff ff 6b 	movl   $0xdbbb4b6b,-0x26e4(%ebp)
 8066bc2:	4b bb db 
 8066bc5:	c7 85 20 d9 ff ff b4 	movl   $0x2b22cb4,-0x26e0(%ebp)
 8066bcc:	2c b2 02 
 8066bcf:	c7 85 24 d9 ff ff 64 	movl   $0x2d906d64,-0x26dc(%ebp)
 8066bd6:	6d 90 2d 
 8066bd9:	c7 85 28 d9 ff ff 7b 	movl   $0xac6e3a7b,-0x26d8(%ebp)
 8066be0:	3a 6e ac 
 8066be3:	c7 85 2c d9 ff ff 55 	movl   $0xe2fc3c55,-0x26d4(%ebp)
 8066bea:	3c fc e2 
 8066bed:	c7 85 30 d9 ff ff c3 	movl   $0x22823c3,-0x26d0(%ebp)
 8066bf4:	23 28 02 
 8066bf7:	c7 85 34 d9 ff ff 3a 	movl   $0x15b3e23a,-0x26cc(%ebp)
 8066bfe:	e2 b3 15 
 8066c01:	c7 85 38 d9 ff ff c5 	movl   $0x13e390c5,-0x26c8(%ebp)
 8066c08:	90 e3 13 
 8066c0b:	c7 85 3c d9 ff ff 89 	movl   $0x9e606089,-0x26c4(%ebp)
 8066c12:	60 60 9e 
 8066c15:	c7 85 40 d9 ff ff 6c 	movl   $0x3736c6c,-0x26c0(%ebp)
 8066c1c:	6c 73 03 
 8066c1f:	c7 85 44 d9 ff ff 62 	movl   $0x77c31b62,-0x26bc(%ebp)
 8066c26:	1b c3 77 
 8066c29:	c7 85 48 d9 ff ff 6a 	movl   $0xdcb60d6a,-0x26b8(%ebp)
 8066c30:	0d b6 dc 
 8066c33:	c7 85 4c d9 ff ff a0 	movl   $0xb1e6b3a0,-0x26b4(%ebp)
 8066c3a:	b3 e6 b1 
 8066c3d:	c7 85 50 d9 ff ff 23 	movl   $0x2c2bd23,-0x26b0(%ebp)
 8066c44:	bd c2 02 
 8066c47:	c7 85 54 d9 ff ff b5 	movl   $0xf968e2b5,-0x26ac(%ebp)
 8066c4e:	e2 68 f9 
 8066c51:	c7 85 58 d9 ff ff 21 	movl   $0x7d5e7121,-0x26a8(%ebp)
 8066c58:	71 5e 7d 
 8066c5b:	c7 85 5c d9 ff ff 4d 	movl   $0x8e52294d,-0x26a4(%ebp)
 8066c62:	29 52 8e 
 8066c65:	c7 85 60 d9 ff ff 1c 	movl   $0x235641c,-0x26a0(%ebp)
 8066c6c:	64 35 02 
 8066c6f:	c7 85 64 d9 ff ff 87 	movl   $0x8f0e3787,-0x269c(%ebp)
 8066c76:	37 0e 8f 
 8066c79:	c7 85 68 d9 ff ff 69 	movl   $0xc8971b69,-0x2698(%ebp)
 8066c80:	1b 97 c8 
 8066c83:	c7 85 6c d9 ff ff 48 	movl   $0xb0837548,-0x2694(%ebp)
 8066c8a:	75 83 b0 
 8066c8d:	c7 85 70 d9 ff ff 2d 	movl   $0x388a02d,-0x2690(%ebp)
 8066c94:	a0 88 03 
 8066c97:	c7 85 74 d9 ff ff 6c 	movl   $0xd8d82c6c,-0x268c(%ebp)
 8066c9e:	2c d8 d8 
 8066ca1:	c7 85 78 d9 ff ff ba 	movl   $0xa078e2ba,-0x2688(%ebp)
 8066ca8:	e2 78 a0 
 8066cab:	c7 85 7c d9 ff ff a0 	movl   $0xc0692aa0,-0x2684(%ebp)
 8066cb2:	2a 69 c0 
 8066cb5:	c7 85 80 d9 ff ff 57 	movl   $0x2d3b357,-0x2680(%ebp)
 8066cbc:	b3 d3 02 
 8066cbf:	c7 85 84 d9 ff ff 24 	movl   $0xad79bd24,-0x267c(%ebp)
 8066cc6:	bd 79 ad 
 8066cc9:	c7 85 88 d9 ff ff c8 	movl   $0xe6c71bc8,-0x2678(%ebp)
 8066cd0:	1b c7 e6 
 8066cd3:	c7 85 8c d9 ff ff e6 	movl   $0xcd20eee6,-0x2674(%ebp)
 8066cda:	ee 20 cd 
 8066cdd:	c7 85 90 d9 ff ff df 	movl   $0x242f5df,-0x2670(%ebp)
 8066ce4:	f5 42 02 
 8066ce7:	c7 85 94 d9 ff ff 39 	movl   $0x48c2c839,-0x266c(%ebp)
 8066cee:	c8 c2 48 
 8066cf1:	c7 85 98 d9 ff ff 74 	movl   $0xad82c74,-0x2668(%ebp)
 8066cf8:	2c d8 0a 
 8066cfb:	c7 85 9c d9 ff ff 0b 	movl   $0xe1ce4b0b,-0x2664(%ebp)
 8066d02:	4b ce e1 
 8066d05:	c7 85 a0 d9 ff ff 32 	movl   $0x39e5632,-0x2660(%ebp)
 8066d0c:	56 9e 03 
 8066d0f:	c7 85 a4 d9 ff ff fa 	movl   $0x3a356cfa,-0x265c(%ebp)
 8066d16:	6c 35 3a 
 8066d19:	c7 85 a8 d9 ff ff 90 	movl   $0x3be02390,-0x2658(%ebp)
 8066d20:	23 e0 3b 
 8066d23:	c7 85 ac d9 ff ff 6f 	movl   $0x4e3ea26f,-0x2654(%ebp)
 8066d2a:	a2 3e 4e 
 8066d2d:	c7 85 b0 d9 ff ff c2 	movl   $0x2e511c2,-0x2650(%ebp)
 8066d34:	11 e5 02 
 8066d37:	c7 85 b4 d9 ff ff 95 	movl   $0xc82abd95,-0x264c(%ebp)
 8066d3e:	bd 2a c8 
 8066d41:	c7 85 b8 d9 ff ff d9 	movl   $0x2fe682d9,-0x2648(%ebp)
 8066d48:	82 e6 2f 
 8066d4b:	c7 85 bc d9 ff ff 8c 	movl   $0xd8321b8c,-0x2644(%ebp)
 8066d52:	1b 32 d8 
 8066d55:	c7 85 c0 d9 ff ff 01 	movl   $0x250db01,-0x2640(%ebp)
 8066d5c:	db 50 02 
 8066d5f:	c7 85 c4 d9 ff ff ee 	movl   $0xa6aac8ee,-0x263c(%ebp)
 8066d66:	c8 aa a6 
 8066d69:	c7 85 c8 d9 ff ff 8f 	movl   $0x4ca4048f,-0x2638(%ebp)
 8066d70:	04 a4 4c 
 8066d73:	c7 85 cc d9 ff ff e0 	movl   $0x8d1cf8e0,-0x2634(%ebp)
 8066d7a:	f8 1c 8d 
 8066d7d:	c7 85 d0 d9 ff ff 9c 	movl   $0x3b4919c,-0x2630(%ebp)
 8066d84:	91 b4 03 
 8066d87:	c7 85 d4 d9 ff ff 25 	movl   $0x1eef0725,-0x262c(%ebp)
 8066d8e:	07 ef 1e 
 8066d91:	c7 85 d8 d9 ff ff a6 	movl   $0x3d5003a6,-0x2628(%ebp)
 8066d98:	03 50 3d 
 8066d9b:	c7 85 dc d9 ff ff 80 	movl   $0xa4172d80,-0x2624(%ebp)
 8066da2:	2d 17 a4 
 8066da5:	c7 85 e0 d9 ff ff e3 	movl   $0x2f6dae3,-0x2620(%ebp)
 8066dac:	da f6 02 
 8066daf:	c7 85 e4 d9 ff ff 51 	movl   $0x7f259f51,-0x261c(%ebp)
 8066db6:	9f 25 7f 
 8066db9:	c7 85 e8 d9 ff ff 1e 	movl   $0x9773361e,-0x2618(%ebp)
 8066dc0:	36 73 97 
 8066dc3:	c7 85 ec d9 ff ff 66 	movl   $0xe9ac2466,-0x2614(%ebp)
 8066dca:	24 ac e9 
 8066dcd:	c7 85 f0 d9 ff ff 82 	movl   $0x25f1582,-0x2610(%ebp)
 8066dd4:	15 5f 02 
 8066dd7:	c7 85 f4 d9 ff ff e8 	movl   $0x6508fee8,-0x260c(%ebp)
 8066dde:	fe 08 65 
 8066de1:	c7 85 f8 d9 ff ff ca 	movl   $0x8beb89ca,-0x2608(%ebp)
 8066de8:	89 eb 8b 
 8066deb:	c7 85 fc d9 ff ff 0a 	movl   $0x42ad070a,-0x2604(%ebp)
 8066df2:	07 ad 42 
 8066df5:	c7 85 00 da ff ff 9e 	movl   $0x3cb559e,-0x2600(%ebp)
 8066dfc:	55 cb 03 
 8066dff:	c7 85 04 da ff ff 86 	movl   $0xb73a6586,-0x25fc(%ebp)
 8066e06:	65 3a b7 
 8066e09:	c7 85 08 da ff ff 6e 	movl   $0x6fefa16e,-0x25f8(%ebp)
 8066e10:	a1 ef 6f 
 8066e13:	c7 85 0c da ff ff 08 	movl   $0x688a6c08,-0x25f4(%ebp)
 8066e1a:	6c 8a 68 
 8066e1d:	c7 85 10 da ff ff 4b 	movl   $0x309114b,-0x25f0(%ebp)
 8066e24:	11 09 03 
 8066e27:	c7 85 14 da ff ff 6b 	movl   $0xf8fb846b,-0x25ec(%ebp)
 8066e2e:	84 fb f8 
 8066e31:	c7 85 18 da ff ff be 	movl   $0xf3261abe,-0x25e8(%ebp)
 8066e38:	1a 26 f3 
 8066e3b:	c7 85 1c da ff ff 39 	movl   $0x86d52339,-0x25e4(%ebp)
 8066e42:	23 d5 86 
 8066e45:	c7 85 20 da ff ff 6f 	movl   $0x26da76f,-0x25e0(%ebp)
 8066e4c:	a7 6d 02 
 8066e4f:	c7 85 24 da ff ff 45 	movl   $0x8e5f3a45,-0x25dc(%ebp)
 8066e56:	3a 5f 8e 
 8066e59:	c7 85 28 da ff ff 31 	movl   $0x51d69131,-0x25d8(%ebp)
 8066e60:	91 d6 51 
 8066e63:	c7 85 2c da ff ff f6 	movl   $0x3e21d1f6,-0x25d4(%ebp)
 8066e6a:	d1 21 3e 
 8066e6d:	c7 85 30 da ff ff 7f 	movl   $0x3e2a57f,-0x25d0(%ebp)
 8066e74:	a5 e2 03 
 8066e77:	c7 85 34 da ff ff 37 	movl   $0x71e5c837,-0x25cc(%ebp)
 8066e7e:	c8 e5 71 
 8066e81:	c7 85 38 da ff ff f4 	movl   $0xe4540f4,-0x25c8(%ebp)
 8066e88:	40 45 0e 
 8066e8b:	c7 85 3c da ff ff c5 	movl   $0xfe8174c5,-0x25c4(%ebp)
 8066e92:	74 81 fe 
 8066e95:	c7 85 40 da ff ff 98 	movl   $0x31bb798,-0x25c0(%ebp)
 8066e9c:	b7 1b 03 
 8066e9f:	c7 85 44 da ff ff 60 	movl   $0xf4b7d360,-0x25bc(%ebp)
 8066ea6:	d3 b7 f4 
 8066ea9:	c7 85 48 da ff ff 29 	movl   $0xd8376729,-0x25b8(%ebp)
 8066eb0:	67 37 d8 
 8066eb3:	c7 85 4c da ff ff d0 	movl   $0xcb9ac3d0,-0x25b4(%ebp)
 8066eba:	c3 9a cb 
 8066ebd:	c7 85 50 da ff ff e0 	movl   $0x27c92e0,-0x25b0(%ebp)
 8066ec4:	92 7c 02 
 8066ec7:	c7 85 54 da ff ff ff 	movl   $0x21261eff,-0x25ac(%ebp)
 8066ece:	1e 26 21 
 8066ed1:	c7 85 58 da ff ff 43 	movl   $0xf38bd843,-0x25a8(%ebp)
 8066ed8:	d8 8b f3 
 8066edb:	c7 85 5c da ff ff 1a 	movl   $0xdf5e061a,-0x25a4(%ebp)
 8066ee2:	06 5e df 
 8066ee5:	c7 85 60 da ff ff 9a 	movl   $0x3fa849a,-0x25a0(%ebp)
 8066eec:	84 fa 03 
 8066eef:	c7 85 64 da ff ff ff 	movl   $0x80eb4bff,-0x259c(%ebp)
 8066ef6:	4b eb 80 
 8066ef9:	c7 85 68 da ff ff 02 	movl   $0x293cad02,-0x2598(%ebp)
 8066f00:	ad 3c 29 
 8066f03:	c7 85 6c da ff ff af 	movl   $0xe5e4d1af,-0x2594(%ebp)
 8066f0a:	d1 e4 e5 
 8066f0d:	c7 85 70 da ff ff 7b 	movl   $0x32ed07b,-0x2590(%ebp)
 8066f14:	d0 2e 03 
 8066f17:	c7 85 74 da ff ff cc 	movl   $0xbc3ccc,-0x258c(%ebp)
 8066f1e:	3c bc 00 
 8066f21:	c7 85 78 da ff ff 02 	movl   $0xedca2402,-0x2588(%ebp)
 8066f28:	24 ca ed 
 8066f2b:	c7 85 7c da ff ff 58 	movl   $0xb7ea4158,-0x2584(%ebp)
 8066f32:	41 ea b7 
 8066f35:	c7 85 80 da ff ff fc 	movl   $0x28bd9fc,-0x2580(%ebp)
 8066f3c:	d9 8b 02 
 8066f3f:	c7 85 84 da ff ff a4 	movl   $0x9a3030a4,-0x257c(%ebp)
 8066f46:	30 30 9a 
 8066f49:	c7 85 88 da ff ff 01 	movl   $0xbe3b5001,-0x2578(%ebp)
 8066f50:	50 3b be 
 8066f53:	c7 85 8c da ff ff e0 	movl   $0x9321cde0,-0x2574(%ebp)
 8066f5a:	cd 21 93 
 8066f5d:	c7 85 90 da ff ff 30 	movl   $0x2097b30,-0x2570(%ebp)
 8066f64:	7b 09 02 
 8066f67:	c7 85 94 da ff ff 9f 	movl   $0x904d1a9f,-0x256c(%ebp)
 8066f6e:	1a 4d 90 
 8066f71:	c7 85 98 da ff ff 02 	movl   $0xc9f88002,-0x2568(%ebp)
 8066f78:	80 f8 c9 
 8066f7b:	c7 85 9c da ff ff 9a 	movl   $0x1e9c7c9a,-0x2564(%ebp)
 8066f82:	7c 9c 1e 
 8066f85:	c7 85 a0 da ff ff b4 	movl   $0x3425eb4,-0x2560(%ebp)
 8066f8c:	5e 42 03 
 8066f8f:	c7 85 a4 da ff ff e6 	movl   $0x403daee6,-0x255c(%ebp)
 8066f96:	ae 3d 40 
 8066f99:	c7 85 a8 da ff ff 35 	movl   $0x3b2d3335,-0x2558(%ebp)
 8066fa0:	33 2d 3b 
 8066fa3:	c7 85 ac da ff ff e2 	movl   $0x7ee396e2,-0x2554(%ebp)
 8066faa:	96 e3 7e 
 8066fad:	c7 85 b0 da ff ff f6 	movl   $0x29b7ef6,-0x2550(%ebp)
 8066fb4:	7e 9b 02 
 8066fb7:	c7 85 b4 da ff ff b8 	movl   $0x3158b8,-0x254c(%ebp)
 8066fbe:	58 31 00 
 8066fc1:	c7 85 b8 da ff ff 91 	movl   $0x95bdc291,-0x2548(%ebp)
 8066fc8:	c2 bd 95 
 8066fcb:	c7 85 bc da ff ff 4e 	movl   $0x98b6124e,-0x2544(%ebp)
 8066fd2:	12 b6 98 
 8066fd5:	c7 85 c0 da ff ff 2b 	movl   $0x215ff2b,-0x2540(%ebp)
 8066fdc:	ff 15 02 
 8066fdf:	c7 85 c4 da ff ff 26 	movl   $0xcd1bc126,-0x253c(%ebp)
 8066fe6:	c1 1b cd 
 8066fe9:	c7 85 c8 da ff ff b4 	movl   $0x892f9db4,-0x2538(%ebp)
 8066ff0:	9d 2f 89 
 8066ff3:	c7 85 cc da ff ff 4a 	movl   $0x8df01d4a,-0x2534(%ebp)
 8066ffa:	1d f0 8d 
 8066ffd:	c7 85 d0 da ff ff 12 	movl   $0x3566512,-0x2530(%ebp)
 8067004:	65 56 03 
 8067007:	c7 85 d4 da ff ff 85 	movl   $0xa7c9a85,-0x252c(%ebp)
 806700e:	9a 7c 0a 
 8067011:	c7 85 d8 da ff ff f7 	movl   $0x7594af7,-0x2528(%ebp)
 8067018:	4a 59 07 
 806701b:	c7 85 dc da ff ff a2 	movl   $0xd7f34aa2,-0x2524(%ebp)
 8067022:	4a f3 d7 
 8067025:	c7 85 e0 da ff ff 0e 	movl   $0x2ab840e,-0x2520(%ebp)
 806702c:	84 ab 02 
 806702f:	c7 85 e4 da ff ff d1 	movl   $0x863aed1,-0x251c(%ebp)
 8067036:	ae 63 08 
 8067039:	c7 85 e8 da ff ff 2c 	movl   $0x6c476f2c,-0x2518(%ebp)
 8067040:	6f 47 6c 
 8067043:	c7 85 ec da ff ff 4e 	movl   $0xdff5d54e,-0x2514(%ebp)
 806704a:	d5 f5 df 
 806704d:	c7 85 f0 da ff ff 0b 	movl   $0x222d00b,-0x2510(%ebp)
 8067054:	d0 22 02 
 8067057:	c7 85 f4 da ff ff b4 	movl   $0xda3917b4,-0x250c(%ebp)
 806705e:	17 39 da 
 8067061:	c7 85 f8 da ff ff ac 	movl   $0x13a57eac,-0x2508(%ebp)
 8067068:	7e a5 13 
 806706b:	c7 85 fc da ff ff 17 	movl   $0x66562217,-0x2504(%ebp)
 8067072:	22 56 66 
 8067075:	c7 85 00 db ff ff 79 	movl   $0x36ae679,-0x2500(%ebp)
 806707c:	e6 6a 03 
 806707f:	c7 85 04 db ff ff 90 	movl   $0x482dac90,-0x24fc(%ebp)
 8067086:	ac 2d 48 
 8067089:	c7 85 08 db ff ff 8a 	movl   $0xfb7988a,-0x24f8(%ebp)
 8067090:	98 b7 0f 
 8067093:	c7 85 0c db ff ff ac 	movl   $0x51de81ac,-0x24f4(%ebp)
 806709a:	81 de 51 
 806709d:	c7 85 10 db ff ff 94 	movl   $0x2bbeb94,-0x24f0(%ebp)
 80670a4:	eb bb 02 
 80670a7:	c7 85 14 db ff ff da 	movl   $0x6cf156da,-0x24ec(%ebp)
 80670ae:	56 f1 6c 
 80670b1:	c7 85 18 db ff ff 3b 	movl   $0xd95fad3b,-0x24e8(%ebp)
 80670b8:	ad 5f d9 
 80670bb:	c7 85 1c db ff ff bc 	movl   $0xdb1867bc,-0x24e4(%ebp)
 80670c2:	67 18 db 
 80670c5:	c7 85 20 db ff ff a9 	movl   $0x22fefa9,-0x24e0(%ebp)
 80670cc:	ef 2f 02 
 80670cf:	c7 85 24 db ff ff 5c 	movl   $0xae4ef15c,-0x24dc(%ebp)
 80670d6:	f1 4e ae 
 80670d9:	c7 85 28 db ff ff f8 	movl   $0xf565e1f8,-0x24d8(%ebp)
 80670e0:	e1 65 f5 
 80670e3:	c7 85 2c db ff ff fa 	movl   $0x91c0a5fa,-0x24d4(%ebp)
 80670ea:	a5 c0 91 
 80670ed:	c7 85 30 db ff ff dc 	movl   $0x37fe5dc,-0x24d0(%ebp)
 80670f4:	e5 7f 03 
 80670f7:	c7 85 34 db ff ff b0 	movl   $0x8b725ab0,-0x24cc(%ebp)
 80670fe:	5a 72 8b 
 8067101:	c7 85 38 db ff ff 60 	movl   $0x911e4e60,-0x24c8(%ebp)
 8067108:	4e 1e 91 
 806710b:	c7 85 3c db ff ff 95 	movl   $0xa7cd5195,-0x24c4(%ebp)
 8067112:	51 cd a7 
 8067115:	c7 85 40 db ff ff e3 	movl   $0x2ccb7e3,-0x24c0(%ebp)
 806711c:	b7 cc 02 
 806711f:	c7 85 44 db ff ff 8d 	movl   $0x928488d,-0x24bc(%ebp)
 8067126:	48 28 09 
 8067129:	c7 85 48 db ff ff 1a 	movl   $0xda7ea51a,-0x24b8(%ebp)
 8067130:	a5 7e da 
 8067133:	c7 85 4c db ff ff aa 	movl   $0x530aa7aa,-0x24b4(%ebp)
 806713a:	a7 0a 53 
 806713d:	c7 85 50 db ff ff e9 	movl   $0x23d5fe9,-0x24b0(%ebp)
 8067144:	5f 3d 02 
 8067147:	c7 85 54 db ff ff 15 	movl   $0xa8407415,-0x24ac(%ebp)
 806714e:	74 40 a8 
 8067151:	c7 85 58 db ff ff 29 	movl   $0xf7310829,-0x24a8(%ebp)
 8067158:	08 31 f7 
 806715b:	c7 85 5c db ff ff aa 	movl   $0x1e7772aa,-0x24a4(%ebp)
 8067162:	72 77 1e 
 8067165:	c7 85 60 db ff ff 42 	movl   $0x3956642,-0x24a0(%ebp)
 806716c:	66 95 03 
 806716f:	c7 85 64 db ff ff de 	movl   $0xed005cde,-0x249c(%ebp)
 8067176:	5c 00 ed 
 8067179:	c7 85 68 db ff ff ba 	movl   $0x2c2739ba,-0x2498(%ebp)
 8067180:	39 27 2c 
 8067183:	c7 85 6c db ff ff ef 	movl   $0x185f8eef,-0x2494(%ebp)
 806718a:	8e 5f 18 
 806718d:	c7 85 70 db ff ff 68 	movl   $0x2ddeb68,-0x2490(%ebp)
 8067194:	eb dd 02 
 8067197:	c7 85 74 db ff ff 4b 	movl   $0x24004a4b,-0x248c(%ebp)
 806719e:	4a 00 24 
 80671a1:	c7 85 78 db ff ff 2f 	movl   $0xbcec2e2f,-0x2488(%ebp)
 80671a8:	2e ec bc 
 80671ab:	c7 85 7c db ff ff 25 	movl   $0xad193f25,-0x2484(%ebp)
 80671b2:	3f 19 ad 
 80671b5:	c7 85 80 db ff ff b9 	movl   $0x24b22b9,-0x2480(%ebp)
 80671bc:	22 4b 02 
 80671bf:	c7 85 84 db ff ff 11 	movl   $0xd333aa11,-0x247c(%ebp)
 80671c6:	aa 33 d3 
 80671c9:	c7 85 88 db ff ff b1 	movl   $0x94ad16b1,-0x2478(%ebp)
 80671d0:	16 ad 94 
 80671d3:	c7 85 8c db ff ff 6f 	movl   $0xae8ecb6f,-0x2474(%ebp)
 80671da:	cb 8e ae 
 80671dd:	c7 85 90 db ff ff c2 	movl   $0x3ab6ac2,-0x2470(%ebp)
 80671e4:	6a ab 03 
 80671e7:	c7 85 94 db ff ff db 	movl   $0xdc2954db,-0x246c(%ebp)
 80671ee:	54 29 dc 
 80671f1:	c7 85 98 db ff ff 27 	movl   $0xaa241227,-0x2468(%ebp)
 80671f8:	12 24 aa 
 80671fb:	c7 85 9c db ff ff bf 	movl   $0xbed8a2bf,-0x2464(%ebp)
 8067202:	a2 d8 be 
 8067205:	c7 85 a0 db ff ff 9b 	movl   $0x2ef889b,-0x2460(%ebp)
 806720c:	88 ef 02 
 806720f:	c7 85 a4 db ff ff e2 	movl   $0xe35443e2,-0x245c(%ebp)
 8067216:	43 54 e3 
 8067219:	c7 85 a8 db ff ff 1f 	movl   $0x54e9a81f,-0x2458(%ebp)
 8067220:	a8 e9 54 
 8067223:	c7 85 ac db ff ff 99 	movl   $0x3246e899,-0x2454(%ebp)
 806722a:	e8 46 32 
 806722d:	c7 85 b0 db ff ff 16 	movl   $0x2593a16,-0x2450(%ebp)
 8067234:	3a 59 02 
 8067237:	c7 85 b4 db ff ff 6a 	movl   $0x9eed396a,-0x244c(%ebp)
 806723e:	39 ed 9e 
 8067241:	c7 85 b8 db ff ff cc 	movl   $0x2175d9cc,-0x2448(%ebp)
 8067248:	d9 75 21 
 806724b:	c7 85 bc db ff ff c2 	movl   $0xea0b0dc2,-0x2444(%ebp)
 8067252:	0d 0b ea 
 8067255:	c7 85 c0 db ff ff 89 	movl   $0x3c1f689,-0x2440(%ebp)
 806725c:	f6 c1 03 
 806725f:	c7 85 c4 db ff ff 88 	movl   $0x18bdc788,-0x243c(%ebp)
 8067266:	c7 bd 18 
 8067269:	c7 85 c8 db ff ff 0a 	movl   $0xe7917b0a,-0x2438(%ebp)
 8067270:	7b 91 e7 
 8067273:	c7 85 cc db ff ff 34 	movl   $0xee6f3e34,-0x2434(%ebp)
 806727a:	3e 6f ee 
 806727d:	c7 85 d0 db ff ff 07 	movl   $0x3019207,-0x2430(%ebp)
 8067284:	92 01 03 
 8067287:	c7 85 d4 db ff ff 3a 	movl   $0x46fe393a,-0x242c(%ebp)
 806728e:	39 fe 46 
 8067291:	c7 85 d8 db ff ff 3b 	movl   $0xb9412f3b,-0x2428(%ebp)
 8067298:	2f 41 b9 
 806729b:	c7 85 dc db ff ff 90 	movl   $0x5858fe90,-0x2424(%ebp)
 80672a2:	fe 58 58 
 80672a5:	c7 85 e0 db ff ff 06 	movl   $0x267a806,-0x2420(%ebp)
 80672ac:	a8 67 02 
 80672af:	c7 85 e4 db ff ff 5c 	movl   $0xd7fd285c,-0x241c(%ebp)
 80672b6:	28 fd d7 
 80672b9:	c7 85 e8 db ff ff 5e 	movl   $0xf535185e,-0x2418(%ebp)
 80672c0:	18 35 f5 
 80672c3:	c7 85 ec db ff ff 4d 	movl   $0xf3c1974d,-0x2414(%ebp)
 80672ca:	97 c1 f3 
 80672cd:	c7 85 f0 db ff ff d6 	movl   $0x3d90cd6,-0x2410(%ebp)
 80672d4:	0c d9 03 
 80672d7:	c7 85 f4 db ff ff 7d 	movl   $0x7997537d,-0x240c(%ebp)
 80672de:	53 97 79 
 80672e1:	c7 85 f8 db ff ff e5 	movl   $0xc42a79e5,-0x2408(%ebp)
 80672e8:	79 2a c4 
 80672eb:	c7 85 fc db ff ff a4 	movl   $0x8fce12a4,-0x2404(%ebp)
 80672f2:	12 ce 8f 
 80672f5:	c7 85 00 dc ff ff 45 	movl   $0x3140a45,-0x2400(%ebp)
 80672fc:	0a 14 03 
 80672ff:	c7 85 04 dc ff ff 31 	movl   $0x2e12a931,-0x23fc(%ebp)
 8067306:	a9 12 2e 
 8067309:	c7 85 08 dc ff ff 51 	movl   $0x3552e51,-0x23f8(%ebp)
 8067310:	2e 55 03 
 8067313:	c7 85 0c dc ff ff b7 	movl   $0xca4dbb7,-0x23f4(%ebp)
 806731a:	db a4 0c 
 806731d:	c7 85 10 dc ff ff 9e 	movl   $0x2766e9e,-0x23f0(%ebp)
 8067324:	6e 76 02 
 8067327:	c7 85 14 dc ff ff b4 	movl   $0xe3510eb4,-0x23ec(%ebp)
 806732e:	0e 51 e3 
 8067331:	c7 85 18 dc ff ff 81 	movl   $0x9eeeb081,-0x23e8(%ebp)
 8067338:	b0 ee 9e 
 806733b:	c7 85 1c dc ff ff f1 	movl   $0xe107c5f1,-0x23e4(%ebp)
 8067342:	c5 07 e1 
 8067345:	c7 85 20 dc ff ff fc 	movl   $0x3f0b0fc,-0x23e0(%ebp)
 806734c:	b0 f0 03 
 806734f:	c7 85 24 dc ff ff c3 	movl   $0x4f740bc3,-0x23dc(%ebp)
 8067356:	0b 74 4f 
 8067359:	c7 85 28 dc ff ff ce 	movl   $0x4bf226ce,-0x23d8(%ebp)
 8067360:	26 f2 4b 
 8067363:	c7 85 2c dc ff ff c1 	movl   $0x80d304c1,-0x23d4(%ebp)
 806736a:	04 d3 80 
 806736d:	c7 85 30 dc ff ff fd 	movl   $0x326f3fd,-0x23d0(%ebp)
 8067374:	f3 26 03 
 8067377:	c7 85 34 dc ff ff 9c 	movl   $0x72c33c9c,-0x23cc(%ebp)
 806737e:	3c c3 72 
 8067381:	c7 85 38 dc ff ff 0b 	movl   $0xa3281f0b,-0x23c8(%ebp)
 8067388:	1f 28 a3 
 806738b:	c7 85 3c dc ff ff 9a 	movl   $0xa8d09a,-0x23c4(%ebp)
 8067392:	d0 a8 00 
 8067395:	c7 85 40 dc ff ff fe 	movl   $0x2858ffe,-0x23c0(%ebp)
 806739c:	8f 85 02 
 806739f:	c7 85 44 dc ff ff 4a 	movl   $0xf568fd4a,-0x23bc(%ebp)
 80673a6:	fd 68 f5 
 80673a9:	c7 85 48 dc ff ff d5 	movl   $0x1c2018d5,-0x23b8(%ebp)
 80673b0:	18 20 1c 
 80673b3:	c7 85 4c dc ff ff e2 	movl   $0x9a20a6e2,-0x23b4(%ebp)
 80673ba:	a6 20 9a 
 80673bd:	c7 85 50 dc ff ff 31 	movl   $0x2047331,-0x23b0(%ebp)
 80673c4:	73 04 02 
 80673c7:	c7 85 54 dc ff ff a9 	movl   $0x88a7fba9,-0x23ac(%ebp)
 80673ce:	fb a7 88 
 80673d1:	c7 85 58 dc ff ff 89 	movl   $0xf9ccf489,-0x23a8(%ebp)
 80673d8:	f4 cc f9 
 80673db:	c7 85 5c dc ff ff 9c 	movl   $0xf69aa49c,-0x23a4(%ebp)
 80673e2:	a4 9a f6 
 80673e5:	c7 85 60 dc ff ff e8 	movl   $0x33a51e8,-0x23a0(%ebp)
 80673ec:	51 3a 03 
 80673ef:	c7 85 64 dc ff ff 21 	movl   $0xd3b99621,-0x239c(%ebp)
 80673f6:	96 b9 d3 
 80673f9:	c7 85 68 dc ff ff 3a 	movl   $0xfb0a5d3a,-0x2398(%ebp)
 8067400:	5d 0a fb 
 8067403:	c7 85 6c dc ff ff e3 	movl   $0xf87bb6e3,-0x2394(%ebp)
 806740a:	b6 7b f8 
 806740d:	c7 85 70 dc ff ff 53 	movl   $0x2950e53,-0x2390(%ebp)
 8067414:	0e 95 02 
 8067417:	c7 85 74 dc ff ff e7 	movl   $0xa96144e7,-0x238c(%ebp)
 806741e:	44 61 a9 
 8067421:	c7 85 78 dc ff ff c8 	movl   $0x2f3b7dc8,-0x2388(%ebp)
 8067428:	7d 3b 2f 
 806742b:	c7 85 7c dc ff ff 83 	movl   $0x2d2fc583,-0x2384(%ebp)
 8067432:	c5 2f 2d 
 8067435:	c7 85 80 dc ff ff 43 	movl   $0x210d843,-0x2380(%ebp)
 806743c:	d8 10 02 
 806743f:	c7 85 84 dc ff ff 0c 	movl   $0x42353b0c,-0x237c(%ebp)
 8067446:	3b 35 42 
 8067449:	c7 85 88 dc ff ff 74 	movl   $0xe52bfc74,-0x2378(%ebp)
 8067450:	fc 2b e5 
 8067453:	c7 85 8c dc ff ff d1 	movl   $0xe1e608d1,-0x2374(%ebp)
 806745a:	08 e6 e1 
 806745d:	c7 85 90 dc ff ff d1 	movl   $0x34e26d1,-0x2370(%ebp)
 8067464:	26 4e 03 
 8067467:	c7 85 94 dc ff ff 70 	movl   $0x34f76270,-0x236c(%ebp)
 806746e:	62 f7 34 
 8067471:	c7 85 98 dc ff ff 90 	movl   $0xb7566390,-0x2368(%ebp)
 8067478:	63 56 b7 
 806747b:	c7 85 9c dc ff ff 74 	movl   $0x1b1e6d74,-0x2364(%ebp)
 8067482:	6d 1e 1b 
 8067485:	c7 85 a0 dc ff ff db 	movl   $0x2a4ebdb,-0x2360(%ebp)
 806748c:	eb a4 02 
 806748f:	c7 85 a4 dc ff ff 26 	movl   $0x5d92b526,-0x235c(%ebp)
 8067496:	b5 92 5d 
 8067499:	c7 85 a8 dc ff ff 73 	movl   $0x2c451c73,-0x2358(%ebp)
 80674a0:	1c 45 2c 
 80674a3:	c7 85 ac dc ff ff 2a 	movl   $0x15b1f12a,-0x2354(%ebp)
 80674aa:	f1 b1 15 
 80674ad:	c7 85 b0 dc ff ff 7c 	movl   $0x21d897c,-0x2350(%ebp)
 80674b4:	89 1d 02 
 80674b7:	c7 85 b4 dc ff ff a3 	movl   $0xfc1deea3,-0x234c(%ebp)
 80674be:	ee 1d fc 
 80674c1:	c7 85 b8 dc ff ff 1e 	movl   $0x13a1c71e,-0x2348(%ebp)
 80674c8:	c7 a1 13 
 80674cb:	c7 85 bc dc ff ff dd 	movl   $0x55e981dd,-0x2344(%ebp)
 80674d2:	81 e9 55 
 80674d5:	c7 85 c0 dc ff ff 93 	movl   $0x3627593,-0x2340(%ebp)
 80674dc:	75 62 03 
 80674df:	c7 85 c4 dc ff ff 50 	movl   $0x634b2550,-0x233c(%ebp)
 80674e6:	25 4b 63 
 80674e9:	c7 85 c8 dc ff ff b2 	movl   $0x761b05b2,-0x2338(%ebp)
 80674f0:	05 1b 76 
 80674f3:	c7 85 cc dc ff ff 4a 	movl   $0x44bace4a,-0x2334(%ebp)
 80674fa:	ce ba 44 
 80674fd:	c7 85 d0 dc ff ff dc 	movl   $0x2b52adc,-0x2330(%ebp)
 8067504:	2a b5 02 
 8067507:	c7 85 d4 dc ff ff a6 	movl   $0xe908eaa6,-0x232c(%ebp)
 806750e:	ea 08 e9 
 8067511:	c7 85 d8 dc ff ff c1 	movl   $0x91af37c1,-0x2328(%ebp)
 8067518:	37 af 91 
 806751b:	c7 85 dc dc ff ff 3b 	movl   $0x36fbd83b,-0x2324(%ebp)
 8067522:	d8 fb 36 
 8067525:	c7 85 e0 dc ff ff b0 	movl   $0x22a88b0,-0x2320(%ebp)
 806752c:	88 2a 02 
 806752f:	c7 85 e4 dc ff ff 70 	movl   $0xdb417770,-0x231c(%ebp)
 8067536:	77 41 db 
 8067539:	c7 85 e8 dc ff ff cf 	movl   $0x82b1f2cf,-0x2318(%ebp)
 8067540:	f2 b1 82 
 8067543:	c7 85 ec dc ff ff 92 	movl   $0xf192f392,-0x2314(%ebp)
 806754a:	f3 92 f1 
 806754d:	c7 85 f0 dc ff ff 19 	movl   $0x3774119,-0x2310(%ebp)
 8067554:	41 77 03 
 8067557:	c7 85 f4 dc ff ff f3 	movl   $0xe29ac5f3,-0x230c(%ebp)
 806755e:	c5 9a e2 
 8067561:	c7 85 f8 dc ff ff 3f 	movl   $0xcef4c23f,-0x2308(%ebp)
 8067568:	c2 f4 ce 
 806756b:	c7 85 fc dc ff ff 0e 	movl   $0x5adbf60e,-0x2304(%ebp)
 8067572:	f6 db 5a 
 8067575:	c7 85 00 dd ff ff ae 	movl   $0x2c5cdae,-0x2300(%ebp)
 806757c:	cd c5 02 
 806757f:	c7 85 04 dd ff ff 90 	movl   $0xe87bd190,-0x22fc(%ebp)
 8067586:	d1 7b e8 
 8067589:	c7 85 08 dd ff ff ff 	movl   $0x3f2a34ff,-0x22f8(%ebp)
 8067590:	34 2a 3f 
 8067593:	c7 85 0c dd ff ff 72 	movl   $0xaf165e72,-0x22f4(%ebp)
 806759a:	5e 16 af 
 806759d:	c7 85 10 dd ff ff be 	movl   $0x237d7be,-0x22f0(%ebp)
 80675a4:	d7 37 02 
 80675a7:	c7 85 14 dd ff ff b2 	movl   $0xda5fb5b2,-0x22ec(%ebp)
 80675ae:	b5 5f da 
 80675b1:	c7 85 18 dd ff ff ff 	movl   $0x984387ff,-0x22e8(%ebp)
 80675b8:	87 43 98 
 80675bb:	c7 85 1c dd ff ff 83 	movl   $0x4b56fd83,-0x22e4(%ebp)
 80675c2:	fd 56 4b 
 80675c5:	c7 85 20 dd ff ff 64 	movl   $0x38c8c64,-0x22e0(%ebp)
 80675cc:	8c 8c 03 
 80675cf:	c7 85 24 dd ff ff 5b 	movl   $0x484c915b,-0x22dc(%ebp)
 80675d6:	91 4c 48 
 80675d9:	c7 85 28 dd ff ff 66 	movl   $0xe0360666,-0x22d8(%ebp)
 80675e0:	06 36 e0 
 80675e3:	c7 85 2c dd ff ff 02 	movl   $0xa2abfe02,-0x22d4(%ebp)
 80675ea:	fe ab a2 
 80675ed:	c7 85 30 dd ff ff b6 	movl   $0x2d6d6b6,-0x22d0(%ebp)
 80675f4:	d6 d6 02 
 80675f7:	c7 85 34 dd ff ff 49 	movl   $0xd3707449,-0x22cc(%ebp)
 80675fe:	74 70 d3 
 8067601:	c7 85 38 dd ff ff 51 	movl   $0x802b3851,-0x22c8(%ebp)
 8067608:	38 2b 80 
 806760b:	c7 85 3c dd ff ff 35 	movl   $0x1bbccb35,-0x22c4(%ebp)
 8067612:	cb bc 1b 
 8067615:	c7 85 40 dd ff ff 92 	movl   $0x2457892,-0x22c0(%ebp)
 806761c:	78 45 02 
 806761f:	c7 85 44 dd ff ff 75 	movl   $0xebe72075,-0x22bc(%ebp)
 8067626:	20 e7 eb 
 8067629:	c7 85 48 dd ff ff 82 	movl   $0x99dec082,-0x22b8(%ebp)
 8067630:	c0 de 99 
 8067633:	c7 85 4c dd ff ff 55 	movl   $0x5f947855,-0x22b4(%ebp)
 806763a:	78 94 5f 
 806763d:	c7 85 50 dd ff ff 83 	movl   $0x3a25a83,-0x22b0(%ebp)
 8067644:	5a a2 03 
 8067647:	c7 85 54 dd ff ff 91 	movl   $0x8985b391,-0x22ac(%ebp)
 806764e:	b3 85 89 
 8067651:	c7 85 58 dd ff ff 35 	movl   $0xae4bcd35,-0x22a8(%ebp)
 8067658:	cd 4b ae 
 806765b:	c7 85 5c dd ff ff 77 	movl   $0x19439377,-0x22a4(%ebp)
 8067662:	93 43 19 
 8067665:	c7 85 60 dd ff ff 69 	movl   $0x2e84869,-0x22a0(%ebp)
 806766c:	48 e8 02 
 806766f:	c7 85 64 dd ff ff 74 	movl   $0x3ad15c74,-0x229c(%ebp)
 8067676:	5c d1 3a 
 8067679:	c7 85 68 dd ff ff 91 	movl   $0xbea30a91,-0x2298(%ebp)
 8067680:	0a a3 be 
 8067683:	c7 85 6c dd ff ff 5f 	movl   $0xe102dc5f,-0x2294(%ebp)
 806768a:	dc 02 e1 
 806768d:	c7 85 70 dd ff ff 20 	movl   $0x2536d20,-0x2290(%ebp)
 8067694:	6d 53 02 
 8067697:	c7 85 74 dd ff ff b9 	movl   $0xf7b560b9,-0x228c(%ebp)
 806769e:	60 b5 f7 
 80676a1:	c7 85 78 dd ff ff 81 	movl   $0xfdd1aa81,-0x2288(%ebp)
 80676a8:	aa d1 fd 
 80676ab:	c7 85 7c dd ff ff 65 	movl   $0x19e2d65,-0x2284(%ebp)
 80676b2:	2d 9e 01 
 80676b5:	c7 85 80 dd ff ff 9b 	movl   $0x3b8ae9b,-0x2280(%ebp)
 80676bc:	ae b8 03 
 80676bf:	c7 85 84 dd ff ff 61 	movl   $0x5fc44d61,-0x227c(%ebp)
 80676c6:	4d c4 5f 
 80676c9:	c7 85 88 dd ff ff ce 	movl   $0x97daeece,-0x2278(%ebp)
 80676d0:	ee da 97 
 80676d3:	c7 85 8c dd ff ff 51 	movl   $0xce182451,-0x2274(%ebp)
 80676da:	24 18 ce 
 80676dd:	c7 85 90 dd ff ff 48 	movl   $0x2fa2548,-0x2270(%ebp)
 80676e4:	25 fa 02 
 80676e7:	c7 85 94 dd ff ff 81 	movl   $0x1969d781,-0x226c(%ebp)
 80676ee:	d7 69 19 
 80676f1:	c7 85 98 dd ff ff a5 	movl   $0xdfe258a5,-0x2268(%ebp)
 80676f8:	58 e2 df 
 80676fb:	c7 85 9c dd ff ff da 	movl   $0x71ace9da,-0x2264(%ebp)
 8067702:	e9 ac 71 
 8067705:	c7 85 a0 dd ff ff 6d 	movl   $0x261b76d,-0x2260(%ebp)
 806770c:	b7 61 02 
 806770f:	c7 85 a4 dd ff ff 34 	movl   $0x8f0fbf34,-0x225c(%ebp)
 8067716:	bf 0f 8f 
 8067719:	c7 85 a8 dd ff ff 6e 	movl   $0x996a276e,-0x2258(%ebp)
 8067720:	27 6a 99 
 8067723:	c7 85 ac dd ff ff c4 	movl   $0x4f7b0fc4,-0x2254(%ebp)
 806772a:	0f 7b 4f 
 806772d:	c7 85 b0 dd ff ff e2 	movl   $0x3cf8be2,-0x2250(%ebp)
 8067734:	8b cf 03 
 8067737:	c7 85 b4 dd ff ff 2a 	movl   $0x3f3fcc2a,-0x224c(%ebp)
 806773e:	cc 3f 3f 
 8067741:	c7 85 b8 dd ff ff 25 	movl   $0xe121b925,-0x2248(%ebp)
 8067748:	b9 21 e1 
 806774b:	c7 85 bc dd ff ff 36 	movl   $0x3f95a636,-0x2244(%ebp)
 8067752:	a6 95 3f 
 8067755:	c7 85 c0 dd ff ff e8 	movl   $0x30c6fe8,-0x2240(%ebp)
 806775c:	6f 0c 03 
 806775f:	c7 85 c4 dd ff ff 22 	movl   $0x32997022,-0x223c(%ebp)
 8067766:	70 99 32 
 8067769:	c7 85 c8 dd ff ff 84 	movl   $0xb41afa84,-0x2238(%ebp)
 8067770:	fa 1a b4 
 8067773:	c7 85 cc dd ff ff f8 	movl   $0x994484f8,-0x2234(%ebp)
 806777a:	84 44 99 
 806777d:	c7 85 d0 dd ff ff 86 	movl   $0x2705986,-0x2230(%ebp)
 8067784:	59 70 02 
 8067787:	c7 85 d4 dd ff ff cf 	movl   $0xea8f19cf,-0x222c(%ebp)
 806778e:	19 8f ea 
 8067791:	c7 85 d8 dd ff ff 39 	movl   $0xecf7f739,-0x2228(%ebp)
 8067798:	f7 f7 ec 
 806779b:	c7 85 dc dd ff ff 8d 	movl   $0x286da18d,-0x2224(%ebp)
 80677a2:	a1 6d 28 
 80677a5:	c7 85 e0 dd ff ff a4 	movl   $0x3e6f5a4,-0x2220(%ebp)
 80677ac:	f5 e6 03 
 80677af:	c7 85 e4 dd ff ff 40 	movl   $0xbba5ae40,-0x221c(%ebp)
 80677b6:	ae a5 bb 
 80677b9:	c7 85 e8 dd ff ff 94 	movl   $0x23f99294,-0x2218(%ebp)
 80677c0:	92 f9 23 
 80677c3:	c7 85 ec dd ff ff 0b 	movl   $0xb9f14e0b,-0x2214(%ebp)
 80677ca:	4e f1 b9 
 80677cd:	c7 85 f0 dd ff ff e9 	movl   $0x31f2ae9,-0x2210(%ebp)
 80677d4:	2a 1f 03 
 80677d7:	c7 85 f4 dd ff ff 99 	movl   $0x2fb7be99,-0x220c(%ebp)
 80677de:	be b7 2f 
 80677e1:	c7 85 f8 dd ff ff aa 	movl   $0x4ffadbaa,-0x2208(%ebp)
 80677e8:	db fa 4f 
 80677eb:	c7 85 fc dd ff ff 6f 	movl   $0xc7f43e6f,-0x2204(%ebp)
 80677f2:	3e f4 c7 
 80677f5:	c7 85 00 de ff ff 87 	movl   $0x27f5587,-0x2200(%ebp)
 80677fc:	55 7f 02 
 80677ff:	c7 85 04 de ff ff c2 	movl   $0x1925fdc2,-0x21fc(%ebp)
 8067806:	fd 25 19 
 8067809:	c7 85 08 de ff ff dd 	movl   $0x7ff7c5dd,-0x21f8(%ebp)
 8067810:	c5 f7 7f 
 8067813:	c7 85 0c de ff ff 18 	movl   $0xa6539718,-0x21f4(%ebp)
 806781a:	97 53 a6 
 806781d:	c7 85 10 de ff ff 3f 	movl   $0x3feef3f,-0x21f0(%ebp)
 8067824:	ef fe 03 
 8067827:	c7 85 14 de ff ff 9b 	movl   $0x141e649b,-0x21ec(%ebp)
 806782e:	64 1e 14 
 8067831:	c7 85 18 de ff ff e4 	movl   $0xccc637e4,-0x21e8(%ebp)
 8067838:	37 c6 cc 
 806783b:	c7 85 1c de ff ff 46 	movl   $0xb842df46,-0x21e4(%ebp)
 8067842:	df 42 b8 
 8067845:	c7 85 20 de ff ff ff 	movl   $0x33258ff,-0x21e0(%ebp)
 806784c:	58 32 03 
 806784f:	c7 85 24 de ff ff af 	movl   $0x434b83af,-0x21dc(%ebp)
 8067856:	83 4b 43 
 8067859:	c7 85 28 de ff ff 83 	movl   $0xd704f983,-0x21d8(%ebp)
 8067860:	f9 04 d7 
 8067863:	c7 85 2c de ff ff 6b 	movl   $0x60357f6b,-0x21d4(%ebp)
 806786a:	7f 35 60 
 806786d:	c7 85 30 de ff ff 99 	movl   $0x28ead99,-0x21d0(%ebp)
 8067874:	ad 8e 02 
 8067877:	c7 85 34 de ff ff 8c 	movl   $0xcf6f9c8c,-0x21cc(%ebp)
 806787e:	9c 6f cf 
 8067881:	c7 85 38 de ff ff 35 	movl   $0x126a6135,-0x21c8(%ebp)
 8067888:	61 6a 12 
 806788b:	c7 85 3c de ff ff 23 	movl   $0x4cf79923,-0x21c4(%ebp)
 8067892:	99 f7 4c 
 8067895:	c7 85 40 de ff ff 14 	movl   $0x20bbe14,-0x21c0(%ebp)
 806789c:	be 0b 02 
 806789f:	c7 85 44 de ff ff 14 	movl   $0x18b29414,-0x21bc(%ebp)
 80678a6:	94 b2 18 
 80678a9:	c7 85 48 de ff ff 56 	movl   $0x83dd6856,-0x21b8(%ebp)
 80678b0:	68 dd 83 
 80678b3:	c7 85 4c de ff ff 9e 	movl   $0x47f28e9e,-0x21b4(%ebp)
 80678ba:	8e f2 47 
 80678bd:	c7 85 50 de ff ff ed 	movl   $0x345fced,-0x21b0(%ebp)
 80678c4:	fc 45 03 
 80678c7:	c7 85 54 de ff ff dd 	movl   $0xe08edcdd,-0x21ac(%ebp)
 80678ce:	dc 8e e0 
 80678d1:	c7 85 58 de ff ff 44 	movl   $0x9cb12044,-0x21a8(%ebp)
 80678d8:	20 b1 9c 
 80678db:	c7 85 5c de ff ff 4b 	movl   $0x65ba54b,-0x21a4(%ebp)
 80678e2:	a5 5b 06 
 80678e5:	c7 85 60 de ff ff f1 	movl   $0x29e63f1,-0x21a0(%ebp)
 80678ec:	63 9e 02 
 80678ef:	c7 85 64 de ff ff 7d 	movl   $0xb3a57d7d,-0x219c(%ebp)
 80678f6:	7d a5 b3 
 80678f9:	c7 85 68 de ff ff d0 	movl   $0x16f419d0,-0x2198(%ebp)
 8067900:	19 f4 16 
 8067903:	c7 85 6c de ff ff d6 	movl   $0x5161dd6,-0x2194(%ebp)
 806790a:	1d 16 05 
 806790d:	c7 85 70 de ff ff f4 	movl   $0x2184ff4,-0x2190(%ebp)
 8067914:	4f 18 02 
 8067917:	c7 85 74 de ff ff fb 	movl   $0xec3bfbfb,-0x218c(%ebp)
 806791e:	fb 3b ec 
 8067921:	c7 85 78 de ff ff 4d 	movl   $0x8b20294d,-0x2188(%ebp)
 8067928:	29 20 8b 
 806792b:	c7 85 7c de ff ff 56 	movl   $0x6e89c956,-0x2184(%ebp)
 8067932:	c9 89 6e 
 8067935:	c7 85 80 de ff ff 86 	movl   $0x35a1986,-0x2180(%ebp)
 806793c:	19 5a 03 
 806793f:	c7 85 84 de ff ff 96 	movl   $0xbcfcc996,-0x217c(%ebp)
 8067946:	c9 fc bc 
 8067949:	c7 85 88 de ff ff a4 	movl   $0x3c19baa4,-0x2178(%ebp)
 8067950:	ba 19 3c 
 8067953:	c7 85 8c de ff ff 45 	movl   $0xf207d445,-0x2174(%ebp)
 806795a:	d4 07 f2 
 806795d:	c7 85 90 de ff ff d1 	movl   $0x2ae7ad1,-0x2170(%ebp)
 8067964:	7a ae 02 
 8067967:	c7 85 94 de ff ff df 	movl   $0x30ca3adf,-0x216c(%ebp)
 806796e:	3a ca 30 
 8067971:	c7 85 98 de ff ff ea 	movl   $0xc9ae2eea,-0x2168(%ebp)
 8067978:	2e ae c9 
 806797b:	c7 85 9c de ff ff 9d 	movl   $0x5b39769d,-0x2164(%ebp)
 8067982:	76 39 5b 
 8067985:	c7 85 a0 de ff ff 0e 	movl   $0x2252f0e,-0x2160(%ebp)
 806798c:	2f 25 02 
 806798f:	c7 85 a4 de ff ff fd 	movl   $0x1add2afd,-0x215c(%ebp)
 8067996:	2a dd 1a 
 8067999:	c7 85 a8 de ff ff dd 	movl   $0xf7d17dd,-0x2158(%ebp)
 80679a0:	17 7d 0f 
 80679a3:	c7 85 ac de ff ff 96 	movl   $0x91f58a96,-0x2154(%ebp)
 80679aa:	8a f5 91 
 80679ad:	c7 85 b0 de ff ff b0 	movl   $0x36eb1b0,-0x2150(%ebp)
 80679b4:	b1 6e 03 
 80679b7:	c7 85 b4 de ff ff 64 	movl   $0x7be42264,-0x214c(%ebp)
 80679be:	22 e4 7b 
 80679c1:	c7 85 b8 de ff ff 4a 	movl   $0x3f97464a,-0x2148(%ebp)
 80679c8:	46 97 3f 
 80679cb:	c7 85 bc de ff ff ab 	movl   $0x41913bab,-0x2144(%ebp)
 80679d2:	3b 91 41 
 80679d5:	c7 85 c0 de ff ff 8d 	movl   $0x2bef48d,-0x2140(%ebp)
 80679dc:	f4 be 02 
 80679df:	c7 85 c4 de ff ff 50 	movl   $0x631ce850,-0x213c(%ebp)
 80679e6:	e8 1c 63 
 80679e9:	c7 85 c8 de ff ff 08 	movl   $0xcc790508,-0x2138(%ebp)
 80679f0:	05 79 cc 
 80679f3:	c7 85 cc de ff ff 55 	movl   $0xce0dc955,-0x2134(%ebp)
 80679fa:	c9 0d ce 
 80679fd:	c7 85 d0 de ff ff 3d 	movl   $0x2325d3d,-0x2130(%ebp)
 8067a04:	5d 32 02 
 8067a07:	c7 85 d4 de ff ff 4d 	movl   $0x4fb0d4d,-0x212c(%ebp)
 8067a0e:	0d fb 04 
 8067a11:	c7 85 d8 de ff ff a7 	movl   $0xe0c1a1a7,-0x2128(%ebp)
 8067a18:	a1 c1 e0 
 8067a1b:	c7 85 dc de ff ff 22 	movl   $0xe3494222,-0x2124(%ebp)
 8067a22:	42 49 e3 
 8067a25:	c7 85 e0 de ff ff 62 	movl   $0x383c862,-0x2120(%ebp)
 8067a2c:	c8 83 03 
 8067a2f:	c7 85 e4 de ff ff 3e 	movl   $0x9d95a43e,-0x211c(%ebp)
 8067a36:	a4 95 9d 
 8067a39:	c7 85 e8 de ff ff 85 	movl   $0x4d67b485,-0x2118(%ebp)
 8067a40:	b4 67 4d 
 8067a43:	c7 85 ec de ff ff 82 	movl   $0x4f6dce82,-0x2114(%ebp)
 8067a4a:	ce 6d 4f 
 8067a4d:	c7 85 f0 de ff ff 82 	movl   $0x2cfd382,-0x2110(%ebp)
 8067a54:	d3 cf 02 
 8067a57:	c7 85 f4 de ff ff cb 	movl   $0x17aae9cb,-0x210c(%ebp)
 8067a5e:	e9 aa 17 
 8067a61:	c7 85 f8 de ff ff 9e 	movl   $0x711fc39e,-0x2108(%ebp)
 8067a68:	c3 1f 71 
 8067a6b:	c7 85 fc de ff ff 9b 	movl   $0x3f8b0b9b,-0x2104(%ebp)
 8067a72:	0b 8b 3f 
 8067a75:	c7 85 00 df ff ff 68 	movl   $0x23fdc68,-0x2100(%ebp)
 8067a7c:	dc 3f 02 
 8067a7f:	c7 85 04 df ff ff 45 	movl   $0x8c44a945,-0x20fc(%ebp)
 8067a86:	a9 44 8c 
 8067a89:	c7 85 08 df ff ff 96 	movl   $0xe832d296,-0x20f8(%ebp)
 8067a90:	d2 32 e8 
 8067a93:	c7 85 0c df ff ff 2b 	movl   $0xcc11ac2b,-0x20f4(%ebp)
 8067a9a:	ac 11 cc 
 8067a9d:	c7 85 10 df ff ff a6 	movl   $0x39960a6,-0x20f0(%ebp)
 8067aa4:	60 99 03 
 8067aa7:	c7 85 14 df ff ff 9e 	movl   $0x3d03ba9e,-0x20ec(%ebp)
 8067aae:	ba 03 3d 
 8067ab1:	c7 85 18 df ff ff 45 	movl   $0xecf57545,-0x20e8(%ebp)
 8067ab8:	75 f5 ec 
 8067abb:	c7 85 1c df ff ff ef 	movl   $0x9a7bcef,-0x20e4(%ebp)
 8067ac2:	bc a7 09 
 8067ac5:	c7 85 20 df ff ff 1f 	movl   $0x2e11a1f,-0x20e0(%ebp)
 8067acc:	1a e1 02 
 8067acf:	c7 85 24 df ff ff b1 	movl   $0x6402fbb1,-0x20dc(%ebp)
 8067ad6:	fb 02 64 
 8067ad9:	c7 85 28 df ff ff 37 	movl   $0x572ac437,-0x20d8(%ebp)
 8067ae0:	c4 2a 57 
 8067ae3:	c7 85 2c df ff ff 26 	movl   $0x3aec9726,-0x20d4(%ebp)
 8067aea:	97 ec 3a 
 8067aed:	c7 85 30 df ff ff 7f 	movl   $0x24dae7f,-0x20d0(%ebp)
 8067af4:	ae 4d 02 
 8067af7:	c7 85 34 df ff ff b5 	movl   $0x6cd192b5,-0x20cc(%ebp)
 8067afe:	92 d1 6c 
 8067b01:	c7 85 38 df ff ff 25 	movl   $0x58446d25,-0x20c8(%ebp)
 8067b08:	6d 44 58 
 8067b0b:	c7 85 3c df ff ff 3d 	movl   $0x5e47583d,-0x20c4(%ebp)
 8067b12:	58 47 5e 
 8067b15:	c7 85 40 df ff ff 98 	movl   $0x3af7d98,-0x20c0(%ebp)
 8067b1c:	7d af 03 
 8067b1f:	c7 85 44 df ff ff c4 	movl   $0x23dadbc4,-0x20bc(%ebp)
 8067b26:	db da 23 
 8067b29:	c7 85 48 df ff ff 51 	movl   $0x79d05751,-0x20b8(%ebp)
 8067b30:	57 d0 79 
 8067b33:	c7 85 4c df ff ff 97 	movl   $0x4b6c4697,-0x20b4(%ebp)
 8067b3a:	46 6c 4b 
 8067b3d:	c7 85 50 df ff ff e0 	movl   $0x2f2cae0,-0x20b0(%ebp)
 8067b44:	ca f2 02 
 8067b47:	c7 85 54 df ff ff 03 	movl   $0xe97be303,-0x20ac(%ebp)
 8067b4e:	e3 7b e9 
 8067b51:	c7 85 58 df ff ff 40 	movl   $0x94a6ac40,-0x20a8(%ebp)
 8067b58:	ac a6 94 
 8067b5b:	c7 85 5c df ff ff df 	movl   $0x3c569edf,-0x20a4(%ebp)
 8067b62:	9e 56 3c 
 8067b65:	c7 85 60 df ff ff 80 	movl   $0x25bd580,-0x20a0(%ebp)
 8067b6c:	d5 5b 02 
 8067b6f:	c7 85 64 df ff ff 6c 	movl   $0xf2c9e6c,-0x209c(%ebp)
 8067b76:	9e 2c 0f 
 8067b79:	c7 85 68 df ff ff 9b 	movl   $0x8771139b,-0x2098(%ebp)
 8067b80:	13 71 87 
 8067b83:	c7 85 6c df ff ff 32 	movl   $0xc6f0fe32,-0x2094(%ebp)
 8067b8a:	fe f0 c6 
 8067b8d:	c7 85 70 df ff ff 66 	movl   $0x3c62266,-0x2090(%ebp)
 8067b94:	22 c6 03 
 8067b97:	c7 85 74 df ff ff bd 	movl   $0xd8f07ebd,-0x208c(%ebp)
 8067b9e:	7e f0 d8 
 8067ba1:	c7 85 78 df ff ff 48 	movl   $0x9f8da948,-0x2088(%ebp)
 8067ba8:	a9 8d 9f 
 8067bab:	c7 85 7c df ff ff 5b 	movl   $0x38c0cb5b,-0x2084(%ebp)
 8067bb2:	cb c0 38 
 8067bb5:	c7 85 80 df ff ff 52 	movl   $0x304e852,-0x2080(%ebp)
 8067bbc:	e8 04 03 
 8067bbf:	c7 85 84 df ff ff 64 	movl   $0xe0c06564,-0x207c(%ebp)
 8067bc6:	65 c0 e0 
 8067bc9:	c7 85 88 df ff ff d3 	movl   $0xe60aedd3,-0x2078(%ebp)
 8067bd0:	ed 0a e6 
 8067bd3:	c7 85 8c df ff ff e2 	movl   $0xfa33d5e2,-0x2074(%ebp)
 8067bda:	d5 33 fa 
 8067bdd:	c7 85 90 df ff ff 74 	movl   $0x26a5374,-0x2070(%ebp)
 8067be4:	53 6a 02 
 8067be7:	c7 85 94 df ff ff d2 	movl   $0x679a3bd2,-0x206c(%ebp)
 8067bee:	3b 9a 67 
 8067bf1:	c7 85 98 df ff ff b9 	movl   $0xa344afb9,-0x2068(%ebp)
 8067bf8:	af 44 a3 
 8067bfb:	c7 85 9c df ff ff 04 	movl   $0xc3862304,-0x2064(%ebp)
 8067c02:	23 86 c3 
 8067c05:	c7 85 a0 df ff ff 54 	movl   $0x3dd5254,-0x2060(%ebp)
 8067c0c:	52 dd 03 
 8067c0f:	c7 85 a4 df ff ff a8 	movl   $0x8614fca8,-0x205c(%ebp)
 8067c16:	fc 14 86 
 8067c19:	c7 85 a8 df ff ff c7 	movl   $0xe903bfc7,-0x2058(%ebp)
 8067c20:	bf 03 e9 
 8067c23:	c7 85 ac df ff ff 36 	movl   $0x9c6b4f36,-0x2054(%ebp)
 8067c2a:	4f 6b 9c 
 8067c2d:	c7 85 b0 df ff ff 10 	movl   $0x3177510,-0x2050(%ebp)
 8067c34:	75 17 03 
 8067c37:	c7 85 b4 df ff ff 20 	movl   $0x3810ca20,-0x204c(%ebp)
 8067c3e:	ca 10 38 
 8067c41:	c7 85 b8 df ff ff 39 	movl   $0xba696639,-0x2048(%ebp)
 8067c48:	66 69 ba 
 8067c4b:	c7 85 bc df ff ff f8 	movl   $0xb055d8f8,-0x2044(%ebp)
 8067c52:	d8 55 b0 
 8067c55:	c7 85 c0 df ff ff 73 	movl   $0x2792a73,-0x2040(%ebp)
 8067c5c:	2a 79 02 
 8067c5f:	c7 85 c4 df ff ff 9a 	movl   $0x59b4769a,-0x203c(%ebp)
 8067c66:	76 b4 59 
 8067c69:	c7 85 c8 df ff ff 28 	movl   $0x2a423d28,-0x2038(%ebp)
 8067c70:	3d 42 2a 
 8067c73:	c7 85 cc df ff ff c1 	movl   $0x1a22f4c1,-0x2034(%ebp)
 8067c7a:	f4 22 1a 
 8067c7d:	c7 85 d0 df ff ff b9 	movl   $0x3f510b9,-0x2030(%ebp)
 8067c84:	10 f5 03 
 8067c87:	c7 85 d4 df ff ff 15 	movl   $0x47c39215,-0x202c(%ebp)
 8067c8e:	92 c3 47 
 8067c91:	c7 85 d8 df ff ff 20 	movl   $0xee9b6420,-0x2028(%ebp)
 8067c98:	64 9b ee 
 8067c9b:	c7 85 dc df ff ff 00 	movl   $0x481bf700,-0x2024(%ebp)
 8067ca2:	f7 1b 48 
 8067ca5:	c7 85 e0 df ff ff c7 	movl   $0x32a73c7,-0x2020(%ebp)
 8067cac:	73 2a 03 
 8067caf:	c7 85 e4 df ff ff aa 	movl   $0x396941aa,-0x201c(%ebp)
 8067cb6:	41 69 39 
 8067cb9:	c7 85 e8 df ff ff 80 	movl   $0xbee2b680,-0x2018(%ebp)
 8067cc0:	b6 e2 be 
 8067cc3:	c7 85 ec df ff ff 00 	movl   $0x6ce32c00,-0x2014(%ebp)
 8067cca:	2c e3 6c 
 8067ccd:	c7 85 f0 df ff ff 9f 	movl   $0x2885c9f,-0x2010(%ebp)
 8067cd4:	5c 88 02 
 8067cd7:	c7 85 f4 df ff ff 55 	movl   $0x61210155,-0x200c(%ebp)
 8067cde:	01 21 61 
 8067ce1:	c7 85 f8 df ff ff 33 	movl   $0xff1bc533,-0x2008(%ebp)
 8067ce8:	c5 1b ff 
 8067ceb:	c7 85 fc df ff ff 66 	movl   $0x8a4f5666,-0x2004(%ebp)
 8067cf2:	56 4f 8a 
 8067cf5:	c7 85 00 e0 ff ff 7f 	movl   $0x206b07f,-0x2000(%ebp)
 8067cfc:	b0 06 02 
 8067cff:	c7 85 04 e0 ff ff bb 	movl   $0x35019bbb,-0x1ffc(%ebp)
 8067d06:	9b 01 35 
 8067d09:	c7 85 08 e0 ff ff 52 	movl   $0x31c60852,-0x1ff8(%ebp)
 8067d10:	08 c6 31 
 8067d13:	c7 85 0c e0 ff ff 0b 	movl   $0x76e5570b,-0x1ff4(%ebp)
 8067d1a:	57 e5 76 
 8067d1d:	c7 85 10 e0 ff ff 32 	movl   $0x33de732,-0x1ff0(%ebp)
 8067d24:	e7 3d 03 
 8067d27:	c7 85 14 e0 ff ff 63 	movl   $0xc4014963,-0x1fec(%ebp)
 8067d2e:	49 01 c4 
 8067d31:	c7 85 18 e0 ff ff 41 	movl   $0x27d1a041,-0x1fe8(%ebp)
 8067d38:	a0 d1 27 
 8067d3b:	c7 85 1c e0 ff ff 3c 	movl   $0x5f1ddf3c,-0x1fe4(%ebp)
 8067d42:	df 1d 5f 
 8067d45:	c7 85 20 e0 ff ff 28 	movl   $0x297ec28,-0x1fe0(%ebp)
 8067d4c:	ec 97 02 
 8067d4f:	c7 85 24 e0 ff ff 82 	movl   $0xd0010782,-0x1fdc(%ebp)
 8067d56:	07 01 d0 
 8067d59:	c7 85 28 e0 ff ff 67 	movl   $0xeca7b367,-0x1fd8(%ebp)
 8067d60:	b3 a7 ec 
 8067d63:	c7 85 2c e0 ff ff fc 	movl   $0x7f4b18fc,-0x1fd4(%ebp)
 8067d6a:	18 4b 7f 
 8067d6d:	c7 85 30 e0 ff ff 53 	movl   $0x2132353,-0x1fd0(%ebp)
 8067d74:	23 13 02 
 8067d77:	c7 85 34 e0 ff ff 9d 	movl   $0x8001a59d,-0x1fcc(%ebp)
 8067d7e:	a5 01 80 
 8067d81:	c7 85 38 e0 ff ff 0c 	movl   $0xadd91f0c,-0x1fc8(%ebp)
 8067d88:	1f d9 ad 
 8067d8b:	c7 85 3c e0 ff ff 94 	movl   $0x3211c194,-0x1fc4(%ebp)
 8067d92:	c1 11 32 
 8067d95:	c7 85 40 e0 ff ff 1f 	movl   $0x351d21f,-0x1fc0(%ebp)
 8067d9c:	d2 51 03 
 8067d9f:	c7 85 44 e0 ff ff 7e 	movl   $0x3334847e,-0x1fbc(%ebp)
 8067da6:	84 34 33 
 8067da9:	c7 85 48 e0 ff ff 3d 	movl   $0xf17a7f3d,-0x1fb8(%ebp)
 8067db0:	7f 7a f1 
 8067db3:	c7 85 4c e0 ff ff 76 	movl   $0x280e3476,-0x1fb4(%ebp)
 8067dba:	34 0e 28 
 8067dbd:	c7 85 50 e0 ff ff 4c 	movl   $0x2a7db4c,-0x1fb0(%ebp)
 8067dc4:	db a7 02 
 8067dc7:	c7 85 54 e0 ff ff 98 	movl   $0x5c2a0398,-0x1fac(%ebp)
 8067dce:	03 2a 5c 
 8067dd1:	c7 85 58 e0 ff ff 97 	movl   $0x27953297,-0x1fa8(%ebp)
 8067dd8:	32 95 27 
 8067ddb:	c7 85 5c e0 ff ff 5f 	movl   $0x533e905f,-0x1fa4(%ebp)
 8067de2:	90 3e 53 
 8067de5:	c7 85 60 e0 ff ff a3 	movl   $0x21fe2a3,-0x1fa0(%ebp)
 8067dec:	e2 1f 02 
 8067def:	c7 85 64 e0 ff ff 26 	movl   $0x93766c26,-0x1f9c(%ebp)
 8067df6:	6c 76 93 
 8067df9:	c7 85 68 e0 ff ff 58 	movl   $0xd8eeb758,-0x1f98(%ebp)
 8067e00:	b7 ee d8 
 8067e03:	c7 85 6c e0 ff ff 31 	movl   $0xb8641a31,-0x1f94(%ebp)
 8067e0a:	1a 64 b8 
 8067e0d:	c7 85 70 e0 ff ff 6b 	movl   $0x366376b,-0x1f90(%ebp)
 8067e14:	37 66 03 
 8067e17:	c7 85 74 e0 ff ff 52 	movl   $0x42c52352,-0x1f8c(%ebp)
 8067e1e:	23 c5 42 
 8067e21:	c7 85 78 e0 ff ff ad 	movl   $0x7a5892ad,-0x1f88(%ebp)
 8067e28:	92 58 7a 
 8067e2b:	c7 85 7c e0 ff ff c1 	movl   $0x2d1ce1c1,-0x1f84(%ebp)
 8067e32:	e1 1c 2d 
 8067e35:	c7 85 80 e0 ff ff 56 	movl   $0x2b82c56,-0x1f80(%ebp)
 8067e3c:	2c b8 02 
 8067e3f:	c7 85 84 e0 ff ff 75 	movl   $0x2374f75,-0x1f7c(%ebp)
 8067e46:	4f 37 02 
 8067e49:	c7 85 88 e0 ff ff f1 	movl   $0xfb7a0ef1,-0x1f78(%ebp)
 8067e50:	0e 7a fb 
 8067e53:	c7 85 8c e0 ff ff cd 	movl   $0xf0e3e7cd,-0x1f74(%ebp)
 8067e5a:	e7 e3 f0 
 8067e5d:	c7 85 90 e0 ff ff 44 	movl   $0x22cf044,-0x1f70(%ebp)
 8067e64:	f0 2c 02 
 8067e67:	c7 85 94 e0 ff ff 54 	movl   $0x38bb254,-0x1f6c(%ebp)
 8067e6e:	b2 8b 03 
 8067e71:	c7 85 98 e0 ff ff e8 	movl   $0xc59017e8,-0x1f68(%ebp)
 8067e78:	17 90 c5 
 8067e7b:	c7 85 9c e0 ff ff 7c 	movl   $0xe7d30c7c,-0x1f64(%ebp)
 8067e82:	0c d3 e7 
 8067e85:	c7 85 a0 e0 ff ff 07 	movl   $0x37b1a07,-0x1f60(%ebp)
 8067e8c:	1a 7b 03 
 8067e8f:	c7 85 a4 e0 ff ff aa 	movl   $0x693c8eaa,-0x1f5c(%ebp)
 8067e96:	8e 3c 69 
 8067e99:	c7 85 a8 e0 ff ff 86 	movl   $0x37a67986,-0x1f58(%ebp)
 8067ea0:	79 a6 37 
 8067ea3:	c7 85 ac e0 ff ff ca 	movl   $0xeca8d6ca,-0x1f54(%ebp)
 8067eaa:	d6 a8 ec 
 8067ead:	c7 85 b0 e0 ff ff 9f 	movl   $0x2c8e19f,-0x1f50(%ebp)
 8067eb4:	e1 c8 02 
 8067eb7:	c7 85 b4 e0 ff ff bb 	movl   $0xedca0bbb,-0x1f4c(%ebp)
 8067ebe:	0b ca ed 
 8067ec1:	c7 85 b8 e0 ff ff d1 	movl   $0xf951fad1,-0x1f48(%ebp)
 8067ec8:	fa 51 f9 
 8067ecb:	c7 85 bc e0 ff ff d4 	movl   $0x8a20abd4,-0x1f44(%ebp)
 8067ed2:	ab 20 8a 
 8067ed5:	c7 85 c0 e0 ff ff 19 	movl   $0x23a4e19,-0x1f40(%ebp)
 8067edc:	4e 3a 02 
 8067edf:	c7 85 c4 e0 ff ff 2b 	movl   $0x7c76792b,-0x1f3c(%ebp)
 8067ee6:	79 76 7c 
 8067ee9:	c7 85 c8 e0 ff ff e9 	movl   $0x28832ae9,-0x1f38(%ebp)
 8067ef0:	2a 83 28 
 8067ef3:	c7 85 cc e0 ff ff bb 	movl   $0xa9cddfbb,-0x1f34(%ebp)
 8067efa:	df cd a9 
 8067efd:	c7 85 d0 e0 ff ff f5 	movl   $0x3907cf5,-0x1f30(%ebp)
 8067f04:	7c 90 03 
 8067f07:	c7 85 d4 e0 ff ff 56 	movl   $0x305ec756,-0x1f2c(%ebp)
 8067f0e:	c7 5e 30 
 8067f11:	c7 85 d8 e0 ff ff 21 	movl   $0x2068ef21,-0x1f28(%ebp)
 8067f18:	ef 68 20 
 8067f1b:	c7 85 dc e0 ff ff fc 	movl   $0x54a4b2fc,-0x1f24(%ebp)
 8067f22:	b2 a4 54 
 8067f25:	c7 85 e0 e0 ff ff 91 	movl   $0x2d9fd91,-0x1f20(%ebp)
 8067f2c:	fd d9 02 
 8067f2f:	c7 85 e4 e0 ff ff 78 	movl   $0x8d189f78,-0x1f1c(%ebp)
 8067f36:	9f 18 8d 
 8067f39:	c7 85 e8 e0 ff ff 1a 	movl   $0x19ed8c1a,-0x1f18(%ebp)
 8067f40:	8c ed 19 
 8067f43:	c7 85 ec e0 ff ff 30 	movl   $0xdd508f30,-0x1f14(%ebp)
 8067f4a:	8f 50 dd 
 8067f4d:	c7 85 f0 e0 ff ff 0d 	movl   $0x247fe0d,-0x1f10(%ebp)
 8067f54:	fe 47 02 
 8067f57:	c7 85 f4 e0 ff ff 26 	movl   $0xe1c0ff26,-0x1f0c(%ebp)
 8067f5e:	ff c0 e1 
 8067f61:	c7 85 f8 e0 ff ff 90 	movl   $0x5caf4690,-0x1f08(%ebp)
 8067f68:	46 af 5c 
 8067f6b:	c7 85 fc e0 ff ff b3 	movl   $0x621a7eb3,-0x1f04(%ebp)
 8067f72:	7e 1a 62 
 8067f75:	c7 85 00 e1 ff ff 49 	movl   $0x3a66349,-0x1f00(%ebp)
 8067f7c:	63 a6 03 
 8067f7f:	c7 85 04 e1 ff ff 85 	movl   $0x81673285,-0x1efc(%ebp)
 8067f86:	32 67 81 
 8067f89:	c7 85 08 e1 ff ff 0d 	movl   $0x4a25d20d,-0x1ef8(%ebp)
 8067f90:	d2 25 4a 
 8067f93:	c7 85 0c e1 ff ff 5c 	movl   $0x1b48655c,-0x1ef4(%ebp)
 8067f9a:	65 48 1b 
 8067f9d:	c7 85 10 e1 ff ff a1 	movl   $0x2eb82a1,-0x1ef0(%ebp)
 8067fa4:	82 eb 02 
 8067fa7:	c7 85 14 e1 ff ff 37 	movl   $0x9ab8f537,-0x1eec(%ebp)
 8067fae:	f5 b8 9a 
 8067fb1:	c7 85 18 e1 ff ff d7 	movl   $0x3b5174d7,-0x1ee8(%ebp)
 8067fb8:	74 51 3b 
 8067fbb:	c7 85 1c e1 ff ff b0 	movl   $0x7c39eab0,-0x1ee4(%ebp)
 8067fc2:	ea 39 7c 
 8067fc5:	c7 85 20 e1 ff ff 1a 	movl   $0x256021a,-0x1ee0(%ebp)
 8067fcc:	02 56 02 
 8067fcf:	c7 85 24 e1 ff ff f1 	movl   $0xc45b21f1,-0x1edc(%ebp)
 8067fd6:	21 5b c4 
 8067fd9:	c7 85 28 e1 ff ff 25 	movl   $0x921bee25,-0x1ed8(%ebp)
 8067fe0:	ee 1b 92 
 8067fe3:	c7 85 2c e1 ff ff b3 	movl   $0x605caab3,-0x1ed4(%ebp)
 8067fea:	aa 5c 60 
 8067fed:	c7 85 30 e1 ff ff 2a 	movl   $0x3bcd02a,-0x1ed0(%ebp)
 8067ff4:	d0 bc 03 
 8067ff7:	c7 85 34 e1 ff ff 8e 	movl   $0x69e2818e,-0x1ecc(%ebp)
 8067ffe:	81 e2 69 
 8068001:	c7 85 38 e1 ff ff 51 	movl   $0xdb498b51,-0x1ec8(%ebp)
 8068008:	8b 49 db 
 806800b:	c7 85 3c e1 ff ff c2 	movl   $0x19e3bbc2,-0x1ec4(%ebp)
 8068012:	bb e3 19 
 8068015:	c7 85 40 e1 ff ff 55 	movl   $0x2fd7355,-0x1ec0(%ebp)
 806801c:	73 fd 02 
 806801f:	c7 85 44 e1 ff ff 72 	movl   $0x54b53472,-0x1ebc(%ebp)
 8068026:	34 b5 54 
 8068029:	c7 85 48 e1 ff ff 74 	movl   $0x15d46f74,-0x1eb8(%ebp)
 8068030:	6f d4 15 
 8068033:	c7 85 4c e1 ff ff cf 	movl   $0x14b62fcf,-0x1eb4(%ebp)
 806803a:	2f b6 14 
 806803d:	c7 85 50 e1 ff ff 44 	movl   $0x2645c44,-0x1eb0(%ebp)
 8068044:	5c 64 02 
 8068047:	c7 85 54 e1 ff ff b6 	movl   $0x545520b6,-0x1eac(%ebp)
 806804e:	20 55 54 
 8068051:	c7 85 58 e1 ff ff ed 	movl   $0xefba4bed,-0x1ea8(%ebp)
 8068058:	4b ba ef 
 806805b:	c7 85 5c e1 ff ff e4 	movl   $0x5456b2e4,-0x1ea4(%ebp)
 8068062:	b2 56 54 
 8068065:	c7 85 60 e1 ff ff d3 	movl   $0x3d3c6d3,-0x1ea0(%ebp)
 806806c:	c6 d3 03 
 806806f:	c7 85 64 e1 ff ff 2b 	movl   $0x10441a2b,-0x1e9c(%ebp)
 8068076:	1a 44 10 
 8068079:	c7 85 68 e1 ff ff f1 	movl   $0xf2fb6ff1,-0x1e98(%ebp)
 8068080:	6f fb f2 
 8068083:	c7 85 6c e1 ff ff 83 	movl   $0xa9def583,-0x1e94(%ebp)
 806808a:	f5 de a9 
 806808d:	c7 85 70 e1 ff ff 42 	movl   $0x30fd242,-0x1e90(%ebp)
 8068094:	d2 0f 03 
 8068097:	c7 85 74 e1 ff ff ef 	movl   $0xd9d014ef,-0x1e8c(%ebp)
 806809e:	14 d0 d9 
 80680a1:	c7 85 78 e1 ff ff c0 	movl   $0x8f2f8cc0,-0x1e88(%ebp)
 80680a8:	8c 2f 8f 
 80680ab:	c7 85 7c e1 ff ff 69 	movl   $0xbb18c469,-0x1e84(%ebp)
 80680b2:	c4 18 bb 
 80680b5:	c7 85 80 e1 ff ff 9b 	movl   $0x2730e9b,-0x1e80(%ebp)
 80680bc:	0e 73 02 
 80680bf:	c7 85 84 e1 ff ff 7f 	movl   $0x5c80217f,-0x1e7c(%ebp)
 80680c6:	21 80 5c 
 80680c9:	c7 85 88 e1 ff ff 01 	movl   $0xb1e5ae01,-0x1e78(%ebp)
 80680d0:	ae e5 b1 
 80680d3:	c7 85 8c e1 ff ff 75 	movl   $0xc4f46d75,-0x1e74(%ebp)
 80680da:	6d f4 c4 
 80680dd:	c7 85 90 e1 ff ff 92 	movl   $0x3eb4a92,-0x1e70(%ebp)
 80680e4:	4a eb 03 
 80680e7:	c7 85 94 e1 ff ff cc 	movl   $0x4a001acc,-0x1e6c(%ebp)
 80680ee:	1a 00 4a 
 80680f1:	c7 85 98 e1 ff ff 34 	movl   $0xc1848b34,-0x1e68(%ebp)
 80680f8:	8b 84 c1 
 80680fb:	c7 85 9c e1 ff ff f7 	movl   $0x3f6bdf7,-0x1e64(%ebp)
 8068102:	bd f6 03 
 8068105:	c7 85 a0 e1 ff ff 0f 	movl   $0x322a20f,-0x1e60(%ebp)
 806810c:	a2 22 03 
 806810f:	c7 85 a4 e1 ff ff a3 	movl   $0x3b3348a3,-0x1e5c(%ebp)
 8068116:	48 33 3b 
 8068119:	c7 85 a8 e1 ff ff 90 	movl   $0xce03a290,-0x1e58(%ebp)
 8068120:	a2 03 ce 
 8068123:	c7 85 ac e1 ff ff 5f 	movl   $0x365efe5f,-0x1e54(%ebp)
 806812a:	fe 5e 36 
 806812d:	c7 85 b0 e1 ff ff 3f 	movl   $0x2821b3f,-0x1e50(%ebp)
 8068134:	1b 82 02 
 8068137:	c7 85 b4 e1 ff ff 4f 	movl   $0x628f6d4f,-0x1e4c(%ebp)
 806813e:	6d 8f 62 
 8068141:	c7 85 b8 e1 ff ff 73 	movl   $0xd802e873,-0x1e48(%ebp)
 8068148:	e8 02 d8 
 806814b:	c7 85 bc e1 ff ff 7f 	movl   $0xc518cb7f,-0x1e44(%ebp)
 8068152:	cb 18 c5 
 8068155:	c7 85 c0 e1 ff ff 65 	movl   $0x201af65,-0x1e40(%ebp)
 806815c:	af 01 02 
 806815f:	c7 85 c4 e1 ff ff 7f 	movl   $0x9db2487f,-0x1e3c(%ebp)
 8068166:	48 b2 9d 
 8068169:	c7 85 c8 e1 ff ff b8 	movl   $0x599e40b8,-0x1e38(%ebp)
 8068170:	40 9e 59 
 8068173:	c7 85 cc e1 ff ff 99 	movl   $0xa1c14599,-0x1e34(%ebp)
 806817a:	45 c1 a1 
 806817d:	c7 85 d0 e1 ff ff 6f 	movl   $0x335e56f,-0x1e30(%ebp)
 8068184:	e5 35 03 
 8068187:	c7 85 d4 e1 ff ff 99 	movl   $0x17c1d399,-0x1e2c(%ebp)
 806818e:	d3 c1 17 
 8068191:	c7 85 d8 e1 ff ff fa 	movl   $0xe14b66fa,-0x1e28(%ebp)
 8068198:	66 4b e1 
 806819b:	c7 85 dc e1 ff ff ad 	movl   $0x4e3437ad,-0x1e24(%ebp)
 80681a2:	37 34 4e 
 80681a5:	c7 85 e0 e1 ff ff 59 	movl   $0x2918459,-0x1e20(%ebp)
 80681ac:	84 91 02 
 80681af:	c7 85 e4 e1 ff ff 7a 	movl   $0x7967dc7a,-0x1e1c(%ebp)
 80681b6:	dc 67 79 
 80681b9:	c7 85 e8 e1 ff ff 2e 	movl   $0x81091f2e,-0x1e18(%ebp)
 80681c0:	1f 09 81 
 80681c3:	c7 85 ec e1 ff ff f1 	movl   $0xa4f692f1,-0x1e14(%ebp)
 80681ca:	92 f6 a4 
 80681cd:	c7 85 f0 e1 ff ff 7a 	movl   $0x20e037a,-0x1e10(%ebp)
 80681d4:	03 0e 02 
 80681d7:	c7 85 f4 e1 ff ff f6 	movl   $0x8f0c93f6,-0x1e0c(%ebp)
 80681de:	93 0c 8f 
 80681e1:	c7 85 f8 e1 ff ff 7d 	movl   $0x9b41cb7d,-0x1e08(%ebp)
 80681e8:	cb 41 9b 
 80681eb:	c7 85 fc e1 ff ff b5 	movl   $0xa18a84b5,-0x1e04(%ebp)
 80681f2:	84 8a a1 
 80681f5:	c7 85 00 e2 ff ff 2a 	movl   $0x3499f2a,-0x1e00(%ebp)
 80681fc:	9f 49 03 
 80681ff:	c7 85 04 e2 ff ff f8 	movl   $0xc0a0ff8,-0x1dfc(%ebp)
 8068206:	0f 0a 0c 
 8068209:	c7 85 08 e2 ff ff fe 	movl   $0xaf67d5fe,-0x1df8(%ebp)
 8068210:	d5 67 af 
 8068213:	c7 85 0c e2 ff ff f7 	movl   $0x1ad536f7,-0x1df4(%ebp)
 806821a:	36 d5 1a 
 806821d:	c7 85 10 e2 ff ff 22 	movl   $0x2a14c22,-0x1df0(%ebp)
 8068224:	4c a1 02 
 8068227:	c7 85 14 e2 ff ff c7 	movl   $0x70080cc7,-0x1dec(%ebp)
 806822e:	0c 08 70 
 8068231:	c7 85 18 e2 ff ff fe 	movl   $0xf2b977fe,-0x1de8(%ebp)
 8068238:	77 b9 f2 
 806823b:	c7 85 1c e2 ff ff 92 	movl   $0x7bddc592,-0x1de4(%ebp)
 8068242:	c5 dd 7b 
 8068245:	c7 85 20 e2 ff ff 4e 	movl   $0x21aa34e,-0x1de0(%ebp)
 806824c:	a3 1a 02 
 806824f:	c7 85 24 e2 ff ff 0b 	movl   $0x4cd9ae0b,-0x1ddc(%ebp)
 8068256:	ae d9 4c 
 8068259:	c7 85 28 e2 ff ff ca 	movl   $0x1df58cca,-0x1dd8(%ebp)
 8068260:	8c f5 1d 
 8068263:	c7 85 2c e2 ff ff eb 	movl   $0x2c9608eb,-0x1dd4(%ebp)
 806826a:	08 96 2c 
 806826d:	c7 85 30 e2 ff ff 17 	movl   $0x35dd217,-0x1dd0(%ebp)
 8068274:	d2 5d 03 
 8068277:	c7 85 34 e2 ff ff 3c 	movl   $0xd7148b3c,-0x1dcc(%ebp)
 806827e:	8b 14 d7 
 8068281:	c7 85 38 e2 ff ff a1 	movl   $0xe4c470a1,-0x1dc8(%ebp)
 8068288:	70 c4 e4 
 806828b:	c7 85 3c e2 ff ff 88 	movl   $0x56de6d88,-0x1dc4(%ebp)
 8068292:	6d de 56 
 8068295:	c7 85 40 e2 ff ff df 	movl   $0x2b174df,-0x1dc0(%ebp)
 806829c:	74 b1 02 
 806829f:	c7 85 44 e2 ff ff ca 	movl   $0x1276d5ca,-0x1dbc(%ebp)
 80682a6:	d5 76 12 
 80682a9:	c7 85 48 e2 ff ff 1b 	movl   $0x83d05a1b,-0x1db8(%ebp)
 80682b0:	5a d0 83 
 80682b3:	c7 85 4c e2 ff ff 6d 	movl   $0xabe5246d,-0x1db4(%ebp)
 80682ba:	24 e5 ab 
 80682bd:	c7 85 50 e2 ff ff b2 	movl   $0x22790b2,-0x1db0(%ebp)
 80682c4:	90 27 02 
 80682c7:	c7 85 54 e2 ff ff 0f 	movl   $0x83f1560f,-0x1dac(%ebp)
 80682ce:	56 f1 83 
 80682d1:	c7 85 58 e2 ff ff 5e 	movl   $0x9fb3c35e,-0x1da8(%ebp)
 80682d8:	c3 b3 9f 
 80682db:	c7 85 5c e2 ff ff 15 	movl   $0xdfd50715,-0x1da4(%ebp)
 80682e2:	07 d5 df 
 80682e5:	c7 85 60 e2 ff ff 1d 	movl   $0x372811d,-0x1da0(%ebp)
 80682ec:	81 72 03 
 80682ef:	c7 85 64 e2 ff ff 3f 	movl   $0x365aab3f,-0x1d9c(%ebp)
 80682f6:	ab 5a 36 
 80682f9:	c7 85 68 e2 ff ff e5 	movl   $0xb2f635e5,-0x1d98(%ebp)
 8068300:	35 f6 b2 
 8068303:	c7 85 6c e2 ff ff 77 	movl   $0xb310d277,-0x1d94(%ebp)
 806830a:	d2 10 b3 
 806830d:	c7 85 70 e2 ff ff e4 	movl   $0x2c200e4,-0x1d90(%ebp)
 8068314:	00 c2 02 
 8068317:	c7 85 74 e2 ff ff 66 	movl   $0x5eaeef66,-0x1d8c(%ebp)
 806831e:	ef ae 5e 
 8068321:	c7 85 78 e2 ff ff b7 	movl   $0xf591c4b7,-0x1d88(%ebp)
 8068328:	c4 91 f5 
 806832b:	c7 85 7c e2 ff ff 92 	movl   $0xc273db92,-0x1d84(%ebp)
 8068332:	db 73 c2 
 8068335:	c7 85 80 e2 ff ff 83 	movl   $0x234cd83,-0x1d80(%ebp)
 806833c:	cd 34 02 
 806833f:	c7 85 84 e2 ff ff a3 	movl   $0x644b18a3,-0x1d7c(%ebp)
 8068346:	18 4b 64 
 8068349:	c7 85 88 e2 ff ff 25 	movl   $0xef4fa125,-0x1d78(%ebp)
 8068350:	a1 4f ef 
 8068353:	c7 85 8c e2 ff ff b7 	movl   $0x371fc5b7,-0x1d74(%ebp)
 806835a:	c5 1f 37 
 806835d:	c7 85 90 e2 ff ff 39 	movl   $0x387af39,-0x1d70(%ebp)
 8068364:	af 87 03 
 8068367:	c7 85 94 e2 ff ff 4f 	movl   $0xe9d5ad4f,-0x1d6c(%ebp)
 806836e:	ad d5 e9 
 8068371:	c7 85 98 e2 ff ff 1d 	movl   $0x8c3fb41d,-0x1d68(%ebp)
 8068378:	b4 3f 8c 
 806837b:	c7 85 9c e2 ff ff f9 	movl   $0x2c196af9,-0x1d64(%ebp)
 8068382:	6a 19 2c 
 8068385:	c7 85 a0 e2 ff ff 94 	movl   $0x2d2f294,-0x1d60(%ebp)
 806838c:	f2 d2 02 
 806838f:	c7 85 a4 e2 ff ff d9 	movl   $0x2177bdd9,-0x1d5c(%ebp)
 8068396:	bd 77 21 
 8068399:	c7 85 a8 e2 ff ff 4b 	movl   $0x3cffc34b,-0x1d58(%ebp)
 80683a0:	c3 ff 3c 
 80683a3:	c7 85 ac e2 ff ff 61 	movl   $0xbce12261,-0x1d54(%ebp)
 80683aa:	22 e1 bc 
 80683ad:	c7 85 b0 e2 ff ff a9 	movl   $0x2425ba9,-0x1d50(%ebp)
 80683b4:	5b 42 02 
 80683b7:	c7 85 b4 e2 ff ff 28 	movl   $0x68bf9628,-0x1d4c(%ebp)
 80683be:	96 bf 68 
 80683c1:	c7 85 b8 e2 ff ff ab 	movl   $0x94cc6bab,-0x1d48(%ebp)
 80683c8:	6b cc 94 
 80683cb:	c7 85 bc e2 ff ff 9b 	movl   $0xfb01d09b,-0x1d44(%ebp)
 80683d2:	d0 01 fb 
 80683d5:	c7 85 c0 e2 ff ff 75 	movl   $0x39d5f75,-0x1d40(%ebp)
 80683dc:	5f 9d 03 
 80683df:	c7 85 c4 e2 ff ff b9 	movl   $0xed6611b9,-0x1d3c(%ebp)
 80683e6:	11 66 ed 
 80683e9:	c7 85 c8 e2 ff ff 55 	movl   $0x10a38955,-0x1d38(%ebp)
 80683f0:	89 a3 10 
 80683f3:	c7 85 cc e2 ff ff 16 	movl   $0x6267da16,-0x1d34(%ebp)
 80683fa:	da 67 62 
 80683fd:	c7 85 d0 e2 ff ff 5e 	movl   $0x2e44c5e,-0x1d30(%ebp)
 8068404:	4c e4 02 
 8068407:	c7 85 d4 e2 ff ff fb 	movl   $0x5784dafb,-0x1d2c(%ebp)
 806840e:	da 84 57 
 8068411:	c7 85 d8 e2 ff ff de 	movl   $0xda1c6dde,-0x1d28(%ebp)
 8068418:	6d 1c da 
 806841b:	c7 85 dc e2 ff ff 44 	movl   $0x4eb97b44,-0x1d24(%ebp)
 8068422:	7b b9 4e 
 8068425:	c7 85 e0 e2 ff ff 18 	movl   $0x2503d18,-0x1d20(%ebp)
 806842c:	3d 50 02 
 806842f:	c7 85 e4 e2 ff ff 91 	movl   $0x58d49191,-0x1d1c(%ebp)
 8068436:	91 d4 58 
 8068439:	c7 85 e8 e2 ff ff fd 	movl   $0xf693e2fd,-0x1d18(%ebp)
 8068440:	e2 93 f6 
 8068443:	c7 85 ec e2 ff ff 3a 	movl   $0xb128c53a,-0x1d14(%ebp)
 806844a:	c5 28 b1 
 806844d:	c7 85 f0 e2 ff ff f3 	movl   $0x3b394f3,-0x1d10(%ebp)
 8068454:	94 b3 03 
 8068457:	c7 85 f4 e2 ff ff 0e 	movl   $0xe0aa0e0e,-0x1d0c(%ebp)
 806845e:	0e aa e0 
 8068461:	c7 85 f8 e2 ff ff fd 	movl   $0xc5431bfd,-0x1d08(%ebp)
 8068468:	1b 43 c5 
 806846b:	c7 85 fc e2 ff ff c8 	movl   $0xf4209dc8,-0x1d04(%ebp)
 8068472:	9d 20 f4 
 8068475:	c7 85 00 e3 ff ff c2 	movl   $0x2f610c2,-0x1d00(%ebp)
 806847c:	10 f6 02 
 806847f:	c7 85 04 e3 ff ff 72 	movl   $0xb3bb3e72,-0x1cfc(%ebp)
 8068486:	3e bb b3 
 8068489:	c7 85 08 e3 ff ff 64 	movl   $0x6a9c1664,-0x1cf8(%ebp)
 8068490:	16 9c 6a 
 8068493:	c7 85 0c e3 ff ff 6d 	movl   $0x29b3b16d,-0x1cf4(%ebp)
 806849a:	b1 b3 29 
 806849d:	c7 85 10 e3 ff ff cf 	movl   $0x25e73cf,-0x1cf0(%ebp)
 80684a4:	73 5e 02 
 80684a7:	c7 85 14 e3 ff ff 4f 	movl   $0xec5eca4f,-0x1cec(%ebp)
 80684ae:	ca 5e ec 
 80684b1:	c7 85 18 e3 ff ff 6d 	movl   $0x10f9bd6d,-0x1ce8(%ebp)
 80684b8:	bd f9 10 
 80684bb:	c7 85 1c e3 ff ff af 	movl   $0xf85e8af,-0x1ce4(%ebp)
 80684c2:	e8 85 0f 
 80684c5:	c7 85 20 e3 ff ff e5 	movl   $0x3ca52e5,-0x1ce0(%ebp)
 80684cc:	52 ca 03 
 80684cf:	c7 85 24 e3 ff ff 0c 	movl   $0xf04bd50c,-0x1cdc(%ebp)
 80684d6:	d5 4b f0 
 80684d9:	c7 85 28 e3 ff ff 57 	movl   $0xda616457,-0x1cd8(%ebp)
 80684e0:	64 61 da 
 80684e3:	c7 85 2c e3 ff ff 58 	movl   $0xd937ed58,-0x1cd4(%ebp)
 80684ea:	ed 37 d9 
 80684ed:	c7 85 30 e3 ff ff 50 	movl   $0x3084250,-0x1cd0(%ebp)
 80684f4:	42 08 03 
 80684f7:	c7 85 34 e3 ff ff 3d 	movl   $0x8d09773d,-0x1ccc(%ebp)
 80684fe:	77 09 8d 
 8068501:	c7 85 38 e3 ff ff 79 	movl   $0xe1e78379,-0x1cc8(%ebp)
 8068508:	83 e7 e1 
 806850b:	c7 85 3c e3 ff ff 13 	movl   $0x475ff113,-0x1cc4(%ebp)
 8068512:	f1 5f 47 
 8068515:	c7 85 40 e3 ff ff da 	movl   $0x26d01da,-0x1cc0(%ebp)
 806851c:	01 6d 02 
 806851f:	c7 85 44 e3 ff ff 2e 	movl   $0x480f252e,-0x1cbc(%ebp)
 8068526:	25 0f 48 
 8068529:	c7 85 48 e3 ff ff 8f 	movl   $0x30c058f,-0x1cb8(%ebp)
 8068530:	05 0c 03 
 8068533:	c7 85 4c e3 ff ff 53 	movl   $0x72331b53,-0x1cb4(%ebp)
 806853a:	1b 33 72 
 806853d:	c7 85 50 e3 ff ff 90 	movl   $0x3e19c90,-0x1cb0(%ebp)
 8068544:	9c e1 03 
 8068547:	c7 85 54 e3 ff ff 25 	movl   $0x6728425,-0x1cac(%ebp)
 806854e:	84 72 06 
 8068551:	c7 85 58 e3 ff ff d9 	movl   $0x68d66ad9,-0x1ca8(%ebp)
 8068558:	6a d6 68 
 806855b:	c7 85 5c e3 ff ff 42 	movl   $0xc1c27c42,-0x1ca4(%ebp)
 8068562:	7c c2 c1 
 8068565:	c7 85 60 e3 ff ff a6 	movl   $0x31ae3a6,-0x1ca0(%ebp)
 806856c:	e3 1a 03 
 806856f:	c7 85 64 e3 ff ff b7 	movl   $0x52869b7,-0x1c9c(%ebp)
 8068576:	69 28 05 
 8068579:	c7 85 68 e3 ff ff 14 	movl   $0x8711ef14,-0x1c98(%ebp)
 8068580:	ef 11 87 
 8068583:	c7 85 6c e3 ff ff 9b 	movl   $0x349b969b,-0x1c94(%ebp)
 806858a:	96 9b 34 
 806858d:	c7 85 70 e3 ff ff 52 	movl   $0x27be952,-0x1c90(%ebp)
 8068594:	e9 7b 02 
 8068597:	c7 85 74 e3 ff ff f2 	movl   $0xd50d75f2,-0x1c8c(%ebp)
 806859e:	75 0d d5 
 80685a1:	c7 85 78 e3 ff ff ec 	movl   $0xb4fe4ec,-0x1c88(%ebp)
 80685a8:	e4 4f 0b 
 80685ab:	c7 85 7c e3 ff ff 2c 	movl   $0x542c242c,-0x1c84(%ebp)
 80685b2:	24 2c 54 
 80685b5:	c7 85 80 e3 ff ff 50 	movl   $0x3f97550,-0x1c80(%ebp)
 80685bc:	75 f9 03 
 80685bf:	c7 85 84 e3 ff ff f5 	movl   $0x773df7f5,-0x1c7c(%ebp)
 80685c6:	f7 3d 77 
 80685c9:	c7 85 88 e3 ff ff bd 	movl   $0xa2a650bd,-0x1c78(%ebp)
 80685d0:	50 a6 a2 
 80685d3:	c7 85 8c e3 ff ff 89 	movl   $0x7689b689,-0x1c74(%ebp)
 80685da:	b6 89 76 
 80685dd:	c7 85 90 e3 ff ff 73 	movl   $0x32df773,-0x1c70(%ebp)
 80685e4:	f7 2d 03 
 80685e7:	c7 85 94 e3 ff ff 2a 	movl   $0x2c31932a,-0x1c6c(%ebp)
 80685ee:	93 31 2c 
 80685f1:	c7 85 98 e3 ff ff 31 	movl   $0xb551da31,-0x1c68(%ebp)
 80685f8:	da 51 b5 
 80685fb:	c7 85 9c e3 ff ff 07 	movl   $0x5ed49207,-0x1c64(%ebp)
 8068602:	92 d4 5e 
 8068605:	c7 85 a0 e3 ff ff 5c 	movl   $0x28b2c5c,-0x1c60(%ebp)
 806860c:	2c 8b 02 
 806860f:	c7 85 a4 e3 ff ff 22 	movl   $0x235adc22,-0x1c5c(%ebp)
 8068616:	dc 5a 23 
 8068619:	c7 85 a8 e3 ff ff f4 	movl   $0x5ddb14f4,-0x1c58(%ebp)
 8068620:	14 db 5d 
 8068623:	c7 85 ac e3 ff ff 39 	movl   $0xe576db39,-0x1c54(%ebp)
 806862a:	db 76 e5 
 806862d:	c7 85 b0 e3 ff ff 49 	movl   $0x208f049,-0x1c50(%ebp)
 8068634:	f0 08 02 
 8068637:	c7 85 b4 e3 ff ff 69 	movl   $0x6bc49369,-0x1c4c(%ebp)
 806863e:	93 c4 6b 
 8068641:	c7 85 b8 e3 ff ff 53 	movl   $0x2fc4ee53,-0x1c48(%ebp)
 8068648:	ee c4 2f 
 806864b:	c7 85 bc e3 ff ff c2 	movl   $0x3bf15ec2,-0x1c44(%ebp)
 8068652:	5e f1 3b 
 8068655:	c7 85 c0 e3 ff ff 76 	movl   $0x3418076,-0x1c40(%ebp)
 806865c:	80 41 03 
 806865f:	c7 85 c4 e3 ff ff 21 	movl   $0x2303a921,-0x1c3c(%ebp)
 8068666:	a9 03 23 
 8068669:	c7 85 c8 e3 ff ff a9 	movl   $0xbfd0bea9,-0x1c38(%ebp)
 8068670:	be d0 bf 
 8068673:	c7 85 cc e3 ff ff 01 	movl   $0x63277f01,-0x1c34(%ebp)
 806867a:	7f 27 63 
 806867d:	c7 85 d0 e3 ff ff 2b 	movl   $0x29acd2b,-0x1c30(%ebp)
 8068684:	cd 9a 02 
 8068687:	c7 85 d4 e3 ff ff 1a 	movl   $0x8269541a,-0x1c2c(%ebp)
 806868e:	54 69 82 
 8068691:	c7 85 d8 e3 ff ff ba 	movl   $0x9973cbba,-0x1c28(%ebp)
 8068698:	cb 73 99 
 806869b:	c7 85 dc e3 ff ff 34 	movl   $0x8285ff34,-0x1c24(%ebp)
 80686a2:	ff 85 82 
 80686a5:	c7 85 e0 e3 ff ff ef 	movl   $0x21570ef,-0x1c20(%ebp)
 80686ac:	70 15 02 
 80686af:	c7 85 e4 e3 ff ff 2a 	movl   $0x6a42202a,-0x1c1c(%ebp)
 80686b6:	20 42 6a 
 80686b9:	c7 85 e8 e3 ff ff 2a 	movl   $0x5bec792a,-0x1c18(%ebp)
 80686c0:	79 ec 5b 
 80686c3:	c7 85 ec e3 ff ff 87 	movl   $0x373ccb87,-0x1c14(%ebp)
 80686ca:	cb 3c 37 
 80686cd:	c7 85 f0 e3 ff ff 7f 	movl   $0x355817f,-0x1c10(%ebp)
 80686d4:	81 55 03 
 80686d7:	c7 85 f4 e3 ff ff ef 	movl   $0xee9b4cef,-0x1c0c(%ebp)
 80686de:	4c 9b ee 
 80686e1:	c7 85 f8 e3 ff ff 21 	movl   $0xe3239421,-0x1c08(%ebp)
 80686e8:	94 23 e3 
 80686eb:	c7 85 fc e3 ff ff 05 	movl   $0x5f63d605,-0x1c04(%ebp)
 80686f2:	d6 63 5f 
 80686f5:	c7 85 00 e4 ff ff ff 	movl   $0x2aacdff,-0x1c00(%ebp)
 80686fc:	cd aa 02 
 80686ff:	c7 85 04 e4 ff ff 59 	movl   $0x25490a59,-0x1bfc(%ebp)
 8068706:	0a 49 25 
 8068709:	c7 85 08 e4 ff ff 1b 	movl   $0xb5b6101b,-0x1bf8(%ebp)
 8068710:	10 b6 b5 
 8068713:	c7 85 0c e4 ff ff 04 	movl   $0xe5e97804,-0x1bf4(%ebp)
 806871a:	78 e9 e5 
 806871d:	c7 85 10 e4 ff ff 65 	movl   $0x2223e65,-0x1bf0(%ebp)
 8068724:	3e 22 02 
 8068727:	c7 85 14 e4 ff ff 27 	movl   $0xd541aa27,-0x1bec(%ebp)
 806872e:	aa 41 d5 
 8068731:	c7 85 18 e4 ff ff 91 	movl   $0x22bce691,-0x1be8(%ebp)
 8068738:	e6 bc 22 
 806873b:	c7 85 1c e4 ff ff a1 	movl   $0xd64259a1,-0x1be4(%ebp)
 8068742:	59 42 d6 
 8068745:	c7 85 20 e4 ff ff 6f 	movl   $0x369fd6f,-0x1be0(%ebp)
 806874c:	fd 69 03 
 806874f:	c7 85 24 e4 ff ff b9 	movl   $0xddce21b9,-0x1bdc(%ebp)
 8068756:	21 ce dd 
 8068759:	c7 85 28 e4 ff ff a7 	movl   $0xb563eba7,-0x1bd8(%ebp)
 8068760:	eb 63 b5 
 8068763:	c7 85 2c e4 ff ff 4d 	movl   $0x4501e14d,-0x1bd4(%ebp)
 806876a:	e1 01 45 
 806876d:	c7 85 30 e4 ff ff 26 	movl   $0x2bb3126,-0x1bd0(%ebp)
 8068774:	31 bb 02 
 8068777:	c7 85 34 e4 ff ff 94 	movl   $0xb171b494,-0x1bcc(%ebp)
 806877e:	b4 71 b1 
 8068781:	c7 85 38 e4 ff ff ec 	movl   $0xf78322ec,-0x1bc8(%ebp)
 8068788:	22 83 f7 
 806878b:	c7 85 3c e4 ff ff 0a 	movl   $0x401810a,-0x1bc4(%ebp)
 8068792:	81 01 04 
 8068795:	c7 85 40 e4 ff ff 85 	movl   $0x22f5a85,-0x1bc0(%ebp)
 806879c:	5a 2f 02 
 806879f:	c7 85 44 e4 ff ff 53 	movl   $0x824f8753,-0x1bbc(%ebp)
 80687a6:	87 4f 82 
 80687a9:	c7 85 48 e4 ff ff 47 	movl   $0x259e9e47,-0x1bb8(%ebp)
 80687b0:	9e 9e 25 
 80687b3:	c7 85 4c e4 ff ff ab 	movl   $0x399c01ab,-0x1bb4(%ebp)
 80687ba:	01 9c 39 
 80687bd:	c7 85 50 e4 ff ff 3b 	movl   $0x37ef73b,-0x1bb0(%ebp)
 80687c4:	f7 7e 03 
 80687c7:	c7 85 54 e4 ff ff a9 	movl   $0x9b72d2a9,-0x1bac(%ebp)
 80687ce:	d2 72 9b 
 80687d1:	c7 85 58 e4 ff ff 9f 	movl   $0x1e187e9f,-0x1ba8(%ebp)
 80687d8:	7e 18 1e 
 80687db:	c7 85 5c e4 ff ff bc 	movl   $0x2e1667bc,-0x1ba4(%ebp)
 80687e2:	67 16 2e 
 80687e5:	c7 85 60 e4 ff ff fc 	movl   $0x2cbf8fc,-0x1ba0(%ebp)
 80687ec:	f8 cb 02 
 80687ef:	c7 85 64 e4 ff ff 21 	movl   $0xe2c24221,-0x1b9c(%ebp)
 80687f6:	42 c2 e2 
 80687f9:	c7 85 68 e4 ff ff b2 	movl   $0x4b46cbb2,-0x1b98(%ebp)
 8068800:	cb 46 4b 
 8068803:	c7 85 6c e4 ff ff 63 	movl   $0x24deb963,-0x1b94(%ebp)
 806880a:	b9 de 24 
 806880d:	c7 85 70 e4 ff ff 30 	movl   $0x23cc730,-0x1b90(%ebp)
 8068814:	c7 3c 02 
 8068817:	c7 85 74 e4 ff ff 01 	movl   $0x9e039d01,-0x1b8c(%ebp)
 806881e:	9d 03 9e 
 8068821:	c7 85 78 e4 ff ff 84 	movl   $0x120adf84,-0x1b88(%ebp)
 8068828:	df 0a 12 
 806882b:	c7 85 7c e4 ff ff d2 	movl   $0xa1645bd2,-0x1b84(%ebp)
 8068832:	5b 64 a1 
 8068835:	c7 85 80 e4 ff ff e6 	movl   $0x39471e6,-0x1b80(%ebp)
 806883c:	71 94 03 
 806883f:	c7 85 84 e4 ff ff 9a 	movl   $0xb19c7d9a,-0x1b7c(%ebp)
 8068846:	7d 9c b1 
 8068849:	c7 85 88 e4 ff ff 03 	movl   $0xdb3be603,-0x1b78(%ebp)
 8068850:	e6 3b db 
 8068853:	c7 85 8c e4 ff ff 74 	movl   $0xb4504974,-0x1b74(%ebp)
 806885a:	49 50 b4 
 806885d:	c7 85 90 e4 ff ff eb 	movl   $0x2dd27eb,-0x1b70(%ebp)
 8068864:	27 dd 02 
 8068867:	c7 85 94 e4 ff ff 7c 	movl   $0x27b0647c,-0x1b6c(%ebp)
 806886e:	64 b0 27 
 8068871:	c7 85 98 e4 ff ff 36 	movl   $0x7c2feb36,-0x1b68(%ebp)
 8068878:	eb 2f 7c 
 806887b:	c7 85 9c e4 ff ff 5d 	movl   $0x29d9d45d,-0x1b64(%ebp)
 8068882:	d4 d9 29 
 8068885:	c7 85 a0 e4 ff ff 56 	movl   $0x24a8656,-0x1b60(%ebp)
 806888c:	86 4a 02 
 806888f:	c7 85 a4 e4 ff ff 2c 	movl   $0xa5e7072c,-0x1b5c(%ebp)
 8068896:	07 e7 a5 
 8068899:	c7 85 a8 e4 ff ff 56 	movl   $0x2d197856,-0x1b58(%ebp)
 80688a0:	78 19 2d 
 80688a3:	c7 85 ac e4 ff ff 2f 	movl   $0xdc8fba2f,-0x1b54(%ebp)
 80688aa:	ba 8f dc 
 80688ad:	c7 85 b0 e4 ff ff 89 	movl   $0x3aa7089,-0x1b50(%ebp)
 80688b4:	70 aa 03 
 80688b7:	c7 85 b4 e4 ff ff bd 	movl   $0xb7ec05bd,-0x1b4c(%ebp)
 80688be:	05 ec b7 
 80688c1:	c7 85 b8 e4 ff ff ab 	movl   $0x8a7ac6ab,-0x1b48(%ebp)
 80688c8:	c6 7a 8a 
 80688cb:	c7 85 bc e4 ff ff f2 	movl   $0x4a0c94f2,-0x1b44(%ebp)
 80688d2:	94 0c 4a 
 80688d5:	c7 85 c0 e4 ff ff 6e 	movl   $0x2eec06e,-0x1b40(%ebp)
 80688dc:	c0 ee 02 
 80688df:	c7 85 c4 e4 ff ff 64 	movl   $0x2cbcd164,-0x1b3c(%ebp)
 80688e6:	d1 bc 2c 
 80688e9:	c7 85 c8 e4 ff ff 56 	movl   $0xd52f0556,-0x1b38(%ebp)
 80688f0:	05 2f d5 
 80688f3:	c7 85 cc e4 ff ff 8e 	movl   $0xd4d6dd8e,-0x1b34(%ebp)
 80688fa:	dd d6 d4 
 80688fd:	c7 85 d0 e4 ff ff f1 	movl   $0x25899f1,-0x1b30(%ebp)
 8068904:	99 58 02 
 8068907:	c7 85 d4 e4 ff ff a0 	movl   $0xadfae8a0,-0x1b2c(%ebp)
 806890e:	e8 fa ad 
 8068911:	c7 85 d8 e4 ff ff 56 	movl   $0x21e4d556,-0x1b28(%ebp)
 8068918:	d5 e4 21 
 806891b:	c7 85 dc e4 ff ff 7e 	movl   $0xbaf1627e,-0x1b24(%ebp)
 8068922:	62 f1 ba 
 8068925:	c7 85 e0 e4 ff ff 4f 	movl   $0x3c0f64f,-0x1b20(%ebp)
 806892c:	f6 c0 03 
 806892f:	c7 85 e4 e4 ff ff 4d 	movl   $0x57fbed4d,-0x1b1c(%ebp)
 8068936:	ed fb 57 
 8068939:	c7 85 e8 e4 ff ff 45 	movl   $0xe7ea4445,-0x1b18(%ebp)
 8068940:	44 ea e7 
 8068943:	c7 85 ec e4 ff ff 64 	movl   $0x958de864,-0x1b14(%ebp)
 806894a:	e8 8d 95 
 806894d:	c7 85 f0 e4 ff ff 0c 	movl   $0x300c50c,-0x1b10(%ebp)
 8068954:	c5 00 03 
 8068957:	c7 85 f4 e4 ff ff 0a 	movl   $0x132ff10a,-0x1b0c(%ebp)
 806895e:	f1 2f 13 
 8068961:	c7 85 f8 e4 ff ff d1 	movl   $0xecbb69d1,-0x1b08(%ebp)
 8068968:	69 bb ec 
 806896b:	c7 85 fc e4 ff ff 83 	movl   $0x113e5383,-0x1b04(%ebp)
 8068972:	53 3e 11 
 8068975:	c7 85 00 e5 ff ff 0a 	movl   $0x267040a,-0x1b00(%ebp)
 806897c:	04 67 02 
 806897f:	c7 85 04 e5 ff ff aa 	movl   $0x851981aa,-0x1afc(%ebp)
 8068986:	81 19 85 
 8068989:	c7 85 08 e5 ff ff 4e 	movl   $0xadf8a94e,-0x1af8(%ebp)
 8068990:	a9 f8 ad 
 8068993:	c7 85 0c e5 ff ff 6c 	movl   $0x81fd526c,-0x1af4(%ebp)
 806899a:	52 fd 81 
 806899d:	c7 85 10 e5 ff ff 76 	movl   $0x3d80676,-0x1af0(%ebp)
 80689a4:	06 d8 03 
 80689a7:	c7 85 14 e5 ff ff 88 	movl   $0xd0e13488,-0x1aec(%ebp)
 80689ae:	34 e1 d0 
 80689b1:	c7 85 18 e5 ff ff 3e 	movl   $0x8b2d543e,-0x1ae8(%ebp)
 80689b8:	54 2d 8b 
 80689bb:	c7 85 1c e5 ff ff f0 	movl   $0xce6441f0,-0x1ae4(%ebp)
 80689c2:	41 64 ce 
 80689c5:	c7 85 20 e5 ff ff 5e 	movl   $0x313385e,-0x1ae0(%ebp)
 80689cc:	38 13 03 
 80689cf:	c7 85 24 e5 ff ff d3 	movl   $0xd80f6d3,-0x1adc(%ebp)
 80689d6:	f6 80 0d 
 80689d9:	c7 85 28 e5 ff ff ff 	movl   $0xd5bddcff,-0x1ad8(%ebp)
 80689e0:	dc bd d5 
 80689e3:	c7 85 2c e5 ff ff 26 	movl   $0x3eb69b26,-0x1ad4(%ebp)
 80689ea:	9b b6 3e 
 80689ed:	c7 85 30 e5 ff ff b2 	movl   $0x275c6b2,-0x1ad0(%ebp)
 80689f4:	c6 75 02 
 80689f7:	c7 85 34 e5 ff ff eb 	movl   $0x7c018aeb,-0x1acc(%ebp)
 80689fe:	8a 01 7c 
 8068a01:	c7 85 38 e5 ff ff fe 	movl   $0x892fc7fe,-0x1ac8(%ebp)
 8068a08:	c7 2f 89 
 8068a0b:	c7 85 3c e5 ff ff a4 	movl   $0x64575ea4,-0x1ac4(%ebp)
 8068a12:	5e 57 64 
 8068a15:	c7 85 40 e5 ff ff 50 	movl   $0x3efa450,-0x1ac0(%ebp)
 8068a1c:	a4 ef 03 
 8068a1f:	c7 85 44 e5 ff ff 89 	movl   $0xc99ad589,-0x1abc(%ebp)
 8068a26:	d5 9a c9 
 8068a29:	c7 85 48 e5 ff ff fe 	movl   $0x3a8c9ffe,-0x1ab8(%ebp)
 8068a30:	9f 8c 3a 
 8068a33:	c7 85 4c e5 ff ff 1d 	movl   $0x1d12b21d,-0x1ab4(%ebp)
 8068a3a:	b2 12 1d 
 8068a3d:	c7 85 50 e5 ff ff 0d 	movl   $0x3261d0d,-0x1ab0(%ebp)
 8068a44:	1d 26 03 
 8068a47:	c7 85 54 e5 ff ff 3b 	movl   $0x7af113b,-0x1aac(%ebp)
 8068a4e:	11 af 07 
 8068a51:	c7 85 58 e5 ff ff ff 	movl   $0xc8707fff,-0x1aa8(%ebp)
 8068a58:	7f 70 c8 
 8068a5b:	c7 85 5c e5 ff ff 7d 	movl   $0x7da88e7d,-0x1aa4(%ebp)
 8068a62:	8e a8 7d 
 8068a65:	c7 85 60 e5 ff ff 0a 	movl   $0x284e40a,-0x1aa0(%ebp)
 8068a6c:	e4 84 02 
 8068a6f:	c7 85 64 e5 ff ff 2f 	movl   $0xd2f2742f,-0x1a9c(%ebp)
 8068a76:	74 f2 d2 
 8068a79:	c7 85 68 e5 ff ff 98 	movl   $0x39f39998,-0x1a98(%ebp)
 8068a80:	99 f3 39 
 8068a83:	c7 85 6c e5 ff ff fe 	movl   $0xfe2071fe,-0x1a94(%ebp)
 8068a8a:	71 20 fe 
 8068a8d:	c7 85 70 e5 ff ff a1 	movl   $0x203e9a1,-0x1a90(%ebp)
 8068a94:	e9 03 02 
 8068a97:	c7 85 74 e5 ff ff 4b 	movl   $0x84b7204b,-0x1a8c(%ebp)
 8068a9e:	20 b7 84 
 8068aa1:	c7 85 78 e5 ff ff f4 	movl   $0x8fec28f4,-0x1a88(%ebp)
 8068aa8:	28 ec 8f 
 8068aab:	c7 85 7c e5 ff ff 63 	movl   $0xfd00b663,-0x1a84(%ebp)
 8068ab2:	b6 00 fd 
 8068ab5:	c7 85 80 e5 ff ff cf 	movl   $0x33975cf,-0x1a80(%ebp)
 8068abc:	75 39 03 
 8068abf:	c7 85 84 e5 ff ff a2 	movl   $0x36f8e6a2,-0x1a7c(%ebp)
 8068ac6:	e6 f8 36 
 8068ac9:	c7 85 88 e5 ff ff 5d 	movl   $0xd989ba5d,-0x1a78(%ebp)
 8068ad0:	ba 89 d9 
 8068ad3:	c7 85 8c e5 ff ff 82 	movl   $0xfd9a2b82,-0x1a74(%ebp)
 8068ada:	2b 9a fd 
 8068add:	c7 85 90 e5 ff ff 3f 	movl   $0x2945e3f,-0x1a70(%ebp)
 8068ae4:	5e 94 02 
 8068ae7:	c7 85 94 e5 ff ff 1c 	movl   $0x2bfa521c,-0x1a6c(%ebp)
 8068aee:	52 fa 2b 
 8068af1:	c7 85 98 e5 ff ff e4 	movl   $0x47a161e4,-0x1a68(%ebp)
 8068af8:	61 a1 47 
 8068afb:	c7 85 9c e5 ff ff 02 	movl   $0x647b5602,-0x1a64(%ebp)
 8068b02:	56 7b 64 
 8068b05:	c7 85 a0 e5 ff ff 66 	movl   $0x2104b66,-0x1a60(%ebp)
 8068b0c:	4b 10 02 
 8068b0f:	c7 85 a4 e5 ff ff f9 	movl   $0x132a1cf9,-0x1a5c(%ebp)
 8068b16:	1c 2a 13 
 8068b19:	c7 85 a8 e5 ff ff 6d 	movl   $0xc35696d,-0x1a58(%ebp)
 8068b20:	69 35 0c 
 8068b23:	c7 85 ac e5 ff ff 6a 	movl   $0xa0c5566a,-0x1a54(%ebp)
 8068b2a:	56 c5 a0 
 8068b2d:	c7 85 b0 e5 ff ff 70 	movl   $0x34d4570,-0x1a50(%ebp)
 8068b34:	45 4d 03 
 8068b37:	c7 85 b4 e5 ff ff 2d 	movl   $0x4288172d,-0x1a4c(%ebp)
 8068b3e:	17 88 42 
 8068b41:	c7 85 b8 e5 ff ff 57 	movl   $0x9c45457,-0x1a48(%ebp)
 8068b48:	54 c4 09 
 8068b4b:	c7 85 bc e5 ff ff 88 	movl   $0x4d6aab88,-0x1a44(%ebp)
 8068b52:	ab 6a 4d 
 8068b55:	c7 85 c0 e5 ff ff 8d 	movl   $0x2a4378d,-0x1a40(%ebp)
 8068b5c:	37 a4 02 
 8068b5f:	c7 85 c4 e5 ff ff 8b 	movl   $0x9ba0128b,-0x1a3c(%ebp)
 8068b66:	12 a0 9b 
 8068b69:	c7 85 c8 e5 ff ff 12 	movl   $0xa169dd12,-0x1a38(%ebp)
 8068b70:	dd 69 a1 
 8068b73:	c7 85 cc e5 ff ff 39 	movl   $0xd7888939,-0x1a34(%ebp)
 8068b7a:	89 88 d7 
 8068b7d:	c7 85 d0 e5 ff ff 3d 	movl   $0x21cf93d,-0x1a30(%ebp)
 8068b84:	f9 1c 02 
 8068b87:	c7 85 d4 e5 ff ff ab 	movl   $0xf9001dab,-0x1a2c(%ebp)
 8068b8e:	1d 00 f9 
 8068b91:	c7 85 d8 e5 ff ff 50 	movl   $0x242fb50,-0x1a28(%ebp)
 8068b98:	fb 42 02 
 8068b9b:	c7 85 dc e5 ff ff 29 	movl   $0x58da7529,-0x1a24(%ebp)
 8068ba2:	75 da 58 
 8068ba5:	c7 85 e0 e5 ff ff c9 	movl   $0x3618ec9,-0x1a20(%ebp)
 8068bac:	8e 61 03 
 8068baf:	c7 85 e4 e5 ff ff bc 	movl   $0x940017bc,-0x1a1c(%ebp)
 8068bb6:	17 00 94 
 8068bb9:	c7 85 e8 e5 ff ff 0d 	movl   $0x9b68c90d,-0x1a18(%ebp)
 8068bc0:	c9 68 9b 
 8068bc3:	c7 85 ec e5 ff ff ed 	movl   $0xad7b90ed,-0x1a14(%ebp)
 8068bca:	90 7b ad 
 8068bcd:	c7 85 f0 e5 ff ff 3a 	movl   $0x2b4723a,-0x1a10(%ebp)
 8068bd4:	72 b4 02 
 8068bd7:	c7 85 f4 e5 ff ff 96 	movl   $0xa999ac96,-0x1a0c(%ebp)
 8068bde:	ac 99 a9 
 8068be1:	c7 85 f8 e5 ff ff d7 	movl   $0x4920a0d7,-0x1a08(%ebp)
 8068be8:	a0 20 49 
 8068beb:	c7 85 fc e5 ff ff f1 	movl   $0xbdfc73f1,-0x1a04(%ebp)
 8068bf2:	73 fc bd 
 8068bf5:	c7 85 00 e6 ff ff fb 	movl   $0x229f4fb,-0x1a00(%ebp)
 8068bfc:	f4 29 02 
 8068bff:	c7 85 04 e6 ff ff 57 	movl   $0xf5c4757,-0x19fc(%ebp)
 8068c06:	47 5c 0f 
 8068c09:	c7 85 08 e6 ff ff 59 	movl   $0x75010159,-0x19f8(%ebp)
 8068c10:	01 01 75 
 8068c13:	c7 85 0c e6 ff ff e8 	movl   $0xfcc71fe8,-0x19f4(%ebp)
 8068c1a:	1f c7 fc 
 8068c1d:	c7 85 10 e6 ff ff c5 	movl   $0x37654c5,-0x19f0(%ebp)
 8068c24:	54 76 03 
 8068c27:	c7 85 14 e6 ff ff df 	movl   $0x3f7d05df,-0x19ec(%ebp)
 8068c2e:	05 7d 3f 
 8068c31:	c7 85 18 e6 ff ff 47 	movl   $0x2a673447,-0x19e8(%ebp)
 8068c38:	34 67 2a 
 8068c3b:	c7 85 1c e6 ff ff ed 	movl   $0x63d27fed,-0x19e4(%ebp)
 8068c42:	7f d2 63 
 8068c45:	c7 85 20 e6 ff ff 9e 	movl   $0x2c5109e,-0x19e0(%ebp)
 8068c4c:	10 c5 02 
 8068c4f:	c7 85 24 e6 ff ff 4c 	movl   $0x65fd9e4c,-0x19dc(%ebp)
 8068c56:	9e fd 65 
 8068c59:	c7 85 28 e6 ff ff 9f 	movl   $0xeeb8f69f,-0x19d8(%ebp)
 8068c60:	f6 b8 ee 
 8068c63:	c7 85 2c e6 ff ff f0 	movl   $0xb641fff0,-0x19d4(%ebp)
 8068c6a:	ff 41 b6 
 8068c6d:	c7 85 30 e6 ff ff 7e 	movl   $0x237407e,-0x19d0(%ebp)
 8068c74:	40 37 02 
 8068c77:	c7 85 34 e6 ff ff 46 	movl   $0x3cc8fd46,-0x19cc(%ebp)
 8068c7e:	fd c8 3c 
 8068c81:	c7 85 38 e6 ff ff 32 	movl   $0xe45b2432,-0x19c8(%ebp)
 8068c88:	24 5b e4 
 8068c8b:	c7 85 3c e6 ff ff e7 	movl   $0x56cfffe7,-0x19c4(%ebp)
 8068c92:	ff cf 56 
 8068c95:	c7 85 40 e6 ff ff 64 	movl   $0x38b9a64,-0x19c0(%ebp)
 8068c9c:	9a 8b 03 
 8068c9f:	c7 85 44 e6 ff ff 9f 	movl   $0x30a0ca9f,-0x19bc(%ebp)
 8068ca6:	ca a0 30 
 8068ca9:	c7 85 48 e6 ff ff 28 	movl   $0xb6af5028,-0x19b8(%ebp)
 8068cb0:	50 af b6 
 8068cb3:	c7 85 4c e6 ff ff ec 	movl   $0x123fffec,-0x19b4(%ebp)
 8068cba:	ff 3f 12 
 8068cbd:	c7 85 50 e6 ff ff 1d 	movl   $0x2d6151d,-0x19b0(%ebp)
 8068cc4:	15 d6 02 
 8068cc7:	c7 85 54 e6 ff ff 7f 	movl   $0x26e7087f,-0x19ac(%ebp)
 8068cce:	08 e7 26 
 8068cd1:	c7 85 58 e6 ff ff 20 	movl   $0xf88c4020,-0x19a8(%ebp)
 8068cd8:	40 8c f8 
 8068cdb:	c7 85 5c e6 ff ff 56 	movl   $0xdb666656,-0x19a4(%ebp)
 8068ce2:	66 66 db 
 8068ce5:	c7 85 60 e6 ff ff b0 	movl   $0x244ddb0,-0x19a0(%ebp)
 8068cec:	dd 44 02 
 8068cef:	c7 85 64 e6 ff ff fe 	movl   $0x3e3e73fe,-0x199c(%ebp)
 8068cf6:	73 3e 3e 
 8068cf9:	c7 85 68 e6 ff ff 00 	movl   $0x2746cd00,-0x1998(%ebp)
 8068d00:	cd 46 27 
 8068d03:	c7 85 6c e6 ff ff 8b 	movl   $0x923d708b,-0x1994(%ebp)
 8068d0a:	70 3d 92 
 8068d0d:	c7 85 70 e6 ff ff b4 	movl   $0x3a162b4,-0x1990(%ebp)
 8068d14:	62 a1 03 
 8068d17:	c7 85 74 e6 ff ff 32 	movl   $0x64fec332,-0x198c(%ebp)
 8068d1e:	c3 fe 64 
 8068d21:	c7 85 78 e6 ff ff 33 	movl   $0x1f6bd733,-0x1988(%ebp)
 8068d28:	d7 6b 1f 
 8068d2b:	c7 85 7c e6 ff ff 3c 	movl   $0xe978d3c,-0x1984(%ebp)
 8068d32:	8d 97 0e 
 8068d35:	c7 85 80 e6 ff ff 2a 	movl   $0x2e7822a,-0x1980(%ebp)
 8068d3c:	82 e7 02 
 8068d3f:	c7 85 84 e6 ff ff 5b 	movl   $0x50cbcf5b,-0x197c(%ebp)
 8068d46:	cf cb 50 
 8068d49:	c7 85 88 e6 ff ff 5c 	movl   $0xe5efdf5c,-0x1978(%ebp)
 8068d50:	df ef e5 
 8068d53:	c7 85 8c e6 ff ff fc 	movl   $0xbac70fc,-0x1974(%ebp)
 8068d5a:	70 ac 0b 
 8068d5d:	c7 85 90 e6 ff ff 88 	movl   $0x252ce88,-0x1970(%ebp)
 8068d64:	ce 52 02 
 8068d67:	c7 85 94 e6 ff ff 2b 	movl   $0x1adfb22b,-0x196c(%ebp)
 8068d6e:	b2 df 1a 
 8068d71:	c7 85 98 e6 ff ff fa 	movl   $0x3cb2fefa,-0x1968(%ebp)
 8068d78:	fe b2 3c 
 8068d7b:	c7 85 9c e6 ff ff 2e 	movl   $0xac471b2e,-0x1964(%ebp)
 8068d82:	1b 47 ac 
 8068d85:	c7 85 a0 e6 ff ff d9 	movl   $0x3b7b0d9,-0x1960(%ebp)
 8068d8c:	b0 b7 03 
 8068d8f:	c7 85 a4 e6 ff ff 56 	movl   $0xaf195b56,-0x195c(%ebp)
 8068d96:	5b 19 af 
 8068d99:	c7 85 a8 e6 ff ff 61 	movl   $0x308f3261,-0x1958(%ebp)
 8068da0:	32 8f 30 
 8068da3:	c7 85 ac e6 ff ff 58 	movl   $0xbd05af58,-0x1954(%ebp)
 8068daa:	af 05 bd 
 8068dad:	c7 85 b0 e6 ff ff 47 	movl   $0x2f95a47,-0x1950(%ebp)
 8068db4:	5a f9 02 
 8068db7:	c7 85 b4 e6 ff ff ab 	movl   $0x25ade2ab,-0x194c(%ebp)
 8068dbe:	e2 ad 25 
 8068dc1:	c7 85 b8 e6 ff ff 4e 	movl   $0x5a0c284e,-0x1948(%ebp)
 8068dc8:	28 0c 5a 
 8068dcb:	c7 85 bc e6 ff ff 13 	movl   $0x30d15913,-0x1944(%ebp)
 8068dd2:	59 d1 30 
 8068dd5:	c7 85 c0 e6 ff ff 06 	movl   $0x2611506,-0x1940(%ebp)
 8068ddc:	15 61 02 
 8068ddf:	c7 85 c4 e6 ff ff 45 	movl   $0xd5e30445,-0x193c(%ebp)
 8068de6:	04 e3 d5 
 8068de9:	c7 85 c8 e6 ff ff 49 	movl   $0x29ad0d49,-0x1938(%ebp)
 8068df0:	0d ad 29 
 8068df3:	c7 85 cc e6 ff ff 52 	movl   $0xe7b55b52,-0x1934(%ebp)
 8068dfa:	5b b5 e7 
 8068dfd:	c7 85 d0 e6 ff ff 09 	movl   $0x3ce8809,-0x1930(%ebp)
 8068e04:	88 ce 03 
 8068e07:	c7 85 d4 e6 ff ff 9d 	movl   $0xde4f369d,-0x192c(%ebp)
 8068e0e:	36 4f de 
 8068e11:	c7 85 d8 e6 ff ff 07 	movl   $0x548a7107,-0x1928(%ebp)
 8068e18:	71 8a 54 
 8068e1b:	c7 85 dc e6 ff ff db 	movl   $0xec9115db,-0x1924(%ebp)
 8068e22:	15 91 ec 
 8068e25:	c7 85 e0 e6 ff ff 07 	movl   $0x30ba007,-0x1920(%ebp)
 8068e2c:	a0 0b 03 
 8068e2f:	c7 85 e4 e6 ff ff b1 	movl   $0xe50c2bb1,-0x191c(%ebp)
 8068e36:	2b 0c e5 
 8068e39:	c7 85 e8 e6 ff ff 9f 	movl   $0xdd3b8d9f,-0x1918(%ebp)
 8068e40:	8d 3b dd 
 8068e43:	c7 85 ec e6 ff ff 15 	movl   $0x8a0dab15,-0x1914(%ebp)
 8068e4a:	ab 0d 8a 
 8068e4d:	c7 85 f0 e6 ff ff 39 	movl   $0x26fb339,-0x1910(%ebp)
 8068e54:	b3 6f 02 
 8068e57:	c7 85 f4 e6 ff ff b5 	movl   $0xa1ad12b5,-0x190c(%ebp)
 8068e5e:	12 ad a1 
 8068e61:	c7 85 f8 e6 ff ff cc 	movl   $0x952c15cc,-0x1908(%ebp)
 8068e68:	15 2c 95 
 8068e6b:	c7 85 fc e6 ff ff bc 	movl   $0x434911bc,-0x1904(%ebp)
 8068e72:	11 49 43 
 8068e75:	c7 85 00 e7 ff ff 8f 	movl   $0x3e5eb8f,-0x1900(%ebp)
 8068e7c:	eb e5 03 
 8068e7f:	c7 85 04 e7 ff ff 91 	movl   $0xe7bda891,-0x18fc(%ebp)
 8068e86:	a8 bd e7 
 8068e89:	c7 85 08 e7 ff ff d6 	movl   $0x775677d6,-0x18f8(%ebp)
 8068e90:	77 56 77 
 8068e93:	c7 85 0c e7 ff ff 30 	movl   $0x35d40e30,-0x18f4(%ebp)
 8068e9a:	0e d4 35 
 8068e9d:	c7 85 10 e7 ff ff 0c 	movl   $0x31e560c,-0x18f0(%ebp)
 8068ea4:	56 1e 03 
 8068ea7:	c7 85 14 e7 ff ff a7 	movl   $0x863153a7,-0x18ec(%ebp)
 8068eae:	53 31 86 
 8068eb1:	c7 85 18 e7 ff ff 45 	movl   $0xc5dec645,-0x18e8(%ebp)
 8068eb8:	c6 de c5 
 8068ebb:	c7 85 1c e7 ff ff 26 	movl   $0xf7dcd826,-0x18e4(%ebp)
 8068ec2:	d8 dc f7 
 8068ec5:	c7 85 20 e7 ff ff 3c 	movl   $0x27eab3c,-0x18e0(%ebp)
 8068ecc:	ab 7e 02 
 8068ecf:	8d 85 88 bc ff ff    	lea    -0x4378(%ebp),%eax
 8068ed5:	83 ec 0c             	sub    $0xc,%esp
 8068ed8:	8d 95 e4 d4 ff ff    	lea    -0x2b1c(%ebp),%edx
 8068ede:	52                   	push   %edx
 8068edf:	6a 10                	push   $0x10
 8068ee1:	68 24 01 00 00       	push   $0x124
 8068ee6:	68 24 01 00 00       	push   $0x124
 8068eeb:	50                   	push   %eax
 8068eec:	e8 e8 cc fe ff       	call   8055bd9 <new_array_from_c_array>
 8068ef1:	83 c4 1c             	add    $0x1c,%esp
 8068ef4:	8b 85 88 bc ff ff    	mov    -0x4378(%ebp),%eax
 8068efa:	a3 20 31 07 08       	mov    %eax,0x8073120
 8068eff:	8b 85 8c bc ff ff    	mov    -0x4374(%ebp),%eax
 8068f05:	a3 24 31 07 08       	mov    %eax,0x8073124
 8068f0a:	8b 85 90 bc ff ff    	mov    -0x4370(%ebp),%eax
 8068f10:	a3 28 31 07 08       	mov    %eax,0x8073128
 8068f15:	8b 85 94 bc ff ff    	mov    -0x436c(%ebp),%eax
 8068f1b:	a3 2c 31 07 08       	mov    %eax,0x807312c
 8068f20:	c7 05 78 32 07 08 20 	movl   $0x20,0x8073278
 8068f27:	00 00 00 
 8068f2a:	a1 78 32 07 08       	mov    0x8073278,%eax
 8068f2f:	83 e8 02             	sub    $0x2,%eax
 8068f32:	a3 90 31 07 08       	mov    %eax,0x8073190
 8068f37:	c7 05 50 31 07 08 ff 	movl   $0xffffff,0x8073150
 8068f3e:	ff ff 00 
 8068f41:	c7 05 48 32 07 08 00 	movl   $0x1000000,0x8073248
 8068f48:	00 00 01 
 8068f4b:	c7 05 ec 30 07 08 05 	movl   $0x5,0x80730ec
 8068f52:	00 00 00 
 8068f55:	c7 05 d8 30 07 08 0b 	movl   $0xb,0x80730d8
 8068f5c:	00 00 00 
 8068f5f:	a1 d8 30 07 08       	mov    0x80730d8,%eax
 8068f64:	83 c0 01             	add    $0x1,%eax
 8068f67:	c1 e0 02             	shl    $0x2,%eax
 8068f6a:	a3 0c 32 07 08       	mov    %eax,0x807320c
 8068f6f:	90                   	nop
 8068f70:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8068f73:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8068f7a:	74 05                	je     8068f81 <_vinit+0x6be5>
 8068f7c:	e8 9f f8 fd ff       	call   8048820 <__stack_chk_fail@plt>
 8068f81:	8d 65 f4             	lea    -0xc(%ebp),%esp
 8068f84:	5b                   	pop    %ebx
 8068f85:	5e                   	pop    %esi
 8068f86:	5f                   	pop    %edi
 8068f87:	5d                   	pop    %ebp
 8068f88:	c3                   	ret    

08068f89 <main>:
 8068f89:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8068f8d:	83 e4 f0             	and    $0xfffffff0,%esp
 8068f90:	ff 71 fc             	pushl  -0x4(%ecx)
 8068f93:	55                   	push   %ebp
 8068f94:	89 e5                	mov    %esp,%ebp
 8068f96:	51                   	push   %ecx
 8068f97:	83 ec 04             	sub    $0x4,%esp
 8068f9a:	89 c8                	mov    %ecx,%eax
 8068f9c:	83 ec 08             	sub    $0x8,%esp
 8068f9f:	ff 70 04             	pushl  0x4(%eax)
 8068fa2:	ff 30                	pushl  (%eax)
 8068fa4:	e8 f3 93 ff ff       	call   806239c <_vinit>
 8068fa9:	83 c4 10             	add    $0x10,%esp
 8068fac:	e8 cb 8f ff ff       	call   8061f7c <main__main>
 8068fb1:	b8 00 00 00 00       	mov    $0x0,%eax
 8068fb6:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8068fb9:	c9                   	leave  
 8068fba:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8068fbd:	c3                   	ret    
 8068fbe:	66 90                	xchg   %ax,%ax

08068fc0 <__divdi3>:
 8068fc0:	55                   	push   %ebp
 8068fc1:	57                   	push   %edi
 8068fc2:	56                   	push   %esi
 8068fc3:	53                   	push   %ebx
 8068fc4:	83 ec 1c             	sub    $0x1c,%esp
 8068fc7:	8b 5c 24 34          	mov    0x34(%esp),%ebx
 8068fcb:	8b 74 24 3c          	mov    0x3c(%esp),%esi
 8068fcf:	8b 6c 24 38          	mov    0x38(%esp),%ebp
 8068fd3:	8b 44 24 30          	mov    0x30(%esp),%eax
 8068fd7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8068fde:	00 
 8068fdf:	85 db                	test   %ebx,%ebx
 8068fe1:	89 f7                	mov    %esi,%edi
 8068fe3:	89 da                	mov    %ebx,%edx
 8068fe5:	0f 88 bd 00 00 00    	js     80690a8 <__divdi3+0xe8>
 8068feb:	85 ff                	test   %edi,%edi
 8068fed:	89 2c 24             	mov    %ebp,(%esp)
 8068ff0:	89 74 24 04          	mov    %esi,0x4(%esp)
 8068ff4:	0f 88 96 00 00 00    	js     8069090 <__divdi3+0xd0>
 8068ffa:	8b 5c 24 04          	mov    0x4(%esp),%ebx
 8068ffe:	8b 0c 24             	mov    (%esp),%ecx
 8069001:	89 d6                	mov    %edx,%esi
 8069003:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8069007:	89 c5                	mov    %eax,%ebp
 8069009:	85 db                	test   %ebx,%ebx
 806900b:	89 cf                	mov    %ecx,%edi
 806900d:	8b 0c 24             	mov    (%esp),%ecx
 8069010:	75 0e                	jne    8069020 <__divdi3+0x60>
 8069012:	39 d7                	cmp    %edx,%edi
 8069014:	76 52                	jbe    8069068 <__divdi3+0xa8>
 8069016:	f7 f7                	div    %edi
 8069018:	31 ed                	xor    %ebp,%ebp
 806901a:	89 c1                	mov    %eax,%ecx
 806901c:	eb 0a                	jmp    8069028 <__divdi3+0x68>
 806901e:	66 90                	xchg   %ax,%ax
 8069020:	39 d3                	cmp    %edx,%ebx
 8069022:	76 24                	jbe    8069048 <__divdi3+0x88>
 8069024:	31 ed                	xor    %ebp,%ebp
 8069026:	31 c9                	xor    %ecx,%ecx
 8069028:	89 c8                	mov    %ecx,%eax
 806902a:	8b 4c 24 08          	mov    0x8(%esp),%ecx
 806902e:	89 ea                	mov    %ebp,%edx
 8069030:	85 c9                	test   %ecx,%ecx
 8069032:	74 07                	je     806903b <__divdi3+0x7b>
 8069034:	f7 d8                	neg    %eax
 8069036:	83 d2 00             	adc    $0x0,%edx
 8069039:	f7 da                	neg    %edx
 806903b:	83 c4 1c             	add    $0x1c,%esp
 806903e:	5b                   	pop    %ebx
 806903f:	5e                   	pop    %esi
 8069040:	5f                   	pop    %edi
 8069041:	5d                   	pop    %ebp
 8069042:	c3                   	ret    
 8069043:	90                   	nop
 8069044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8069048:	0f bd eb             	bsr    %ebx,%ebp
 806904b:	83 f5 1f             	xor    $0x1f,%ebp
 806904e:	75 70                	jne    80690c0 <__divdi3+0x100>
 8069050:	39 d3                	cmp    %edx,%ebx
 8069052:	72 08                	jb     806905c <__divdi3+0x9c>
 8069054:	31 c9                	xor    %ecx,%ecx
 8069056:	3b 7c 24 0c          	cmp    0xc(%esp),%edi
 806905a:	77 cc                	ja     8069028 <__divdi3+0x68>
 806905c:	b9 01 00 00 00       	mov    $0x1,%ecx
 8069061:	eb c5                	jmp    8069028 <__divdi3+0x68>
 8069063:	90                   	nop
 8069064:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8069068:	85 c9                	test   %ecx,%ecx
 806906a:	75 0b                	jne    8069077 <__divdi3+0xb7>
 806906c:	b8 01 00 00 00       	mov    $0x1,%eax
 8069071:	31 d2                	xor    %edx,%edx
 8069073:	f7 f1                	div    %ecx
 8069075:	89 c1                	mov    %eax,%ecx
 8069077:	31 d2                	xor    %edx,%edx
 8069079:	89 f0                	mov    %esi,%eax
 806907b:	f7 f1                	div    %ecx
 806907d:	89 c3                	mov    %eax,%ebx
 806907f:	89 e8                	mov    %ebp,%eax
 8069081:	89 dd                	mov    %ebx,%ebp
 8069083:	f7 f1                	div    %ecx
 8069085:	89 c1                	mov    %eax,%ecx
 8069087:	eb 9f                	jmp    8069028 <__divdi3+0x68>
 8069089:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8069090:	f7 1c 24             	negl   (%esp)
 8069093:	f7 54 24 08          	notl   0x8(%esp)
 8069097:	83 54 24 04 00       	adcl   $0x0,0x4(%esp)
 806909c:	f7 5c 24 04          	negl   0x4(%esp)
 80690a0:	e9 55 ff ff ff       	jmp    8068ffa <__divdi3+0x3a>
 80690a5:	8d 76 00             	lea    0x0(%esi),%esi
 80690a8:	f7 d8                	neg    %eax
 80690aa:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
 80690b1:	ff 
 80690b2:	83 d2 00             	adc    $0x0,%edx
 80690b5:	f7 da                	neg    %edx
 80690b7:	e9 2f ff ff ff       	jmp    8068feb <__divdi3+0x2b>
 80690bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80690c0:	b8 20 00 00 00       	mov    $0x20,%eax
 80690c5:	89 e9                	mov    %ebp,%ecx
 80690c7:	89 fa                	mov    %edi,%edx
 80690c9:	29 e8                	sub    %ebp,%eax
 80690cb:	d3 e3                	shl    %cl,%ebx
 80690cd:	89 c1                	mov    %eax,%ecx
 80690cf:	d3 ea                	shr    %cl,%edx
 80690d1:	89 e9                	mov    %ebp,%ecx
 80690d3:	09 da                	or     %ebx,%edx
 80690d5:	d3 e7                	shl    %cl,%edi
 80690d7:	89 f3                	mov    %esi,%ebx
 80690d9:	89 c1                	mov    %eax,%ecx
 80690db:	89 14 24             	mov    %edx,(%esp)
 80690de:	8b 54 24 0c          	mov    0xc(%esp),%edx
 80690e2:	d3 eb                	shr    %cl,%ebx
 80690e4:	89 e9                	mov    %ebp,%ecx
 80690e6:	d3 e6                	shl    %cl,%esi
 80690e8:	89 c1                	mov    %eax,%ecx
 80690ea:	d3 ea                	shr    %cl,%edx
 80690ec:	09 d6                	or     %edx,%esi
 80690ee:	89 da                	mov    %ebx,%edx
 80690f0:	89 f0                	mov    %esi,%eax
 80690f2:	f7 34 24             	divl   (%esp)
 80690f5:	89 d3                	mov    %edx,%ebx
 80690f7:	89 c6                	mov    %eax,%esi
 80690f9:	f7 e7                	mul    %edi
 80690fb:	39 d3                	cmp    %edx,%ebx
 80690fd:	72 21                	jb     8069120 <__divdi3+0x160>
 80690ff:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 8069103:	89 e9                	mov    %ebp,%ecx
 8069105:	d3 e7                	shl    %cl,%edi
 8069107:	39 c7                	cmp    %eax,%edi
 8069109:	73 04                	jae    806910f <__divdi3+0x14f>
 806910b:	39 d3                	cmp    %edx,%ebx
 806910d:	74 11                	je     8069120 <__divdi3+0x160>
 806910f:	89 f1                	mov    %esi,%ecx
 8069111:	31 ed                	xor    %ebp,%ebp
 8069113:	e9 10 ff ff ff       	jmp    8069028 <__divdi3+0x68>
 8069118:	90                   	nop
 8069119:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8069120:	8d 4e ff             	lea    -0x1(%esi),%ecx
 8069123:	31 ed                	xor    %ebp,%ebp
 8069125:	e9 fe fe ff ff       	jmp    8069028 <__divdi3+0x68>
 806912a:	66 90                	xchg   %ax,%ax
 806912c:	66 90                	xchg   %ax,%ax
 806912e:	66 90                	xchg   %ax,%ax

08069130 <__moddi3>:
 8069130:	55                   	push   %ebp
 8069131:	57                   	push   %edi
 8069132:	31 ed                	xor    %ebp,%ebp
 8069134:	56                   	push   %esi
 8069135:	53                   	push   %ebx
 8069136:	83 ec 2c             	sub    $0x2c,%esp
 8069139:	8b 5c 24 44          	mov    0x44(%esp),%ebx
 806913d:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8069141:	8b 7c 24 40          	mov    0x40(%esp),%edi
 8069145:	8b 74 24 48          	mov    0x48(%esp),%esi
 8069149:	85 db                	test   %ebx,%ebx
 806914b:	89 c2                	mov    %eax,%edx
 806914d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
 8069151:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8069155:	0f 88 b5 00 00 00    	js     8069210 <__moddi3+0xe0>
 806915b:	85 d2                	test   %edx,%edx
 806915d:	89 f1                	mov    %esi,%ecx
 806915f:	89 c3                	mov    %eax,%ebx
 8069161:	0f 88 99 00 00 00    	js     8069200 <__moddi3+0xd0>
 8069167:	8b 74 24 08          	mov    0x8(%esp),%esi
 806916b:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 806916f:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 8069173:	89 f0                	mov    %esi,%eax
 8069175:	89 fe                	mov    %edi,%esi
 8069177:	89 df                	mov    %ebx,%edi
 8069179:	85 ff                	test   %edi,%edi
 806917b:	8b 5c 24 08          	mov    0x8(%esp),%ebx
 806917f:	89 74 24 14          	mov    %esi,0x14(%esp)
 8069183:	75 13                	jne    8069198 <__moddi3+0x68>
 8069185:	39 f1                	cmp    %esi,%ecx
 8069187:	76 57                	jbe    80691e0 <__moddi3+0xb0>
 8069189:	89 f2                	mov    %esi,%edx
 806918b:	f7 f1                	div    %ecx
 806918d:	89 d6                	mov    %edx,%esi
 806918f:	89 f0                	mov    %esi,%eax
 8069191:	31 d2                	xor    %edx,%edx
 8069193:	eb 0d                	jmp    80691a2 <__moddi3+0x72>
 8069195:	8d 76 00             	lea    0x0(%esi),%esi
 8069198:	39 f7                	cmp    %esi,%edi
 806919a:	76 1c                	jbe    80691b8 <__moddi3+0x88>
 806919c:	8b 44 24 08          	mov    0x8(%esp),%eax
 80691a0:	89 f2                	mov    %esi,%edx
 80691a2:	85 ed                	test   %ebp,%ebp
 80691a4:	74 07                	je     80691ad <__moddi3+0x7d>
 80691a6:	f7 d8                	neg    %eax
 80691a8:	83 d2 00             	adc    $0x0,%edx
 80691ab:	f7 da                	neg    %edx
 80691ad:	83 c4 2c             	add    $0x2c,%esp
 80691b0:	5b                   	pop    %ebx
 80691b1:	5e                   	pop    %esi
 80691b2:	5f                   	pop    %edi
 80691b3:	5d                   	pop    %ebp
 80691b4:	c3                   	ret    
 80691b5:	8d 76 00             	lea    0x0(%esi),%esi
 80691b8:	0f bd d7             	bsr    %edi,%edx
 80691bb:	83 f2 1f             	xor    $0x1f,%edx
 80691be:	89 54 24 08          	mov    %edx,0x8(%esp)
 80691c2:	75 6c                	jne    8069230 <__moddi3+0x100>
 80691c4:	39 f7                	cmp    %esi,%edi
 80691c6:	0f 82 14 01 00 00    	jb     80692e0 <__moddi3+0x1b0>
 80691cc:	39 d9                	cmp    %ebx,%ecx
 80691ce:	0f 86 0c 01 00 00    	jbe    80692e0 <__moddi3+0x1b0>
 80691d4:	89 d8                	mov    %ebx,%eax
 80691d6:	8b 54 24 14          	mov    0x14(%esp),%edx
 80691da:	eb c6                	jmp    80691a2 <__moddi3+0x72>
 80691dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80691e0:	85 c9                	test   %ecx,%ecx
 80691e2:	75 0b                	jne    80691ef <__moddi3+0xbf>
 80691e4:	b8 01 00 00 00       	mov    $0x1,%eax
 80691e9:	31 d2                	xor    %edx,%edx
 80691eb:	f7 f1                	div    %ecx
 80691ed:	89 c1                	mov    %eax,%ecx
 80691ef:	89 f0                	mov    %esi,%eax
 80691f1:	31 d2                	xor    %edx,%edx
 80691f3:	f7 f1                	div    %ecx
 80691f5:	89 d8                	mov    %ebx,%eax
 80691f7:	f7 f1                	div    %ecx
 80691f9:	89 d6                	mov    %edx,%esi
 80691fb:	eb 92                	jmp    806918f <__moddi3+0x5f>
 80691fd:	8d 76 00             	lea    0x0(%esi),%esi
 8069200:	f7 d9                	neg    %ecx
 8069202:	83 d3 00             	adc    $0x0,%ebx
 8069205:	f7 db                	neg    %ebx
 8069207:	e9 5b ff ff ff       	jmp    8069167 <__moddi3+0x37>
 806920c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8069210:	f7 5c 24 08          	negl   0x8(%esp)
 8069214:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
 8069219:	83 54 24 0c 00       	adcl   $0x0,0xc(%esp)
 806921e:	f7 5c 24 0c          	negl   0xc(%esp)
 8069222:	e9 34 ff ff ff       	jmp    806915b <__moddi3+0x2b>
 8069227:	89 f6                	mov    %esi,%esi
 8069229:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 8069230:	8b 4c 24 08          	mov    0x8(%esp),%ecx
 8069234:	ba 20 00 00 00       	mov    $0x20,%edx
 8069239:	29 ca                	sub    %ecx,%edx
 806923b:	d3 e7                	shl    %cl,%edi
 806923d:	89 d3                	mov    %edx,%ebx
 806923f:	89 54 24 18          	mov    %edx,0x18(%esp)
 8069243:	8b 54 24 10          	mov    0x10(%esp),%edx
 8069247:	89 d9                	mov    %ebx,%ecx
 8069249:	d3 ea                	shr    %cl,%edx
 806924b:	0f b6 4c 24 08       	movzbl 0x8(%esp),%ecx
 8069250:	09 d7                	or     %edx,%edi
 8069252:	8b 54 24 10          	mov    0x10(%esp),%edx
 8069256:	89 7c 24 14          	mov    %edi,0x14(%esp)
 806925a:	89 f7                	mov    %esi,%edi
 806925c:	d3 e2                	shl    %cl,%edx
 806925e:	89 d9                	mov    %ebx,%ecx
 8069260:	d3 ef                	shr    %cl,%edi
 8069262:	0f b6 4c 24 08       	movzbl 0x8(%esp),%ecx
 8069267:	89 54 24 10          	mov    %edx,0x10(%esp)
 806926b:	89 da                	mov    %ebx,%edx
 806926d:	89 fb                	mov    %edi,%ebx
 806926f:	89 c7                	mov    %eax,%edi
 8069271:	d3 e6                	shl    %cl,%esi
 8069273:	89 d1                	mov    %edx,%ecx
 8069275:	89 da                	mov    %ebx,%edx
 8069277:	d3 ef                	shr    %cl,%edi
 8069279:	0f b6 4c 24 08       	movzbl 0x8(%esp),%ecx
 806927e:	09 fe                	or     %edi,%esi
 8069280:	d3 e0                	shl    %cl,%eax
 8069282:	89 c7                	mov    %eax,%edi
 8069284:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8069288:	89 f0                	mov    %esi,%eax
 806928a:	f7 74 24 14          	divl   0x14(%esp)
 806928e:	89 d3                	mov    %edx,%ebx
 8069290:	f7 64 24 10          	mull   0x10(%esp)
 8069294:	39 d3                	cmp    %edx,%ebx
 8069296:	89 c6                	mov    %eax,%esi
 8069298:	89 d1                	mov    %edx,%ecx
 806929a:	72 06                	jb     80692a2 <__moddi3+0x172>
 806929c:	75 10                	jne    80692ae <__moddi3+0x17e>
 806929e:	39 c7                	cmp    %eax,%edi
 80692a0:	73 0c                	jae    80692ae <__moddi3+0x17e>
 80692a2:	2b 44 24 10          	sub    0x10(%esp),%eax
 80692a6:	1b 54 24 14          	sbb    0x14(%esp),%edx
 80692aa:	89 d1                	mov    %edx,%ecx
 80692ac:	89 c6                	mov    %eax,%esi
 80692ae:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 80692b2:	8b 7c 24 08          	mov    0x8(%esp),%edi
 80692b6:	29 f0                	sub    %esi,%eax
 80692b8:	19 cb                	sbb    %ecx,%ebx
 80692ba:	0f b6 4c 24 18       	movzbl 0x18(%esp),%ecx
 80692bf:	89 de                	mov    %ebx,%esi
 80692c1:	d3 e6                	shl    %cl,%esi
 80692c3:	89 f9                	mov    %edi,%ecx
 80692c5:	d3 e8                	shr    %cl,%eax
 80692c7:	89 f9                	mov    %edi,%ecx
 80692c9:	09 c6                	or     %eax,%esi
 80692cb:	d3 eb                	shr    %cl,%ebx
 80692cd:	89 f0                	mov    %esi,%eax
 80692cf:	89 da                	mov    %ebx,%edx
 80692d1:	e9 cc fe ff ff       	jmp    80691a2 <__moddi3+0x72>
 80692d6:	8d 76 00             	lea    0x0(%esi),%esi
 80692d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 80692e0:	29 cb                	sub    %ecx,%ebx
 80692e2:	19 fe                	sbb    %edi,%esi
 80692e4:	89 74 24 14          	mov    %esi,0x14(%esp)
 80692e8:	e9 e7 fe ff ff       	jmp    80691d4 <__moddi3+0xa4>
 80692ed:	66 90                	xchg   %ax,%ax
 80692ef:	90                   	nop

080692f0 <__udivdi3>:
 80692f0:	55                   	push   %ebp
 80692f1:	57                   	push   %edi
 80692f2:	56                   	push   %esi
 80692f3:	53                   	push   %ebx
 80692f4:	83 ec 1c             	sub    $0x1c,%esp
 80692f7:	8b 74 24 3c          	mov    0x3c(%esp),%esi
 80692fb:	8b 5c 24 30          	mov    0x30(%esp),%ebx
 80692ff:	8b 4c 24 34          	mov    0x34(%esp),%ecx
 8069303:	8b 7c 24 38          	mov    0x38(%esp),%edi
 8069307:	85 f6                	test   %esi,%esi
 8069309:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 806930d:	89 ca                	mov    %ecx,%edx
 806930f:	89 f8                	mov    %edi,%eax
 8069311:	75 3d                	jne    8069350 <__udivdi3+0x60>
 8069313:	39 cf                	cmp    %ecx,%edi
 8069315:	0f 87 c5 00 00 00    	ja     80693e0 <__udivdi3+0xf0>
 806931b:	85 ff                	test   %edi,%edi
 806931d:	89 fd                	mov    %edi,%ebp
 806931f:	75 0b                	jne    806932c <__udivdi3+0x3c>
 8069321:	b8 01 00 00 00       	mov    $0x1,%eax
 8069326:	31 d2                	xor    %edx,%edx
 8069328:	f7 f7                	div    %edi
 806932a:	89 c5                	mov    %eax,%ebp
 806932c:	89 c8                	mov    %ecx,%eax
 806932e:	31 d2                	xor    %edx,%edx
 8069330:	f7 f5                	div    %ebp
 8069332:	89 c1                	mov    %eax,%ecx
 8069334:	89 d8                	mov    %ebx,%eax
 8069336:	89 cf                	mov    %ecx,%edi
 8069338:	f7 f5                	div    %ebp
 806933a:	89 c3                	mov    %eax,%ebx
 806933c:	89 d8                	mov    %ebx,%eax
 806933e:	89 fa                	mov    %edi,%edx
 8069340:	83 c4 1c             	add    $0x1c,%esp
 8069343:	5b                   	pop    %ebx
 8069344:	5e                   	pop    %esi
 8069345:	5f                   	pop    %edi
 8069346:	5d                   	pop    %ebp
 8069347:	c3                   	ret    
 8069348:	90                   	nop
 8069349:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8069350:	39 ce                	cmp    %ecx,%esi
 8069352:	77 74                	ja     80693c8 <__udivdi3+0xd8>
 8069354:	0f bd fe             	bsr    %esi,%edi
 8069357:	83 f7 1f             	xor    $0x1f,%edi
 806935a:	0f 84 98 00 00 00    	je     80693f8 <__udivdi3+0x108>
 8069360:	bb 20 00 00 00       	mov    $0x20,%ebx
 8069365:	89 f9                	mov    %edi,%ecx
 8069367:	89 c5                	mov    %eax,%ebp
 8069369:	29 fb                	sub    %edi,%ebx
 806936b:	d3 e6                	shl    %cl,%esi
 806936d:	89 d9                	mov    %ebx,%ecx
 806936f:	d3 ed                	shr    %cl,%ebp
 8069371:	89 f9                	mov    %edi,%ecx
 8069373:	d3 e0                	shl    %cl,%eax
 8069375:	09 ee                	or     %ebp,%esi
 8069377:	89 d9                	mov    %ebx,%ecx
 8069379:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806937d:	89 d5                	mov    %edx,%ebp
 806937f:	8b 44 24 08          	mov    0x8(%esp),%eax
 8069383:	d3 ed                	shr    %cl,%ebp
 8069385:	89 f9                	mov    %edi,%ecx
 8069387:	d3 e2                	shl    %cl,%edx
 8069389:	89 d9                	mov    %ebx,%ecx
 806938b:	d3 e8                	shr    %cl,%eax
 806938d:	09 c2                	or     %eax,%edx
 806938f:	89 d0                	mov    %edx,%eax
 8069391:	89 ea                	mov    %ebp,%edx
 8069393:	f7 f6                	div    %esi
 8069395:	89 d5                	mov    %edx,%ebp
 8069397:	89 c3                	mov    %eax,%ebx
 8069399:	f7 64 24 0c          	mull   0xc(%esp)
 806939d:	39 d5                	cmp    %edx,%ebp
 806939f:	72 10                	jb     80693b1 <__udivdi3+0xc1>
 80693a1:	8b 74 24 08          	mov    0x8(%esp),%esi
 80693a5:	89 f9                	mov    %edi,%ecx
 80693a7:	d3 e6                	shl    %cl,%esi
 80693a9:	39 c6                	cmp    %eax,%esi
 80693ab:	73 07                	jae    80693b4 <__udivdi3+0xc4>
 80693ad:	39 d5                	cmp    %edx,%ebp
 80693af:	75 03                	jne    80693b4 <__udivdi3+0xc4>
 80693b1:	83 eb 01             	sub    $0x1,%ebx
 80693b4:	31 ff                	xor    %edi,%edi
 80693b6:	89 d8                	mov    %ebx,%eax
 80693b8:	89 fa                	mov    %edi,%edx
 80693ba:	83 c4 1c             	add    $0x1c,%esp
 80693bd:	5b                   	pop    %ebx
 80693be:	5e                   	pop    %esi
 80693bf:	5f                   	pop    %edi
 80693c0:	5d                   	pop    %ebp
 80693c1:	c3                   	ret    
 80693c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80693c8:	31 ff                	xor    %edi,%edi
 80693ca:	31 db                	xor    %ebx,%ebx
 80693cc:	89 d8                	mov    %ebx,%eax
 80693ce:	89 fa                	mov    %edi,%edx
 80693d0:	83 c4 1c             	add    $0x1c,%esp
 80693d3:	5b                   	pop    %ebx
 80693d4:	5e                   	pop    %esi
 80693d5:	5f                   	pop    %edi
 80693d6:	5d                   	pop    %ebp
 80693d7:	c3                   	ret    
 80693d8:	90                   	nop
 80693d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80693e0:	89 d8                	mov    %ebx,%eax
 80693e2:	f7 f7                	div    %edi
 80693e4:	31 ff                	xor    %edi,%edi
 80693e6:	89 c3                	mov    %eax,%ebx
 80693e8:	89 d8                	mov    %ebx,%eax
 80693ea:	89 fa                	mov    %edi,%edx
 80693ec:	83 c4 1c             	add    $0x1c,%esp
 80693ef:	5b                   	pop    %ebx
 80693f0:	5e                   	pop    %esi
 80693f1:	5f                   	pop    %edi
 80693f2:	5d                   	pop    %ebp
 80693f3:	c3                   	ret    
 80693f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80693f8:	39 ce                	cmp    %ecx,%esi
 80693fa:	72 0c                	jb     8069408 <__udivdi3+0x118>
 80693fc:	31 db                	xor    %ebx,%ebx
 80693fe:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8069402:	0f 87 34 ff ff ff    	ja     806933c <__udivdi3+0x4c>
 8069408:	bb 01 00 00 00       	mov    $0x1,%ebx
 806940d:	e9 2a ff ff ff       	jmp    806933c <__udivdi3+0x4c>
 8069412:	66 90                	xchg   %ax,%ax
 8069414:	66 90                	xchg   %ax,%ax
 8069416:	66 90                	xchg   %ax,%ax
 8069418:	66 90                	xchg   %ax,%ax
 806941a:	66 90                	xchg   %ax,%ax
 806941c:	66 90                	xchg   %ax,%ax
 806941e:	66 90                	xchg   %ax,%ax

08069420 <__umoddi3>:
 8069420:	55                   	push   %ebp
 8069421:	57                   	push   %edi
 8069422:	56                   	push   %esi
 8069423:	53                   	push   %ebx
 8069424:	83 ec 1c             	sub    $0x1c,%esp
 8069427:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 806942b:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 806942f:	8b 74 24 34          	mov    0x34(%esp),%esi
 8069433:	8b 7c 24 38          	mov    0x38(%esp),%edi
 8069437:	85 d2                	test   %edx,%edx
 8069439:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 806943d:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8069441:	89 f3                	mov    %esi,%ebx
 8069443:	89 3c 24             	mov    %edi,(%esp)
 8069446:	89 74 24 04          	mov    %esi,0x4(%esp)
 806944a:	75 1c                	jne    8069468 <__umoddi3+0x48>
 806944c:	39 f7                	cmp    %esi,%edi
 806944e:	76 50                	jbe    80694a0 <__umoddi3+0x80>
 8069450:	89 c8                	mov    %ecx,%eax
 8069452:	89 f2                	mov    %esi,%edx
 8069454:	f7 f7                	div    %edi
 8069456:	89 d0                	mov    %edx,%eax
 8069458:	31 d2                	xor    %edx,%edx
 806945a:	83 c4 1c             	add    $0x1c,%esp
 806945d:	5b                   	pop    %ebx
 806945e:	5e                   	pop    %esi
 806945f:	5f                   	pop    %edi
 8069460:	5d                   	pop    %ebp
 8069461:	c3                   	ret    
 8069462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8069468:	39 f2                	cmp    %esi,%edx
 806946a:	89 d0                	mov    %edx,%eax
 806946c:	77 52                	ja     80694c0 <__umoddi3+0xa0>
 806946e:	0f bd ea             	bsr    %edx,%ebp
 8069471:	83 f5 1f             	xor    $0x1f,%ebp
 8069474:	75 5a                	jne    80694d0 <__umoddi3+0xb0>
 8069476:	3b 54 24 04          	cmp    0x4(%esp),%edx
 806947a:	0f 82 e0 00 00 00    	jb     8069560 <__umoddi3+0x140>
 8069480:	39 0c 24             	cmp    %ecx,(%esp)
 8069483:	0f 86 d7 00 00 00    	jbe    8069560 <__umoddi3+0x140>
 8069489:	8b 44 24 08          	mov    0x8(%esp),%eax
 806948d:	8b 54 24 04          	mov    0x4(%esp),%edx
 8069491:	83 c4 1c             	add    $0x1c,%esp
 8069494:	5b                   	pop    %ebx
 8069495:	5e                   	pop    %esi
 8069496:	5f                   	pop    %edi
 8069497:	5d                   	pop    %ebp
 8069498:	c3                   	ret    
 8069499:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80694a0:	85 ff                	test   %edi,%edi
 80694a2:	89 fd                	mov    %edi,%ebp
 80694a4:	75 0b                	jne    80694b1 <__umoddi3+0x91>
 80694a6:	b8 01 00 00 00       	mov    $0x1,%eax
 80694ab:	31 d2                	xor    %edx,%edx
 80694ad:	f7 f7                	div    %edi
 80694af:	89 c5                	mov    %eax,%ebp
 80694b1:	89 f0                	mov    %esi,%eax
 80694b3:	31 d2                	xor    %edx,%edx
 80694b5:	f7 f5                	div    %ebp
 80694b7:	89 c8                	mov    %ecx,%eax
 80694b9:	f7 f5                	div    %ebp
 80694bb:	89 d0                	mov    %edx,%eax
 80694bd:	eb 99                	jmp    8069458 <__umoddi3+0x38>
 80694bf:	90                   	nop
 80694c0:	89 c8                	mov    %ecx,%eax
 80694c2:	89 f2                	mov    %esi,%edx
 80694c4:	83 c4 1c             	add    $0x1c,%esp
 80694c7:	5b                   	pop    %ebx
 80694c8:	5e                   	pop    %esi
 80694c9:	5f                   	pop    %edi
 80694ca:	5d                   	pop    %ebp
 80694cb:	c3                   	ret    
 80694cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80694d0:	8b 34 24             	mov    (%esp),%esi
 80694d3:	bf 20 00 00 00       	mov    $0x20,%edi
 80694d8:	89 e9                	mov    %ebp,%ecx
 80694da:	29 ef                	sub    %ebp,%edi
 80694dc:	d3 e0                	shl    %cl,%eax
 80694de:	89 f9                	mov    %edi,%ecx
 80694e0:	89 f2                	mov    %esi,%edx
 80694e2:	d3 ea                	shr    %cl,%edx
 80694e4:	89 e9                	mov    %ebp,%ecx
 80694e6:	09 c2                	or     %eax,%edx
 80694e8:	89 d8                	mov    %ebx,%eax
 80694ea:	89 14 24             	mov    %edx,(%esp)
 80694ed:	89 f2                	mov    %esi,%edx
 80694ef:	d3 e2                	shl    %cl,%edx
 80694f1:	89 f9                	mov    %edi,%ecx
 80694f3:	89 54 24 04          	mov    %edx,0x4(%esp)
 80694f7:	8b 54 24 0c          	mov    0xc(%esp),%edx
 80694fb:	d3 e8                	shr    %cl,%eax
 80694fd:	89 e9                	mov    %ebp,%ecx
 80694ff:	89 c6                	mov    %eax,%esi
 8069501:	d3 e3                	shl    %cl,%ebx
 8069503:	89 f9                	mov    %edi,%ecx
 8069505:	89 d0                	mov    %edx,%eax
 8069507:	d3 e8                	shr    %cl,%eax
 8069509:	89 e9                	mov    %ebp,%ecx
 806950b:	09 d8                	or     %ebx,%eax
 806950d:	89 d3                	mov    %edx,%ebx
 806950f:	89 f2                	mov    %esi,%edx
 8069511:	f7 34 24             	divl   (%esp)
 8069514:	89 d6                	mov    %edx,%esi
 8069516:	d3 e3                	shl    %cl,%ebx
 8069518:	f7 64 24 04          	mull   0x4(%esp)
 806951c:	39 d6                	cmp    %edx,%esi
 806951e:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 8069522:	89 d1                	mov    %edx,%ecx
 8069524:	89 c3                	mov    %eax,%ebx
 8069526:	72 08                	jb     8069530 <__umoddi3+0x110>
 8069528:	75 11                	jne    806953b <__umoddi3+0x11b>
 806952a:	39 44 24 08          	cmp    %eax,0x8(%esp)
 806952e:	73 0b                	jae    806953b <__umoddi3+0x11b>
 8069530:	2b 44 24 04          	sub    0x4(%esp),%eax
 8069534:	1b 14 24             	sbb    (%esp),%edx
 8069537:	89 d1                	mov    %edx,%ecx
 8069539:	89 c3                	mov    %eax,%ebx
 806953b:	8b 54 24 08          	mov    0x8(%esp),%edx
 806953f:	29 da                	sub    %ebx,%edx
 8069541:	19 ce                	sbb    %ecx,%esi
 8069543:	89 f9                	mov    %edi,%ecx
 8069545:	89 f0                	mov    %esi,%eax
 8069547:	d3 e0                	shl    %cl,%eax
 8069549:	89 e9                	mov    %ebp,%ecx
 806954b:	d3 ea                	shr    %cl,%edx
 806954d:	89 e9                	mov    %ebp,%ecx
 806954f:	d3 ee                	shr    %cl,%esi
 8069551:	09 d0                	or     %edx,%eax
 8069553:	89 f2                	mov    %esi,%edx
 8069555:	83 c4 1c             	add    $0x1c,%esp
 8069558:	5b                   	pop    %ebx
 8069559:	5e                   	pop    %esi
 806955a:	5f                   	pop    %edi
 806955b:	5d                   	pop    %ebp
 806955c:	c3                   	ret    
 806955d:	8d 76 00             	lea    0x0(%esi),%esi
 8069560:	29 f9                	sub    %edi,%ecx
 8069562:	19 d6                	sbb    %edx,%esi
 8069564:	89 74 24 04          	mov    %esi,0x4(%esp)
 8069568:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 806956c:	e9 18 ff ff ff       	jmp    8069489 <__umoddi3+0x69>
 8069571:	66 90                	xchg   %ax,%ax
 8069573:	66 90                	xchg   %ax,%ax
 8069575:	66 90                	xchg   %ax,%ax
 8069577:	66 90                	xchg   %ax,%ax
 8069579:	66 90                	xchg   %ax,%ax
 806957b:	66 90                	xchg   %ax,%ax
 806957d:	66 90                	xchg   %ax,%ax
 806957f:	90                   	nop

08069580 <__libc_csu_init>:
 8069580:	55                   	push   %ebp
 8069581:	57                   	push   %edi
 8069582:	56                   	push   %esi
 8069583:	53                   	push   %ebx
 8069584:	e8 f7 f3 fd ff       	call   8048980 <__x86.get_pc_thunk.bx>
 8069589:	81 c3 77 9a 00 00    	add    $0x9a77,%ebx
 806958f:	83 ec 0c             	sub    $0xc,%esp
 8069592:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8069596:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 806959c:	e8 a7 f1 fd ff       	call   8048748 <_init>
 80695a1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 80695a7:	29 c6                	sub    %eax,%esi
 80695a9:	c1 fe 02             	sar    $0x2,%esi
 80695ac:	85 f6                	test   %esi,%esi
 80695ae:	74 25                	je     80695d5 <__libc_csu_init+0x55>
 80695b0:	31 ff                	xor    %edi,%edi
 80695b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80695b8:	83 ec 04             	sub    $0x4,%esp
 80695bb:	ff 74 24 2c          	pushl  0x2c(%esp)
 80695bf:	ff 74 24 2c          	pushl  0x2c(%esp)
 80695c3:	55                   	push   %ebp
 80695c4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 80695cb:	83 c7 01             	add    $0x1,%edi
 80695ce:	83 c4 10             	add    $0x10,%esp
 80695d1:	39 f7                	cmp    %esi,%edi
 80695d3:	75 e3                	jne    80695b8 <__libc_csu_init+0x38>
 80695d5:	83 c4 0c             	add    $0xc,%esp
 80695d8:	5b                   	pop    %ebx
 80695d9:	5e                   	pop    %esi
 80695da:	5f                   	pop    %edi
 80695db:	5d                   	pop    %ebp
 80695dc:	c3                   	ret    
 80695dd:	8d 76 00             	lea    0x0(%esi),%esi

080695e0 <__libc_csu_fini>:
 80695e0:	f3 c3                	repz ret 

Disassembly of section .fini:

080695e4 <_fini>:
 80695e4:	53                   	push   %ebx
 80695e5:	83 ec 08             	sub    $0x8,%esp
 80695e8:	e8 93 f3 fd ff       	call   8048980 <__x86.get_pc_thunk.bx>
 80695ed:	81 c3 13 9a 00 00    	add    $0x9a13,%ebx
 80695f3:	83 c4 08             	add    $0x8,%esp
 80695f6:	5b                   	pop    %ebx
 80695f7:	c3                   	ret    
